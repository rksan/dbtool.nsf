<?xml version='1.0' encoding='utf-8'?>
<!DOCTYPE database SYSTEM 'xmlschemas/domino_9_0_1.dtd'>
<database xmlns='http://www.lotus.com/dxl' version='9.0' maintenanceversion='1.0'
 replicaid='492576C8002C1298' path='tools\dbtool.nsf' title='db tool' allowstoredforms='false'
 maintainunread='false' optimizetablebitmaps='true' increasemaxfields='true'
 compressdesign='true' compressdata='true' markmodifiedunread='false' allowheadlinemonitors='false'
 maxupdatedbyentries='1' maxrevisionentries='1'>
<databaseinfo dbid='492576C8002C1298' odsversion='43' diskspace='31719424'
 percentused='32.9351756198347' numberofdocuments='817'><datamodified><datetime
>20190826T184446,14+09</datetime></datamodified><designmodified><datetime
>20190826T133148,31+09</datetime></designmodified></databaseinfo>
<launchsettings><noteslaunch whenopened='openframeset' restorelastview='true'
 frameset='フレームセット'/></launchsettings>
<view name='全文書' alias='AllDoc' showinmenu='false' publicaccess='false' designerversion='8'
 default='true' unreadmarks='none' onopengoto='lastopened' onrefresh='displayindicator'
 headers='simple' opencollapsed='true' showresponsehierarchy='false' showmargin='true'
 shrinkrows='true' extendlastcolumn='false' showhierarchies='false' unreadcolor='black'
 rowlinecount='3' headerlinecount='1' rowspacing='1.25' bgcolor='white' altrowcolor='#efefef'
 totalscolor='black' headerbgcolor='#e1e1e1' boldunreadrows='false' evaluateactions='false'
 allownewdocuments='false' allowcustomizations='false' hidemarginborder='false'
 marginwidth='0px' marginbgcolor='white' gridstyle='solid' gridcolor='#e1e1e1'
 uniquekeys='false'>
<noteinfo noteid='116' unid='7F3CB7A21A0117B5492576C8002C12A4' sequence='21'>
<created><datetime>20100212T170123,56+09</datetime></created>
<modified><datetime>20181031T100054,15+09</datetime></modified>
<revised><datetime>20181031T100054,10+09</datetime></revised>
<lastaccessed><datetime>20181031T100054,15+09</datetime></lastaccessed>
<addedtofile><datetime>20100212T170123,55+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby>
<wassignedby><name>CN=Administrator/O=Comture</name></wassignedby><code event='selection'><formula
>SELECT @All</formula></code>
<actionbar bgcolor='#d4d0c8' bordercolor='black'>
<actionbuttonstyle showdropdown='true' bgcolor='#d4d0c8'/><font color='system'/><border
 style='solid' width='0px 0px 1px'/>
<sharedactionref id='3'>
<action title='閉じる(_X)' icon='112'><code event='click'><formula>FIELD SaveOptions:="0";
@Command([FileCloseWindow])</formula></code><code event='label'><formula>"閉じる"</formula></code></action></sharedactionref></actionbar>
<column sort='ascending' resort='both' hidedetailrows='false' itemname='Form'
 width='2' resizable='true' separatemultiplevalues='true' sortnoaccent='true'
 sortnocase='true' showaslinks='false' categorized='true' twisties='true'><font
 size='9pt' color='teal' style='bold'/><columnheader title='Form'><font size='8pt'/></columnheader></column>
<column resort='both' hidedetailrows='false' itemname='Form' width='10' resizable='true'
 separatemultiplevalues='true' sortnoaccent='true' sortnocase='true' showaslinks='false'><font
 size='9pt'/><columnheader title='Form'><font size='8pt'/></columnheader></column>
<column resort='both' hidedetailrows='false' itemname='$1' width='15' resizable='true'
 separatemultiplevalues='false' sortnoaccent='false' sortnocase='true' showaslinks='false'><font
 size='9pt'/><columnheader title='作成日'><font size='8pt'/></columnheader><code
 event='value'><formula>@Created</formula></code></column>
<column hidedetailrows='false' itemname='$2' width='15' resizable='true' separatemultiplevalues='false'
 sortnoaccent='false' sortnocase='true' showaslinks='false'><font size='9pt'/><columnheader
 title='作成者'><font size='8pt'/></columnheader><code event='value'><formula
>@Name([CN]; @Author)</formula></code></column>
<column resort='both' hidedetailrows='false' itemname='$3' width='15' resizable='true'
 separatemultiplevalues='false' sortnoaccent='false' sortnocase='true' showaslinks='false'><font
 size='9pt'/><columnheader title='最終更新日'><font size='8pt'/></columnheader><code
 event='value'><formula>@Modified</formula></code></column></view>

<note default='true' class='icon'>
<noteinfo noteid='11a' unid='B56CF50838230060492576C8002C12A5' sequence='49'>
<created><datetime>20100212T170123,57+09</datetime></created>
<modified><datetime>20190826T133148,31+09</datetime></modified>
<revised><datetime>20190826T133148,30+09</datetime></revised>
<lastaccessed><datetime>20190826T133148,31+09</datetime></lastaccessed>
<addedtofile><datetime>20100212T170123,55+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=comture</name></updatedby>
<item name='IconBitmap' summary='true'>
<rawitemdata type='6'>
AiAgAQAA///////wD///gAH//gAAf/wAAD/4AAAf8AAAD+AAAAfgAAAHwAAAA8AAAAPAAAADgAAA
AYAAAAGAAAABgAAAAYAAAAGAAAABgAAAAYAAAAHAAAADwAAAA8AAAAPgAAAH4AAAB/AAAA/4AAAf
/AAAP/4AAH//gAH///AP//////8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAiIiIiAAAAAAAAAAAAAAI
jPZmZm/IgAAAAAAAAAAIjGZmZmZmZsiAAAAAAAAAjGZmZmZmZmZmyAAAAAAACMZmZmZmZmZmZmyA
AAAAAIxmZmZmZmZmZmZmyAAAAAjGZmZmZmZmZmZmZmyAAAAIZmb5n2b5n2b5n2ZmgAAAjGZmmZlm
mZlmmZlmZsgAAIZmZpmZZpmZZpmZZmZoAADGZmaZmWaZmWaZmWZmbAAI9mZmmZlmmZlmmZlmZm+A
CGZmZpmZZpmZZpmZZmZmgAhmZmaZmWaZmWaZmWZmZoAIZmZmmZlmmZlmmZlmZmaACGZvmZmZZpmZ
ZpmZmfZmgAhmaZmZmWaZmWaZmZmWZoAIZm+ZmZ9m+Z9m+ZmZ9maACPZmZmZmZmZmZmZmZmZvgADG
Zmb5n2b5n2b5n2ZmbAAAj2ZmmZlmmZlmmZlmZvgAAIxmZpmZZpmZZpmZZmbIAAAI9mb5n2b5n2b5
n2ZvgAAACMZmZmZmZmZmZmZmbIAAAACMZmZmZmZmZmZmZsgAAAAACMZmZmZmZmZmZmyAAAAAAACM
9mZmZmZmZm/IAAAAAAAACIz2ZmZmZm/IgAAAAAAAAAAIiMZmZmyIgAAAAAAAAAAAAACIiIiIAAAA
AAAAAAACICABAAD/////+A4DgA==
</rawitemdata></item>
<item name='$DefaultFrameset'><text>フレームセット</text></item>
<item name='$FlagsNoRefresh'><text/></item>
<item name='$Flags'><text>JqNz27fFK</text></item>
<item name='$UpdatedByLimit'><number>1</number></item>
<item name='$RevisionsLimit'><number>1</number></item>
<item name='$Daos'><text>0</text></item>
<item name='$TITLE'><text>db tool</text></item>
<item name='$PIRCRefreshModTime'><datetime>20190826T133148,22+09</datetime></item>
<item name='$TemplateModTime'><datetime>20190826T133146,46+09</datetime></item>
<item name='$TemplateServerName'><text>CN=Administrator/O=comture</text></item>
<item name='$TemplateFileName'><text>D:\Lotus\Notes\Data\dbtool.ntf</text></item></note>

<form name='(02.エージェント設定)' alias='AgentEnvDoc' nocompose='true' publicaccess='false'
 designerversion='8.5' type='response' inherit='true' renderpassthrough='true'>
<noteinfo noteid='13a' unid='186F649EC109C703492576C8002C4269' sequence='54'>
<created><datetime>20100212T170325,85+09</datetime></created>
<modified><datetime>20181031T100053,75+09</datetime></modified>
<revised><datetime>20181031T100053,74+09</datetime></revised>
<lastaccessed><datetime>20181031T100053,75+09</datetime></lastaccessed>
<addedtofile><datetime>20100212T170552,89+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby>
<wassignedby><name>CN=Administrator/O=Comture</name></wassignedby>
<globals><code event='options'><lotusscript>Option Public
Option Declare
Use "NotesUICommonLib"
Use "ToolsLib"
</lotusscript></code></globals><code event='windowtitle'><formula>"エージェント設定"</formula></code>
<actionbar bgcolor='#d4d0c8' bordercolor='black'>
<actionbuttonstyle bgcolor='#d4d0c8'/><font color='system'/><border style='solid'
 width='0px 0px 1px'/>
<sharedactionref id='3'>
<action title='閉じる(_X)' icon='112'><code event='click'><formula>FIELD SaveOptions:="0";
@Command([FileCloseWindow])</formula></code><code event='label'><formula>"閉じる"</formula></code></action></sharedactionref>
<sharedactionref id='2'>
<action title='編集(_E)' icon='29' hide='edit previewedit'><code event='click'><formula
>@If(@IsError(@Command([EditDocument]));"";"")</formula></code><code event='label'><formula
>"編集"</formula></code></action></sharedactionref>
<sharedactionref id='1'>
<action title='保存(_S)' icon='42' hide='preview read'><code event='click'><formula
>@Command([FileSave])</formula></code><code event='label'><formula>"保存"</formula></code></action></sharedactionref></actionbar>
<body><richtext>
<pardef id='1'/>
<par def='1'/>
<table widthtype='fixedleft' refwidth='6.2993in'><tablecolumn width='6.2993in'/>
<tablerow>
<tablecell borderwidth='0px'>
<pardef id='3' keepwithnext='true' keeptogether='true'/>
<par def='3'/>
<table widthtype='fitmargins' leftmargin='0' rowspacing='0.0396in' columnspacing='0.0396in'
 refwidth='6.1743in'><border dropshadow='true'/><tablecolumn width='100%'/>
<tablerow>
<tablecell borderwidth='0px' bgcolor='#104160'>
<pardef id='5' align='center' keepwithnext='true' keeptogether='true'/>
<par def='5'><run><font size='14pt' style='bold' color='white'/>エージェント設定</run></par></tablecell></tablerow></table>
<par def='3'/>
<table widthtype='fitmargins' rowdisplay='tabs' leftmargin='0' columnspacing='0.3542in'
 refwidth='6.1729in'><border dropshadow='true'/><tablecolumn width='100%'/>
<tablerow tablabel='基本'>
<tablecell borderwidth='1px 0px 0px 1px'>
<pardef id='6' keepwithnext='true' keeptogether='true'/>
<par def='6'/>
<table widthtype='fitmargins' cellbordercolor='#104160' leftmargin='0.0104in'
 refwidth='5.4542in'><tablecolumn width='100%'/>
<tablerow>
<tablecell borderwidth='0px 0px 2px'>
<par def='6'><run><font size='11pt' style='bold' color='#104160'/>データベース</run></par></tablecell></tablerow></table><subformref
 name='(データベース情報選択) | SubDbInfo'/>
<pardef id='8' hide='read print preview' keepwithnext='true' keeptogether='true'/>
<par def='8'/>
<table widthtype='fitmargins' cellbordercolor='#104160' leftmargin='0.0104in'
 refwidth='5.4542in'><tablecolumn width='100%'/>
<tablerow>
<tablecell borderwidth='0px 0px 2px'>
<par def='6'><run><font size='11pt' style='bold' color='#104160'/>エージェント</run></par></tablecell></tablerow></table>
<par def='6'/>
<table widthtype='fitmargins' cellbordercolor='#104160' leftmargin='0.0104in'
 rowspacing='0.0396in' columnspacing='0.0396in' refwidth='5.4438in'><tablecolumn
 width='1.1813in'/><tablecolumn width='100%'/>
<tablerow>
<tablecell valign='center' bgcolor='#b1b1d2'>
<pardef id='9' hide='read print preview' keepwithnext='true' keeptogether='true'/>
<par def='9'>名前<button characters='8' widthtype='fixedcharacter' wraptext='true'
 bgcolor='system'><font size='7pt'/>選択<code event='options'><lotusscript>Option Declare

</lotusscript></code><code event='click'><lotusscript>Sub Click(Source As Button)
	
	Dim workSpace As New NotesUIWorkSpace
	Dim curDB As NotesDatabase
	Dim curUIDoc As NotesUIDocument
	Dim curDoc As NotesDocument
	
	Dim server As String
	Dim filePath As String
	Dim DbTitle As String
	
	Dim agentDB As NotesDatabase
	
	Set curUIDoc = workSpace.CurrentDocument
	Set curDoc = curUIDoc.Document
	Set curDB = curDoc.ParentDatabase
	
	server = curDoc.GetItemValue("DbServer")(0)
	If server = "" Then server = curDB.Server
	filePath = curDoc.GetItemValue("DbFilePath")(0)
	dbTitle = curDoc.GetItemValue("DbTitle")(0)
	
	If filePath = "" Then
		Msgbox "ファイルパスが設定されていません。", 0+64, ""
		Exit Sub
	End If
	
	Set agentDB = New NotesDatabase(server, filePath)
	If agentDB Is Nothing Then
		Msgbox dbTitle &amp; "( "&amp; server &amp; "!" &amp; filePath &amp; " )" &amp; "が開けません。", 0+64, ""
		Exit Sub
	Elseif agentDB.IsOpen = False Then
		Msgbox dbTitle &amp; "( "&amp; server &amp; "!" &amp; filePath &amp; " )" &amp; "が見つかりません。", 0+64, ""
		Exit Sub
	End If
	
	Dim allAgent As Variant
	Dim agent As NotesAgent
	Dim values() As String
	Dim tmpValues() As String
	Dim index As Long
	
	allAgent = agentDB.Agents
	If Isempty(allAgent) Then
		Msgbox dbTitle &amp; "にはエージェントがありません。", 0+64, ""
		Exit Sub
	End If
	Redim Preserve values(0 To 0)
	
	Forall a In allAgent
		
		Set agent = a
		Redim Preserve values(0 To index)
		Redim Preserve tmpValues(0 To index)
		values(index) = agent.Name
		tmpValues(index) = values(index)
		index = index + 1
		
	End Forall
	
	Dim retVal As Variant
	Dim selectIndex As Variant
	Dim agentName As String
	Dim agentNameAlt As String
	Dim defVal As String
	
	agentName = curDoc.GetItemValue("AgentName")(0)
	agentNameAlt = curDoc.GetItemValue("AgentNameAlt")(0)
	
	If agentName = "" Then
		defVal = agentNameAlt
	Elseif agentNameAlt = "" Then
		defVal = agentName
	Else
		defVal = agentName &amp; "|" &amp; agentNameAlt
	End If
	
	agentname = ""
	agentnamealt = ""
	Call Sort(values, True)
	retVal = workSpace.Prompt(PROMPT_OKCANCELLIST, "エージェントの選択", "エージェントを選択してください。", defVal, values)
	If Isempty(retVal) Then
		Exit Sub
	Else
		selectIndex = Arraygetindex(tmpValues, retVal)
		Set agent = allAgent(selectIndex)
		'Set agent = agentDB.GetAgent(tmpValues(Clng(selectIndex)))
		If Instr(agent.Name, "|") = 0 Then
			agentNameAlt = agent.Name
		Else
			agentName = Trim$(Strleft(agent.Name, "|"))
			agentNameAlt = Trim$(Strright(agent.Name, "|"))
		End If
		
		Call curDoc.ReplaceItemValue("AgentName", agentName)
		Call curDoc.ReplaceItemValue("AgentAlias", agentNameAlt)
		
		Call curDoc.ReplaceItemValue("Comment", agent.Comment)
		Call curDoc.ReplaceItemValue("RunServerName", agent.ServerName)
		
	End If
	
End Sub</lotusscript></code></button></par>
<pardef id='10' hide='edit previewedit' keepwithnext='true' keeptogether='true'/>
<par def='10'>名前</par></tablecell>
<tablecell valign='center'>
<pardef id='11' keepwithnext='true' keeptogether='true'/>
<par def='11'><field type='text' kind='editable' name='AgentName'/><compositedata
 type='98' prevtype='65418' nexttype='222' afterparcount='7' containertype='65418'
 aftercontainercount='1' afterbegincount='3'>
Yg4BAIQAAAAAAAAAAAA=
</compositedata></par></tablecell></tablerow>
<tablerow>
<tablecell valign='center' bgcolor='#b1b1d2'>
<pardef id='12' keepwithnext='true' keeptogether='true'/>
<par def='12'>実行名</par></tablecell>
<tablecell valign='center'>
<par def='11'><field type='text' allowmultivalues='true' kind='editable' name='AgentAlias'
 listinputseparators='comma semicolon newline' listdisplayseparator='newline'/><compositedata
 type='98' prevtype='65418' nexttype='222' afterparcount='6' containertype='65418'
 aftercontainercount='1' afterbegincount='3'>
Yg4BAIQAAAAAAAAAAAA=
</compositedata></par></tablecell></tablerow>
<tablerow>
<tablecell bgcolor='#b1b1d2'>
<par def='12'>メモ</par></tablecell>
<tablecell>
<par def='11'><field type='text' kind='editable' name='Memo'/><compositedata
 type='98' prevtype='65418' nexttype='222' afterparcount='6' containertype='65418'
 aftercontainercount='1' afterbegincount='3'>
Yg4BAIQAAAAAAAAAAAA=
</compositedata></par></tablecell></tablerow>
<tablerow>
<tablecell valign='center' bgcolor='#b1b1d2'>
<par def='12'>設計上のコメント</par></tablecell>
<tablecell valign='center'>
<par def='11'><field type='text' kind='computedwhencomposed' name='Comment'><code
 event='defaultvalue'><formula>@ThisValue</formula></code></field><compositedata
 type='98' prevtype='65418' nexttype='222' afterparcount='6' containertype='65418'
 aftercontainercount='1' afterbegincount='3'>
Yg4BAIQAAAAAAAAAAAA=
</compositedata></par></tablecell></tablerow>
<tablerow>
<tablecell valign='center' bgcolor='#b1b1d2'>
<par def='12'>実行サーバー名</par></tablecell>
<tablecell valign='center'>
<par def='11'><field type='text' kind='editable' name='RunServerName'/><compositedata
 type='98' prevtype='65418' nexttype='222' afterparcount='6' containertype='65418'
 aftercontainercount='1' afterbegincount='3'>
Yg4BAIQAAAAAAAAAAAA=
</compositedata></par></tablecell></tablerow></table></tablecell></tablerow></table></tablecell></tablerow></table>
<par def='1'/></richtext></body>
<item name='OriginalModTime' sign='true'><datetime>20110822T194256,30+09</datetime></item>
<item name='$SubForm_RepIDs' sign='true'><text>0000000000000000</text></item>
<item name='$$ScriptName' summary='false' sign='true'><text>AgentEnvDoc</text></item></form>

<sharedactions hide='v3 v4strict' designerversion='6.5' maxid='4'>
<noteinfo noteid='13e' unid='5679445B73B566D4492576C8002D7BF4' sequence='25'>
<created><datetime>20100212T171648,52+09</datetime></created>
<modified><datetime>20181031T100051,95+09</datetime></modified>
<revised><datetime>20181031T100051,94+09</datetime></revised>
<lastaccessed><datetime>20181031T100051,95+09</datetime></lastaccessed>
<addedtofile><datetime>20100212T171648,55+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby>
<wassignedby><name>CN=Administrator/O=Comture</name></wassignedby>
<action title='フォーム\保存(_S)' icon='42' hide='preview read' id='1'><code event='click'><formula
>@Command([FileSave])</formula></code><code event='label'><formula>"保存"</formula></code></action>
<action title='フォーム\編集(_E)' icon='29' hide='edit previewedit' id='2'><code
 event='click'><formula>@If(@IsError(@Command([EditDocument]));"";"")</formula></code><code
 event='label'><formula>"編集"</formula></code></action>
<action title='フォーム\閉じる(_X)' icon='112' id='3'><code event='click'><formula
>FIELD SaveOptions:="0";
@Command([FileCloseWindow])</formula></code><code event='label'><formula>"閉じる"</formula></code></action>
<action title='Designerで開く' id='4'><code event='click'><formula>unid:=@Text(@DocumentUniqueID);
rpid:=@Text(@ReplicaID);
rpid:=@Left(rpid;8)+@Right(rpid;8);
url:="notes://"+@Name([CN];@Subset(@DbName;1))+"/__"+rpid+".nsf/"+unid;
@Prompt([Ok];" ";url);
@Command([Execute];"designer.exe"; url)</formula></code></action>
<item name='$$ScriptName' summary='false' sign='true'><text>$ACTIONS</text></item></sharedactions>

<scriptlibrary name='NotesUICommonLib' hide='v3 v4strict'>
<noteinfo noteid='146' unid='99517CFBF023AFC5492576C8002E8783' sequence='14'>
<created><datetime>20100212T172813,47+09</datetime></created>
<modified><datetime>20190826T124732,23+09</datetime></modified>
<revised><datetime>20190826T124732,22+09</datetime></revised>
<lastaccessed><datetime>20190826T124732,23+09</datetime></lastaccessed>
<addedtofile><datetime>20100212T172813,60+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=comture</name></updatedby><code event='options'><lotusscript
>Option Public
Option Explicit
Option Base 0
Use "ErrorLib"

</lotusscript></code><code event='initialize'><lotusscript>Sub Initialize
	Call SetProcess("*SL - NotesUICommonLib")
End Sub

</lotusscript></code><code event='Messagebox_Alert'><lotusscript>Function Messagebox_Alert(message As String, Byval title As String) As Integer
	If title = "" Then title = "アラート"
	'OKボタン + 感嘆符アイコン
	Messagebox_Alert = Messagebox(message, 0 + 48, title)
End Function

</lotusscript></code><code event='Messagebox_OkCancel'><lotusscript>Function Messagebox_OkCancel(message As String, Byval title As String) As Integer
	If title = "" Then title = "確認"
	'OK・Cancelボタン + 感嘆符アイコン
	Messagebox_OkCancel = Messagebox(message, 1 + 48, title)
End Function

</lotusscript></code><code event='Messagebox_Info'><lotusscript>Function Messagebox_Info(message As String, Byval title As String) As Integer
	If title = "" Then title = "情報"
	'OKボタン + インフォメーションアイコン
	Messagebox_Info = Messagebox(message, 0 + 64, title)
End Function

</lotusscript></code><code event='Messagebox_YesNo'><lotusscript>Function Messagebox_YesNo(message As String, Byval title As String) As Integer
	If title = "" Then title = "確認"
	'はい・いいえボタン + 感嘆符アイコン
	Messagebox_YesNo = Messagebox(message, 4 + 48, title)
End Function

</lotusscript></code><code event='Messagebox_Error'><lotusscript>Function Messagebox_Error(message As String, Byval title As String) As Integer
	If title = "" Then title = "エラー"
	'OKボタン + ストップマークアイコン
	Messagebox_Error = Messagebox(message, 0 + 16, title)
End Function

</lotusscript></code><code event='Messagebox_YesNoCancel'><lotusscript>Function Messagebox_YesNoCancel(message As String, ByVal title As String) As Integer
	If title = "" Then title = "確認"
	'Yes' No ・Cancelボタン + 感嘆符アイコン
	Messagebox_YesNoCancel = MessageBox(message, 3 + 48, title)
End Function</lotusscript></code>
<item name='$POID'><datetime>20140930T200606,27+09</datetime></item></scriptlibrary>

<scriptlibrary name='ProcessLib' hide='v3 v4strict'>
<noteinfo noteid='14a' unid='1314E41D0EC665BF492576C8002E8784' sequence='12'>
<created><datetime>20100212T172813,48+09</datetime></created>
<modified><datetime>20181031T100050,88+09</datetime></modified>
<revised><datetime>20181031T100050,87+09</datetime></revised>
<lastaccessed><datetime>20181031T100050,88+09</datetime></lastaccessed>
<addedtofile><datetime>20100212T172813,72+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby>
<wassignedby><name>CN=Administrator/O=Comture</name></wassignedby><code event='options'><lotusscript
>'//CNAPv3.0 add
Option Public
Option Explicit
Option Base 0

</lotusscript></code><code event='declarations'><lotusscript>'**GetThreadInfoのプロパティ値（LSPRVAL.LSS）**
Const CNAP_THREADINFO_CALLPROC = 10
Const CNAP_THREADINFO_CALLMODULE = 11

Private g_procObj As ProcessObject

Class ProcessObject
	
	Private procList List As String
	
	Sub SetProcess(processID As String, processName As String)
		procList(processID) = processName
	End Sub
	
	Function GetProcessName(processID As String) As String
		GetProcessName = procList(processID)
	End Function
	
	Function FindProcess(processID As String) As Integer
		On Error Goto error_handle
		'Call GetProcessName(processID)
		FindProcess = IsElement(me.procList(processID))
exit_tag:
		Exit Function
error_handle:
		FindProcess = False
		Resume exit_tag
	End Function
	
End Class
</lotusscript></code><code event='initialize'><lotusscript>Sub Initialize
	Call CreateProcess()
End Sub

</lotusscript></code><code event='CreateProcess'><lotusscript>Private Sub CreateProcess()
	Set g_procObj = New ProcessObject
End Sub

</lotusscript></code><code event='FindProcess'><lotusscript>Function FindProcess(processID As String) As Integer
	FindProcess = g_procObj.FindProcess(processID)
End Function

</lotusscript></code><code event='GetProcess'><lotusscript>Function GetProcess(processID As String) As String
	On Error Goto error_handle
	Dim procName As String
	If processID = "" Then processID = Getthreadinfo(CNAP_THREADINFO_CALLMODULE)
	procName = processID
	If FindProcess(processID) = True Then
		procName = g_procObj.GetProcessName(processID)
	End If
	GetProcess = procName
exit_tag:
	Exit Function
error_handle:
	Resume exit_tag
End Function

</lotusscript></code><code event='SetProcess'><lotusscript>Sub SetProcess(processName As String)
	On Error Goto error_handle
	Dim processID As String
	processID = Getthreadinfo(CNAP_THREADINFO_CALLMODULE)
	If FindProcess(processID) = False Then
		Call g_procObj.SetProcess(processID, processName)
	End If
exit_tag:
	Exit Sub
error_handle:
	Resume exit_tag
End Sub

</lotusscript></code><code event='AddProcess'><lotusscript>Function AddProcess(processName As String) As Integer
	On Error Goto errorhandle
	Dim processID As String
	processID = Getthreadinfo(CNAP_THREADINFO_CALLMODULE)
	If FindProcess(processID) = True Then
		Call g_procObj.SetProcess(processID, g_procObj.GetProcessName(processID) &amp; " - " &amp; processName)
	End If
exit_tag:
	Exit Function
errorhandle:
	Resume exit_tag
End Function
</lotusscript></code>
<item name='$POID'><datetime>20140930T200606,30+09</datetime></item></scriptlibrary>

<scriptlibrary name='ToolsLib' hide='v3 v4strict'>
<noteinfo noteid='14e' unid='9F6D02080E7FA011492576C8002F5C23' sequence='136'>
<created><datetime>20100212T173717,79+09</datetime></created>
<modified><datetime>20181031T100051,37+09</datetime></modified>
<revised><datetime>20181031T100051,36+09</datetime></revised>
<lastaccessed><datetime>20181031T100051,37+09</datetime></lastaccessed>
<addedtofile><datetime>20100212T173744,08+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby>
<wassignedby><name>CN=Administrator/O=Comture</name></wassignedby><code event='options'><lotusscript
>Option Public
Option Declare
Use "ErrorLib"

</lotusscript></code><code event='declarations'><lotusscript>
'****************************
'    拡張ストリームオブジェクト
'****************************
Class IOStreamEX
	
	'クラスメンバのリスト
	Private members List As Variant
	
	'クラスメンバの初期化処理
	Private Sub InitMember()
		Me.members("dblLineNum") = 0 'ストリームが現在処理中の行番号
		Me.members("strLineText") = "" 'ストリームが現在処理中の行テキスト
		Me.members("strFullFilePath") = "" 'ストリームが処理中のファイル（フルパス）
		Me.members("bolOpenFlg") = False 'ストリームが現在開いているかのフラグ
	End Sub
	
	'初期化処理
	Private Sub Initialize()
		'クラスメンバ初期化処理
		Call Me.InitMember()
		If Me.Stream Is Nothing Then
			Dim session As New NotesSession
			'新しいストリームインスタンスを取得
			Set Me.Stream = session.CreateStream()
		End If
	End Sub
	
	'解放処理
	Private Sub Terminate()
		If Not Me.Stream Is Nothing Then
			'クラスメンバを初期化
			Call Me.InitMember()
			'ストリームをクローズ
			Call Me.Stream.Close()
			'オブジェクトを初期化
			Set Me.Stream = Nothing
		End If
	End Sub
	
	'********************************************
	'ストリームをオープンする
	' @param strFullFilePath : 処理するファイルのフルパス
	' @return True or False
	'********************************************
	Function OpenStream(ByVal strFullFilePath As String, strCharSet As String) As Integer
		'クラスメンバ初期化処理
		'Call Me.InitMember()
		'初期化処理
		Call Me.Initialize()
		'ファイルパスを保持
		Me.FilePath = strFullFilePath
		'ストリームをオープン
		If strCharSet = "" Then
			Me.OpenFlg = Me.Stream.Open(strFullFilePath)
		Else
			Me.OpenFlg = Me.Stream.Open(strFullFilePath, strCharSet)
		End If
		OpenStream = Me.OpenFlg
	End Function
	
	'***********************************
	'既に開いているストリームをクローズする
	'@return True
	'***********************************
	Function CloseStream() As Integer
		'解放処理
		Call Me.Terminate()
		CloseStream = True
	End Function
	
	'****************************************
	'ストリームをファイルに保存する
	'@param
	' strFullFilePath : ファイルを保存するフルパス
	' bolMode : True - 上書き、False : 追記
	Function SaveStream(strFullFilePath As String, bolMode As Boolean, strCharSet As String) As Integer
		On Error GoTo ErrorHandle
		
		Dim session As New NotesSession
		Dim tmpStream As NotesStream
		
		Set tmpStream = session.Createstream()
		If strCharSet = "" Then
			Call tmpStream.Open(strFullFilePath)
		Else
			Call tmpStream.Open(strFullFilePath, strCharSet)
		End If
		If bolMode Then
			Call tmpStream.Truncate()
			tmpStream.Position = 0
		End If
		Me.Stream.Position = 0
		Call tmpStream.WriteText(Me.Stream.ReadText)
		Call tmpStream.Close()
		
		SaveStream = True
		
		Exit Function
ErrorHandle:
		Error Err, Error
		Exit Function
	End Function
	
	'*********************************
	'ストリームオブジェクト
	'@return NotesStream
	Property Get Stream As NotesStream
		If IsElement(Me.members("NotesStream")) Then Set Stream = Me.members("NotesStream")
	End Property
	Property Set Stream As NotesStream
		Set Me.members("NotesStream") = Stream
	End Property
	
	'*********************************
	'ストリームが開いているか否かのフラグ
	'@return True or False
	' 	@param
	' 		True : ストリームが開いている
	' 		False : ストリームが閉じている
	Property Get IsOpen As Integer
		IsOpen = Me.OpenFlg
	End Property
	Private Property Get OpenFlg As Boolean
		OpenFlg = Me.members("bolOpenFlg")
	End Property
	Private Property Set OpenFlg As Boolean
		Me.members("bolOpenFlg") = OpenFlg
	End Property
	
	'*****************************************
	'ストリームの末端に位置しているかのフラグ
	' @return True or False
	' 	@param
	' 		True : ストリームの末端に位置している
	' 		False : ストリームの途中に位置している
	Property Get IsEOS As Integer
		IsEOS = True
		If Me.IsOpen = True Then IsEOS = Me.Stream.IsEOS
	End Property
	
	'現在処理中の行を設定する
	Property Set LineText As String
		Me.members("strLineText") = LineText
	End Property
	
	'現在処理中の行テキストを取得する
	Property Get LineText As String
		LineText = Me.members("strLineText")
	End Property
	
	'現在処理中の行番号を設定する
	Property Set LineNum As Double
		Me.members("dblLineNum") = LineNum
	End Property
	'現在処理中の行番号を取得する
	Property Get LineNum As Double
		LineNum = Me.members("dblLineNum")
	End Property
	
	'現在書き込んでいる行の文字数を返す
	Property Get LineLength As Integer
		LineLength = Len(Me.LineText)
	End Property
	
	'現在書き込んでいる行のバイト数を返す
	Property Get LineByte As Double
		LineByte = Lenbp(Me.LineText)
	End Property
	
	'ストリーム全体のバイト数を返す
	Property Get Bytes As Double
		Bytes = 0
		If Me.IsOpen = True Then Bytes = Me.Stream.Bytes
	End Property
	
	'このストリームのファイルパス
	Property Get FilePath As String
		FilePath = Me.members("strFullFilePath")
	End Property
	Property Set FilePath As String
		Me.members("strFullFilePath") = FilePath
	End Property
	
	'このストリームのファイル名
	Property Get FileName As String
		FileName = Strrightback(Me.FilePath, "\")
	End Property
	
End Class

'************************
'入力ストリームの基底クラス
'************************
Class InputStreamBase As IOStreamEX
	
	'**************************
	'ストリーム内の１行を読み込む
	' @return 読み込んだテキスト
	'**************************
	Function ReadLine() As String
		If Me.IsEOS = False Then
			Me.LineNum = Me.LineNum + 1
			Me.LineText = Me.Stream.ReadText(STMREAD_LINE)
		End If
		ReadLine = Me.LineText
	End Function
	
	'ストリーム内の最初の行を読み込む
	Function GetFirstLine() As String
		Me.LineText = ""
		Me.LineNum = 0
		Me.stream.Position = 0
		GetFirstLine = Me.ReadLine()
	End Function
	
	'ストリーム内の次の行を読み込む
	Function GetNextLine() As String
		GetNextLine = Me.ReadLine()
	End Function
	
End Class

'************************
'出力ストリームの基底クラス
'************************
Class OutputStreamBase As IOStreamEX
	
	'*over ride*
	'クラスメンバの初期化処理
	Private Sub InitMember()
		'上位クラスのメソッドの呼び出し
		Call IOStreamEX..InitMember()
		Me.LineNum = 1
	End Sub
	
	'****************************
	'テキストを行の末尾に追加する
	' @param text : 追加するテキスト
	Sub AddText(strText As String)
		Me.LineText = Me.LineText &amp; strText
	End Sub
	
	'********************************************
	'１行をストリームに書き出し、内部メンバをクリアする
	Sub FlashLine()
		'Call Me.Stream.WriteText(Me.LineText)
		Call Me.WriteTextIncludNull(Me.LineText)
		Me.LineText = ""
	End Sub
	
	'******************************
	'Null文字を含むテキストを書き出す
	' @param text : 書き出すテキスト
	Sub WriteTextIncludNull(strText As String)
		Dim arrayText As Variant '引数をNull文字で分割した配列
		Dim arrayNull(0) As Byte 'Null文字のバイト
		Dim i As Long 'カウンタ変数
		Dim last As Long '最後の配列添字
		arrayNull(0) = 0
		arrayText = Split(strText, Chr(0))
		last = Ubound(arrayText)
		For i = 0 To last
			Call Me.Stream.WriteText(Cstr(arrayText(i)))
			If i &lt;&gt; last Then Call stream.Write(arrayNull)
		Next
	End Sub
	
	'*************************************************
	'書込み行を次の行へ移す
	'※NULL文字が含まれる場合、改行コードが出力されない
	Sub SheekNextLine()
		Call Me.Stream.WriteText("", EOL_PLATFORM)
		Me.LineNum = Me.LineNum + 1
	End Sub
	
	'*************************
	'現在処理中の行をクリアする
	Sub ClearLine()
		Me.LineText = ""
	End Sub
	
	'************************
	'ストリーム全体をクリアする
	Sub ClearStream()
		If IsOpen = True Then
			Me.LineText = ""
			Me.LineNum = 1
			Call Me.Stream.Truncate()
		End If
	End Sub
	
End Class



'****************************
'    出力ストリームオブジェクト
'****************************
Class OutputStreamCSV As OutputStreamBase '-&gt;[ToolsLib]
	
	Sub New()
		Call Me.Initialize()
	End Sub
	
	Sub Delete()
		Call Me.Terminate()
	End Sub
	
	'****************************************
	'@param
	' aryString : 追加するテキストまたはString配列
	' bolWQuotFlg : テキストをダブルクォートで囲むかのフラグ
	'  True : 囲む、 False : 囲まない
	Sub AddLineEntries(aryString As Variant, bolWQuotFlg As Boolean)
		On Error GoTo ErrorHandle
		
		If IsArray(aryString) Or IsList(aryString) Then
			ForAll v In aryString
				Call Me.AddLineEntry( CStr(v), bolWQuotFlg )
			End ForAll
		Else
			Call Me.AddLineEntries(Split(aryString, ","), bolWQuotFlg)
		End If
		
		Exit Sub
ErrorHandle:
		Call SetErrorObject(Err, Error)
		Error Err, Error
		Exit Sub
	End Sub
	
	'****************************************
	'@param
	' 	strText : 追加するテキスト
	Sub AddLineEntry(ByVal strText As String, bolWQuotFlg As Boolean)
		On Error GoTo ErrorHandle
		
		'改行コード(CR)を(LF)に置換
		If InStr(strText, Chr(13)) &lt;&gt; 0 then
			strText = Replace(strText, Chr(13)&amp; Chr(10), Chr(10))
			strText = Replace(strText, Chr(10) &amp; Chr(13), Chr(10))
			strText = Replace(strText, Chr(13), Chr(10))
		End If
		If bolWQuotFlg = True Then
			'ダブルクォートがあればエスケープ
			strText = |"| &amp; Replace(strText, |"|, |""|) &amp; |"|
		End If
		
		If Me.LineLength = 0 Then
			Me.AddText(strText)
		Else
			Me.AddText("," &amp; strText)
		End If
		
		Exit Sub
ErrorHandle:
		Call SetErrorObject(Err, Error)
		Error Err, Error
		Exit Sub
	End Sub
	
End Class
</lotusscript></code><code event='initialize'><lotusscript>Sub Initialize
	Call SetProcess("*SL - ToolsLib")
End Sub

</lotusscript></code><code event='RemoveFile'><lotusscript>Function RemoveFile(fullFilePath As String) As Integer
'**********************************************
'指定のファイルを完全に削除する
' @param fullFilePath : 削除するファイル名（フルパス）
' @return True or False
' 	@param
' 		True : 削除成功
' 		False : 削除失敗
'**********************************************
	On Error Goto ErrorHandle
	
	Kill fullFilePath
	
	RemoveFile = True
	
ExitTag:
	Exit Function
ErrorHandle:
	Call SetErrorObject(Err, Error)
	Resume ExitTag
	Exit Function
End Function

</lotusscript></code><code event='ExplodeElementData'><lotusscript>Function ExplodeElementData(Byval data As String, Byval separator As String) As Variant
	
	Dim index As Long 'セパレータのインデックス
	Dim sepLen As Long 'セパレータ文字列の長さ
	Dim element() As String '分割された配列
	Dim elemCount As Long '配列の添字
	
	Dim lStr As String 'セパレータ文字列より左側の文字列
	Dim rStr As String 'セパレータ文字列より右側の文字列
	
	' セパレータなしは判断不可
	If separator = "" Then
		Error USERERR, "セパレータを指定しなければなりません。"
	End If
	
	index = 1 '開始Index
	sepLen = Len(separator) 'セパレータ文字列の長さ
	elemCount = 0 '配列の添字
	
	Redim Preserve element(0 To elemCount) '配列を初期化
	
	Do
		'文字列の中からセパレータ文字列を探す
		index = Instr(1, data, separator, 0)
		'見つからない場合
		If index = 0 Then
			'配列を拡張
			Redim Preserve element(0 To elemCount)
			'配列の最後に残りのデータを格納
			element(elemCount) = data
			'終了
			Exit Do
		End If
		
		lStr = "" '一時変数初期化
		rStr = "" '一時変数初期化
		
		'セパレータ文字列より左側の文字列を取得
		'セパレータ文字列のIndexからセパレータ文字列の長さを引いた数が
		'０より小さい場合、Left関数でエラーになる
		If 0 &lt; index+(sepLen-1)-sepLen Then lStr = Left(data, index+(sepLen-1)-sepLen)
		
		rStr = Right(data, Len(data) -(index+(sepLen-1)))
		
		Redim Preserve element(0 To elemCount)
		element(elemCount) = lStr
		data = rStr
		elemCount = elemCount + 1
		
	Loop
	
	ExplodeElementData = element
	
End Function

</lotusscript></code><code event='CheckDir'><lotusscript>Function CheckDir(fileSpec As String, attMask As Integer) As Integer
'**************************************************
'ローカルディスク上のフォルダとファイルの有無チェック
' @param
' 	fileSpec : ファイルまたはフォルダまでのフルパス
' 	attMask : 探索するファイルタイプ(Designer Help 参照)
' @return True or False
' 	@param
' 		True : ファイルまたはフォルダが存在する
' 		False : ファイルまたはフォルダが存在しない
'**************************************************
	On Error Goto ErrorHandle
	On Error 76 Goto Error76Handle 'フォルダがない場合
	
	'フォルダが存在しない場合エラーになる
	If Dir$(fileSpec, attMask) &lt;&gt; "" Then
		CheckDir = True
	End If
	
	Call CheckDir("", 0)
	
ExitTag:
	Exit Function
ErrorHandle:
	Call SetErrorObject(Err, Error)
	Error Err, Error
	Exit Function
Error76Handle:
	'再起呼び出しされたら次は呼び出ししない
	If fileSpec &lt;&gt; "" Then
		'フォルダを掴んだままになる事がある為、ワザとエラーを発生させて回避
		Call CheckDir("", 0)
	End If
	'エラーは無視
	Resume ExitTag
End Function

</lotusscript></code><code event='QuickSort'><lotusscript>Public Function QuickSort(values As Variant , fstIndex As Long, lastIndex As Long, flag As Integer)
'***********************************************************************
' Function QuickSort
' @param
' 	values : ソートする配列。オブジェクト以外なら可
' 	fstIndex : valuesの最初の添字(再起呼出し後は、擬似分割配列の最初の添字)
' 	lastIndex : valuesの最後の添字(再起呼出し後は、擬似分割配列の最後の添字)
' 	flag : True or False
' 		True : 昇順ソート
' 		False : 降順ソート
' @return なし
'	valuesを直接ソート
'***********************************************************************
	Dim length As Long '配列の長さ
	Dim centerIndex As Long '配列の中央Index
	Dim pivot As Variant '配列の中央に位置する値
	Dim leftCount As Long '左探索ループカウンタ変数
	Dim rightCount As Long '右探索ループカウンタ変数
	Dim leftIndex As Long '左探索Index保持用変数
	Dim rightIndex As Long '右探索Index保持用変数
	Dim valueBuf As Variant '配列の値入れ替え用の退避変数
	
	length = lastIndex - fstIndex + 1 '配列の要素数(1 &lt;= n)
	
	'①valuesの長さが１より大きければ続行
	If 1 &lt; length Then
		
		centerIndex = fstIndex + (length / 2) '配列中央のIndex
		
		'②配列の中央に位置する値を中央値として保持
		pivot = values(centerIndex)
		
		Do While True '配列探索ループ
			
			'③配列の左側から、
			' a. 昇順 : 中央値以上の値を探索(左探索)
			' b. 降順 : 中央値以下の値を探索(左探索)
			For leftCount = fstIndex + leftCount To lastIndex
				'a
				If flag = True Then
					If pivot &lt;= values(leftCount) Then
						leftIndex = leftCount '配列のIndexを保持
						Exit For '発見したらそれ以上探索する必要はない。
					End If
				'b
				Else
					If values(leftCount) &lt;= pivot Then
						leftIndex = leftCount '配列のIndexを保持
						Exit For '発見したらそれ以上探索する必要はない。
					End If
				End If
			Next
			
			'④配列の右側から、
			' a. 昇順 : 中央値以下の値を探索(右探索)
			' b. 降順 : 中央値以上の値を探索(右探索)
			For rightCount = lastIndex - rightCount To fstIndex Step -1
				'a
				If flag = True Then
					If values(rightCount) &lt;= pivot Then
						rightIndex = rightCount '配列のIndexを保持
						Exit For '発見したらそれ以上探索する必要はない。
					End If
				'b
				Else
					If pivot &lt;= values(rightCount) Then
						rightIndex = rightCount '配列のIndexを保持
						Exit For '発見したらそれ以上探索する必要はない。
					End If
				End If
			Next
			
			'⑤左探索した結果Indexよりも、右探索した結果Indexが大きければ、左探索Indexと、右探索Indexの位置にある配列値を入れ替える
			'（要するに≪中央値以上の値≫が、≪中央値以下の値≫より≪左側≫にあれば、≪値を入れ替える≫）
			'(または、≪中央値以下の値≫が、≪中央値以上の値≫より≪右側≫にあれば、≪値を入れ替える≫)
			If leftIndex &lt; rightIndex Then
				'--配列の入れ替え----------------
				Call Swap(values(leftIndex), values(rightIndex))
				'--------------------------------
				leftCount = leftCount + 1 - fstIndex '次の左探索は値が発見されたIndexの１つ次のIndexから開始する。
				rightCount = lastIndex - rightCount + 1 '次の右探索は値が発見されたIndexの１つ前のIndexから開始する。
			Else
				Exit Do '配列の入れ替えが発生しなかった場合は、探索終了
			End If
			
		Loop
		
		'⑥最後の左探索で発見された中央値のIndexで配列を分割する。
		Call QuickSort(values, fstIndex, leftIndex-1, flag)
		Call QuickSort(values, leftIndex, lastIndex, flag)
		
	End If
	
End Function

</lotusscript></code><code event='CreateDir'><lotusscript>Function CreateDir(dirPath As String) As Integer
'**************************************************
'指定されたフォルダまたはそのフォルダ階層を構築する
' @param dirPath : "\"で区切られたフォルダまでのフルパス
' @return True or False
' 		@param
' 			True : フォルダの作成完了
' 			False : フォルダの作成失敗
'***************************************************
	On Error Goto ErrorHandle
	
	Dim directorys As Variant
	Dim tmpPath As String
	
	'区切り文字で分離
	'directorys = Split(dirPath, "\")
	directorys = ExplodeElementData(dirPath, "\")
	
	'トップエントリからディレクトリを探索
	Forall d In directorys
		'エントリがドライブ名の場合は処理なし
		If Instr(Cstr(d), ":") &lt;&gt; 0 Then
			tmpPath = d
		Else
			tmpPath = tmpPath &amp; "\" &amp; d
			'指定のフォルダがない場合
			If CheckDir(tmpPath, 16) = False Then
				'フォルダを作成
				Mkdir tmpPath
			End If
		End If
	End Forall
	
	CreateDir = True
	
	Call CheckDir("", 0)
	
	Exit Function
ErrorHandle:
	Call SetErrorObject(Err, Error)
	Error Err, Error
	Exit Function
End Function

</lotusscript></code><code event='CopyFile'><lotusscript>Function CopyFile(fromFP As String, toFP As String) As Integer
'*********************************************************
'指定のファイルをコピーする
' @param
' 	fromFP : コピー元のファイル名（フルパス）
' 	toFP : コピー先のファイル名（フルパス ※Designer Help 参照）
'*********************************************************
	On Error Goto ErrorHandle
	
	Filecopy fromFP, toFP
	
	CopyFile = True
	
ExitTag:
	Exit Function
ErrorHandle:
	Call SetErrorObject(Err, Error)
	Resume ExitTag
	Exit Function
End Function

</lotusscript></code><code event='Swap'><lotusscript>Public Function Swap(a As Variant, b As Variant)
	'---------------------------------------------------------------------
	' Function Swap
	' 処理内容：
	'	 aとbの内容を入れ替える
	' 
	' 引数：
	' a(Variant)：
	'	入れ替えを行いたい値
	' b(Variant)：
	'	入れ替えを行いたい値
	'
	' 戻り値：なし
	'	aとbを直接入れ替え
	'----------------------------------------------------------------------
	Dim valueBuf As Variant
	
	valueBuf = a
	a = b
	b = valueBuf
	
End Function

</lotusscript></code><code event='GetDrive'><lotusscript>Function GetDrive(dirPath As String) As String
'*****************************************
'フルパスからドライブ名を取得する
' @param dirPath : フルパス
' @return フルパスのドライブ名部
'*****************************************
	On Error Goto ErrorHandle
	
	Dim drive As String
	
	'頭のエントリを取得
	drive = Strleft(dirPath, "\")
	'コロンがない場合はドライブ名ではない
	If Instr(drive, ":") = 0 Then
		drive = ""
	End If
	
	GetDrive = drive
	
	Exit Function
ErrorHandle:
	Call SetErrorObject(Err, Error)
	Error Err, Error
	Exit Function
End Function

</lotusscript></code><code event='ImplodeElementData'><lotusscript>Public Function ImplodeElementData(data As Variant, Byval separator As String) As String
	
	Dim tmpData As Variant
	Dim retVal As String
	Dim nowIndex As Long
	Dim lastIndex As Long
	
	tmpData = data
	
	If Isarray(tmpData) Then
		
		nowIndex = Lbound(tmpData)
		lastIndex = Ubound(tmpData)
		
		For nowIndex = nowIndex To lastIndex
			retVal = retVal &amp; tmpData(nowIndex)
			If (nowIndex + 1) &lt;= lastIndex Then retVal = retVal &amp; separator
		Next
		
	Else
		retVal = tmpData
	End If
	
	ImplodeElementData = retVal
	
End Function

</lotusscript></code><code event='CheckFileOpend'><lotusscript>Function CheckFileOpend(fullFilePath As String) As Integer
'ローカルディスク上の特定のファイルが既に開かれているかチェック
	On Error GoTo ErrorHandle
	
	If CheckDir(fullFilePath, 0) = True Then
		CheckFileOpend = True
		Dim filenum As Integer
		filenum = FreeFile()
		Open fullFilePath For Append Access Read Write As  filenum
		Close filenum
	End If
	
	CheckFileOpend = False
ExitTag:
	Exit Function
ErrorHandle:
	Resume ExitTag
End Function

</lotusscript></code><code event='ReNameFile'><lotusscript>Function ReNameFile(fullFilePath As String, newName As String) As Integer
'**********************************************
'指定のファイルを指定のファイル名にリネームする
' @param
' 	fullFilePath : リネームするファイル名（フルパス）
' 	newName : 新しいファイル名
' @return True or False
' 	@param
' 		True : リネーム成功
' 		False : リネーム失敗
'**********************************************
	On Error Goto ErrorHandle
	
	Name fullFilePath As newName
	
	ReNameFile = True
	
ExitTag:
	Exit Function
ErrorHandle:
	Call SetErrorObject(Err, Error)
	Resume ExitTag
	Exit Function
End Function

</lotusscript></code><code event='RemoveLastBackSlash'><lotusscript>Function RemoveLastBackSlash(Byval dirPath As String) As String
'*****************************************************
'末尾のバックスラッシュを除去する。
'元々ない場合は、与えられた引数そのままの値を返す。
' @param dirPath : ディレクトリパス
' @return 末尾のバックスラッシュが除去されたディレクトリパス
'*****************************************************
	On Error Goto ErrorHandle
	
	If Right$(dirPath, 1) = "\" Then
		dirPath = Strleftback(dirPath, "\")
	End If
	
	RemoveLastBackSlash = dirPath
	
	Exit Function
ErrorHandle:
	Call SetErrorObject(Err, Error)
	Error Err, Error
	Exit Function
End Function

</lotusscript></code><code event='Sort'><lotusscript>Public Function Sort(values As Variant, flag As Integer)
	
	Dim fstIndex As Long
	Dim lastIndex As Long
	
	If Isarray(values) Then
		
		fstIndex = Lbound(values)
		lastIndex = Ubound(values)
		
		Call QuickSort(values, fstIndex, lastIndex, flag)
		
	End If
	
End Function

</lotusscript></code><code event='GetEnviron'><lotusscript>Function GetEnviron(env As String) As String
'****************************************
'端末の環境変数へのアクセス
' @param env : 環境変数名
' @return 環境変数の値
'****************************************
	On Error Goto ErrorHandle
	
	'指定した環境変数名がない場合、エラーになる
	GetEnviron = Environ$(env)
	
ExitTag:
	Exit Function
ErrorHandle:
	'エラーが発生しても無視
	Resume ExitTag
	Exit Function
End Function








</lotusscript></code>
<item name='$POID'><datetime>20140930T200606,32+09</datetime></item></scriptlibrary>

<agent name='(ノーツ - スケジュールエージェントキック用)' alias='RunServerAgent' hide='v3' publicaccess='false'
 designerversion='8.5' restrictions='unrestricted'>
<noteinfo noteid='156' unid='389C22B057564705492576C800320107' sequence='15'>
<created><datetime>20100212T180610,63+09</datetime></created>
<modified><datetime>20181031T100052,76+09</datetime></modified>
<revised><datetime>20181031T100052,75+09</datetime></revised>
<lastaccessed><datetime>20181031T100052,76+09</datetime></lastaccessed>
<addedtofile><datetime>20100212T180610,63+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby>
<wassignedby><name>CN=Administrator/O=Comture</name></wassignedby>
<designchange><datetime>20181031T100052,75+09</datetime></designchange>
<trigger type='agentlist'/>
<documentset type='runonce'/><code event='options'><lotusscript>Option Public
Option Declare
Use "NotesUICommonLib"

</lotusscript></code><code event='initialize'><lotusscript>Sub Initialize
	On Error Goto ErrorHandle
	
	Dim session As New NotesSession
	Dim curDB As NotesDatabase
	Dim agent As NotesAgent
	Dim noteID As String
	Dim paramDoc As NotesDocument
	
	Dim agentNameAlt As String
	Dim filePath As String
	Dim dominoCommand As String
	
	Set agent = session.CurrentAgent
	Set curDB = agent.Parent
	noteID = agent.ParameterDocID
	Set paramDoc = curDB.GetDocumentByID(noteID)
	
	agentNameAlt = paramDoc.GetItemValue("AgentName")(0)
	filePath = paramDoc.GetItemValue("DbFilePath")(0)
	Call paramDoc.Remove(True)
	
	dominoCommand = {tell amgr run "} &amp; filePath &amp; {" '} &amp; agentNameAlt &amp; {'}
	Call session.SendConsoleCommand(curDB.Server, dominoCommand)
	
	Exit Sub
ErrorHandle:
	Exit Sub
End Sub</lotusscript></code>
<rundata processeddocs='0' exitcode='0' agentdata='86ACFE4B8A7067FC49257D63003D10E3'>
<agentmodified><datetime>20140930T200606,35+09</datetime></agentmodified>
<agentrun><datetime>20150512T200103,49+09</datetime></agentrun>
<runlog>Started running agent '(ノーツ - スケジュールエージェントキック用)|RunServerAgent' on 2015/05/12 20:01:02
Ran LotusScript code
Done running agent '(ノーツ - スケジュールエージェントキック用)|RunServerAgent' on 2015/05/12 20:01:03
</runlog></rundata>
<item name='$POID'><datetime>20140930T200606,34+09</datetime></item></agent>

<agent name='(ノーツ - エージェントマネージャ実行)' alias='RunAgentMgr' hide='v3' publicaccess='false'
 designerversion='7' restrictions='unrestricted'>
<noteinfo noteid='162' unid='7C4B9683DAE06687492576C800320635' sequence='24'>
<created><datetime>20100212T180623,89+09</datetime></created>
<modified><datetime>20181031T100052,73+09</datetime></modified>
<revised><datetime>20181031T100052,72+09</datetime></revised>
<lastaccessed><datetime>20181031T100052,73+09</datetime></lastaccessed>
<addedtofile><datetime>20100212T180623,91+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby>
<wassignedby><name>CN=Administrator/O=Comture</name></wassignedby>
<designchange><datetime>20181031T100052,72+09</datetime></designchange>
<trigger type='agentlist'/>
<documentset type='runonce'/><code event='options'><lotusscript>Option Public
Option Declare
Use "NotesUICommonLib"

</lotusscript></code><code event='initialize'><lotusscript>Sub Initialize
	Dim session As New NotesSession
	Call SetProcess(session.CurrentAgent.Name)
	Call Main()
End Sub
</lotusscript></code><code event='Main'><lotusscript>Sub Main()
	On Error Goto ErrorHandle
	
	Dim session As New NotesSession
	Dim curDb As NotesDatabase
	Dim unpro As NotesDocumentCollection
	Dim curDoc As NotesDocument
	Dim nameObj As NotesName
	
	'Dim agent As NotesAgent
	Dim paramDoc As NotesDocument
	Dim agentDB As NotesDatabase
	Dim agent As NotesAgent
	Dim agentName As String
	Dim runAgentName As String
	Dim server As String
	Dim filePath As String
	Dim title As String
	
%REM
	If 7 = Messagebox_YesNo("実行してよろしいですか？", "") Then
		Exit Sub
	End If
%ENDREM
	
	Set curDb = session.CurrentDatabase
	Set unpro = curDB.UnprocessedDocuments
	If unpro.Count = 0 Then
		Call Messagebox_Error("文書を選択してください。", "")
		Exit Sub
	End If
	
	Set curDoc = unpro.GetFirstDocument()
	
	Dim pdoc As NotesDocument
	Set pdoc = curDB.GetDocumentByUNID(curDoc.ParentDocumentUNID)
	
	'エージェントの実行サーバー名
	server = pdoc.GetItemValue("DbServer")(0)
	
	'データベースのファイルパス
	filePath = pdoc.GetItemValue("DbFilePath")(0)
	If filePath = "" Then
		Call Messagebox_Error("データベースのファイルパスが設定されていません。", "")
		Exit Sub
	End If
	
	'データベースのタイトル
	title = pdoc.GetItemValue("DbTitle")(0)
	If title = "" Then
		If server = "" Then
			title = filePath
		Else
			title = server &amp; "!!" &amp; filePath
		End If
	End If
	
	If server = "" Then
		Call Messagebox_Error( "エージェントマネージャは、ローカルでは実行できません。", "")
		Exit Sub
	Else
		Set nameObj = New NotesName(server)
		'If curDoc.GetItemValue("DbServer")(0) &lt;&gt; curDB.Server Then
		If nameObj.Canonical &lt;&gt; curDB.Server Then
			Call Messagebox_Error( "エージェントマネージャは、サーバー外部からは実行できません。", "")
			Exit Sub
		End If
	End If
	
	'データベースを取得する
	Set agentDB = New NotesDatabase("", "")
	If agentDB.Open(server, filePath) = False Then
		Call Messagebox_Error("データベース[ " &amp; title &amp; " ] が開けません。", "")
		Exit Sub
	End If
	
	'エージェントを取得する
	agentName = curDoc.GetItemValue("AgentName")(0)
	runAgentName = curDoc.GetItemValue("AgentAlias")(0)
	
	If agentName = "" Then agentName = runAgentName
	If runAgentName = "" Then runAgentName = agentName
	
	Set agent = agentDB.GetAgent(runAgentName)
	If agent Is Nothing Then
		Call Messagebox_Error("データベース[ " &amp; title &amp; " ] に エージェント [ " &amp; runAgentName &amp; " ] が見つかりません。", "")
		Exit Sub
	Elseif agent.Trigger &lt;&gt; TRIGGER_SCHEDULED Then
		Call Messagebox_Error( "エージェントマネージャは スケジュールでは無いエージェントは呼び出せません。", "")
		Exit Sub
	End If
	
	Dim agSevName As New NotesName(agent.ServerName)
	Dim curSevName As New NotesName(server)
	Dim message As String
	Dim newLine As String
	Dim tabStr As String
	newLine = Chr(13) &amp; Chr(10)
	tabStr = Chr(9)
	
	message = _
	"データベース名： " &amp; title &amp; newLine &amp;_
	"ファイルパス： " &amp; filePath &amp; newLine &amp;_
	"サーバー名： " &amp; server &amp; newLine &amp;_
	"エージェント名： " &amp; agentName &amp; newLine &amp;_
	"実行名： " &amp; runAgentName &amp; newLine &amp; _
	"署名者： " &amp; agent.CommonOwner
	
	If agent.ServerName = ""Then
		message = message &amp; newLine &amp; newLine &amp;_
		"エージェント実行サーバーは「エージェントが有効になった時にサーバーを指定」です。"
		
	Elseif agent.ServerName = "*"Then
		
		message = message &amp; newLine &amp; newLine &amp;_
		"エージェント実行サーバーは「-全てのサーバー-」です。"
		
	Elseif agent.ServerName = session.UserName Then
		message = message &amp; newLine &amp; newLine &amp;_
		"エージェント実行サーバーは「ローカル(" &amp; agSevName.Abbreviated &amp;  ")」です。"
		
	Else
		
		message = message &amp; newLine &amp; newLine &amp;_
		"エージェント実行サーバーは「" &amp; agSevName.Abbreviated &amp; "」です。"
		
	End If
	
	message = message &amp; newLine &amp; _
	"上記エージェントを実行します。よろしいですか？"
	
	If 7 = Messagebox_YesNo(message, "確認") Then
		Exit Sub
	End If
	
	Set agent = curDB.GetAgent("RunServerAgent")
	If agent Is Nothing Then
		Error USERERR, "エージェント[ RunServerAgent ] が見つかりません。"
	End If
	Set paramDoc = curDB.CreateDocument()
	
	paramDoc.Form = "AgentParam"
	agentName = curDoc.GetItemValue("AgentAlias")(0)
	If agentName = "" Then agentName = curDoc.GetItemValue("AgentName")(0)
	paramDoc.AgentName = agentName
	paramDoc.DbFilePath = agentDB.FilePath
	paramDoc.DocStatus = "Deleted"
	
	Call paramDoc.Save(True, True)
	
	Call agent.RunOnServer(paramDoc.NoteID)
	
	Call Messagebox_Info("エージェントを実行しました。", "")
	
	Exit Sub
ErrorHandle:
	Call SetErrorObject(Err, Error)
	Call Messagebox_Error(GetErrorMessage(), "")
	Call ClearErrorObject()
	Exit Sub
End Sub</lotusscript></code>
<rundata processeddocs='0' exitcode='0' agentdata='370682E07312CB69492579FE001F556C'>
<agentmodified><datetime>20181031T100052,73+09</datetime></agentmodified>
<agentrun><datetime>20190220T103549,95+09</datetime></agentrun>
<runlog>エージェント (ノーツ - エージェントマネージャ実行)|RunAgentMgr の 2019/02/20 10:35:48 での実行が開始しました。
LotusScript を実行しました
エージェント (ノーツ - エージェントマネージャ実行)|RunAgentMgr の実行が終了しました。(2019/02/20 10:35:49)
</runlog></rundata>
<item name='$POID'><datetime>20140930T200606,36+09</datetime></item></agent>

<view name='02.エージェント実行用' alias='RunAgentUI' showinmenu='false' publicaccess='false'
 designerversion='8.5.3' unreadmarks='none' onopengoto='lastopened' onrefresh='displayindicator'
 headers='simple' opencollapsed='true' showresponsehierarchy='true' showmargin='true'
 shrinkrows='true' extendlastcolumn='false' showhierarchies='false' unreadcolor='black'
 rowlinecount='3' headerlinecount='1' rowspacing='1.25' bgcolor='white' altrowcolor='#e0e0ff'
 totalscolor='gray' headerbgcolor='white' boldunreadrows='false' evaluateactions='false'
 allownewdocuments='false' allowcustomizations='false' hidemarginborder='false'
 marginwidth='0px' marginbgcolor='white' gridstyle='solid' gridcolor='#d2d2d2'
 uniquekeys='false' formatnoteid='7F3CB7A21A0117B5492576C8002C12A4'>
<noteinfo noteid='16a' unid='17E914126F461AEA492576C800323EE8' sequence='88'>
<created><datetime>20100212T180849,04+09</datetime></created>
<modified><datetime>20181031T100054,41+09</datetime></modified>
<revised><datetime>20181031T100054,40+09</datetime></revised>
<lastaccessed><datetime>20190109T144311,88+09</datetime></lastaccessed>
<addedtofile><datetime>20100212T180849,04+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby>
<wassignedby><name>CN=Administrator/O=Comture</name></wassignedby><code event='selection'><formula
>SELECT ((Form = "(01.データベース情報)") | (Form = "DbInfoDoc") | (Form = "(02.エージェント設定)") | (Form = "AgentEnvDoc"))</formula></code>
<actionbar bgcolor='#d4d0c8' bordercolor='black'>
<actionbuttonstyle showdropdown='true' bgcolor='#d4d0c8'/><border width='0px 0px 1px'/>
<sharedactionref id='3'>
<action title='閉じる(_X)' icon='112'><code event='click'><formula>FIELD SaveOptions:="0";
@Command([FileCloseWindow])</formula></code><code event='label'><formula>"閉じる"</formula></code></action></sharedactionref>
<sharedactionref id='2'>
<action title='編集(_E)' icon='29' hide='edit previewedit'><code event='click'><formula
>@If(@IsError(@Command([EditDocument]));"";"")</formula></code><code event='label'><formula
>"編集"</formula></code></action></sharedactionref>
<action title='新規作成' icon='30' showinrightbuttonmenu='true'><code event='click'><formula
>@If(Form="DbInfoDoc";@Command([Compose];"";"AgentEnvDoc");@Prompt([Ok];"新規作成";"データベース情報を選択してください。"))</formula></code><code
 event='label'><formula>"エージェント追加"</formula></code></action>
<action title='エージェント実行\エージェントマネージャ実行' showinrightbuttonmenu='true'><imageref
 name='actn031.gif'/><code event='click'><formula>@Command([ToolsRunMacro];"RunAgentMgr")</formula></code></action>
<action title='エージェント実行\サーバー実行' showinrightbuttonmenu='true'><code event='click'><formula
>@Command([ToolsRunMacro];"RunAgentOnServer")</formula></code></action>
<action title='エージェント実行\クライアント実行' showinrightbuttonmenu='true'><code event='click'><formula
>@Command([ToolsRunMacro];"RunAgentOnClient")</formula></code></action></actionbar><sharedcolumnref
 name='icon'>
<column hidedetailrows='false' itemname='$11' width='1' resizable='false'
 separatemultiplevalues='false' sortnoaccent='true' sortnocase='true' showaslinks='false'
 hidecolumntitle='true' showasicons='true'><font size='9pt'/><columnheader
 title='icon'><font size='8pt'/></columnheader><code event='value'><formula
>@If(Form="DbInfoDoc";@If(DbServer="";53;54);
Form="ViewInfoDoc";19;
Form="AgentEnvDoc";70;
0)</formula></code></column></sharedcolumnref><sharedcolumnref name='DbServer'>
<column sort='ascending' hidedetailrows='false' itemname='$8' width='1' resizable='false'
 separatemultiplevalues='true' sortnoaccent='true' sortnocase='true' showaslinks='false'
 hidecolumntitle='true' categorized='true' twisties='true'><font size='9pt'
 color='teal' style='bold'/><columnheader title='DbServer'><font size='8pt'/></columnheader><code
 event='value'><formula>tmp:=DbServer;
tmp:=@If(tmp="";@Subset(@DbName;1);tmp);
@If(tmp="";"-Local-";tmp)</formula></code><twistieimage><imageref database='0000000000000000'
 name='PlusMinus.gif'/></twistieimage></column></sharedcolumnref><sharedcolumnref
 name='DbFilePath'>
<column sort='ascending' hidedetailrows='false' itemname='$9' width='1' resizable='false'
 separatemultiplevalues='true' sortnoaccent='true' sortnocase='true' showaslinks='false'
 hidecolumntitle='true' categorized='true' twisties='true'><font size='9pt'
 color='teal' style='bold'/><columnheader title='DbFilePath'><font size='8pt'/></columnheader><code
 event='value'><formula>@ReplaceSubstring(@LeftBack(DbFilePath;"\\");"\\";"＼")+" ("+@Text(@DocDescendants)+")"</formula></code><twistieimage
><imageref database='0000000000000000' name='PlusMinus.gif'/></twistieimage></column></sharedcolumnref><sharedcolumnref
 name='DbFileName'>
<column sort='ascending' hidedetailrows='false' itemname='$12' width='1' resizable='false'
 separatemultiplevalues='false' sortnoaccent='true' sortnocase='true' showaslinks='false'
 hidecolumntitle='true' hidden='true'><columnheader title='DbFileName[Sort]'><font
 size='9pt' style='bold'/></columnheader><code event='value'><formula>@Right(DbFilePath;"\\")</formula></code></column></sharedcolumnref>
<column hidedetailrows='false' listseparator='newline' itemname='$3' width='1'
 resizable='true' separatemultiplevalues='false' sortnoaccent='false' sortnocase='true'
 showaslinks='false' responsesonly='true'><font size='9pt' color='red'/><columnheader
 title='実行エージェント'><font size='8pt'/></columnheader><code event='value'><formula
>tmp1 := AgentAlias;
tmp2 := AgentName;
tmp11 := @If(tmp1="";"";"実行名："+tmp1);
tmp22 := @If(tmp2="";"";"名　前："+tmp2);
tmp11:tmp22</formula></code></column>
<column hidedetailrows='false' itemname='Comment' width='1' resizable='true'
 separatemultiplevalues='false' sortnoaccent='false' sortnocase='true' showaslinks='false'
 responsesonly='true'><font size='9pt'/><columnheader title='設計コメント'><font
 size='8pt'/></columnheader></column>
<column hidedetailrows='false' itemname='Memo' width='1' resizable='true'
 separatemultiplevalues='false' sortnoaccent='false' sortnocase='true' showaslinks='false'
 responsesonly='true'><font size='9pt'/><columnheader title='メモ'><font size='8pt'/></columnheader></column><sharedcolumnref
 name='DbTitle'>
<column hidedetailrows='false' itemname='$10' width='20' resizable='true'
 separatemultiplevalues='false' sortnoaccent='true' sortnocase='true' showaslinks='false'
 twisties='true'><font color='navy'/><columnheader title='タイトル'><font size='8pt'/></columnheader><code
 event='value'><formula>fp:=DbFilePath;
fn:=@RightBack(fp;"\\");
DbTitle + " [" + @If(fn="";fp;fn) + "]"</formula></code><twistieimage><imageref
 database='0000000000000000' name='PlusMinus.gif'/></twistieimage></column></sharedcolumnref>
<item name='$SelQuery' sign='true'>
<rawitemdata type='f'>
gQYAAAAAif9eAAAAAAACACcAKQAoMDEuEINmEIFbEINeEIN4EIFbEINYEI/uEJXxKXxEYkluZm9E
b2MoMDIuEINHEIFbEINXEINGEIOTEINnEJDdEJLoKXxBZ2VudEVudkRvYw==
</rawitemdata></item></view>

<agentdata>
<noteinfo noteid='17a' unid='C37FE06DF252159A492576C800328552' sequence='1'>
<created><datetime>20100212T181149,30+09</datetime></created>
<modified><datetime>20100212T181149,31+09</datetime></modified>
<revised><datetime>20100212T181149,30+09</datetime></revised>
<lastaccessed><datetime>20100212T181149,30+09</datetime></lastaccessed>
<addedtofile><datetime>20100212T181149,30+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=COMTURE</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='17e' unid='B34B97FA95EAFAED492576C80032D96F' sequence='1'>
<created><datetime>20100212T181524,63+09</datetime></created>
<modified><datetime>20100212T181524,64+09</datetime></modified>
<revised><datetime>20100212T181524,63+09</datetime></revised>
<lastaccessed><datetime>20100212T181524,63+09</datetime></lastaccessed>
<addedtofile><datetime>20100212T181524,63+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=COMTURE</name></updatedby></agentdata>

<view name='01.値代入用' alias='InputDataUI' showinmenu='false' publicaccess='false'
 designerversion='8.5.3' unreadmarks='none' onopengoto='lastopened' onrefresh='displayindicator'
 headers='simple' opencollapsed='true' showresponsehierarchy='true' showmargin='true'
 shrinkrows='true' extendlastcolumn='true' showhierarchies='false' unreadcolor='black'
 rowlinecount='3' headerlinecount='1' rowspacing='1.25' bgcolor='white' altrowcolor='#efefef'
 totalscolor='gray' headerbgcolor='white' boldunreadrows='false' evaluateactions='false'
 allownewdocuments='false' allowcustomizations='true' hidemarginborder='false'
 marginwidth='0px' marginbgcolor='white' gridstyle='solid' gridcolor='#d2d2d2'
 uniquekeys='false' formatnoteid='7F3CB7A21A0117B5492576C8002C12A4'>
<noteinfo noteid='182' unid='D4312598DFF9DA1F492576C8003570EC' sequence='96'>
<created><datetime>20100212T184343,16+09</datetime></created>
<modified><datetime>20181031T100054,38+09</datetime></modified>
<revised><datetime>20181031T100054,37+09</datetime></revised>
<lastaccessed><datetime>20190109T162427,81+09</datetime></lastaccessed>
<addedtofile><datetime>20100212T184343,16+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby>
<wassignedby><name>CN=Administrator/O=Comture</name></wassignedby>
<globals><code event='options'><lotusscript>Option Public
Option Declare
Use "NotesUICommonLib"
</lotusscript></code></globals><code event='selection'><formula>SELECT ((Form = "(01.データベース情報)") | (Form = "DbInfoDoc") | (Form = "(04.ビュー設定)") | (Form = "ViewInfoDoc"))</formula></code><code
 event='queryclose'><lotusscript>Sub Queryclose(Source As Notesuiview, Continue As Variant)
	Dim session As New NotesSession
	'"Rep_Val_UNID"
	
	' ビューで開こうとした文書のユニバーサルＩＤを環境変数へ設定しておく。
	Call session.SetEnvironmentVar("Rep_Val_UNID", "")
End Sub
</lotusscript></code><code event='queryrecalc'><lotusscript>Sub Queryrecalc(Source As Notesuiview, Continue As Variant)
	
End Sub</lotusscript></code>
<actionbar bgcolor='#d4d0c8' bordercolor='black'>
<actionbuttonstyle showdropdown='true' bgcolor='#d4d0c8'/><border width='0px 0px 1px'/>
<sharedactionref id='3'>
<action title='閉じる(_X)' icon='112'><code event='click'><formula>FIELD SaveOptions:="0";
@Command([FileCloseWindow])</formula></code><code event='label'><formula>"閉じる"</formula></code></action></sharedactionref>
<action title='編集' icon='5'><code event='click'><lotusscript>Sub Click(Source As Button)
	Dim workSpace As New NotesUIWorkSpace
	Dim session As New NotesSession
	Dim curDB As NotesDatabase
	Dim docCol As NotesDocumentCollection
	Dim curDoc As NotesDocument
	
	Set curDB = session.CurrentDatabase
	Set docCol = curDB.UnprocessedDocuments
	Set curDoc = docCol.GetFirstDocument()
	If curDoc Is Nothing Then Exit Sub
	Call workSpace.EditDocument(True, curDoc)
	
End Sub</lotusscript></code></action>
<action title='新規作成' icon='30' hide='notes web mobile'><code event='click'><formula
>@If(Form="DbInfoDoc";@Command([Compose];"";"ViewInfoDoc");@Prompt([Ok];"新規作成";"データベース情報を選択してください。"))</formula></code><code
 event='label'><formula>"ビュー追加"</formula></code></action>
<action title='新規作成' icon='30'><code event='click'><formula>@Command([ToolsRunMacro];"AddViewInfo")</formula></code><code
 event='label'><formula>"ビュー追加"</formula></code></action>
<action title='ビューを開く' showinrightbuttonmenu='true'><imageref name='view.gif'/><code
 event='click'><lotusscript>Sub Click(Source As Button)
	On Error Goto ErrorHandle
	
	Dim session As New NotesSession
	Dim db As NotesDatabase
	Dim docCol As NotesDocumentCollection
	Dim doc As NotesDocument
	Dim pDoc As NotesDocument
	Dim resCol As NotesDocumentCollection
	
	Set db = session.CurrentDatabase
	Set docCol = db.UnprocessedDocuments
	Set doc = docCol.GetFirstDocument()
	
	If doc Is Nothing Then Exit Sub
	
	If Ucase$(doc.GetItemValue("Form")(0)) = Ucase$("DbInfoDoc") Then
		If Not doc.Responses Is Nothing Then
			Set resCol = doc.Responses
			Set pDoc = doc
			Set doc = resCol.GetFirstDocument()
			Do Until doc Is Nothing
				If Ucase$(doc.GetItemValue("Form")(0)) = Ucase$("ViewInfoDoc") Then
					Exit Do
				End If
				Set doc = resCol.GetNextDocument(doc)
			Loop
		End If
		
	Elseif doc.ParentDocumentUNID = "" Then
		Error USERERR, "データベース情報設定が見つかりません。"
	End If
	
	If doc Is Nothing Then Exit Sub
	
	Dim workSpace As New NotesUIWorkSpace
	'"Rep_Val_UNID"
	
	' ビューで開こうとした文書のユニバーサルＩＤを環境変数へ設定しておく。
	Call session.SetEnvironmentVar("Rep_Val_UNID", doc.UniversalID)
	' 指定のフレームセットを開く
	Call workSpace.OpenFrameSet("RepValFrame")
	
	Exit Sub
	
ErrorHandle:
	Call SetErrorObject(Err, Error)
	Call Messagebox_Error(GetErrorMessage(), "")
	Exit Sub
	
End Sub</lotusscript></code></action></actionbar><sharedcolumnref name='icon'>
<column hidedetailrows='false' itemname='$9' width='1' resizable='false' separatemultiplevalues='false'
 sortnoaccent='true' sortnocase='true' showaslinks='false' hidecolumntitle='true'
 showasicons='true'><font size='9pt'/><columnheader title='icon'><font size='8pt'/></columnheader><code
 event='value'><formula>@If(Form="DbInfoDoc";@If(DbServer="";53;54);
Form="ViewInfoDoc";19;
Form="AgentEnvDoc";70;
0)</formula></code></column></sharedcolumnref><sharedcolumnref name='DbServer'>
<column sort='ascending' hidedetailrows='false' itemname='$6' width='1' resizable='false'
 separatemultiplevalues='true' sortnoaccent='true' sortnocase='true' showaslinks='false'
 hidecolumntitle='true' categorized='true' twisties='true'><font size='9pt'
 color='teal' style='bold'/><columnheader title='DbServer'><font size='8pt'/></columnheader><code
 event='value'><formula>tmp:=DbServer;
tmp:=@If(tmp="";@Subset(@DbName;1);tmp);
@If(tmp="";"-Local-";tmp)</formula></code><twistieimage><imageref database='0000000000000000'
 name='PlusMinus.gif'/></twistieimage></column></sharedcolumnref><sharedcolumnref
 name='DbFilePath'>
<column sort='ascending' hidedetailrows='false' itemname='$7' width='1' resizable='false'
 separatemultiplevalues='true' sortnoaccent='true' sortnocase='true' showaslinks='false'
 hidecolumntitle='true' categorized='true' twisties='true'><font size='9pt'
 color='teal' style='bold'/><columnheader title='DbFilePath'><font size='8pt'/></columnheader><code
 event='value'><formula>@ReplaceSubstring(@LeftBack(DbFilePath;"\\");"\\";"＼")+" ("+@Text(@DocDescendants)+")"</formula></code><twistieimage
><imageref database='0000000000000000' name='PlusMinus.gif'/></twistieimage></column></sharedcolumnref><sharedcolumnref
 name='DbFileName'>
<column sort='ascending' hidedetailrows='false' itemname='$10' width='1' resizable='false'
 separatemultiplevalues='false' sortnoaccent='true' sortnocase='true' showaslinks='false'
 hidecolumntitle='true' hidden='true'><columnheader title='DbFileName[Sort]'><font
 size='9pt' style='bold'/></columnheader><code event='value'><formula>@Right(DbFilePath;"\\")</formula></code></column></sharedcolumnref>
<column sort='ascending' hidedetailrows='false' itemname='$3' width='1' resizable='true'
 separatemultiplevalues='false' sortnoaccent='false' sortnocase='true' showaslinks='false'
 responsesonly='true'><font size='9pt' color='red'/><columnheader title='表示ビュー名'><font
 size='9pt'/></columnheader><code event='value'><formula>tmp1 := ViewName;
tmp2 := ViewAlias;
@If(tmp1 = ""; tmp2; tmp1)</formula></code></column><sharedcolumnref name='DbTitle'>
<column hidedetailrows='false' itemname='$8' width='20' resizable='true' separatemultiplevalues='false'
 sortnoaccent='true' sortnocase='true' showaslinks='false' twisties='true'><font
 color='navy'/><columnheader title='タイトル'><font size='8pt'/></columnheader><code
 event='value'><formula>fp:=DbFilePath;
fn:=@RightBack(fp;"\\");
DbTitle + " [" + @If(fn="";fp;fn) + "]"</formula></code><twistieimage><imageref
 database='0000000000000000' name='PlusMinus.gif'/></twistieimage></column></sharedcolumnref>
<item name='$SelQuery' sign='true'>
<rawitemdata type='f'>
gQYAAAAAif9VAAAAAAACACcAIAAoMDEuEINmEIFbEINeEIN4EIFbEINYEI/uEJXxKXxEYkluZm9E
b2MoMDQuEINyEIOFEIFbEJDdEJLoKXxWaWV3SW5mb0RvYwA=
</rawitemdata></item></view>

<form name='(03.DB設計文書)' alias='DbDesignDoc' nocompose='true' publicaccess='false'
 designerversion='7' renderpassthrough='true'>
<noteinfo noteid='18e' unid='7DAE1FF2480D46AA492576F70014E310' sequence='22'>
<created><datetime>20100331T124808,48+09</datetime></created>
<modified><datetime>20181031T100053,77+09</datetime></modified>
<revised><datetime>20181031T100053,76+09</datetime></revised>
<lastaccessed><datetime>20181031T100053,77+09</datetime></lastaccessed>
<addedtofile><datetime>20100331T125414,29+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby>
<wassignedby><name>CN=Administrator/O=Comture</name></wassignedby>
<actionbar bgcolor='#d4d0c8' bordercolor='black'>
<actionbuttonstyle bgcolor='#d4d0c8'/><font color='system'/><border style='solid'
 width='0px 0px 1px'/>
<sharedactionref id='1'>
<action title='保存(_S)' icon='42' hide='preview read'><code event='click'><formula
>@Command([FileSave])</formula></code><code event='label'><formula>"保存"</formula></code></action></sharedactionref>
<sharedactionref id='2'>
<action title='編集(_E)' icon='29' hide='edit previewedit'><code event='click'><formula
>@If(@IsError(@Command([EditDocument]));"";"")</formula></code><code event='label'><formula
>"編集"</formula></code></action></sharedactionref>
<sharedactionref id='3'>
<action title='閉じる(_X)' icon='112'><code event='click'><formula>FIELD SaveOptions:="0";
@Command([FileCloseWindow])</formula></code><code event='label'><formula>"閉じる"</formula></code></action></sharedactionref></actionbar>
<body><richtext>
<pardef id='1'/>
<par def='1'/>
<table widthtype='fixedleft' refwidth='6.2993in'><tablecolumn width='6.2993in'/>
<tablerow>
<tablecell borderwidth='0px'>
<pardef id='3' keepwithnext='true' keeptogether='true'/>
<par def='3'/>
<table widthtype='fitmargins' leftmargin='0' refwidth='6.1743in'><border dropshadow='true'/><tablecolumn
 width='100%'/>
<tablerow>
<tablecell borderwidth='0px' bgcolor='#7f604f'>
<pardef id='5' align='center' keepwithnext='true' keeptogether='true'/>
<par def='5'><run><font size='14pt' style='bold' color='white'/>設計文書</run></par></tablecell></tablerow></table>
<par def='3'/>
<table widthtype='fitmargins' rowdisplay='tabs' leftmargin='0' columnspacing='0.3542in'
 refwidth='6.1729in'><border dropshadow='true'/><tablecolumn width='100%'/>
<tablerow tablabel='基本'>
<tablecell borderwidth='1px 0px 0px 1px'>
<pardef id='6' keepwithnext='true' keeptogether='true'/>
<par def='6'/>
<table widthtype='fitmargins' cellbordercolor='#7f604f' leftmargin='0.0104in'
 refwidth='5.4542in'><tablecolumn width='100%'/>
<tablerow>
<tablecell borderwidth='0px 0px 2px'>
<par def='6'><run><font size='11pt' style='bold' color='#7f604f'/>データベース</run></par></tablecell></tablerow></table>
<par def='6'/>
<table widthtype='fitmargins' cellbordercolor='#7f604f' leftmargin='0.0104in'
 rowspacing='0.0396in' columnspacing='0.0396in' refwidth='5.4438in'><tablecolumn
 width='1.1813in'/><tablecolumn width='100%'/>
<tablerow>
<tablecell valign='center' bgcolor='#d0b1a1'>
<pardef id='8' keepwithnext='true' keeptogether='true'/>
<par def='8'>サーバー</par></tablecell>
<tablecell valign='center'>
<pardef id='9' keepwithnext='true' keeptogether='true'/>
<par def='9'><field type='text' kind='editable' name='DbServer'><code event='defaultvalue'><formula
>@Subset(@DbName;1)</formula></code><code event='inputtranslation'><formula
>@ReplaceSubstring(@ThisValue;@NewLine;"")</formula></code></field></par>
<pardef id='10' hide='read print preview' keepwithnext='true' keeptogether='true'/>
<par def='10'><run><font color='fuchsia'/>※省略で[現在のサーバー]</run></par></tablecell></tablerow>
<tablerow>
<tablecell valign='center' bgcolor='#d0b1a1'>
<par def='8'>タイトル</par></tablecell>
<tablecell valign='center'>
<par def='9'><field type='text' kind='editable' name='DbTitle'><code event='inputtranslation'><formula
>@ReplaceSubstring(@ThisValue;@NewLine;"")</formula></code></field></par></tablecell></tablerow>
<tablerow>
<tablecell valign='center' bgcolor='#d0b1a1'>
<pardef id='11' hide='read print preview' keepwithnext='true' keeptogether='true'/>
<par def='11'>ファイルパス</par>
<pardef id='12' hide='edit previewedit' keepwithnext='true' keeptogether='true'/>
<par def='12'>ファイルパス</par></tablecell>
<tablecell valign='center'>
<par def='9'><field type='text' kind='editable' name='DbFilePath'><code event='inputtranslation'><formula
>@ReplaceSubstring(@ThisValue;@NewLine;"")</formula></code></field></par></tablecell></tablerow></table>
<par def='6'/>
<table widthtype='fitmargins' cellbordercolor='#7f604f' leftmargin='0.0104in'
 refwidth='5.4542in'><tablecolumn width='100%'/>
<tablerow>
<tablecell borderwidth='0px 0px 2px'>
<par def='6'><run><font size='11pt' style='bold' color='#7f604f'/>設計要素</run></par></tablecell></tablerow></table>
<par def='6'/>
<table widthtype='fitmargins' cellbordercolor='#7f604f' leftmargin='0.0104in'
 rowspacing='0.0396in' columnspacing='0.0396in' refwidth='5.4438in'><tablecolumn
 width='1.1813in'/><tablecolumn width='100%'/>
<tablerow>
<tablecell valign='center' bgcolor='#d0b1a1'>
<par def='8'>設計の種類</par></tablecell>
<tablecell valign='center'>
<par def='9'><field type='text' kind='editable' name='DesignType'/></par></tablecell></tablerow>
<tablerow>
<tablecell valign='center' bgcolor='#d0b1a1'>
<par def='8'>設計の名前</par></tablecell>
<tablecell valign='center'>
<par def='9'><field type='text' kind='computedfordisplay' name='DesignName'><code
 event='defaultvalue'><formula>$Title</formula></code></field></par></tablecell></tablerow></table></tablecell></tablerow></table></tablecell></tablerow></table>
<par def='1'/>
<pardef id='14' leftmargin='0.7500in'/>
<section expanded='true'><sectiontitle pardef='14' borderstyle='double' hidewhenexpanded='true'
 color='teal'><font size='11pt' color='teal' style='bold'/><text>スクリプトコード</text></sectiontitle>
<par def='1'/>
<par def='1'><field type='richtext' kind='editable' name='ScriptCode'/></par>
<par def='1'/></section>
<par def='1'/></richtext></body>
<item name='$$ScriptName' summary='false' sign='true'><text>DbDesignDoc</text></item></form>

<view name='03.DB設計\全て' alias='DbDesignUI' showinmenu='false' publicaccess='false'
 designerversion='7' unreadmarks='none' onopengoto='lastopened' onrefresh='displayindicator'
 headers='simple' opencollapsed='false' showresponsehierarchy='false' showmargin='true'
 shrinkrows='true' extendlastcolumn='false' showhierarchies='false' unreadcolor='black'
 rowlinecount='3' headerlinecount='1' rowspacing='1.25' bgcolor='white' altrowcolor='#e0e0ff'
 totalscolor='black' headerbgcolor='#e1e1e1' boldunreadrows='false' evaluateactions='false'
 allownewdocuments='false' allowcustomizations='false' hidemarginborder='false'
 marginwidth='0px' marginbgcolor='white' gridstyle='solid' gridcolor='#e1e1e1'
 uniquekeys='false' formatnoteid='7F3CB7A21A0117B5492576C8002C12A4'>
<noteinfo noteid='192' unid='93261908AE6F0FE2492576F700164591' sequence='24'>
<created><datetime>20100331T130316,01+09</datetime></created>
<modified><datetime>20181031T100054,44+09</datetime></modified>
<revised><datetime>20181031T100054,43+09</datetime></revised>
<lastaccessed><datetime>20181031T100054,44+09</datetime></lastaccessed>
<addedtofile><datetime>20100331T130316,01+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby>
<wassignedby><name>CN=Administrator/O=Comture</name></wassignedby><code event='selection'><formula
>SELECT ((Form = "(03.DB設計文書)") | (Form = "DbDesignDoc"))</formula></code>
<actionbar bgcolor='#d4d0c8' bordercolor='black'>
<actionbuttonstyle showdropdown='true' bgcolor='#d4d0c8'/><font color='system'/><border
 style='solid' width='0px 0px 1px'/>
<sharedactionref id='3'>
<action title='閉じる(_X)' icon='112'><code event='click'><formula>FIELD SaveOptions:="0";
@Command([FileCloseWindow])</formula></code><code event='label'><formula>"閉じる"</formula></code></action></sharedactionref>
<action title='置換禁止解除'><code event='click'><formula>@Command([ToolsRunMacro];"UpdateProhibitionRelease")</formula></code></action></actionbar>
<column sort='ascending' hidedetailrows='false' itemname='$14' width='1' resizable='true'
 separatemultiplevalues='true' sortnoaccent='false' sortnocase='true' showaslinks='false'
 categorized='true' twisties='true'><font color='navy' style='bold'/><columnheader
 title='サーバー'><font size='8pt'/></columnheader><code event='value'><formula
>@If(DbServer="";"-Local-";DbServer)</formula></code></column>
<column sort='ascending' hidedetailrows='false' itemname='$10' width='1' resizable='true'
 separatemultiplevalues='true' sortnoaccent='false' sortnocase='true' showaslinks='false'
 categorized='true' twisties='true'><font color='teal' style='bold'/><columnheader
 title='ファイルパス'><font size='8pt'/></columnheader><code event='value'><formula
>@ReplaceSubstring(@LeftBack(DbFilePath;"\\");"\\";"／")</formula></code></column>
<column sort='ascending' hidedetailrows='false' itemname='$12' width='1' resizable='true'
 separatemultiplevalues='true' sortnoaccent='false' sortnocase='true' showaslinks='false'
 categorized='true' twisties='true'><font color='navy' style='bold'/><columnheader
 title='データベース'><font size='8pt'/></columnheader><code event='value'><formula
>DbTitle+"("+@RightBack(DbFilePath;"\\")+")"+" ("+@Text(@DocDescendants)+")"</formula></code></column>
<column sort='ascending' hidedetailrows='false' itemname='DesignType' width='1'
 resizable='true' separatemultiplevalues='true' sortnoaccent='false' sortnocase='true'
 showaslinks='false' categorized='true' twisties='true'><font style='bold'/><columnheader
 title='設計の種類'><font size='8pt'/></columnheader></column>
<column sort='ascending' hidedetailrows='false' itemname='$13' width='40'
 resizable='true' separatemultiplevalues='false' sortnoaccent='false' sortnocase='true'
 showaslinks='false'><columnheader title='設計の名前'><font size='8pt'/></columnheader><code
 event='value'><formula>@Implode($Title;"|")</formula></code></column>
<column hidedetailrows='false' itemname='$Flgs' width='10' resizable='true'
 separatemultiplevalues='false' sortnoaccent='false' sortnocase='true' showaslinks='false'><columnheader
 title='$Flgs'><font size='9pt' style='bold'/></columnheader></column>
<item name='$SelQuery' sign='true'>
<rawitemdata type='f'>
gQYAAAAAif8rAAAAAAABAB8AKDAzLkRCEJDdEIx2EJW2EI+RKXxEYkRlc2lnbkRvYwA=
</rawitemdata></item></view>

<agent name='ノーツ 設計出力' hide='v3' publicaccess='false' designerversion='7'
 comment='ロータスｽｸﾘﾌﾟﾄのみ対応' restrictions='unrestricted'>
<noteinfo noteid='19a' unid='AE317038D08FEDF3492576F7001611A8' sequence='60'>
<created><datetime>20100331T130103,12+09</datetime></created>
<modified><datetime>20181031T100052,13+09</datetime></modified>
<revised><datetime>20181031T100052,12+09</datetime></revised>
<lastaccessed><datetime>20181031T100052,13+09</datetime></lastaccessed>
<addedtofile><datetime>20100331T130500,95+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby>
<wassignedby><name>CN=Administrator/O=Comture</name></wassignedby>
<designchange><datetime>20181031T100052,09+09</datetime></designchange>
<trigger type='actionsmenu'/>
<documentset type='selected'/><code event='options'><lotusscript>Option Explicit
Option Public
Option Base 0
Use "NotesUICommonLib"

</lotusscript></code><code event='declarations'><lotusscript>Const DESIGN_FORM$ = "DbDesignDoc"

</lotusscript></code><code event='initialize'><lotusscript>Sub Initialize
	Call SetProcess("*AG - ノーツ 設計出力")
	Call Main()
End Sub

</lotusscript></code><code event='Main'><lotusscript>Sub Main()
	
	On Error Goto ErrorHandle
	
	Dim workSpace As New NotesUIWorkspace
	Dim session As New NotesSession
	Dim curDB As NotesDatabase
	Dim unpro As NotesDocumentCollection
	Dim doc As NotesDocument
	
	Set curDB = session.CurrentDatabase
	Set unpro = curDB.UnprocessedDocuments
	If unpro.Count = 0 Then
		Call Messagebox_Error("文書を選択してください。", "")
		Exit Sub
	End If
	
	Dim designTypes As Variant
	Dim selectVal As Variant
	
	designTypes = Split("" &amp; _
	"ﾌﾚｰﾑｾｯﾄ,ﾍﾟｰｼﾞ,ﾌｫｰﾑ,ﾋﾞｭｰ,ﾌｫﾙﾀﾞ," &amp;_
	"ｴｰｼﾞｪﾝﾄ,Webｻｰﾋﾞｽ,ｱｳﾄﾗｲﾝ,ｻﾌﾞﾌｫｰﾑ,共有ﾌｨｰﾙﾄﾞ,共有列,共有ｱｸｼｮﾝ,ｽｸﾘﾌﾟﾄﾗｲﾌﾞﾗﾘ," &amp;_
	"ｲﾒｰｼﾞ,ｱﾌﾟﾚｯﾄ,ｽﾀｲﾙｼｰﾄ,ﾃﾞｰﾀｺﾈｸｼｮﾝ," &amp;_
	"ｱｲｺﾝ,ﾃﾞｰﾀﾍﾞｰｽについて,ﾃﾞｰﾀﾍﾞｰｽの使い方,ﾃﾞｰﾀﾍﾞｰｽｽｸﾘﾌﾟﾄ,ﾅﾋﾞｹﾞｰﾀ,その他の設計", ",")
	
	selectVal = workSpace.Prompt(PROMPT_OKCANCELLISTMULT, "出力する設計を選択", "出力する設計を選択", designTypes, designTypes)
	If Isempty(selectVal) Then
		Exit Sub
	End If
	
	Dim db As NotesDatabase
	Dim server As String
	Dim filePath As String
	
	Dim docCol As NotesDocumentCollection
	Dim designDoc As NotesDocument
	Dim nextDoc As NotesDocument
	
	Set doc = unpro.GetFirstDocument()
	
	Do Until doc Is Nothing
		
		server = doc.GetItemValue("DbServer")(0)
		filePath = doc.GetItemValue("DbFilePath")(0)
		
		Set db = New NotesDatabase(server, filePath)
		
		If db.IsOpen = True Then
			Set docCol = doc.Responses
			If docCol Is Nothing Then
			Elseif docCol.Count = 0 Then
			Else
				
				Set designDoc = docCol.GetFirstDocument()
				
				Do Until designDoc Is Nothing
					
					Set nextDoc = docCol.GetNextDocument(designDoc)
					
					If designDoc.GetItemValue("Form")(0) = "DbDesignDoc" Then
						Call designDoc.Remove(True)
					End If
					Set designDoc = nextDoc
				Loop
			End If
			
			
			Forall dt In selectVal
				Call Main_Sub(doc, db, Cstr(dt), formula)
			End Forall
		End If
		
		Set doc = unpro.GetNextDocument(doc)
	Loop
	
	
	Exit Sub
ErrorHandle:
	Call SetErrorObject(Err, Error)
	Call Messagebox_Error(GetErrorMessage(), "")
	Call ClearErrorObject()
	Exit Sub
End Sub

</lotusscript></code><code event='Main_Script'><lotusscript>Sub Main_Script(db As NotesDatabase)
	On Error Goto ErrorHandle
	
	'スクリプトライブラリのみ
	Dim noteCol As NotesNoteCollection
	Dim note As NotesDocument
	Dim noteID As String
	
	Dim scriptLibItem As NotesItem
	Dim scriptCodeItem As NotesRichTextItem
	
	Dim session As New NotesSession
	Dim curDB As NotesDatabase
	Dim designDoc As NotesDocument
	
	Set curDB = session.CurrentDatabase
	
	Set noteCol =db.CreateNoteCollection(False)
	
	'スクリプトライブラリ
	noteCol.SelectScriptLibraries = True
	
	Call noteCol.BuildCollection()
	
	'出力
	noteID = noteCol.GetFirstNoteId()
	
	Do Until noteID = ""
		Set note = db.GetDocumentByID(noteID)
		
		'出力用の文書を作成
		Set designDoc = curDB.CreateDocument
		
		'値を設定
		Call designDoc.ReplaceItemValue("Form", DESIGN_FORM)
		
		Call designDoc.ReplaceItemValue("DbServer", db.Server)
		Call designDoc.ReplaceItemValue("DbTitle", db.Title)
		Call designDoc.ReplaceItemValue("DbFilePath", db.FilePath)
		
		Call designDoc.ReplaceItemValue("DesignType", "スクリプトライブラリ")
		Call designDoc.ReplaceItemValue("DesignName", note.GetItemValue("$TITLE"))
		
		Do
			'スクリプトコードアイテムを取得
			Set scriptLibItem = note.GetFirstItem("$ScriptLib")
			If scriptLibItem Is Nothing Then
				Exit Do
			End If
			
			Set scriptCodeItem = designDoc.GetFirstItem("ScriptCode")
			If scriptCodeItem Is Nothing Then
				Set scriptCodeItem = designDoc.CreateRichTextItem("ScriptCode")
			End If
			
			Call scriptCodeItem.AppendText(scriptLibItem.values(0))
			
			'アイテムを削除（※削除後保存しないこと）
			Call scriptLibItem.Remove()
		Loop
		
		Call designDoc.Save(True, True)
		
		noteID = noteCol.GetNextNoteId(noteID)
	Loop
	
	Exit Sub
ErrorHandle:
	Call SetErrorObject(Err, Error)
	Error Err, Error
	Exit Sub
End Sub

</lotusscript></code><code event='Main_Agent'><lotusscript>Sub Main_Agent(db As NotesDatabase)
	On Error Goto ErrorHandle
	
	'エージェントのみ
	Dim noteCol As NotesNoteCollection
	Dim note As NotesDocument
	Dim noteID As String
	
	Dim scriptLibItem As NotesItem
	Dim scriptCodeItem As NotesRichTextItem
	
	Dim session As New NotesSession
	Dim curDB As NotesDatabase
	Dim designDoc As NotesDocument
	
	Set curDB = session.CurrentDatabase
	
	Set noteCol =db.CreateNoteCollection(False)
	
	'エージェント
	noteCol.SelectAgents = True
	
	Call noteCol.BuildCollection()
	
	'出力
	noteID = noteCol.GetFirstNoteId()
	
	Dim exporter As NotesDXLExporter
	Dim perser As NotesDOMParser
	
	Do Until noteID = ""
		Set note = db.GetDocumentByID(noteID)
		
		'出力用の文書を作成
		Set designDoc = curDB.CreateDocument
		
		'値を設定
		Call designDoc.ReplaceItemValue("Form", DESIGN_FORM)
		
		Call designDoc.ReplaceItemValue("DbServer", db.Server)
		Call designDoc.ReplaceItemValue("DbTitle", db.Title)
		Call designDoc.ReplaceItemValue("DbFilePath", db.FilePath)
		
		Call designDoc.ReplaceItemValue("DesignType", "エージェント")
		Call designDoc.ReplaceItemValue("DesignName", note.GetItemValue("$TITLE"))
		
		Do
			Dim rtItem As NotesRichTextItem
			'スクリプトコードアイテムを取得
			'Set scriptLibItem = note.GetFirstItem("$ScriptLib")
			Set scriptLibItem = note.GetFirstItem("$AssistAction_Ex")
			If scriptLibItem Is Nothing Then
				Exit Do
			End If
			
			
			Set scriptCodeItem = designDoc.GetFirstItem("ScriptCode")
			If scriptCodeItem Is Nothing Then
				Set scriptCodeItem = designDoc.CreateRichTextItem("ScriptCode")
			End If
			
			Set exporter = session.Createdxlexporter(note,scriptCodeItem)
			Call exporter.Process()
			'Set perser = session.Createdomparser(exporter)
			'Call perser.Process()
			
			'Call scriptCodeItem.AppendText(scriptLibItem.Values)
			'Call scriptLibItem.Copyitemtodocument(designDoc, "ScriptCode")
			'Set rtItem = scriptLibItem
			'Call scriptCodeItem.Appendtext(rtItem.Getunformattedtext())
			
			'アイテムを削除（※削除後保存しないこと）
			Call scriptLibItem.Remove()
		Loop
		
		Call designDoc.Save(True, True)
		
		noteID = noteCol.GetNextNoteId(noteID)
	Loop
	
	Exit Sub
ErrorHandle:
	Call SetErrorObject(Err, Error)
	Error Err, Error
	Exit Sub
End Sub
</lotusscript></code><code event='Main_Form'><lotusscript>Sub Main_Form(db As NotesDatabase)
	On Error Goto ErrorHandle
	
	'スクリプトライブラリのみ
	Dim noteCol As NotesNoteCollection
	Dim note As NotesDocument
	Dim noteID As String
	
	Dim scriptLibItem As NotesItem
	Dim scriptCodeItem As NotesRichTextItem
	
	Dim session As New NotesSession
	Dim curDB As NotesDatabase
	Dim designDoc As NotesDocument
	
	Set curDB = session.CurrentDatabase
	
	Set noteCol =db.CreateNoteCollection(False)
	
	'スクリプトライブラリ
	'noteCol.SelectScriptLibraries = True
	noteCol.SelectForms = True
	
	Call noteCol.BuildCollection()
	
	'出力
	noteID = noteCol.GetFirstNoteId()
	
	Do Until noteID = ""
		Set note = db.GetDocumentByID(noteID)
		
		'出力用の文書を作成
		Set designDoc = curDB.CreateDocument
		
		'値を設定
		Call designDoc.ReplaceItemValue("Form", DESIGN_FORM)
		
		Call designDoc.ReplaceItemValue("DbServer", db.Server)
		Call designDoc.ReplaceItemValue("DbTitle", db.Title)
		Call designDoc.ReplaceItemValue("DbFilePath", db.FilePath)
		
		Call designDoc.ReplaceItemValue("DesignType", "フォーム")
		Call designDoc.ReplaceItemValue("DesignName", note.GetItemValue("$TITLE"))
		
		Do
			'スクリプトコードアイテムを取得
			Set scriptLibItem = note.GetFirstItem("$ScriptLib")
			If scriptLibItem Is Nothing Then
				Exit Do
			End If
			
			Set scriptCodeItem = designDoc.GetFirstItem("ScriptCode")
			If scriptCodeItem Is Nothing Then
				Set scriptCodeItem = designDoc.CreateRichTextItem("ScriptCode")
			End If
			
			Call scriptCodeItem.AppendText(scriptLibItem.values(0))
			
			'アイテムを削除（※削除後保存しないこと）
			Call scriptLibItem.Remove()
		Loop
		
		Call designDoc.Save(True, True)
		
		noteID = noteCol.GetNextNoteId(noteID)
	Loop
	
	Exit Sub
ErrorHandle:
	Call SetErrorObject(Err, Error)
	Error Err, Error
	Exit Sub
End Sub
</lotusscript></code><code event='Main_Sub'><lotusscript>Sub Main_Sub(dbInfo As NotesDocument, db As NotesDatabase, dType As String, formula As String)
	On Error Goto ErrorHandle
	
	'スクリプトライブラリのみ
	Dim noteCol As NotesNoteCollection
	Dim note As NotesDocument
	Dim noteID As String
	
	Dim scriptLibItem As NotesItem
	Dim scriptCodeItem As NotesRichTextItem
	
	Dim session As New NotesSession
	Dim curDB As NotesDatabase
	Dim designDoc As NotesDocument
	
	Set curDB = session.CurrentDatabase
	
	Set noteCol =db.CreateNoteCollection(False)
	Call noteCol.SelectAllNotes(False)
%REM
designTypes = Split("" &amp; _
	"ﾌﾚｰﾑｾｯﾄ,ﾍﾟｰｼﾞ,ﾌｫｰﾑ,ﾋﾞｭｰ,ﾌｫﾙﾀﾞ," &amp;_
	"ｴｰｼﾞｪﾝﾄ,Webｻｰﾋﾞｽ,ｱｳﾄﾗｲﾝ,ｻﾌﾞﾌｫｰﾑ,共有ﾌｨｰﾙﾄﾞ,共有列,共有ｱｸｼｮﾝ,ｽｸﾘﾌﾟﾄﾗｲﾌﾞﾗﾘ," &amp;_
	"ｲﾒｰｼﾞ,ｱﾌﾟﾚｯﾄ,ｽﾀｲﾙｼｰﾄ,ﾃﾞｰﾀｺﾈｸｼｮﾝ," &amp;_
	"ｱｲｺﾝ,ﾃﾞｰﾀﾍﾞｰｽについて,ﾃﾞｰﾀﾍﾞｰｽの使い方,ﾃﾞｰﾀﾍﾞｰｽｽｸﾘﾌﾟﾄ", ",")
%END REM
	
	Select Case Lcase$(dtype)
	Case "acl"
		noteCol.SelectACL = True
	Case "frameset", "ﾌﾚｰﾑｾｯﾄ"
		noteCol.SelectFramesets = True
	Case "page", "ﾍﾟｰｼﾞ"
		noteCol.SelectPages = True
	Case "form", "ﾌｫｰﾑ"
		noteCol.SelectForms = True
	Case "view", "ﾋﾞｭｰ"
		noteCol.SelectViews = True
	Case "folder", "ﾌｫﾙﾀﾞｰ", "ﾌｫﾙﾀﾞ"
		noteCol.SelectFolders = True
	Case "agent", "ｴｰｼﾞｪﾝﾄ"
		noteCol.SelectAgents = True
	Case "webservice", "Webｻｰﾋﾞｽ"
		
	Case "outline", "ｱｳﾄﾗｲﾝ"
		noteCol.SelectOutlines = True
	Case "subform", "ｻﾌﾞﾌｫｰﾑ"
		noteCol.SelectSubforms = True
	Case "field", "共有ﾌｨｰﾙﾄﾞ"
		noteCol.SelectSharedFields = True
	Case "column", "共有列"
		'noteCol.SelectMiscFormatElements = True
	Case "action", "共有ｱｸｼｮﾝ"
		noteCol.SelectActions = True
	Case "scriptlibrary", "ｽｸﾘﾌﾟﾄﾗｲﾌﾞﾗﾘ"
		noteCol.SelectScriptLibraries = True
	Case "image", "ｲﾒｰｼﾞﾘｿｰｽ", "ｲﾒｰｼﾞ"
		noteCol.SelectImageResources = True
'	Case "file"
	Case "applet", "ｱﾌﾟﾚｯﾄ"
		noteCol.SelectJavaResources = True
	Case "stylesheet", "ｽﾀｲﾙｼｰﾄ"
		noteCol.SelectStyleSheetResources = True
	Case "dataconnection", "ﾃﾞｰﾀｺﾈｸｼｮﾝ"
		noteCol.SelectDataConnections = True
	Case "icon", "ｱｲｺﾝ"
		noteCol.SelectIcon = True
	Case "helpabout", "ﾃﾞｰﾀﾍﾞｰｽについて"
		noteCol.SelectHelpAbout = True
	Case "helpusing", "ﾃﾞｰﾀﾍﾞｰｽの使い方"
		noteCol.SelectHelpUsing = True
	Case "databasescript", "ﾃﾞｰﾀﾍﾞｰｽｽｸﾘﾌﾟﾄ"
		noteCol.SelectDatabaseScript = True
	Case "navigator", "ﾅﾋﾞｹﾞｰﾀ"
		noteCol.SelectNavigators = True
	Case Else
		Call noteCol.SelectAllDesignElements(True)
		noteCol.SelectACL = False
		noteCol.SelectFramesets = False
		noteCol.SelectPages = False
		noteCol.SelectForms = False
		noteCol.SelectViews = False
		noteCol.SelectFolders = False
		noteCol.SelectAgents = False
		noteCol.SelectOutlines = False
		noteCol.SelectSubforms = False
		noteCol.SelectSharedFields = False
		noteCol.SelectActions = False
		noteCol.SelectScriptLibraries = False
		noteCol.SelectImageResources = False
		noteCol.SelectJavaResources = False
		noteCol.SelectStyleSheetResources = False
		noteCol.SelectDataConnections = False
		noteCol.SelectIcon = False
		noteCol.SelectHelpAbout = False
		noteCol.SelectHelpUsing = False
		noteCol.SelectDatabaseScript = False
		noteCol.SelectNavigators = False
	End Select
	
	If formula &lt;&gt; "" Then
		noteCol.SelectionFormula = formula
	End If
	
	Call noteCol.BuildCollection()
	
	'出力
	noteID = noteCol.GetFirstNoteId()
	
	Do Until noteID = ""
		Set note = db.GetDocumentByID(noteID)
		
		'出力用の文書を作成
		Set designDoc = curDB.CreateDocument
		
		'値を設定
		Call designDoc.ReplaceItemValue("Form", DESIGN_FORM)
		Call designDoc.ReplaceItemValue("DbTitle", dbinfo.GetItemValue("DbTitle"))
		Call designDoc.ReplaceItemValue("DbServer", dbinfo.GetItemValue("DbServer"))
		Call designDoc.ReplaceItemValue("DbFilePath", dbinfo.GetItemValue("DbFilePath"))
		Call designDoc.ReplaceItemValue("DesignType", dtype)
		
		Call note.CopyAllItems(designDoc)
		
		Call designDoc.MakeResponse(dbinfo)
		Call designDoc.Save(False, False, False)
		
		noteID = noteCol.GetNextNoteId(noteID)
	Loop
	
	Exit Sub
ErrorHandle:
	Call SetErrorObject(Err, Error)
	Error Err, Error
	Exit Sub
End Sub</lotusscript></code>
<rundata processeddocs='0' exitcode='0' agentdata='C6AC2D8C8397163549257B27002E1E3F'>
<agentmodified><datetime>20181031T100052,13+09</datetime></agentmodified>
<agentrun><datetime>20190604T162749,68+09</datetime></agentrun>
<runlog>エージェント ノーツ 設計出力 の 2019/06/04 16:27:46 での実行が開始しました。
選択文書で実行します。 合計 1
1 文書が検索条件に一致しました。
LotusScript を実行しました
エージェント ノーツ 設計出力 の実行が終了しました。(2019/06/04 16:27:49)
</runlog></rundata>
<item name='$POID'><datetime>20140930T200606,52+09</datetime></item></agent>

<page name='ActionPage' publicaccess='false' designerversion='8.5.3' bgcolor='silver'>
<noteinfo noteid='2c2' unid='0AADA3F52D47E02B49257711000A6079' sequence='110'>
<created><datetime>20100426T105320,57+09</datetime></created>
<modified><datetime>20181031T100053,99+09</datetime></modified>
<revised><datetime>20181031T100053,98+09</datetime></revised>
<lastaccessed><datetime>20181031T100053,99+09</datetime></lastaccessed>
<addedtofile><datetime>20100916T212038,16+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby>
<wassignedby><name>CN=Administrator/O=Comture</name></wassignedby>
<globals><code event='options'><lotusscript>Option Public
Option Declare
Use "ActionPageLib"
</lotusscript></code></globals>
<actionbar bgcolor='#d4d0c8' bordercolor='black'>
<actionbuttonstyle bgcolor='#d4d0c8'/><border width='0px 0px 1px'/>
<action title='閉じる' icon='27'><code event='click'><formula>@Command([FileCloseWindow])</formula></code></action>
<action title='値代入\値代入' icon='21'><code event='options'><lotusscript>Option Declare

</lotusscript></code><code event='click'><lotusscript>Sub Click(Source As Button)
	
	Call SetValue_Click(Source)
	
End Sub</lotusscript></code></action>
<action title='値代入\値代入（複数値対応）' icon='40'><code event='options'><lotusscript
>Option Declare
Use "NotesUICommonLib"
Use "ToolsLib"
'Use "SortLib"
</lotusscript></code><code event='click'><lotusscript>Sub Click(Source As Button)
	
	Call SetValues_Click(Source)
	
End Sub
</lotusscript></code><code event='GetSeparator'><lotusscript>Function GetSeparator(key As String) As String
	REM "複数値ではない|0 改行|1 スペース|2 カンマ|3 コロン|4 セミコロン|5 "
	
	Dim retVal As String
	retVal = ""
	
	Select Case(key)
	Case "1"
		retVal = Chr(13) &amp; Chr(10)
	Case "2"
		retVal = " "
	Case "3"
		retVal = ","
	Case "4"
		retVal = ":"
	Case "5"
		retVal = ";"
	End Select
	
	GetSeparator = retVal
	
End Function
</lotusscript></code><code event='GetDataTypeString'><lotusscript>Function GetDataTypeString(key As String) As String
%REM
テキスト|0
数値（整数）|1
数値（不動少数）|2
日付/時刻|3
日付|4
時刻|5
%ENDREM
	
	Dim retVal As String
	retVal = "テキスト"
	
	Select Case(key)
	Case "1"
		retVal = "数値（整数）"
	Case "2"
		retVal = "数値（浮動小数点）"
	Case "3"
		retVal = "日付/時刻"
	Case "4"
		retVal = "日付"
	Case "5"
		retVal = "時刻"
	End Select
	
	GetDataTypeString = retVal
End Function</lotusscript></code></action>
<action title='値代入\値代入（複数文書可）' icon='21'><code event='options'><lotusscript
>Option Declare

</lotusscript></code><code event='click'><lotusscript>Sub Click(Source As Button)
	
	Call SetValueMulti_Click(Source)
	
End Sub</lotusscript></code></action>
<action title='値代入\値代入（複数値＆複数文書可）' icon='40'><code event='options'><lotusscript
>Option Declare
Use "NotesUICommonLib"
Use "ToolsLib"
'Use "SortLib"
</lotusscript></code><code event='click'><lotusscript>Sub Click(Source As Button)
	
	Call SetValuesMulti_Click(Source)
	
End Sub
</lotusscript></code><code event='GetSeparator'><lotusscript>Function GetSeparator(key As String) As String
	REM "複数値ではない|0 改行|1 スペース|2 カンマ|3 コロン|4 セミコロン|5 "
	
	Dim retVal As String
	retVal = ""
	
	Select Case(key)
	Case "1"
		retVal = Chr(13) &amp; Chr(10)
	Case "2"
		retVal = " "
	Case "3"
		retVal = ","
	Case "4"
		retVal = ":"
	Case "5"
		retVal = ";"
	End Select
	
	GetSeparator = retVal
	
End Function
</lotusscript></code><code event='GetDataTypeString'><lotusscript>Function GetDataTypeString(key As String) As String
%REM
テキスト|0
数値（整数）|1
数値（不動少数）|2
日付/時刻|3
日付|4
時刻|5
%ENDREM
	
	Dim retVal As String
	retVal = "テキスト"
	
	Select Case(key)
	Case "1"
		retVal = "数値（整数）"
	Case "2"
		retVal = "数値（浮動小数点）"
	Case "3"
		retVal = "日付/時刻"
	Case "4"
		retVal = "日付"
	Case "5"
		retVal = "時刻"
	End Select
	
	GetDataTypeString = retVal
End Function</lotusscript></code></action>
<action title='｜' showinmenu='false'/>
<action title='フィールド削除\フィールド削除' icon='90'><code event='options'><lotusscript
>Option Declare

</lotusscript></code><code event='click'><lotusscript>Sub Click(Source As Button)
	Call RemoveFields_Click(Source)
End Sub</lotusscript></code></action>
<action title='フィールド削除\フィールド削除（複数文書可）' icon='90'><code event='options'><lotusscript
>Option Declare

</lotusscript></code><code event='click'><lotusscript>Sub Click(Source As Button)
	Call RemoveFieldsMulti_Click(Source)
End Sub</lotusscript></code></action>
<action title='｜' showinmenu='false'/>
<action title='エクスポート\添付ファイル' icon='115'><code event='options'><lotusscript
>Option Declare
Use "NotesUICommonLib"
</lotusscript></code><code event='click'><lotusscript>Sub Click(Source As Button)
	Call ExportAttachFilesMulti_Click(Source)
End Sub</lotusscript></code></action>
<action title='エクスポート\CSVファイル' icon='115'><code event='click'><lotusscript
>Sub Click(Source As Button)
	Call ExportCSVFileMulti_Click()
End Sub</lotusscript></code></action>
<action title='｜' showinmenu='false'/>
<action title='文書削除' icon='4'><code event='options'><lotusscript>Option Declare

</lotusscript></code><code event='click'><lotusscript>Sub Click(Source As Button)
	Call RemoveDocuments_Click(Source)
End Sub</lotusscript></code></action></actionbar>
<body><richtext>
<pardef id='1'/>
<par def='1'/></richtext></body>
<item name='$$ScriptName' summary='false' sign='true'><text>ActionPage</text></item></page>

<note class='form'>
<noteinfo noteid='2c6' unid='4A1C2A50896D4AEE4925770C0002A066' sequence='45'>
<created><datetime>20100421T092841,34+09</datetime></created>
<modified><datetime>20181001T112736,65+09</datetime></modified>
<revised><datetime>20181001T112736,64+09</datetime></revised>
<lastaccessed><datetime>20181001T112736,65+09</datetime></lastaccessed>
<addedtofile><datetime>20100916T212038,16+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby>
<wassignedby><name>CN=Administrator/O=Comture</name></wassignedby>
<item name='$Flags'><text>~C4g</text></item>
<item name='$TITLE'><text>build.properties</text></item>
<item name='$DesignerVersion'><text>8.5.3</text></item>
<item name='$FileSize' sign='true'><number>131</number></item>
<item name='$FileData' sign='true'>
<rawitemdata type='1'>
YQAYAAAAAACDAAAAAQAAAAAAAAAAAAAAYACVAAAAgwCEAAAAAAAAAAAAc291cmNlLi4gPSBMb2Nh
bC8sXA0KICAgICAgICAgICBDb2RlL0phdmEvDQpvdXRwdXQuLiA9IFdlYkNvbnRlbnQvV0VCLUlO
Ri9jbGFzc2VzLw0KYmluLmluY2x1ZGVzID0gLixcDQogICAgICAgICAgICAgICBwbHVnaW4ueG1s
DQoK
</rawitemdata></item>
<item name='$FileNames' sign='true'><text>build.properties</text></item></note>

<note class='form'>
<noteinfo noteid='2ca' unid='CAD6897F15A159664925770C0002A068' sequence='15'>
<created><datetime>20100421T092841,36+09</datetime></created>
<modified><datetime>20190826T133148,25+09</datetime></modified>
<revised><datetime>20190826T131407,11+09</datetime></revised>
<lastaccessed><datetime>20190826T133148,25+09</datetime></lastaccessed>
<addedtofile><datetime>20100916T212038,16+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=comture</name></updatedby>
<item name='$Flags'><text>~C4g</text></item>
<item name='$TITLE'><text>plugin.xml</text></item>
<item name='$DesignerVersion'><text>8.5.3</text></item>
<item name='$FileSize' sign='true'><number>1240</number></item>
<item name='$FileData' sign='true'>
<rawitemdata type='1'>
YQAYAAAAAADYBAAAAQAAAAAAAAAAAAAAYADqBAAA2ATYBAAAAAAAAAAAPD94bWwgdmVyc2lvbj0i
MS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPD9lY2xpcHNlIHZlcnNpb249IjMuMCI/Pgo8cGx1Z2lu
IGNsYXNzPSJwbHVnaW4uQWN0aXZhdG9yIgogIGlkPSJDTkFQTkQxMF8yZmNvbXR1cmVfdG9vbHM1
Y2RidG9vbF9uc2YiIG5hbWU9IkRvbWlubyBEZXNpZ25lciIKICBwcm92aWRlcj0iVE9ETyIgdmVy
c2lvbj0iMS4wLjAiPgogIDxyZXF1aXJlcz4KICAgIDwhLS1BVVRPR0VOLVNUQVJULUJVSUxERVI6
IG51bGwg44Gr44KI44Gj44Gm6Ieq5YuV55qE44Gr55Sf5oiQ44GV44KM44G+44GZ44CCIOWkieab
tOOBl+OBquOBhOOBp+OBj+OBoOOBleOBhOOAgi0tPgogICAgPGltcG9ydCBwbHVnaW49Im9yZy5l
Y2xpcHNlLnVpIi8+CiAgICA8aW1wb3J0IHBsdWdpbj0ib3JnLmVjbGlwc2UuY29yZS5ydW50aW1l
Ii8+CiAgICA8aW1wb3J0IG9wdGlvbmFsPSJ0cnVlIiBwbHVnaW49ImNvbS5pYm0uY29tbW9ucyIv
PgogICAgPGltcG9ydCBvcHRpb25hbD0idHJ1ZSIgcGx1Z2luPSJjb20uaWJtLmNvbW1vbnMueG1s
Ii8+CiAgICA8aW1wb3J0IG9wdGlvbmFsPSJ0cnVlIiBwbHVnaW49ImNvbS5pYm0uY29tbW9ucy52
ZnMiLz4KICAgIDxpbXBvcnQgb3B0aW9uYWw9InRydWUiIHBsdWdpbj0iY29tLmlibS5qc2NyaXB0
Ii8+CiAgICA8aW1wb3J0IG9wdGlvbmFsPSJ0cnVlIiBwbHVnaW49ImNvbS5pYm0uZGVzaWduZXIu
cnVudGltZS5kaXJlY3RvcnkiLz4KICAgIDxpbXBvcnQgb3B0aW9uYWw9InRydWUiIHBsdWdpbj0i
Y29tLmlibS5kZXNpZ25lci5ydW50aW1lIi8+CiAgICA8aW1wb3J0IG9wdGlvbmFsPSJ0cnVlIiBw
bHVnaW49ImNvbS5pYm0ueHNwLmNvcmUiLz4KICAgIDxpbXBvcnQgb3B0aW9uYWw9InRydWUiIHBs
dWdpbj0iY29tLmlibS54c3AuZXh0c24iLz4KICAgIDxpbXBvcnQgb3B0aW9uYWw9InRydWUiIHBs
dWdpbj0iY29tLmlibS54c3AuZGVzaWduZXIiLz4KICAgIDxpbXBvcnQgb3B0aW9uYWw9InRydWUi
IHBsdWdpbj0iY29tLmlibS54c3AuZG9taW5vIi8+CiAgICA8aW1wb3J0IG9wdGlvbmFsPSJ0cnVl
IiBwbHVnaW49ImNvbS5pYm0ubm90ZXMuamF2YS5hcGkiLz4KICAgIDxpbXBvcnQgb3B0aW9uYWw9
InRydWUiIHBsdWdpbj0iY29tLmlibS54c3AucmNwIi8+CiAgICA8IS0tQVVUT0dFTi1FTkQtQlVJ
TERFUjog6Ieq5YuV55qE44Gr55Sf5oiQ44GV44KM44Gf44K744Kv44K344On44Oz44Gu57WC5LqG
LS0+CiAgPC9yZXF1aXJlcz4KPC9wbHVnaW4+Cg==
</rawitemdata></item>
<item name='$FileNames' sign='true'><text>plugin.xml</text></item></note>

<scriptlibrary name='SortLib' hide='v3 v4strict'>
<noteinfo noteid='2ce' unid='1C5B515FAEBC06C94925770C00295688' sequence='16'>
<created><datetime>20100421T163131,28+09</datetime></created>
<modified><datetime>20181031T100051,35+09</datetime></modified>
<revised><datetime>20181031T100051,34+09</datetime></revised>
<lastaccessed><datetime>20181031T100051,35+09</datetime></lastaccessed>
<addedtofile><datetime>20100916T212038,16+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby>
<wassignedby><name>CN=Administrator/O=Comture</name></wassignedby><code event='options'><lotusscript
>Option Public
Option Declare

</lotusscript></code><code event='QuickSort'><lotusscript>Public Function QuickSort(values As Variant , fstIndex As Long, lastIndex As Long, flag As Integer)
'***********************************************************************
' Function QuickSort
' @param
' 	values : ソートする配列。オブジェクト以外なら可
' 	fstIndex : valuesの最初の添字(再起呼出し後は、擬似分割配列の最初の添字)
' 	lastIndex : valuesの最後の添字(再起呼出し後は、擬似分割配列の最後の添字)
' 	flag : True or False
' 		True : 昇順ソート
' 		False : 降順ソート
' @return なし
'	valuesを直接ソート
'***********************************************************************
	Dim length As Long '配列の長さ
	Dim centerIndex As Long '配列の中央Index
	Dim pivot As Variant '配列の中央に位置する値
	Dim leftCount As Long '左探索ループカウンタ変数
	Dim rightCount As Long '右探索ループカウンタ変数
	Dim leftIndex As Long '左探索Index保持用変数
	Dim rightIndex As Long '右探索Index保持用変数
	Dim valueBuf As Variant '配列の値入れ替え用の退避変数
	
	length = lastIndex - fstIndex + 1 '配列の要素数(1 &lt;= n)
	
	'①valuesの長さが１より大きければ続行
	If 1 &lt; length Then
		
		centerIndex = fstIndex + (length / 2) '配列中央のIndex
		
		'②配列の中央に位置する値を中央値として保持
		pivot = values(centerIndex)
		
		Do While True '配列探索ループ
			
			'③配列の左側から、
			' a. 昇順 : 中央値以上の値を探索(左探索)
			' b. 降順 : 中央値以下の値を探索(左探索)
			For leftCount = fstIndex + leftCount To lastIndex
				'a
				If flag = True Then
					If pivot &lt;= values(leftCount) Then
						leftIndex = leftCount '配列のIndexを保持
						Exit For '発見したらそれ以上探索する必要はない。
					End If
				'b
				Else
					If values(leftCount) &lt;= pivot Then
						leftIndex = leftCount '配列のIndexを保持
						Exit For '発見したらそれ以上探索する必要はない。
					End If
				End If
			Next
			
			'④配列の右側から、
			' a. 昇順 : 中央値以下の値を探索(右探索)
			' b. 降順 : 中央値以上の値を探索(右探索)
			For rightCount = lastIndex - rightCount To fstIndex Step -1
				'a
				If flag = True Then
					If values(rightCount) &lt;= pivot Then
						rightIndex = rightCount '配列のIndexを保持
						Exit For '発見したらそれ以上探索する必要はない。
					End If
				'b
				Else
					If pivot &lt;= values(rightCount) Then
						rightIndex = rightCount '配列のIndexを保持
						Exit For '発見したらそれ以上探索する必要はない。
					End If
				End If
			Next
			
			'⑤左探索した結果Indexよりも、右探索した結果Indexが大きければ、左探索Indexと、右探索Indexの位置にある配列値を入れ替える
			'（要するに≪中央値以上の値≫が、≪中央値以下の値≫より≪左側≫にあれば、≪値を入れ替える≫）
			'(または、≪中央値以下の値≫が、≪中央値以上の値≫より≪右側≫にあれば、≪値を入れ替える≫)
			If leftIndex &lt; rightIndex Then
				'--配列の入れ替え----------------
				Call Swap(values(leftIndex), values(rightIndex))
				'--------------------------------
				leftCount = leftCount + 1 - fstIndex '次の左探索は値が発見されたIndexの１つ次のIndexから開始する。
				rightCount = lastIndex - rightCount + 1 '次の右探索は値が発見されたIndexの１つ前のIndexから開始する。
			Else
				Exit Do '配列の入れ替えが発生しなかった場合は、探索終了
			End If
			
		Loop
		
		'⑥最後の左探索で発見された中央値のIndexで配列を分割する。
		Call QuickSort(values, fstIndex, leftIndex-1, flag)
		Call QuickSort(values, leftIndex, lastIndex, flag)
		
	End If
	
End Function
</lotusscript></code><code event='Swap'><lotusscript>Public Function Swap(a As Variant, b As Variant)
	'---------------------------------------------------------------------
	' Function Swap
	' 処理内容：
	'	 aとbの内容を入れ替える
	' 
	' 引数：
	' a(Variant)：
	'	入れ替えを行いたい値
	' b(Variant)：
	'	入れ替えを行いたい値
	'
	' 戻り値：なし
	'	aとbを直接入れ替え
	'----------------------------------------------------------------------
	Dim valueBuf As Variant
	
	valueBuf = a
	a = b
	b = valueBuf
	
End Function
</lotusscript></code><code event='Sort'><lotusscript>Public Function Sort(values As Variant, flag As Integer)
	
	Dim fstIndex As Long
	Dim lastIndex As Long
	
	If Isarray(values) Then
		
		fstIndex = Lbound(values)
		lastIndex = Ubound(values)
		
		Call QuickSort(values, fstIndex, lastIndex, flag)
		
	End If
	
End Function</lotusscript></code>
<item name='$POID'><datetime>20140930T200606,61+09</datetime></item></scriptlibrary>

<note class='form'>
<noteinfo noteid='2d2' unid='2FD3E576B29EBDFC4925770C0002A065' sequence='8'>
<created><datetime>20100421T092841,33+09</datetime></created>
<modified><datetime>20150528T093234,64+09</datetime></modified>
<revised><datetime>20140930T200606,63+09</datetime></revised>
<lastaccessed><datetime>20150528T093234,64+09</datetime></lastaccessed>
<addedtofile><datetime>20100916T212038,16+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=PSL85/O=Comture</name></updatedby>
<item name='$Flags'><text>~C4g</text></item>
<item name='$FlagsExt' sign='true'><text>w</text></item>
<item name='$TITLE'><text>WEB-INF/faces-config.xml</text></item>
<item name='$FileSize' sign='true'><number>55</number></item>
<item name='$FileData' sign='true'>
<rawitemdata type='1'>
YQAYAAAAAAA3AAAAAQAAAAAAAAAAAAAAYABJAAAANwA4AAAAAAAAAAAAPD94bWwgdmVyc2lvbj0i
MS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGZhY2VzLWNvbmZpZy8+CgA=
</rawitemdata></item>
<item name='$FileNames' sign='true'><text>WEB-INF/faces-config.xml</text></item></note>

<form name='(01.データベース情報)' alias='DbInfoDoc' publicaccess='false' designerversion='8.5.3'>
<noteinfo noteid='2d6' unid='A23C009C2BE9B3304925771100032F16' sequence='72'>
<created><datetime>20100426T093446,62+09</datetime></created>
<modified><datetime>20181101T093229,84+09</datetime></modified>
<revised><datetime>20181101T093229,83+09</datetime></revised>
<lastaccessed><datetime>20181101T093229,84+09</datetime></lastaccessed>
<addedtofile><datetime>20100916T212038,16+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby>
<wassignedby><name>CN=Administrator/O=Comture</name></wassignedby>
<globals><code event='options'><lotusscript>Option Public
Option Declare
Use "NotesUICommonLib"
Use "ToolsLib"

</lotusscript></code></globals><code event='windowtitle'><formula>"データベース情報"</formula></code><code
 event='postsave'><formula>@Do(
@Command([ToolsRunMacro];"UpdateDbProperty");
@Command([ToolsRunMacro];"UpdateResponse")
)</formula></code>
<actionbar bgcolor='#e0dfe3' bordercolor='black'>
<actionbuttonstyle bgcolor='#e0dfe3'/><border width='0px 0px 1px'/>
<sharedactionref id='3'>
<action title='閉じる(_X)' icon='112'><code event='click'><formula>FIELD SaveOptions:="0";
@Command([FileCloseWindow])</formula></code><code event='label'><formula>"閉じる"</formula></code></action></sharedactionref>
<sharedactionref id='2'>
<action title='編集(_E)' icon='29' hide='edit previewedit'><code event='click'><formula
>@If(@IsError(@Command([EditDocument]));"";"")</formula></code><code event='label'><formula
>"編集"</formula></code></action></sharedactionref>
<sharedactionref id='1'>
<action title='保存(_S)' icon='42' hide='preview read'><code event='click'><formula
>@Command([FileSave])</formula></code><code event='label'><formula>"保存"</formula></code></action></sharedactionref></actionbar>
<body><richtext>
<pardef id='1'/>
<par def='1'/>
<table widthtype='fixedleft' refwidth='6.2993in'><tablecolumn width='6.2993in'/>
<tablerow>
<tablecell borderwidth='0px'>
<pardef id='3' leftmargin='0.0104in' keepwithnext='true' keeptogether='true'/>
<par def='3'/>
<table widthtype='fitmargins' leftmargin='0.0104in' rowspacing='0.0396in'
 columnspacing='0.0396in' refwidth='6.1639in'><border dropshadow='true'/><tablecolumn
 width='100%'/>
<tablerow>
<tablecell borderwidth='0px' bgcolor='#4f4f4f'>
<pardef id='4' align='center' leftmargin='0.0104in' keepwithnext='true' keeptogether='true'/>
<par def='4'><run><font size='14pt' style='bold' color='white'/>データベース設定</run></par></tablecell></tablerow></table>
<par def='3'/>
<table widthtype='fitmargins' rowdisplay='tabs' leftmargin='0.0104in' columnspacing='0.3542in'
 refwidth='6.1625in'><border dropshadow='true'/><tablecolumn width='100%'/>
<tablerow tablabel='基本'>
<tablecell borderwidth='1px 0px 0px 1px'>
<pardef id='5' leftmargin='0.0104in' keepwithnext='true' keeptogether='true'/>
<par def='5'/>
<table widthtype='fitmargins' cellbordercolor='#4f4f4f' leftmargin='0.0104in'
 refwidth='5.4438in'><tablecolumn width='100%'/>
<tablerow>
<tablecell borderwidth='0px 0px 2px'>
<pardef id='6' keepwithnext='true' keeptogether='true'/>
<par def='6'><run><font size='11pt' style='bold' color='#4f4f4f'/>データベース</run></par></tablecell></tablerow></table>
<par def='5'/>
<table widthtype='fitmargins' cellbordercolor='gray' leftmargin='0.0104in'
 refwidth='5.4438in'><tablecolumn width='100%'/>
<tablerow>
<tablecell borderwidth='0px'>
<pardef id='7' align='right' hide='read print preview' keepwithnext='true'
 keeptogether='true'/>
<par def='7'><button characters='22' widthtype='fixedcharacter' wraptext='true'
 bgcolor='system'><font size='8pt'/>データベースの選択<code event='options'><lotusscript
>Option Declare

</lotusscript></code><code event='click'><lotusscript>Sub Click(Source As Button)
	On Error Goto ErrorHandle
	
	Dim workSpace As New NotesUIWorkSpace
	Dim curUIDoc As NotesUIDocument
	Dim curDoc As NotesDocument
	Dim curDB As NotesDatabase
	Dim server As String
	
	Dim catalogDB As NotesDatabase
	
	Dim docCol As NotesDocumentCollection
	Dim selDoc As NotesDocument
	
	Dim session As New NotesSession
	Dim db As New NotesDatabase("", "")
	Dim retVal As Variant
	
	Set curUIDoc = workSpace.CurrentDocument
	Set curDoc = curUIDoc.Document
	Set curDB = curDoc.ParentDatabase
	
	server = curDoc.GetItemValue("DbServer")(0)
	If server = "" Then server = curDB.Server
	
	Set catalogDB = New NotesDatabase("", "")
	
	'R5以下
	If session.NotesBuildVersion &lt;= 166 Then
		
		If catalogDB.Open(server, "catalog.nsf") = True Then
			Set docCol = workSpace.PickListCollection(PICKLIST_CUSTOM, False, server, "catalog.nsf", "ByTitle", "データベースの選択", "データベースを選択してください。")
			If docCol.Count = 0 Then
				Exit Sub
			End If
			
			Set selDoc = docCol.GetFirstDocument()
			
			If db.Open(server,selDoc.GetItemValue("Pathname")(0)) = False Then
				Call Messagebox_Error(selDoc.GetItemValue("Title")(0) &amp; "が開けません。", "")
				Exit Sub
			End If
			
		Else
			retVal = workSpace.OpenFileDialog(False, "ファイルの選択", "Notes Database|*.nsf|Notes Template|*.ntf", "", "")
			If Isempty(retVal) = True Then
				Exit Sub
			End If
			
			If db.Open("", retVal(0)) = False Then
				Call Messagebox_Error(retVal(0) &amp; "が開けません。", "")
				Exit Sub
			End If
			
		End If
		
	'R6以上
	Else
		
		retVal = workSpace.Prompt(13, "", "")
		If Isempty(retVal) = True Then
			Exit Sub
		End If
		
		If db.Open(retVal(0), retVal(1)) = False Then
			Call Messagebox_Error(retVal(2) &amp; "が開けません。", "")
			Exit Sub
		End If
		
	End If
	
	Call curDoc.ReplaceItemValue("DbServer", db.Server)
	Call curDoc.ReplaceItemValue("DbTitle", db.Title)
	Call curDoc.ReplaceItemValue("DbFilePath", db.FilePath)
	Call curDoc.ReplaceItemValue("DbReplicaID", db.ReplicaID)
	
	Exit Sub
ErrorHandle:
	Call SetErrorObject(Err, Error)
	Call Messagebox_Error(GetErrorMessage(), "")
	Exit Sub
End Sub</lotusscript></code></button></par></tablecell></tablerow></table>
<pardef id='8' leftmargin='0.0104in' hide='read print preview' keepwithnext='true'
 keeptogether='true'/>
<par def='8'/>
<table widthtype='fitmargins' cellbordercolor='#4f4f4f' leftmargin='0.0104in'
 rowspacing='0.0396in' columnspacing='0.0396in' refwidth='5.4333in'><tablecolumn
 width='1.1813in'/><tablecolumn width='100%'/>
<tablerow>
<tablecell valign='center' bgcolor='silver'>
<pardef id='9' leftmargin='0.0104in' keepwithnext='true' keeptogether='true'/>
<par def='9'>サーバー</par></tablecell>
<tablecell valign='center'>
<pardef id='10' leftmargin='0.0104in' keepwithnext='true' keeptogether='true'/>
<par def='10'><field type='text' kind='editable' name='DbServer'><code event='defaultvalue'><formula
>@Subset(@DbName;1)</formula></code><code event='inputtranslation'><formula
>@ReplaceSubstring(DbServer;@NewLine;"")</formula></code></field><compositedata
 type='98' prevtype='65418' nexttype='222' afterparcount='7' containertype='65418'
 aftercontainercount='1' afterbegincount='3'>
Yg4BAIQAAAAAAAAAAAA=
</compositedata></par>
<pardef id='11' leftmargin='0.0104in' hide='read print preview' keepwithnext='true'
 keeptogether='true'/>
<par def='11'><run><font color='fuchsia'/>※省略で[現在のサーバー]</run></par></tablecell></tablerow>
<tablerow>
<tablecell valign='center' bgcolor='silver'>
<par def='9'>タイトル</par></tablecell>
<tablecell valign='center'>
<par def='10'><field type='text' kind='editable' name='DbTitle'><code event='inputtranslation'><formula
>@ReplaceSubstring(DbTitle;@NewLine;"")</formula></code></field><compositedata
 type='98' prevtype='65418' nexttype='222' afterparcount='6' containertype='65418'
 aftercontainercount='1' afterbegincount='3'>
Yg4BAIQAAAAAAAAAAAA=
</compositedata></par></tablecell></tablerow>
<tablerow>
<tablecell valign='center' bgcolor='silver'>
<par def='9'>ファイルパス</par></tablecell>
<tablecell valign='center'>
<par def='10'><field type='text' kind='editable' name='DbFilePath'><code event='inputtranslation'><formula
>@ReplaceSubstring(DbFilePath;@NewLine;"")</formula></code></field><compositedata
 type='98' prevtype='65418' nexttype='222' afterparcount='6' containertype='65418'
 aftercontainercount='1' afterbegincount='3'>
Yg4BAIQAAAAAAAAAAAA=
</compositedata></par></tablecell></tablerow>
<tablerow>
<tablecell valign='center' bgcolor='silver'>
<pardef id='12' keepwithnext='true' keeptogether='true'/>
<par def='12'>レプリカID</par></tablecell>
<tablecell valign='center'>
<pardef id='13' keepwithnext='true' keeptogether='true'/>
<par def='13'><field type='text' kind='editable' name='DbReplicaID'><code
 event='defaultvalue'><formula>@ThisValue</formula></code></field><compositedata
 type='98' prevtype='65418' nexttype='222' afterparcount='7' containertype='65418'
 aftercontainercount='1' afterbegincount='3'>
Yg4BAIQAAAAAAAAAAAA=
</compositedata></par></tablecell></tablerow></table></tablecell></tablerow></table></tablecell></tablerow></table>
<par def='1'/></richtext></body>
<item name='OriginalModTime' sign='true'><datetime>20110727T095853,45+09</datetime></item>
<item name='$Header'>
<rawitemdata type='1'>
jv82AABEZWZhdWx0IFNhbnMgU2VyaWYAAAAAAAAAAAAAAAAAAAEAAAkKACZXIC0gJkQgJlSD
</rawitemdata></item>
<item name='$Footer'>
<rawitemdata type='1'>
jv8wAABEZWZhdWx0IFNhbnMgU2VyaWYAAAAAAAAAAAAAAAAAAAEAAAkFACZQLyZR
</rawitemdata></item>
<item name='$$ScriptName' summary='false' sign='true'><text>DbInfoDoc</text></item></form>

<form name='(デフォルトのフォーム)' alias='frmDefault' nocompose='true' noquery='true'
 publicaccess='false' designerversion='8.5.3' default='true'>
<noteinfo noteid='2da' unid='74E35DAA634B74AE4925771100052510' sequence='21'>
<created><datetime>20100426T095611,68+09</datetime></created>
<modified><datetime>20190418T094555,52+09</datetime></modified>
<revised><datetime>20190418T094555,51+09</datetime></revised>
<lastaccessed><datetime>20190418T094555,52+09</datetime></lastaccessed>
<addedtofile><datetime>20100916T212038,16+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator NRK/O=nrkadmin</name></updatedby><code event='windowtitle'><formula
>"フォームが特定できません"</formula></code><code event='options'><lotusscript>Option Declare
Use "SortLib"

</lotusscript></code><code event='queryopen'><lotusscript>Sub Queryopen(Source As Notesuidocument, Mode As Integer, Isnewdoc As Variant, Continue As Variant)
	
	Dim doc As NotesDocument
	Dim rtItem As NotesRichTextItem
	Dim rtItemName As String
	
	Set doc = Source.Document
	If doc Is Nothing Then
		Exit Sub
	End If
	rtItemName = "PreviewAllItem"
	Set rtItem = doc.GetFirstItem(rtItemName)
	
	If rtItem Is Nothing Then
		Set rtItem = doc.CreateRichTextItem(rtItemName)
	End If
	
	Dim allItem As Variant
	Dim tmpItem As NotesItem
	
	allItem = doc.Items
	
	If Isempty(allItem) Then
		Exit Sub
	End If
	
	Dim itemNames() As String
	Dim n As Long
	
	n = 0
	Redim Preserve itemNames(0 To n)
	
	Forall i In allItem
		
		Set tmpItem = i
		
		Redim Preserve itemNames(0 To n)
		itemNames(n) = tmpItem.Name
		n = n + 1
		
	End Forall
	
	Call Sort(itemNames, True)
	
	Dim strItemProp As String
	Dim values As Variant
	Dim c As Long
	Dim u As Long
	
	For n = 0 To Ubound(itemNames)
		
		If Not(itemNames(n) = rtItemName) Then
			Set tmpItem = doc.GetFirstItem(itemNames(n))
			
			If tmpItem.IsSummary Then strItemProp = "Summary" Else strItemProp = "No Summary"
			
			Call rtItem.AppendText(tmpItem.Name)
			Call rtItem.AppendText(" [")
			Call rtItem.AppendText(GetType(tmpItem))
			'Call rtItem.AppendText("(" &amp; strItemProp &amp; ")" &amp; "] ")
			'Call rtItem.AppendText("" &amp; tmpItem.LastModified &amp; "" &amp; "] ")
			Call rtItem.AppendText("] ")
			Call rtItem.AppendText(Space$(1))
			Call rtItem.AppendText("=")
			Call rtItem.AppendText(Space$(1))
			values = tmpItem.Values
			
			If tmpItem.Type = RICHTEXT Then
				Dim tmpRtItem As NotesRichTextItem
				Set tmpRtItem = tmpItem
				Call rtItem.AppendText( tmpRtItem.GetUnformattedText() )
				Set tmpRtItem = Nothing
			Elseif Isempty(values) Then
				Call rtItem.AppendText(tmpItem.Text)
			Elseif Isarray(values) Then
				c = 0
				u = Ubound(values)
				
				Call rtItem.AppendText(Cstr(values(c)))
				
				For c = 1 To u
					Call rtItem.AppendText("," &amp; Space$(1))
					Call rtItem.AppendText(Cstr(values(c)))
				Next
			Else
				Call rtItem.AppendText(Cstr(values))
			End If
			
			Call rtItem.AddNewLine(1)
			
		End If
		
	Next
	
%REM
	Forall i In allItem
		Set tmpItem = i
		
		If Not(tmpItem.Name = rtItemName) Then
			Call rtItem.AppendText(tmpItem.Name)
			Call rtItem.AppendText(Space$(1))
			Call rtItem.AppendText("=")
			Call rtItem.AppendText(Space$(1))
			values = tmpItem.Values
			
			
			If Isarray(values) Then
				c = 0
				u = Ubound(values)
				
				Call rtItem.AppendText(Cstr(values(c)))
				
				For c = 1 To u
					Call rtItem.AppendText("," &amp; Space$(1))
					Call rtItem.AppendText(Cstr(values(c)))
				Next
			Else
				Call rtItem.AppendText(Cstr(values))
			End If
			
			Call rtItem.AddNewLine(1)
			
		End If
		
	End Forall
%ENDREM
	
End Sub
</lotusscript></code><code event='querysave'><lotusscript>Sub Querysave(Source As Notesuidocument, Continue As Variant)
	
	Continue = False
	
End Sub
</lotusscript></code><code event='queryclose'><lotusscript>Sub Queryclose(Source As Notesuidocument, Continue As Variant)
	
	On Error Goto errorhandle
	
	Source.Document.SaveOptions = "0"
	
	Exit Sub
errorhandle:
	Exit Sub
End Sub
</lotusscript></code><code event='querymodechange'><lotusscript>Sub Querymodechange(Source As Notesuidocument, Continue As Variant)
	If Source.EditMode = False Then
		Continue = False
	End If
End Sub
</lotusscript></code><code event='postopen'><lotusscript>Sub Postopen(Source As Notesuidocument)
	
	If Source.EditMode = True Then
		Source.EditMode = False
	End If
	
End Sub
</lotusscript></code><code event='GetType'><lotusscript>Function GetType(item As NotesItem) As String
	
	Dim typeStr As String
	
	Select Case item.Type
	'ACTIONCD (16) は保存済みアクション CD レコード (計算不可; 正規法) です。
	Case ACTIONCD '(16)
		typeStr = "保存済みアクション CD レコード (計算不可; 正規法)"
	'ASSISTANTINFO (17) は保存済みアシスタント情報 (計算不可; 正規法) です。
	Case ASSISTANTINFO '(17)
		typeStr = "保存済みアシスタント情報 (計算不可; 正規法)"
	'ATTACHMENT (1084) は添付ファイルです。
	Case ATTACHMENT '(1084)
		typeStr = "添付ファイル"
	'AUTHORS (1076) は作成者です
	Case AUTHORS '(1076)
		typeStr = "作成者"
	'DATETIMES (1024) は 日時の値、または日時の値の範囲です。
	Case DATETIMES '(1024)
		typeStr = "日時の値、または日時の値の範囲"
	'EMBEDDEDOBJECT (1090) は埋め込みオブジェクトです。
	Case EMBEDDEDOBJECT '(1090)
		typeStr = "埋め込みオブジェクト"
	'ERRORITEM (256) はタイプへのアクセス中に起きたエラーです。
	Case ERRORITEM '(256)
		typeStr = "タイプへのアクセス中に起きたエラー"
	'FORMULA (1536) はノーツ式です。
	Case FORMULA '(1536)
		typeStr = "ノーツ式"
	'HTML (21) は HTML ソーステキストです。
	Case HTML '(21)
		typeStr = "HTML ソーステキスト"
	'ICON (6) はアイコンです。
	Case ICON '(6)
		typeStr = "アイコン"
	'LSOBJECT (20) はエージェント用の保存済みロータス スクリプトオブジェクトコード
	Case LSOBJECT '(20)
		typeStr = "エージェント用の保存済みロータス スクリプトオブジェクトコード"
	'MIME_PART (25) は MIME サポートです。
	Case MIME_PART '(25)
		typeStr = "MIME サポート"
	'NAMES (1074) は名前です。
	Case NAMES '(1074)
		typeStr = "名前"
	'NOTELINKS (7) はデータベース、ビュー、文書へのリンク
	Case NOTELINKS '(7)
		typeStr = "データベース、ビュー、文書へのリンク"
	'NOTEREFS (4) は親文書への参照です。
	Case NOTEREFS '(4)
		typeStr = "親文書への参照"
	'NUMBERS (768) は数値または数値リストです。
	Case NUMBERS '(768)
		typeStr = "数値または数値リスト"
	'OTHEROBJECT (1085) はほかのオブジェクトです。
	Case OTHEROBJECT '(1085)
		typeStr = "ほかのオブジェクト"
	'QUERYCD (15) は保存済み検索 CD レコード (計算不可; 正規法) です。
	Case QUERYCD '(15)
		typeStr = "保存済み検索 CD レコード (計算不可; 正規法)"
	'READERS (1075) は読者です。
	Case READERS '(1075)
		typeStr = "読者"
	'RICHTEXT (1) はリッチテキストです
	Case RICHTEXT '(1)
		typeStr = "リッチテキスト"
	'SIGNATURE (8) は署名です。
	Case SIGNATURE '(8)
		typeStr = "署名"
	'TEXT (1280) はテキストまたはテキストリストです。
	Case TEXT '(1280)
		typeStr = "テキストまたはテキストリスト"
	'UNAVAILABLE (512) はアイテムのタイプが無効であることを意味します。
	Case UNAVAILABLE '(512)
		typeStr = "アイテムのタイプが無効"
	'UNKNOWN (0) はアイテムのタイプが分からないことを意味します。
	Case UNKNOWN '(0)
		typeStr = "アイテムのタイプが分からない"
	'USERDATA (14) はユーザーのデータです。
	Case USERDATA '(14)
		typeStr = "ユーザーのデータ"
	'USERID (1792) はユーザー ID の名前です。
	Case USERID '(1792)
		typeStr = "ユーザー ID の名前"
	'VIEWMAPDATA (18) は保存済み ViewMap データセット (計算不可: 正規法) です。
	Case VIEWMAPDATA '(18)
		typeStr = "保存済み ViewMap データセット (計算不可: 正規法)"
	'VIEWMAPLAYOUT (19) は保存済み ViewMap レイアウト (計算不可: 正規法) です。
	Case VIEWMAPLAYOUT '(19)
		typeStr = "保存済み ViewMap レイアウト (計算不可: 正規法)"
	End Select
	
	GetType = typeStr
	
End Function</lotusscript></code>
<actionbar bgcolor='#e0dfe3' bordercolor='black'>
<actionbuttonstyle bgcolor='#e0dfe3'/><font color='system'/><border style='solid'
 width='0px 0px 1px'/>
<action title='分類(_Z)' showinbar='false' systemcommand='categorize'/>
<action title='編集モード(_E)' showinbar='false' systemcommand='edit'/>
<action title='送信(_M)' showinbar='false' systemcommand='send'/>
<action title='転送(_F)' showinbar='false' systemcommand='forward'/>
<action title='フォルダに移動(_M)...' showinbar='false' systemcommand='movetofolder'/>
<action title='フォルダから削除(_R)' showinbar='false' systemcommand='removefromfolder'/></actionbar>
<body><richtext>
<pardef id='1'/>
<par def='1'/>
<pardef id='2' hide='notes web'/>
<par def='2'><field type='text' kind='computedfordisplay' name='SaveOptions'><code
 event='defaultvalue'><formula>"0"</formula></code></field><compositedata
 type='98' prevtype='65418' nexttype='222' afterparcount='7' containertype='65418'
 aftercontainercount='1' afterbegincount='3'>
Yg4BAIQAAAAAAAAAAAA=
</compositedata></par>
<par def='1'/>
<par def='1'>◇フィールドの値一覧</par>
<table widthtype='fitmargins' refwidth='7.5208in'><tablecolumn width='100%'/>
<tablerow>
<tablecell valign='center' borderwidth='0px'>
<pardef id='4' leftmargin='0.0104in' keepwithnext='true' keeptogether='true'/>
<par def='4'><field type='richtext' kind='editable' name='PreviewAllItem'/><compositedata
 type='98' prevtype='65418' nexttype='222' afterparcount='7' containertype='65418'
 aftercontainercount='1' afterbegincount='3'>
Yg4BAIQAAAAAAAEAAAA=
</compositedata></par></tablecell></tablerow></table>
<par def='1'/></richtext></body>
<item name='OriginalModTime' sign='true'><datetime>20110804T142306,13+09</datetime></item>
<item name='$$ScriptName' summary='false' sign='true'><text>frmDefault</text></item></form>

<agent name='(ノーツ - エージェントのクライアント実行)' alias='RunAgentOnClient' hide='v3' publicaccess='false'
 designerversion='7' clientbackgroundthread='true' restrictions='unrestricted'>
<noteinfo noteid='2e2' unid='68BBA1BBBF50A8F54925772D000134C5' sequence='25'>
<created><datetime>20100524T091310,45+09</datetime></created>
<modified><datetime>20181031T100052,68+09</datetime></modified>
<revised><datetime>20181031T100052,67+09</datetime></revised>
<lastaccessed><datetime>20181031T100052,68+09</datetime></lastaccessed>
<addedtofile><datetime>20100916T212038,16+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby>
<wassignedby><name>CN=Administrator/O=Comture</name></wassignedby>
<designchange><datetime>20181031T100052,65+09</datetime></designchange>
<trigger type='actionsmenu'/>
<documentset type='runonce'/><code event='options'><lotusscript>Option Public
Option Declare
Use "NotesUICommonLib"

</lotusscript></code><code event='initialize'><lotusscript>Sub Initialize
	Dim session As New NotesSession
	Call SetProcess(session.CurrentAgent.Name)
	Call Main()
End Sub
</lotusscript></code><code event='Main'><lotusscript>Sub Main()
	On Error Goto ErrorHandle
	
	Dim session As New NotesSession
	Dim curDB As NotesDatabase
	Dim unpro As NotesDocumentCollection
	
	Set curDB = session.CurrentDatabase
	Set unpro = curDB.UnprocessedDocuments
	
	If unpro.Count &lt;&gt; 1 Then
		Call Messagebox_Error("１文書のみ選択してください。", "")
		Exit Sub
	End If
	
	Dim curDoc As NotesDocument
	
	Dim agentDB As NotesDatabase
	Dim agent As NotesAgent
	Dim agentName As String
	Dim runAgentName As String
	Dim server As String
	Dim filePath As String
	Dim title As String
	
	Set curDoc = unpro.GetFirstDocument()
	Dim pdoc As NotesDocument
	Set pdoc = curDB.GetDocumentByUNID(curDoc.ParentDocumentUNID)
	
	'エージェントの実行サーバー名
	server = pdoc.GetItemValue("DbServer")(0)
	
	'データベースのファイルパス
	filePath = pdoc.GetItemValue("DbFilePath")(0)
	If filePath = "" Then
		Call Messagebox_Error("データベースのファイルパスが設定されていません。", "")
		Exit Sub
	End If
	
	'データベースのタイトル
	title = pdoc.GetItemValue("DbTitle")(0)
	If title = "" Then
		If server = "" Then
			title = filePath
		Else
			title = server &amp; "!!" &amp; filePath
		End If
	End If
	
	'データベースを取得する
	Set agentDB = New NotesDatabase("", "")
	If agentDB.Open(server, filePath) = False Then
		Call Messagebox_Error("データベース[ " &amp; title &amp; " ] が開けません。", "")
		Exit Sub
	End If
	
	'エージェントを取得する
	agentName = curDoc.GetItemValue("AgentName")(0)
	runAgentName = curDoc.GetItemValue("AgentAlias")(0)
	
	If agentName = "" Then agentName = runAgentName
	If runAgentName = "" Then runAgentName = agentName
	
	Set agent = agentDB.GetAgent(runAgentName)
	If agent Is Nothing Then
		Call Messagebox_Error("データベース[ " &amp; title &amp; " ] に エージェント [ " &amp; runAgentName &amp; " ] が見つかりません。", "")
		Exit Sub
	End If
	
	Dim agSevName As New NotesName(agent.ServerName)
	Dim curSevName As New NotesName(server)
	Dim message As String
	Dim newLine As String
	Dim tabStr As String
	newLine = Chr(13) &amp; Chr(10)
	tabStr = Chr(9)
	
	message = _
	"データベース名： " &amp; title &amp; newLine &amp;_
	"ファイルパス： " &amp; filePath &amp; newLine &amp;_
	"サーバー名： " &amp; server &amp; newLine &amp;_
	"エージェント名： " &amp; agentName &amp; newLine &amp;_
	"実行名： " &amp; runAgentName &amp; newLine &amp; _
	"署名者： " &amp; agent.CommonOwner
	
	If agent.ServerName = ""Then
		message = message &amp; newLine &amp; newLine &amp;_
		"エージェント実行サーバーは「エージェントが有効になった時にサーバーを指定」です。"
		
	Elseif agent.ServerName = "*"Then
		
		message = message &amp; newLine &amp; newLine &amp;_
		"エージェント実行サーバーは「-全てのサーバー-」です。"
		
	Elseif agent.ServerName = session.UserName Then
		message = message &amp; newLine &amp; newLine &amp;_
		"エージェント実行サーバーは「ローカル(" &amp; agSevName.Abbreviated &amp;  ")」です。"
		
	Else
		
		message = message &amp; newLine &amp; newLine &amp;_
		"エージェント実行サーバーは「" &amp; agSevName.Abbreviated &amp; "」です。"
		
	End If
	
	message = message &amp; newLine &amp; _
	"上記エージェントを実行します。よろしいですか？"
	
	If 7 = Messagebox_YesNo(message, "確認") Then
		Exit Sub
	End If
	
	Dim runFlag As Long
	runFlag = agent.Run()
	If runFlag = 0 Then
		Call Messagebox_Info("エージェントを実行しました。", "")
	Else
		Call Messagebox_Error("エージェントを実行しましたが、エラーが発生しています。ログを確認してください。", "")
	End If
	
	Exit Sub
	
	Exit Sub
ErrorHandle:
	Call SetErrorObject(Err, Error)
	Call Messagebox_Error(GetErrorMessage(), "")
	Call ClearErrorObject()
	Exit Sub
End Sub</lotusscript></code>
<rundata processeddocs='0' exitcode='0' agentdata='3FB35854FA6B7A5449257A1D000D3DAD'>
<agentmodified><datetime>20181031T100052,68+09</datetime></agentmodified>
<agentrun><datetime>20190401T174922,21+09</datetime></agentrun>
<runlog>エージェント (ノーツ - エージェントのクライアント実行)|RunAgentOnClient の 2019/04/01 17:49:18 での実行が開始しました。
LotusScript を実行しました
エージェント (ノーツ - エージェントのクライアント実行)|RunAgentOnClient の実行が終了しました。(2019/04/01 17:49:22)
</runlog></rundata>
<item name='$POID'><datetime>20140930T200606,87+09</datetime></item></agent>

<agent name='(ノーツ - エージェントのサーバー実行)' alias='RunAgentOnServer' hide='v3' publicaccess='false'
 designerversion='7' restrictions='unrestricted'>
<noteinfo noteid='2ea' unid='12637EE558539B9E4925770C0003FF29' sequence='56'>
<created><datetime>20100421T094339,29+09</datetime></created>
<modified><datetime>20181031T100052,71+09</datetime></modified>
<revised><datetime>20181031T100052,70+09</datetime></revised>
<lastaccessed><datetime>20181031T100052,71+09</datetime></lastaccessed>
<addedtofile><datetime>20100916T212038,16+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby>
<wassignedby><name>CN=Administrator/O=Comture</name></wassignedby>
<designchange><datetime>20181031T100052,68+09</datetime></designchange>
<trigger type='agentlist'/>
<documentset type='runonce'/><code event='options'><lotusscript>Option Public
Option Declare
Use "NotesUICommonLib"

</lotusscript></code><code event='initialize'><lotusscript>Sub Initialize
	Dim session As New NotesSession
	Call SetProcess(session.CurrentAgent.Name)
	Call Main()
End Sub
</lotusscript></code><code event='Main'><lotusscript>Sub Main()
	On Error Goto ErrorHandle
	
	Dim session As New NotesSession
	Dim curDB As NotesDatabase
	Dim unpro As NotesDocumentCollection
	
	Set curDB = session.CurrentDatabase
	Set unpro = curDB.UnprocessedDocuments
	
	If unpro.Count &lt;&gt; 1 Then
		Call Messagebox_Error("１文書のみ選択してください。", "")
		Exit Sub
	End If
	
	Dim curDoc As NotesDocument
	
	Dim agentDB As NotesDatabase
	Dim agent As NotesAgent
	Dim agentName As String
	Dim runAgentName As String
	Dim server As String
	Dim filePath As String
	Dim title As String
	
	Set curDoc = unpro.GetFirstDocument()
	Dim pdoc As NotesDocument
	Set pdoc = curDB.GetDocumentByUNID(curDoc.ParentDocumentUNID)
	
	'エージェントの実行サーバー名
	server = pdoc.GetItemValue("DbServer")(0)
	
	'データベースのファイルパス
	filePath = pdoc.GetItemValue("DbFilePath")(0)
	If filePath = "" Then
		Call Messagebox_Error("データベースのファイルパスが設定されていません。", "")
		Exit Sub
	End If
	
	'データベースのタイトル
	title = pdoc.GetItemValue("DbTitle")(0)
	If title = "" Then
		If server = "" Then
			title = filePath
		Else
			title = server &amp; "!!" &amp; filePath
		End If
	End If
	
	'データベースを取得する
	Set agentDB = New NotesDatabase("", "")
	If agentDB.Open(server, filePath) = False Then
		Call Messagebox_Error("データベース[ " &amp; title &amp; " ] が開けません。", "")
		Exit Sub
	End If
	
	'エージェントを取得する
	agentName = curDoc.GetItemValue("AgentName")(0)
	runAgentName = curDoc.GetItemValue("AgentAlias")(0)
	
	If agentName = "" Then agentName = runAgentName
	If runAgentName = "" Then runAgentName = agentName
	
	Set agent = agentDB.GetAgent(runAgentName)
	If agent Is Nothing Then
		Call Messagebox_Error("データベース[ " &amp; title &amp; " ] に エージェント [ " &amp; runAgentName &amp; " ] が見つかりません。", "")
		Exit Sub
	End If
	
	Dim agSevName As New NotesName(agent.ServerName)
	Dim curSevName As New NotesName(server)
	Dim message As String
	Dim newLine As String
	Dim tabStr As String
	newLine = Chr(13) &amp; Chr(10)
	tabStr = Chr(9)
	
	message = _
	"データベース名： " &amp; title &amp; newLine &amp;_
	"ファイルパス： " &amp; filePath &amp; newLine &amp;_
	"サーバー名： " &amp; server &amp; newLine &amp;_
	"エージェント名： " &amp; agentName &amp; newLine &amp;_
	"実行名： " &amp; runAgentName &amp; newLine &amp; _
	"署名者： " &amp; agent.CommonOwner
	
	If agent.ServerName = ""Then
		message = message &amp; newLine &amp; newLine &amp;_
		"エージェント実行サーバーは「エージェントが有効になった時にサーバーを指定」です。"
		
	Elseif agent.ServerName = "*"Then
		
		message = message &amp; newLine &amp; newLine &amp;_
		"エージェント実行サーバーは「-全てのサーバー-」です。"
		
	Elseif agent.ServerName = session.UserName Then
		message = message &amp; newLine &amp; newLine &amp;_
		"エージェント実行サーバーは「ローカル(" &amp; agSevName.Abbreviated &amp;  ")」です。"
		
	Else
		
		message = message &amp; newLine &amp; newLine &amp;_
		"エージェント実行サーバーは「" &amp; agSevName.Abbreviated &amp; "」です。"
		
	End If
	
	message = message &amp; newLine &amp; _
	"上記エージェントを実行します。よろしいですか？"
	
	If 7 = Messagebox_YesNo(message, "確認") Then
		Exit Sub
	End If
	
	Dim runFlag As Long
	runFlag = agent.RunOnServer()
	If runFlag = 0 Then
		Call Messagebox_Info("エージェントを実行しました。", "")
	Else
		Call Messagebox_Error("エージェントを実行しましたが、エラーが発生しています。ログを確認してください。", "")
	End If
	
	Exit Sub
	
	Exit Sub
ErrorHandle:
	Call SetErrorObject(Err, Error)
	Call Messagebox_Error(GetErrorMessage(), "")
	Call ClearErrorObject()
	Exit Sub
End Sub</lotusscript></code>
<rundata processeddocs='0' exitcode='0' agentdata='DEE6B9B68C0F99D0492579FE001F43C5'>
<agentmodified><datetime>20181031T100052,71+09</datetime></agentmodified>
<agentrun><datetime>20190426T170642,52+09</datetime></agentrun>
<runlog>エージェント (ノーツ - エージェントのサーバー実行)|RunAgentOnServer の 2019/04/26 17:06:40 での実行が開始しました。
LotusScript を実行しました
エージェント (ノーツ - エージェントのサーバー実行)|RunAgentOnServer の実行が終了しました。(2019/04/26 17:06:42)
</runlog></rundata>
<item name='$POID'><datetime>20140930T200606,89+09</datetime></item></agent>

<agent name='(ノーツ - 設計置換の禁止チェック解除)' alias='UpdateProhibitionRelease' hide='v3'
 publicaccess='false' designerversion='8' restrictions='unrestricted'>
<noteinfo noteid='2f2' unid='285328A4BAE87AFD4925774A00180770' sequence='54'>
<created><datetime>20100622T132227,68+09</datetime></created>
<modified><datetime>20181031T100052,79+09</datetime></modified>
<revised><datetime>20181031T100052,78+09</datetime></revised>
<lastaccessed><datetime>20181031T100052,79+09</datetime></lastaccessed>
<addedtofile><datetime>20100916T212038,16+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby>
<wassignedby><name>CN=Administrator/O=Comture</name></wassignedby>
<designchange><datetime>20181031T100052,76+09</datetime></designchange>
<trigger type='agentlist'/>
<documentset type='runonce'/><code event='options'><lotusscript>Option Public
Option Declare
Use "NotesUICommonLib"

</lotusscript></code><code event='initialize'><lotusscript>Sub Initialize()
	Call Main()
End Sub

</lotusscript></code><code event='Main'><lotusscript>Sub Main()
	On Error Goto ErrorHandle
	
	Dim workSpace As New NotesUIWorkspace
	Dim dbPathArray As Variant
	Dim server As String
	Dim filePath As String
	Dim title As String
	
	dbPathArray = workSpace.Prompt(13, "", "")
	If Isempty(dbPathArray) Then
		Exit Sub
	End If
	
	server = dbPathArray(0)
	filePath = dbPathArray(1)
	title = dbPathArray(2)
	
	Dim db As New NotesDatabase("", "")
	
	If db.Open(server, filePath) = False Then
		Call Messagebox_Error(title &amp; "(" &amp; server &amp; "!!" &amp; filePath &amp; ") データベースが開けません。", "")
		Exit Sub
	End If
	
	Call Messagebox_Info("ビュー設計を更新します。", "")
	
	Call ProhibitionRelease(db)
	
	Call Messagebox_Info("処理が終了しました。", "")
	
	Exit Sub
ErrorHandle:
	Call SetErrorObject(Err, Error)
	Call Messagebox_Error(GetErrorMessage(), "")
	Call ClearErrorObject()
	Exit Sub
End Sub

</lotusscript></code><code event='ProhibitionRelease'><lotusscript>Sub ProhibitionRelease(db As NotesDatabase)
	On Error Goto errorhandle
	
	Dim notes As NotesNoteCollection
	Dim note As NotesDocument
	Dim noteID As String
	
	Dim itemFlags As NotesItem
	Dim flags As String
	Dim count As Long
	
	Set notes = db.Createnotecollection(False)
	Call notes.SelectAllDesignElements(True)
	notes.SelectionFormula = {@Matches($Flags;"P")}
	Call notes.Buildcollection()
	
	noteID = notes.Getfirstnoteid()
	
	Do Until noteID = ""
		
		Set note = db.Getdocumentbyid(noteID)
		If Not note Is Nothing Then
			'is view
			'Set itemFlags = note.Getfirstitem("$Flags")
			flags = note.Getitemvalue("$Flags")(0)
			If Instr(flags, "P") &lt;&gt; 0 Then
				Call note.ReplaceItemValue("$Flags", Evaluate(|@Replacesubstring($Flags; "P"; "")|, note))
				Call note.Sign()
				Call note.Save(True, True)
				count = count + 1
				Print count &amp; "件 処理しました。"
			End If
		End If
		noteID = notes.Getnextnoteid(noteID)
	Loop
	
	Set notes = db.CreateNoteCollection(False)
	
	notes.SelectIcon = True
	notes.SelectHelpAbout = True
	notes.SelectHelpUsing = True
	notes.SelectDatabaseScript = True
	notes.SelectionFormula = {!@Matches($Flags;"R")}
	
	Call notes.BuildCollection()
	
	noteID = notes.Getfirstnoteid()
	
	Do Until noteID = ""
		
		Set note = db.Getdocumentbyid(noteID)
		If Not note Is Nothing Then
			If note.HasItem("$Flags") Then
				flags = note.Getitemvalue("$Flags")(0)
				If Instr(flags, "R") = 0 Then
					Call note.ReplaceItemValue("$Flags", flags &amp; "R")
'					Call note.ReplaceItemValue("$Flags", Evaluate(|Field $Flags := @Trim($Flags:"R");|, note))
					Call note.Sign()
					Call note.Save(True, True)
					count = count + 1
					Print count &amp; "件 処理しました。"
				End If
			End If
		End If
		noteID = notes.Getnextnoteid(noteID)
	Loop
	
	
	Exit Sub
ErrorHandle:
	Call SetErrorObject(Err, Error)
	Error Err, Error
	Exit Sub
End Sub</lotusscript></code>
<rundata processeddocs='0' exitcode='0' agentdata='BEAF18645F913DE649257DE20024234F'>
<agentmodified><datetime>20150204T153429,30+09</datetime></agentmodified>
<agentrun><datetime>20150204T153502,56+09</datetime></agentrun>
<runlog>エージェント (ノーツ - 設計置換の禁止チェック解除)|UpdateProhibitionRelease の 2015/02/04 15:34:44 での実行が開始しました。
LotusScript を実行しました
エージェント (ノーツ - 設計置換の禁止チェック解除)|UpdateProhibitionRelease の実行が終了しました。(2015/02/04 15:35:02)
</runlog></rundata>
<item name='$POID'><datetime>20150204T153429,28+09</datetime></item></agent>

<note class='form'>
<noteinfo noteid='2f6' unid='0EF82AFC730F3D294925770C0002A05F' sequence='7'>
<created><datetime>20100421T092841,27+09</datetime></created>
<modified><datetime>20150528T093235,10+09</datetime></modified>
<revised><datetime>20140930T200605,92+09</datetime></revised>
<lastaccessed><datetime>20150528T093235,10+09</datetime></lastaccessed>
<addedtofile><datetime>20100916T212038,19+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=PSL85/O=Comture</name></updatedby>
<item name='$Flags'><text>~C4g</text></item>
<item name='$TITLE'><text>.classpath</text></item>
<item name='$FileSize' sign='true'><number>332</number></item>
<item name='$FileData' sign='true'>
<rawitemdata type='1'>
YQAYAAAAAABMAQAAAQAAAAAAAAAAAAAAYABeAQAATAFMAQAAAAAAAAAAPD94bWwgdmVyc2lvbj0i
MS4wIiBlbmNvZGluZz0iVVRGLTgiPz4NCjxjbGFzc3BhdGg+DQoJPGNsYXNzcGF0aGVudHJ5IGtp
bmQ9InNyYyIgcGF0aD0iTG9jYWwiLz4NCgk8Y2xhc3NwYXRoZW50cnkga2luZD0iY29uIiBwYXRo
PSJvcmcuZWNsaXBzZS5qZHQubGF1bmNoaW5nLkpSRV9DT05UQUlORVIiLz4NCgk8Y2xhc3NwYXRo
ZW50cnkga2luZD0iY29uIiBwYXRoPSJvcmcuZWNsaXBzZS5wZGUuY29yZS5yZXF1aXJlZFBsdWdp
bnMiLz4NCgk8Y2xhc3NwYXRoZW50cnkga2luZD0ib3V0cHV0IiBwYXRoPSJXZWJDb250ZW50L1dF
Qi1JTkYvY2xhc3NlcyIvPg0KPC9jbGFzc3BhdGg+DQo=
</rawitemdata></item>
<item name='$FileNames' sign='true'><text>.classpath</text></item></note>

<note class='form'>
<noteinfo noteid='2fa' unid='F7BD907353423CF24925770C0002A0AD' sequence='74'>
<created><datetime>20100421T092842,05+09</datetime></created>
<modified><datetime>20190531T135906,41+09</datetime></modified>
<revised><datetime>20190531T135906,40+09</datetime></revised>
<lastaccessed><datetime>20190531T135906,41+09</datetime></lastaccessed>
<addedtofile><datetime>20100916T212038,19+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby>
<wassignedby><name>CN=Administrator/O=Comture</name></wassignedby>
<item name='$TITLE'><text>.project</text></item>
<item name='$$ScriptName' summary='false' sign='true'><text>.project</text></item>
<item name='$Flags'><text>~C4gP</text></item>
<item name='$DesignerVersion'><text>8.5.3</text></item>
<item name='$FileSize' sign='true'><number>1911</number></item>
<item name='$FileData' sign='true'>
<rawitemdata type='1'>
YQAYAAAAAAB3BwAAAQAAAAAAAAAAAAAAYACJBwAAdwd4BwAAAAAAAAAAPD94bWwgdmVyc2lvbj0i
MS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPHByb2plY3REZXNjcmlwdGlvbj4KICA8bmFtZT5kYnRv
b2wubnNmPC9uYW1lPgogIDxjb21tZW50Lz4KICA8cHJvamVjdHMvPgogIDxidWlsZFNwZWM+CiAg
ICA8YnVpbGRDb21tYW5kPgogICAgICA8bmFtZT5jb20uaWJtLmRlc2lnbmVyLmRvbWluby50ZWFt
LmJ1aWxkZXIuTnNmVG9QaHlzaWNhbFN5bkJ1aWxkZXI8L25hbWU+CiAgICAgIDxhcmd1bWVudHMv
PgogICAgPC9idWlsZENvbW1hbmQ+CiAgICA8YnVpbGRDb21tYW5kPgogICAgICA8bmFtZT5jb20u
aWJtLmRlc2lnbmVyLmRvbWluby5qYXZhbGliLmphdmFsaWJtYXJrZXJidWlsZGVyPC9uYW1lPgog
ICAgICA8YXJndW1lbnRzLz4KICAgIDwvYnVpbGRDb21tYW5kPgogICAgPGJ1aWxkQ29tbWFuZD4K
ICAgICAgPG5hbWU+Y29tLmlibS5kZXNpZ25lci5kb21pbm8uZGVzaWduLmpzdmFsaWRhdGlvbmJ1
aWxkZXI8L25hbWU+CiAgICAgIDxhcmd1bWVudHMvPgogICAgPC9idWlsZENvbW1hbmQ+CiAgICA8
YnVpbGRDb21tYW5kPgogICAgICA8bmFtZT5vcmcuZWNsaXBzZS5wZGUuTWFuaWZlc3RCdWlsZGVy
PC9uYW1lPgogICAgICA8YXJndW1lbnRzLz4KICAgIDwvYnVpbGRDb21tYW5kPgogICAgPGJ1aWxk
Q29tbWFuZD4KICAgICAgPG5hbWU+Y29tLmlibS5kZXNpZ25lci5kb21pbm8uaWRlLnJlc291cmNl
cy5mYWNlc0NvbmZpZ2J1aWxkZXI8L25hbWU+CiAgICAgIDxhcmd1bWVudHMvPgogICAgPC9idWls
ZENvbW1hbmQ+CiAgICA8YnVpbGRDb21tYW5kPgogICAgICA8bmFtZT5jb20uaWJtLmRlc2lnbmVy
LmRvbWluby5pZGUucmVzb3VyY2VzLkJ1aWxkUHJvcGVydGllc0J1aWxkZXI8L25hbWU+CiAgICAg
IDxhcmd1bWVudHMvPgogICAgPC9idWlsZENvbW1hbmQ+CiAgICA8YnVpbGRDb21tYW5kPgogICAg
ICA8bmFtZT5jb20uaWJtLmRlc2lnbmVyLmRvbWluby5pZGUucmVzb3VyY2VzLnBsdWdpblhNTGJ1
aWxkZXI8L25hbWU+CiAgICAgIDxhcmd1bWVudHMvPgogICAgPC9idWlsZENvbW1hbmQ+CiAgICA8
YnVpbGRDb21tYW5kPgogICAgICA8bmFtZT5jb20uaWJtLmRlc2lnbmVyLmRvbWluby5pZGUucmVz
b3VyY2VzLkxXUERCdWlsZGVyPC9uYW1lPgogICAgICA8YXJndW1lbnRzLz4KICAgIDwvYnVpbGRD
b21tYW5kPgogICAgPGJ1aWxkQ29tbWFuZD4KICAgICAgPG5hbWU+Y29tLmlibS5kZXNpZ25lci5k
b21pbm8ubHNjcmlwdC5MU0J1aWxkZXI8L25hbWU+CiAgICAgIDxhcmd1bWVudHMvPgogICAgPC9i
dWlsZENvbW1hbmQ+CiAgICA8YnVpbGRDb21tYW5kPgogICAgICA8bmFtZT5vcmcuZWNsaXBzZS5w
ZGUuU2NoZW1hQnVpbGRlcjwvbmFtZT4KICAgICAgPGFyZ3VtZW50cy8+CiAgICA8L2J1aWxkQ29t
bWFuZD4KICAgIDxidWlsZENvbW1hbmQ+CiAgICAgIDxuYW1lPmNvbS5pYm0uZGVzaWduZXIuZG9t
aW5vLnhzcC5lZGl0b3IueHBhZ2VzYnVpbGRlcjwvbmFtZT4KICAgICAgPGFyZ3VtZW50cy8+CiAg
ICA8L2J1aWxkQ29tbWFuZD4KICAgIDxidWlsZENvbW1hbmQ+CiAgICAgIDxuYW1lPm9yZy5lY2xp
cHNlLmpkdC5jb3JlLmphdmFidWlsZGVyPC9uYW1lPgogICAgICA8YXJndW1lbnRzLz4KICAgIDwv
YnVpbGRDb21tYW5kPgogIDwvYnVpbGRTcGVjPgogIDxuYXR1cmVzPgogICAgPG5hdHVyZT5jb20u
aWJtLndvcmtwbGFjZS5ub3Rlcy5maWxlc3lzdGVtLkRETmF0dXJlPC9uYXR1cmU+CiAgICA8bmF0
dXJlPm9yZy5lY2xpcHNlLmpkdC5jb3JlLmphdmFuYXR1cmU8L25hdHVyZT4KICAgIDxuYXR1cmU+
b3JnLmVjbGlwc2UucGRlLlBsdWdpbk5hdHVyZTwvbmF0dXJlPgogICAgPG5hdHVyZT5vcmcuZWNs
aXBzZS53c3QuanNkdC5jb3JlLmpzTmF0dXJlPC9uYXR1cmU+CiAgPC9uYXR1cmVzPgo8L3Byb2pl
Y3REZXNjcmlwdGlvbj4KZw==
</rawitemdata></item>
<item name='$FileNames' sign='true'><text>.project</text></item></note>

<subform name='データ入力' alias='subDataInput' designerversion='5'>
<noteinfo noteid='2fe' unid='07D3D4852C2240D549257711000E2FBB' sequence='12'>
<created><datetime>20100426T113457,23+09</datetime></created>
<modified><datetime>20181031T100053,34+09</datetime></modified>
<revised><datetime>20181031T100053,06+09</datetime></revised>
<lastaccessed><datetime>20181031T100053,34+09</datetime></lastaccessed>
<addedtofile><datetime>20100916T212038,19+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby>
<wassignedby><name>CN=Administrator/O=Comture</name></wassignedby>
<body><richtext>
<pardef id='1'/>
<par def='1'/>
<pardef id='2' hide='notes web'/>
<par def='2'><field type='text' kind='computed' name='Separator'><code event='defaultvalue'><formula
>tmp1 := SelectSeparator;
REM {複数値ではない|0 改行|1 スペース|2 カンマ|3 コロン|4 セミコロン|5 };

REM {@If(tmp1="1"; @Char(13)+@Char(10);};
REM {@If(tmp1="1"; @NewLine;};
@If(tmp1="1"; @Char(13)+@Char(10);
tmp1="2";" ";
tmp1="3";",";
tmp1="4";":";
tmp1="5";";";
"")</formula></code></field></par>
<par def='2'><field type='text' allowmultivalues='true' kind='computed' name='FieldNames'
 listinputseparators='comma semicolon' listdisplayseparator='semicolon'><code
 event='defaultvalue'><formula>FieldNames</formula></code></field></par>
<par def='1'/><compositedata type='183' prevtype='129' nexttype='131' afterparcount='1'>
txygBUEd2QkPAAAASAAAAAAAAAAAAAAAAAAAAA==
</compositedata>
<par def='1'/><compositedata type='184' prevtype='129' nexttype='131' afterparcount='1'>
uCqwCpAAaQEhAQEAAAoBAAUA////AAAAAJAAAAAAAAAAAAAAAAAAAAAA
</compositedata>
<par def='1'>型：</par><compositedata type='186' prevtype='129' nexttype='131'
 afterparcount='1'>
uioYDJAAgQceAQEAAAoBAAEA////AAEAAAAEAAAAAAAAAAAAAAAAAAAA
</compositedata>
<par def='1'><field borderstyle='inset' lookupeachchar='false' lookupaddressonrefresh='false'
 type='keyword' kind='editable' name='DataType'><keywords helperbutton='false'
 columns='1' ui='combobox'><textlist><text>テキスト|0</text><text>数値（整数）|1</text><text
>数値（不動少数）|2</text><text>日付/時刻|3</text><text>日付|4</text><text>時刻|5</text></textlist></keywords><code
 event='defaultvalue'><formula>"0"</formula></code></field></par><compositedata
 type='184' prevtype='129' nexttype='131' afterparcount='1'>
uCr4E5AA8QMhAQEAAAoBAAUA////AAAAAJAAAAAAAAAAAAAAAAAAAAAA
</compositedata>
<par def='1'>セパレータ：</par><compositedata type='186' prevtype='129' nexttype='131'
 afterparcount='1'>
uiroF5AAgQceAQEAAAoBAAEA////AAEAAAAEAAAAAAAAAAAAAAAAAAAA
</compositedata>
<par def='1'><field borderstyle='inset' lookupeachchar='false' lookupaddressonrefresh='false'
 type='keyword' kind='editable' name='SelectSeparator'><keywords helperbutton='false'
 recalconchange='true' columns='1' ui='combobox'><textlist><text>複数値ではない|0</text><text
>改行|1</text><text>スペース|2</text><text>カンマ|3</text><text>コロン|4</text><text>セミコロン|5</text></textlist></keywords><code
 event='defaultvalue'><formula>"0"</formula></code></field></par><compositedata
 type='186' prevtype='129' nexttype='131' afterparcount='1'>
uioYDPADORZZBQEAAAoBAAEA////AAIAAAAAAAAAAAAAAAAAAAAAAAAA
</compositedata>
<par def='1'><field type='text' kind='editable' name='TextData'><code event='defaultvalue'><formula
>TestData</formula></code></field></par><compositedata type='186' prevtype='129'
 nexttype='131' afterparcount='1'>
uirIH5AAiQIhAQEBAAwPAAUAwMDAAAkAABAAAAAAAAAAAAAAAAAAAAAA
</compositedata>
<par def='1'><run><font size='12pt' style='bold'/><field type='text' kind='computedfordisplay'
 name='DspSeparator'><code event='defaultvalue'><formula>Separator</formula></code></field></run></par><compositedata
 type='184' prevtype='129' nexttype='131' afterparcount='1'>
uCrgB/ADOQQhAQEAAAoBAAUA////AAAAAJAAAAAAAAAAAAAAAAAAAAAA
</compositedata>
<par def='1'>入力データ：</par><compositedata type='184' prevtype='129' nexttype='131'
 afterparcount='1'>
uCowBvgB6QUhAQEAAAoBAAUA////AAAAAJAAAAAAAAAAAAAAAAAAAAAA
</compositedata>
<par def='1'>入力先フィールド：</par><compositedata type='186' prevtype='129' nexttype='131'
 afterparcount='1'>
uioYDEACsRMeAQEAAAoBAAEA////AAEAAAAAAAAAAAAAAAAAAAAAAAAA
</compositedata>
<par def='1'><field defaultfocus='true' type='text' kind='editable' name='SelectField'><code
 event='defaultvalue'><formula>""</formula></code></field></par><compositedata
 type='194' prevtype='129' nexttype='131' afterparcount='1'>
wirIH/gBlQJ4AQEAAAgBAAEA////AAAAAAAAAAAAAAAAAAAAAAAAAAAA
</compositedata>
<par def='1'><button width='2in' widthtype='maximum' maxlines='1' wraptext='true'><code
 event='click'><formula>tmp1 := @Prompt([OkCancelEditCombo]:[NoSort];"フィールド名選択";"フィールド名を選択します";SelectField;FieldNames);
@SetField("SelectField";tmp1)</formula></code><font size='8pt'/>参照</button><compositedata
 type='185' prevtype='222' nexttype='129' afterparcount='8'>
uRIAAAAAAAAAAAAAAAAAAAAA
</compositedata></par>
<par def='1'/></richtext></body>
<item name='NumData' summary='false' sign='true'><number>0</number></item>
<item name='DateTimeData' summary='false' sign='true'>
<rawitemdata type='400'>
AAAAAAAAAAA=
</rawitemdata></item>
<item name='DateData' summary='false' sign='true'>
<rawitemdata type='400'>
AAAAAAAAAAA=
</rawitemdata></item>
<item name='TimeData' summary='false' sign='true'>
<rawitemdata type='400'>
AAAAAAAAAAA=
</rawitemdata></item>
<item name='$$ScriptName' summary='false' sign='true'><text>subDataInput</text></item></subform>

<subform name='単一データ入力' alias='dbtool_DataInputSimple' designerversion='8.5'
 renderpassthrough='true'>
<noteinfo noteid='302' unid='119F4B9CE2C2CAF849257751000B58A3' sequence='12'>
<created><datetime>20100629T110355,87+09</datetime></created>
<modified><datetime>20181031T100053,38+09</datetime></modified>
<revised><datetime>20181031T100053,37+09</datetime></revised>
<lastaccessed><datetime>20181031T100053,38+09</datetime></lastaccessed>
<addedtofile><datetime>20100916T212038,19+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby>
<wassignedby><name>CN=Administrator/O=Comture</name></wassignedby>
<body><richtext>
<pardef id='1'/>
<par def='1'/><compositedata type='183' prevtype='129' nexttype='131' afterparcount='1'>
txygBcEhcQgvAAAASAAAAAAAAAAAAAAAAAAAAA==
</compositedata>
<par def='1'/><compositedata type='186' prevtype='129' nexttype='65410' afterparcount='1'>
uiowBpAAoSBRBwEAAAoBAAEA////AAEAAAAAAAAAAAAAAAAAAAAAAAAA
</compositedata>
<pardef id='2'/>
<par def='2'><field type='text' kind='editable' name='InputData'/><compositedata
 type='98' prevtype='65418' nexttype='222' afterparcount='7' containertype='65418'
 aftercontainercount='1' afterbegincount='3'>
Yg4BAIQAAAAAAAAAAAA=
</compositedata><compositedata
 type='185' prevtype='222' nexttype='129' afterparcount='9'>
uRIAAAAAAAAAAAAAAAAAAAAA
</compositedata></par>
<par def='1'/></richtext></body>
<item name='$$ScriptName' summary='false' sign='true'><text>dbtool_DataInputSimple</text></item></subform>

<frameset name='値代入フレーム' alias='RepValFrame' publicaccess='false' designerversion='8'
 rows='33px 94%' spacing='0px' borderwidth='2px' bordercolor='black'>
<noteinfo noteid='306' unid='F735ED69BAE667EC49257711000A52ED' sequence='17'>
<created><datetime>20100426T105245,89+09</datetime></created>
<modified><datetime>20150528T093235,28+09</datetime></modified>
<revised><datetime>20140930T200606,00+09</datetime></revised>
<lastaccessed><datetime>20150528T093235,28+09</datetime></lastaccessed>
<addedtofile><datetime>20100916T212038,19+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=PSL85/O=Comture</name></updatedby>
<frame scrolling='never' noresize='true'><bordercaption><font size='9pt' color='white'/></bordercaption><namedelementlink
 type='page' name='ActionPage'/></frame>
<frame><bordercaption><font size='9pt' color='white'/></bordercaption><urllink
><code event='value'><formula>UNID := @Environment("Rep_Val_UNID");
PUNID := @GetDocField(UNID; "$REF");
tmpServer := @Name([CN];@GetDocField(PUNID; "DbServer"));
server := @If(tmpServer="";@Name([CN];@Subset(@DbName;1)); tmpServer);
repid:=@GetDocField(PUNID; "DbReplicaID");
viewUNID:=@GetDocField(UNID; "ViewUNID");
url:="notes://"+@Text(server)+"/"+@Text(repid)+"/"+@Text(viewUNID)+"?OpenView";
url</formula></code></urllink></frame></frameset>

<agentdata>
<noteinfo noteid='312' unid='993FB376ED581900492577CE001DACBD' sequence='1'>
<created><datetime>20101101T142407,65+09</datetime></created>
<modified><datetime>20101101T142407,66+09</datetime></modified>
<revised><datetime>20101101T142407,65+09</datetime></revised>
<lastaccessed><datetime>20101101T142407,65+09</datetime></lastaccessed>
<addedtofile><datetime>20101101T142407,65+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=COMTURE</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='31a' unid='93ABF5A2EE2263C0492577CE001DC2FC' sequence='1'>
<created><datetime>20101101T142504,60+09</datetime></created>
<modified><datetime>20101101T142504,61+09</datetime></modified>
<revised><datetime>20101101T142504,60+09</datetime></revised>
<lastaccessed><datetime>20101101T142504,60+09</datetime></lastaccessed>
<addedtofile><datetime>20101101T142504,60+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=COMTURE</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='346' unid='D11E6EC9D112FB9B492577CE001F2D8E' sequence='1'>
<created><datetime>20101101T144032,78+09</datetime></created>
<modified><datetime>20101101T144032,79+09</datetime></modified>
<revised><datetime>20101101T144032,78+09</datetime></revised>
<lastaccessed><datetime>20101101T144032,78+09</datetime></lastaccessed>
<addedtofile><datetime>20101101T144032,78+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=COMTURE</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='34a' unid='FCBE23B4BF56663C492577CE001F301C' sequence='1'>
<created><datetime>20101101T144039,32+09</datetime></created>
<modified><datetime>20101101T144039,33+09</datetime></modified>
<revised><datetime>20101101T144039,32+09</datetime></revised>
<lastaccessed><datetime>20101101T144039,32+09</datetime></lastaccessed>
<addedtofile><datetime>20101101T144039,32+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=COMTURE</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='34e' unid='78EDBC391BE2520A492577CE001F35C6' sequence='1'>
<created><datetime>20101101T144053,82+09</datetime></created>
<modified><datetime>20101101T144053,83+09</datetime></modified>
<revised><datetime>20101101T144053,82+09</datetime></revised>
<lastaccessed><datetime>20101101T144053,82+09</datetime></lastaccessed>
<addedtofile><datetime>20101101T144053,82+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=COMTURE</name></updatedby></agentdata>

<view name='(20.Teamstadio)\(02.デルタ)' alias='DeltaSetting' showinmenu='false'
 publicaccess='false' designerversion='8.5' unreadmarks='none' onopengoto='lastopened'
 onrefresh='displayindicator' headers='simple' opencollapsed='false' showresponsehierarchy='false'
 showmargin='true' shrinkrows='true' extendlastcolumn='false' showhierarchies='false'
 unreadcolor='black' rowlinecount='3' headerlinecount='1' rowspacing='1.25'
 bgcolor='white' altrowcolor='#efefef' totalscolor='black' headerbgcolor='#e1e1e1'
 boldunreadrows='false' evaluateactions='false' allownewdocuments='false'
 allowcustomizations='false' hidemarginborder='false' marginwidth='0px' marginbgcolor='white'
 gridstyle='solid' gridcolor='#e1e1e1' uniquekeys='false' formatnoteid='7F3CB7A21A0117B5492576C8002C12A4'>
<noteinfo noteid='3a2' unid='F0E8B1203A852CA24925790C003190D0' sequence='114'>
<created><datetime>20110915T180123,36+09</datetime></created>
<modified><datetime>20181031T100054,29+09</datetime></modified>
<revised><datetime>20181031T100054,28+09</datetime></revised>
<lastaccessed><datetime>20181031T100054,29+09</datetime></lastaccessed>
<addedtofile><datetime>20110915T180123,38+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby>
<wassignedby><name>CN=Administrator/O=Comture</name></wassignedby><code event='selection'><formula
>SELECT ((Form = "(TM02.DeltaSetting)") | (Form = "DeltaSetting")) &amp; (@Contains(Status; "79"))</formula></code>
<actionbar bgcolor='#d4d0c8' bordercolor='black'>
<actionbuttonstyle showdropdown='true' bgcolor='#d4d0c8'/><font color='system'/><border
 style='solid' width='0px 0px 1px'/>
<sharedactionref id='3'>
<action title='閉じる(_X)' icon='112'><code event='click'><formula>FIELD SaveOptions:="0";
@Command([FileCloseWindow])</formula></code><code event='label'><formula>"閉じる"</formula></code></action></sharedactionref></actionbar>
<column resort='both' hidedetailrows='false' itemname='$8' width='1' resizable='true'
 separatemultiplevalues='false' sortnoaccent='false' sortnocase='true' showaslinks='false'
 showasicons='true'><columnheader><font size='9pt' style='bold'/></columnheader><code
 event='value'><formula>tmp:=@TextToNumber(Status);
@If(@IsError(tmp);0;tmp)</formula></code></column><sharedcolumnref name='DbServer'>
<column sort='ascending' hidedetailrows='false' itemname='$9' width='1' resizable='false'
 separatemultiplevalues='true' sortnoaccent='true' sortnocase='true' showaslinks='false'
 hidecolumntitle='true' categorized='true' twisties='true'><font size='9pt'
 color='teal' style='bold'/><columnheader title='DbServer'><font size='8pt'/></columnheader><code
 event='value'><formula>tmp:=DbServer;
tmp:=@If(tmp="";@Subset(@DbName;1);tmp);
@If(tmp="";"-Local-";tmp)</formula></code><twistieimage><imageref database='0000000000000000'
 name='PlusMinus.gif'/></twistieimage></column></sharedcolumnref><sharedcolumnref
 name='DbFilePath'>
<column sort='ascending' hidedetailrows='false' itemname='$10' width='1' resizable='false'
 separatemultiplevalues='true' sortnoaccent='true' sortnocase='true' showaslinks='false'
 hidecolumntitle='true' categorized='true' twisties='true'><font size='9pt'
 color='teal' style='bold'/><columnheader title='DbFilePath'><font size='8pt'/></columnheader><code
 event='value'><formula>@ReplaceSubstring(@LeftBack(DbFilePath;"\\");"\\";"＼")+" ("+@Text(@DocDescendants)+")"</formula></code><twistieimage
><imageref database='0000000000000000' name='PlusMinus.gif'/></twistieimage></column></sharedcolumnref>
<column resort='both' hidedetailrows='false' itemname='Parent_DbTitle' width='15'
 resizable='true' separatemultiplevalues='false' sortnoaccent='true' sortnocase='true'
 showaslinks='false'><font size='9pt'/><columnheader title='DB1'><font size='8pt'/></columnheader></column>
<column sort='ascending' resort='both' hidedetailrows='false' itemname='$4'
 width='10' resizable='true' separatemultiplevalues='false' sortnoaccent='false'
 sortnocase='true' showaslinks='false'><font size='9pt'/><columnheader title='FileName'><font
 size='8pt'/></columnheader><code event='value'><formula>@RightBack(Parent_DbFilePath;"\\")</formula></code></column>
<column resort='both' hidedetailrows='false' itemname='CompDbTitle' width='15'
 resizable='true' separatemultiplevalues='false' sortnoaccent='false' sortnocase='true'
 showaslinks='false'><font size='9pt'/><columnheader title='DB2'><font size='8pt'/></columnheader></column>
<column resort='both' hidedetailrows='false' itemname='$6' width='10' resizable='true'
 separatemultiplevalues='false' sortnoaccent='false' sortnocase='true' showaslinks='false'><font
 size='9pt'/><columnheader title='FileName'><font size='8pt'/></columnheader><code
 event='value'><formula>@RightBack(CompDbFilePath;"\\")</formula></code></column>
<column hidedetailrows='false' itemname='OutFileTitle' width='15' resizable='true'
 separatemultiplevalues='false' sortnoaccent='false' sortnocase='true' showaslinks='false'><font
 size='9pt'/><columnheader title='Delta Reports'><font size='8pt'/></columnheader></column>
<column hidedetailrows='false' itemname='OutFileName' width='10' resizable='true'
 separatemultiplevalues='false' sortnoaccent='false' sortnocase='true' showaslinks='false'><font
 size='9pt'/><columnheader title='FileName'><font size='8pt'/></columnheader></column>
<column hidedetailrows='false' itemname='OutFilePath' width='20' resizable='true'
 separatemultiplevalues='false' sortnoaccent='false' sortnocase='true' showaslinks='false'><font
 size='9pt'/><columnheader title='Path'><font size='8pt'/></columnheader></column>
<item name='$SelQuery' sign='true'>
<rawitemdata type='f'>
gQYAAAAAif8sAAAAAAABACAAKFRNMDIuRGVsdGFTZXR0aW5nKXxEZWx0YVNldHRpbmeC/zMAIAAA
AAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABBTkQAg/84AAAAAAAABQcA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGAAIAU3RhdHVzNzk=
</rawitemdata></item></view>

<view name='00.データベース設定' showinmenu='false' publicaccess='false' designerversion='8.5.3'
 unreadmarks='none' onopengoto='lastopened' onrefresh='displayindicator' headers='simple'
 opencollapsed='true' showresponsehierarchy='true' showmargin='true' shrinkrows='true'
 extendlastcolumn='true' showhierarchies='false' unreadcolor='black' rowlinecount='3'
 headerlinecount='1' rowspacing='1.25' bgcolor='white' altrowcolor='#efefef'
 totalscolor='black' headerbgcolor='#e1e1e1' boldunreadrows='false' evaluateactions='false'
 allownewdocuments='false' allowcustomizations='true' hidemarginborder='false'
 marginwidth='0px' marginbgcolor='white' gridstyle='solid' gridcolor='#e1e1e1'
 uniquekeys='false' formatnoteid='7F3CB7A21A0117B5492576C8002C12A4'>
<noteinfo noteid='3be' unid='112B5983E96D44EA492578CE0009C09A' sequence='171'>
<created><datetime>20110715T104631,30+09</datetime></created>
<modified><datetime>20190109T165641,62+09</datetime></modified>
<revised><datetime>20190109T165641,59+09</datetime></revised>
<lastaccessed><datetime>20190109T165641,62+09</datetime></lastaccessed>
<addedtofile><datetime>20110915T181808,03+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=comture</name></updatedby>
<globals><code event='options'><lotusscript>Option Public
Option Declare


</lotusscript></code></globals><code event='selection'><formula>SELECT ((Form = "(01.データベース情報)") | (Form = "DbInfoDoc")) | (@Contains($Name;"$profile"))</formula></code>
<actionbar bgcolor='#d4d0c8' bordercolor='black'>
<actionbuttonstyle showdropdown='true' bgcolor='#d4d0c8'/><font color='system'/><border
 style='solid' width='0px 0px 1px'/>
<sharedactionref id='3'>
<action title='閉じる(_X)' icon='112'><code event='click'><formula>FIELD SaveOptions:="0";
@Command([FileCloseWindow])</formula></code><code event='label'><formula>"閉じる"</formula></code></action></sharedactionref>
<sharedactionref id='2'>
<action title='編集(_E)' icon='29' hide='edit previewedit'><code event='click'><formula
>@If(@IsError(@Command([EditDocument]));"";"")</formula></code><code event='label'><formula
>"編集"</formula></code></action></sharedactionref>
<action title='登録\単一選択' showinrightbuttonmenu='true'><imageref name='dbicon.gif'/><code
 event='click'><formula>@Command([Compose];"DbInfoDoc")</formula></code></action>
<action title='登録\一括選択' showinrightbuttonmenu='true' hide='notes web mobile'><code
 event='click'><formula>@Command([ToolsRunMacro];"SelectLocalDir")</formula></code></action>
<action title='登録\一括選択' showinrightbuttonmenu='true'><code event='click'><formula
>@Command([ToolsRunMacro];"SelectDir")</formula></code></action>
<action title='ツールメニュー\ワークスペースにアイコンを追加' icon='119' showinrightbuttonmenu='true'><code
 event='options'><lotusscript>Option Declare
Use "NotesUICommonLib"

</lotusscript></code><code event='click'><lotusscript>Sub Click(Source As Button)
	On Error Goto ErrorHandle
	On Error 4412 Goto Error4412Handle
	On Error 4060 Goto Error4060Handle
	
	Dim workSpace As New NotesUIWorkspace
	Dim curUIView As NotesUIView
	Dim curDB As NotesDatabase
	Dim unpro As NotesDocumentCollection
	
	Set curUIView = workSpace.CurrentView
	Set curDB = curUIView.View.Parent
	Set unpro = curUIView.Documents
	If unpro.Count = 0 Then
		Set unpro = curDB.UnprocessedDocuments
	End If
	
	Dim doc As NotesDocument
	Dim db As NotesDatabase
	
	Set doc = unpro.GetFirstDocument()
	
	Do Until doc Is Nothing
		
		Set db = New NotesDatabase(doc.DbServer(0), doc.DbFilePath(0))
		Call workSpace.AddDatabase(db.Server, db.FilePath)
		
NextLoop:
		Set doc = unpro.GetNextDocument(doc)
	Loop
	
	Call curUIView.DeselectAll()
	Call workSpace.ViewRefresh()
	
ExitTag:
	Exit Sub
Error4412Handle:
Error4060Handle:
	Call SetErrorObject(Err, Error)
	Print "エラー：" &amp; GetErrorMessage()
	Call ClearErrorObject()
	Resume NextLoop
ErrorHandle:
	Call SetErrorObject(Err, Error)
	Call Messagebox_Error(GetErrorMessage(), "")
	Resume ExitTag
End Sub</lotusscript></code></action>
<action title='ツールメニュー\DBコピーして新規作成'><code event='click'><formula>@Command([ToolsRunMacro];"CreateDatabase")</formula></code></action>
<action title='ツールメニュー\DBコピー' showinrightbuttonmenu='true'><code event='click'><formula
>@Command([ToolsRunMacro];"CopyDatabase")</formula></code></action>
<action title='ツールメニュー\DB削除' showinrightbuttonmenu='true'><code event='click'><formula
>@Command([ToolsRunMacro];"RemoveDatabase")</formula></code></action>
<action title='ツールメニュー\セパレータ' showinrightbuttonmenu='true' displaytype='menuseparator'/>
<action title='ツールメニュー\スケジュールエージェントのプロパティを変更' showinrightbuttonmenu='true'><code
 event='click'><formula>@Command([ToolsRunMacro];"ChangeScheduleAgentProperty")</formula></code></action>
<action title='ツールメニュー\Designerで開く' showinrightbuttonmenu='true'><code event='click'><formula
>@Command([ToolsRunMacro];"OpenDesigner")</formula></code></action>
<action title='ツールメニュー\署名' showinrightbuttonmenu='true'><code event='click'><formula
>@Command([ToolsRunMacro];"UpdateSign")</formula></code></action>
<action title='ツールメニュー\セパレータ' showinrightbuttonmenu='true' displaytype='menuseparator'/>
<action title='ツールメニュー\ACL一覧をCSV出力' showinrightbuttonmenu='true'><code event='click'><formula
>@Command([ToolsRunMacro];"OutputACLForCSV")</formula></code></action>
<action title='ツールメニュー\エージェントのプロパティをCSV出力' showinrightbuttonmenu='true'><code
 event='click'><formula>@Command([ToolsRunMacro];"OutputAgentForCSV")</formula></code></action>
<action title='ツールメニュー\エージェントのプロパティをXML出力' showinrightbuttonmenu='true'><code
 event='click'><formula>@Command([ToolsRunMacro];"OutputAgentForXML")</formula></code></action>
<action title='ツールメニュー\設計をXML出力'><code event='click'><formula>@Command([ToolsRunMacro];"OutputDesignForXML")</formula></code></action>
<action title='ツールメニュー\セパレータ' showinrightbuttonmenu='true' displaytype='menuseparator'/>
<action title='ツールメニュー\プロファイル\プロファイル文書のコピー' icon='119' showinrightbuttonmenu='true'><code
 event='options'><lotusscript>Option Declare
Use "NotesUICommonLib"
</lotusscript></code><code event='click'><lotusscript>Sub Click(Source As Button)
	On Error Goto ErrorHandle
	
	Dim workSpace As New NotesUIWorkspace
	Dim session As New NotesSession
	Dim curUIVW As NotesUIView
	
	Dim curDB As NotesDatabase
	Dim unpro As NotesDocumentCollection
	Dim dbInfoDoc As NotesDocument
	
	Dim refDB As NotesDatabase
	Dim server As String
	Dim filePath As String
	Dim title As String
	
	Set curUIVW = workSpace.CurrentView
	If curUIVW Is Nothing Then
		Set curDB = session.CurrentAgent.Parent
		Set unpro = curDB.UnprocessedDocuments
	Else
		Set curDB = curUIVW.View.Parent
		Set unpro = curUIVW.Documents
		If unpro.Count = 0 Then
			Set unpro = curDB.UnprocessedDocuments
		End If
	End If
	
	If unpro.Count=0Then
		Call Messagebox_Alert("文書を選択（チェック）してください。", "")
		Goto ExitTag
	Elseif unpro.Count &lt;&gt; 1 Then
		Call Messagebox_Alert("１文書のみ選択（チェック）してください。", "")
		Goto ExitTag
	End If
	
	Set dbInfoDoc = unpro.GetFirstDocument()
	Set dbInfoDoc = unpro.GetFirstDocument()
	If dbInfoDoc.IsResponse Then
		Set dbInfoDoc = curDB.GetDocumentByUNID(dbInfoDoc.ParentDocumentUNID)
	End If
	If Not curUIVW Is Nothing Then
		Call curUIVW.SelectDocument(dbInfoDoc)
	End If
	
	Set refDB = New NotesDatabase("", "")
	server = dbInfoDoc.GetItemValue("DbServer")(0)
	filePath = dbInfoDoc.GetItemValue("DbFilePath")(0)
	title = dbInfoDoc.GetItemValue("DbTitle")(0)
	
	If refDB.Open(server, filePath) = False Then
		Call Messagebox_Error("データベース[" &amp; title &amp; "]が開けません。", "")
		Goto ExitTag
	End If
	
	Dim profDocCol As NotesDocumentCollection
	Dim profDoc As NotesDocument
	
	Dim aryProfName() As String
	Dim i As Integer
	
	Set profDocCol = refDB.GetProfileDocCollection()
	
	If profDocCol.Count = 0 Then
		Call Messagebox_Alert("指定のデータベースにプロファイル文書は見つかりませんでした。", "")
		Goto ExitTag
	End If
	
	Set profDoc = profDocCol.GetFirstDocument()
	Redim aryProfName(0 To 0)
	
	Do Until profDoc Is Nothing
		
		aryProfName(i) = profDoc.GetItemValue("$Name")(0)
		
		Set profDoc = profDocCol.GetNextDocument(profDoc)
		If Not profDoc Is Nothing Then
			i = i + 1
			Redim Preserve aryProfName(0 To i)
		End If
	Loop
	
	Dim retDlgVal As Variant
	Dim valIndex As Variant
	
	retDlgVal = workSpace.Prompt(PROMPT_OKCANCELLIST, "プロファイルの選択", "コピーするプロファイル文書名を選択してください。", "", aryProfName)
	If Isempty(retDlgVal) Then
		Goto ExitTag
	End If
	
	valIndex = Arraygetindex(aryProfName, retDlgVal)
	
	Set profDoc = profDocCol.GetNthDocument(Clng(valIndex)+1)
	
	Dim tmpDoc As NotesDocument
	
	Set tmpDoc = curDB.CreateDocument
	
	Call profDoc.CopyAllItems(tmpDoc, True)
	
	Call tmpDoc.MakeResponse(dbInfoDoc)
	
	Call tmpDoc.Save(True, True)
	
ExitTag:
	If Not curUIVW Is Nothing Then
		Call curUIVW.DeselectAll()
		Call workSpace.ViewRefresh()
	End If
	Exit Sub
ErrorHandle:
	Call SetErrorObject(Err, Error)
	Call Messagebox_Error(GetErrorMessage(), "")
	Call ClearErrorObject()
	Exit Sub
End Sub</lotusscript></code></action>
<action title='ツールメニュー\プロファイル\プロファイル文書の削除' showinrightbuttonmenu='true'><code
 event='options'><lotusscript>Option Declare
Use "NotesUICommonLib"
</lotusscript></code><code event='click'><lotusscript>Sub Click(Source As Button)
	On Error Goto ErrorHandle
	
	Dim workSpace As New NotesUIWorkspace
	Dim session As New NotesSession
	Dim curUIVW As NotesUIView
	
	Dim curDB As NotesDatabase
	Dim unpro As NotesDocumentCollection
	Dim dbInfoDoc As NotesDocument
	
	Dim refDB As NotesDatabase
	Dim server As String
	Dim filePath As String
	Dim title As String
	
	Set curUIVW = workSpace.CurrentView
	If curUIVW Is Nothing Then
		Set curDB = session.CurrentAgent.Parent
		Set unpro = curDB.UnprocessedDocuments
	Else
		Set curDB = curUIVW.View.Parent
		Set unpro = curUIVW.Documents
		If unpro.Count = 0 Then
			Set unpro = curDB.UnprocessedDocuments
		End If
	End If
	
	If unpro.Count=0Then
		Call Messagebox_Alert("文書を選択（チェック）してください。", "")
		Goto ExitTag
	Elseif unpro.Count &lt;&gt; 1 Then
		Call Messagebox_Alert("１文書のみ選択（チェック）してください。", "")
		Goto ExitTag
	End If
	
	Set dbInfoDoc = unpro.GetFirstDocument()
	If dbInfoDoc.IsResponse Then
		Set dbInfoDoc = curDB.GetDocumentByUNID(dbInfoDoc.ParentDocumentUNID)
	End If
	If Not curUIVW Is Nothing Then
		Call curUIVW.SelectDocument(dbInfoDoc)
	End If
	
	Set refDB = New NotesDatabase("", "")
	server = dbInfoDoc.GetItemValue("DbServer")(0)
	filePath = dbInfoDoc.GetItemValue("DbFilePath")(0)
	title = dbInfoDoc.GetItemValue("DbTitle")(0)
	
	If refDB.Open(server, filePath) = False Then
		Call Messagebox_Error("データベース[" &amp; title &amp; "]が開けません。", "")
		Goto ExitTag
	End If
	
	Dim profDocCol As NotesDocumentCollection
	Dim profDoc As NotesDocument
	
	Dim aryProfName() As String
	Dim i As Integer
	
	Set profDocCol = refDB.GetProfileDocCollection()
	
	If profDocCol.Count = 0 Then
		Call Messagebox_Alert("指定のデータベースにプロファイル文書は見つかりませんでした。", "")
		Goto ExitTag
	End If
	
	Set profDoc = profDocCol.GetFirstDocument()
	Redim aryProfName(0 To 0)
	
	Do Until profDoc Is Nothing
		
		aryProfName(i) = profDoc.GetItemValue("$Name")(0)
		
		Set profDoc = profDocCol.GetNextDocument(profDoc)
		If Not profDoc Is Nothing Then
			i = i + 1
			Redim Preserve aryProfName(0 To i)
		End If
	Loop
	
	Dim retDlgVal As Variant
	Dim valIndex As Variant
	
	retDlgVal = workSpace.Prompt(PROMPT_OKCANCELLIST, "プロファイルの選択", "削除するプロファイル文書名を選択してください。", "", aryProfName)
	If Isempty(retDlgVal) Then
		Goto ExitTag
	End If
	
	valIndex = Arraygetindex(aryProfName, retDlgVal)
	
	Set profDoc = profDocCol.GetNthDocument(Clng(valIndex)+1)
	
	Call profDoc.Remove(True)
	Set profDocCol = Nothing
	Set refDB = Nothing
	
ExitTag:
	If Not curUIVW Is Nothing Then
		Call curUIVW.DeselectAll()
	End If
	Exit Sub
ErrorHandle:
	Call SetErrorObject(Err, Error)
	Call Messagebox_Error(GetErrorMessage(), "")
	Call ClearErrorObject()
	Exit Sub
End Sub</lotusscript></code></action></actionbar><sharedcolumnref name='icon'>
<column hidedetailrows='false' itemname='$10' width='1' resizable='false'
 separatemultiplevalues='false' sortnoaccent='true' sortnocase='true' showaslinks='false'
 hidecolumntitle='true' showasicons='true'><font size='9pt'/><columnheader
 title='icon'><font size='8pt'/></columnheader><code event='value'><formula
>@If(Form="DbInfoDoc";@If(DbServer="";53;54);
Form="ViewInfoDoc";19;
Form="AgentEnvDoc";70;
0)</formula></code></column></sharedcolumnref><sharedcolumnref name='DbServer'>
<column sort='ascending' hidedetailrows='false' itemname='$6' width='1' resizable='false'
 separatemultiplevalues='true' sortnoaccent='true' sortnocase='true' showaslinks='false'
 hidecolumntitle='true' categorized='true' twisties='true'><font size='9pt'
 color='teal' style='bold'/><columnheader title='DbServer'><font size='8pt'/></columnheader><code
 event='value'><formula>tmp:=DbServer;
tmp:=@If(tmp="";@Subset(@DbName;1);tmp);
@If(tmp="";"-Local-";tmp)</formula></code><twistieimage><imageref database='0000000000000000'
 name='PlusMinus.gif'/></twistieimage></column></sharedcolumnref><sharedcolumnref
 name='DbFilePath'>
<column sort='ascending' hidedetailrows='false' itemname='$7' width='1' resizable='false'
 separatemultiplevalues='true' sortnoaccent='true' sortnocase='true' showaslinks='false'
 hidecolumntitle='true' categorized='true' twisties='true'><font size='9pt'
 color='teal' style='bold'/><columnheader title='DbFilePath'><font size='8pt'/></columnheader><code
 event='value'><formula>@ReplaceSubstring(@LeftBack(DbFilePath;"\\");"\\";"＼")+" ("+@Text(@DocDescendants)+")"</formula></code><twistieimage
><imageref database='0000000000000000' name='PlusMinus.gif'/></twistieimage></column></sharedcolumnref><sharedcolumnref
 name='DbFileName'>
<column sort='ascending' hidedetailrows='false' itemname='$11' width='1' resizable='false'
 separatemultiplevalues='false' sortnoaccent='true' sortnocase='true' showaslinks='false'
 hidecolumntitle='true' hidden='true'><columnheader title='DbFileName[Sort]'><font
 size='9pt' style='bold'/></columnheader><code event='value'><formula>@Right(DbFilePath;"\\")</formula></code></column></sharedcolumnref>
<column hidedetailrows='false' itemname='$5' width='1' resizable='true' separatemultiplevalues='false'
 sortnoaccent='false' sortnocase='true' showaslinks='false' responsesonly='true'><font
 size='9pt' color='#4f4f4f'/><columnheader title='R'><font size='9pt'/></columnheader><code
 event='value'><formula>"&lt;[Copy]プロファイル&gt; "+$Name</formula></code></column><sharedcolumnref
 name='DbTitle'>
<column hidedetailrows='false' itemname='$8' width='20' resizable='true' separatemultiplevalues='false'
 sortnoaccent='true' sortnocase='true' showaslinks='false' twisties='true'><font
 color='navy'/><columnheader title='タイトル'><font size='8pt'/></columnheader><code
 event='value'><formula>fp:=DbFilePath;
fn:=@RightBack(fp;"\\");
DbTitle + " [" + @If(fn="";fp;fn) + "]"</formula></code><twistieimage><imageref
 database='0000000000000000' name='PlusMinus.gif'/></twistieimage></column></sharedcolumnref></view>

<form name='(04.ビュー設定)' alias='ViewInfoDoc' nocompose='true' publicaccess='false'
 designerversion='8' type='response' inherit='true'>
<noteinfo noteid='3c2' unid='F170EF2C69871EE2492578CE0007C80B' sequence='74'>
<created><datetime>20110715T102459,63+09</datetime></created>
<modified><datetime>20181031T100053,82+09</datetime></modified>
<revised><datetime>20181031T100053,81+09</datetime></revised>
<lastaccessed><datetime>20181031T100053,82+09</datetime></lastaccessed>
<addedtofile><datetime>20110915T181808,05+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby>
<wassignedby><name>CN=Administrator/O=Comture</name></wassignedby>
<globals><code event='options'><lotusscript>Option Public
Option Declare
Use "NotesUICommonLib"
Use "ToolsLib"
</lotusscript></code></globals><code event='windowtitle'><formula>"ビュー設定"</formula></code>
<actionbar bgcolor='#e0dfe3' bordercolor='black'>
<actionbuttonstyle bgcolor='#e0dfe3'/><font color='system'/><border style='solid'
 width='0px 0px 1px'/>
<sharedactionref id='3'>
<action title='閉じる(_X)' icon='112'><code event='click'><formula>FIELD SaveOptions:="0";
@Command([FileCloseWindow])</formula></code><code event='label'><formula>"閉じる"</formula></code></action></sharedactionref>
<sharedactionref id='2'>
<action title='編集(_E)' icon='29' hide='edit previewedit'><code event='click'><formula
>@If(@IsError(@Command([EditDocument]));"";"")</formula></code><code event='label'><formula
>"編集"</formula></code></action></sharedactionref>
<sharedactionref id='1'>
<action title='保存(_S)' icon='42' hide='preview read'><code event='click'><formula
>@Command([FileSave])</formula></code><code event='label'><formula>"保存"</formula></code></action></sharedactionref>
<action title='Designerで開く' icon='109'><code event='options'><lotusscript
>Option Declare
Use "NotesUICommonLib"
</lotusscript></code><code event='initialize'><lotusscript>Sub Initialize
	Call SetProcess("*BT - Designerで開く")
End Sub
</lotusscript></code><code event='click'><lotusscript>Sub Click(Source As Button)
	On Error Goto ErrorHandle
	
	Dim session As New NotesSession
	
	'R5以下
	If session.NotesBuildVersion &lt;= 166 Then
		Call Messagebox_Alert("Version 6.0 以降で使用可能です。", "")
		Exit Sub
	End If
	
	Dim workSpace As New NotesUIWorkSpace
	Dim curUIDoc As NotesUIDocument
	Dim curDoc As NotesDocument
	
	Dim db As NotesDatabase
	Dim noteCol As NotesNoteCollection
	Dim strFormula As String
	Dim calcVal As Variant
	
	Dim note As NotesDocument
	Dim noteID As String
	Dim noteUNID As String
	
	Set curUIDoc = workSpace.CurrentDocument
	Set curDoc = curUIDoc.Document
	
	Set db = New NotesDatabase("", "")
	If db.Open(curDoc.GetItemValue("DbServer")(0), curDoc.GetItemValue("DbFilePath")(0)) = False Then
		Call Messagebox_Alert("データベース" &amp; curDoc.GetItemValue("DbTitle")(0) &amp; "が開けません。", "")
		Exit Sub
	End If
	
	Set noteCol = db.CreateNoteCollection(False)
	
	Select Case curDoc.GetItemValue("Form")(0)
	Case "ViewInfoDoc"
		noteCol.SelectViews = True
		
		calcVal = Evaluate({@ReplaceSubstring(@If(ViewName="";ViewAlias;ViewName+"|"+ViewAlias); "\\"; "\\\\");}, curDoc)
		
		strFormula = |@Contains($Title; "| &amp; calcVal(0) &amp; |")|
		noteCol.SelectionFormula = strFormula
		
	Case Else
		Call noteCol.SelectAllDesignElements(True)
	End Select
	
	Call noteCol.BuildCollection()
	
	noteID = noteCol.GetFirstNoteId()
	
	Set note = db.GetDocumentByID(noteID)
	
	Dim objName As NotesName
	Dim url As String
	Dim pid As Variant
	
	Set objName = New NotesName(db.Server)
	
	url = "notes://" &amp; objName.Common &amp; "/__" &amp; db.ReplicaID &amp; ".nsf/" &amp; note.UniversalID
	
	pid = Shell(|designer.exe | &amp; url)
	
	Exit Sub
ErrorHandle:
	Call SetErrorObject(Err, Error)
	Call Messagebox_Error(GeterrorMessage(), "")
	Call ClearErrorObject()
	Exit Sub
End Sub</lotusscript></code></action></actionbar>
<body><richtext>
<pardef id='1'/>
<par def='1'/>
<table widthtype='fixedleft' refwidth='6.2993in'><tablecolumn width='6.2993in'/>
<tablerow>
<tablecell borderwidth='0px'>
<pardef id='3' leftmargin='0.0104in' keepwithnext='true' keeptogether='true'/>
<par def='3'/>
<table widthtype='fitmargins' leftmargin='0.0104in' rowspacing='0.0396in'
 columnspacing='0.0396in' refwidth='6.1639in'><border dropshadow='true'/><tablecolumn
 width='100%'/>
<tablerow>
<tablecell borderwidth='0px' bgcolor='#82c168'>
<pardef id='4' align='center' leftmargin='0.0104in' keepwithnext='true' keeptogether='true'/>
<par def='4'><run><font size='14pt' style='bold' color='white'/>ビュー設定</run></par></tablecell></tablerow></table>
<par def='3'/>
<table widthtype='fitmargins' rowdisplay='tabs' leftmargin='0.0104in' columnspacing='0.3542in'
 refwidth='6.1625in'><border dropshadow='true'/><tablecolumn width='100%'/>
<tablerow tablabel='基本'>
<tablecell borderwidth='1px 0px 0px 1px'>
<pardef id='5' leftmargin='0.0104in' keepwithnext='true' keeptogether='true'/>
<par def='5'/>
<table widthtype='fitmargins' cellbordercolor='#4f4f4f' leftmargin='0.0104in'
 refwidth='5.4438in'><tablecolumn width='100%'/>
<tablerow>
<tablecell borderwidth='0px 0px 2px'>
<pardef id='6' keepwithnext='true' keeptogether='true'/>
<par def='6'><run><font size='11pt' style='bold' color='#4f4f4f'/>データベース</run></par></tablecell></tablerow></table><subformref
 name='(データベース情報選択) | SubDbInfo'/>
<par def='5'/>
<table widthtype='fitmargins' cellbordercolor='#3f803f' leftmargin='0.0104in'
 refwidth='5.4438in'><tablecolumn width='100%'/>
<tablerow>
<tablecell borderwidth='0px 0px 2px'>
<par def='6'><run><font size='11pt' style='bold' color='#3f803f'/>表示するビュー</run></par></tablecell></tablerow></table>
<par def='5'/>
<table widthtype='fitmargins' leftmargin='0.0104in' refwidth='5.4438in'><tablecolumn
 width='100%'/>
<tablerow>
<tablecell borderwidth='0px'>
<pardef id='7' align='right' hide='read preview' keepwithnext='true' keeptogether='true'/>
<par def='7'><button characters='16' widthtype='fixedcharacter' wraptext='true'
 bgcolor='system'><font size='8pt'/>ビューの選択<code event='options'><lotusscript
>Option Declare

</lotusscript></code><code event='click'><lotusscript>Sub Click(Source As Button)
	On Error Goto ErrorHandle
	
	Dim workSpace As New NotesUIWorkSpace
	Dim curUIDoc As NotesUIDocument
	Dim curDoc As NotesDocument
	Dim curDB As NotesDatabase
	Dim docCol As NotesDocumentCollection
	Dim selDoc As NotesDocument
	
	Set curUIDoc = workSpace.CurrentDocument
	Set curDoc = curUIDoc.Document
	Set curDB = curDoc.ParentDatabase
	
	Dim server As String
	Dim filePath As String
	Dim title As String
	
	server = curDoc.GetItemValue("DbServer")(0)
	If server = "" Then
		server = curDB.Server
	End If
	
	filePath = curDoc.GetItemValue("DbFilePath")(0)
	If filePath = "" Then
		Call Messagebox_Error("データベースのファイルパスを設定してください。", "")
		Exit Sub
	End If
	
	title = curDoc.GetItemValue("DbTitle")(0)
	
	Dim db As New NotesDatabase(server, filePath)
	Dim allView As Variant
	
	If db.IsOpen = False Then
		Call Messagebox_Error("データベース[ " &amp; title &amp; " ]が開けません。", "")
		Exit Sub
	End If
	
	allView = db.views
	If Isempty(allView) Then
		Call Messagebox_Error("データベースにビューが見つかりません。", "")
		Exit Sub
	End If
	
	Dim view As NotesView
	Dim viewNames() As String
	Dim index As Long
	Dim max As Long
	
	index = 0
	max = Ubound(allView)
	Redim Preserve viewNames(0 To index)
	
	Forall v In allView
		
		Set view = v
		Redim Preserve viewNames(0 To index)
		viewNames(index) = view.Name
		index = index + 1
		
	End Forall
	
	Dim retVal As Variant
	Dim defVal As String
	
	defVal = curDoc.GetItemValue("ViewName")(0)
	Call Sort(viewNames, True)
	retVal = workSpace.Prompt(PROMPT_OKCANCELLIST,"","",defVal, viewNames)
	
	If Isempty(retVal) Then
		Exit Sub
	End If
	
	index = Arraygetindex(viewNames, retVal)
	
	'Set view = allView(index)
	Set view = db.GetView(viewNames(Clng(index)))
	Call curDoc.ReplaceItemValue("ViewName", "")
	Call curDoc.ReplaceItemValue("ViewAlias", "")
	
	Call curDoc.ReplaceItemValue("ViewAlias", view.Aliases)
	If curDoc.GetItemValue("ViewAlias")(0) = "" Then
		Call curDoc.ReplaceItemValue("ViewAlias", view.Name)
	Else
		Call curDoc.ReplaceItemValue("ViewName", view.Name)
	End If
	
	Call curDoc.ReplaceItemValue("ViewUNID", view.UniversalID)
	
	Exit Sub
ErrorHandle:
	Call SetErrorObject(Err, Error)
	Call Messagebox_Error(GetErrorMessage(), "")
	Exit Sub
End Sub
</lotusscript></code><code event='initialize'><lotusscript>Sub Initialize
	Call SetProcess("*BT - ビューの選択")
End Sub</lotusscript></code></button></par></tablecell></tablerow></table>
<pardef id='8' leftmargin='0.0104in' hide='read print preview' keepwithnext='true'
 keeptogether='true'/>
<par def='8'/>
<table widthtype='fitmargins' cellbordercolor='#4f4f4f' leftmargin='0.0104in'
 rowspacing='0.0396in' columnspacing='0.0396in' refwidth='5.4333in'><tablecolumn
 width='1.1813in'/><tablecolumn width='100%'/>
<tablerow>
<tablecell valign='center' bgcolor='#82c168'>
<pardef id='9' leftmargin='0.0104in' keepwithnext='true' keeptogether='true'/>
<par def='9'>表示するビュー</par></tablecell>
<tablecell valign='center'>
<pardef id='10' leftmargin='0.0104in' keepwithnext='true' keeptogether='true'/>
<par def='10'><field type='text' kind='editable' name='ViewName'/><compositedata
 type='98' prevtype='65418' nexttype='222' afterparcount='7' containertype='65418'
 aftercontainercount='1' afterbegincount='3'>
Yg4BAIQAAAAAAAAAAAA=
</compositedata></par></tablecell></tablerow>
<tablerow>
<tablecell valign='center' bgcolor='#82c168'>
<par def='9'>呼出し名称</par></tablecell>
<tablecell valign='center'>
<par def='10'><field type='text' allowmultivalues='true' kind='editable' name='ViewAlias'
 listinputseparators='comma semicolon newline' listdisplayseparator='semicolon'/><compositedata
 type='98' prevtype='65418' nexttype='222' afterparcount='6' containertype='65418'
 aftercontainercount='1' afterbegincount='3'>
Yg4BAIQAAAAAAAAAAAA=
</compositedata></par></tablecell></tablerow>
<tablerow>
<tablecell valign='center' bgcolor='#82c168'>
<pardef id='11' keepwithnext='true' keeptogether='true'/>
<par def='11'>ビューのUNID</par></tablecell>
<tablecell valign='center'>
<pardef id='12' keepwithnext='true' keeptogether='true'/>
<par def='12'><field type='text' kind='editable' name='ViewUNID'/><compositedata
 type='98' prevtype='65418' nexttype='222' afterparcount='7' containertype='65418'
 aftercontainercount='1' afterbegincount='3'>
Yg4BAIQAAAAAAAAAAAA=
</compositedata></par></tablecell></tablerow></table></tablecell></tablerow></table></tablecell></tablerow></table>
<pardef id='2' leftmargin='1in'/>
<par def='2'/></richtext></body>
<item name='OriginalModTime' sign='true'><datetime>20110727T104313,29+09</datetime></item>
<item name='$SubForm_RepIDs' sign='true'><text>0000000000000000</text></item>
<item name='$$ScriptName' summary='false' sign='true'><text>ViewInfoDoc</text></item></form>

<subform name='(データベース情報選択)' alias='SubDbInfo' designerversion='8.5' renderpassthrough='true'>
<noteinfo noteid='3c6' unid='4F24E7C6FD1E7435492578CE000AA67E' sequence='38'>
<created><datetime>20110715T105619,82+09</datetime></created>
<modified><datetime>20181031T100053,46+09</datetime></modified>
<revised><datetime>20181031T100053,45+09</datetime></revised>
<lastaccessed><datetime>20181031T100053,46+09</datetime></lastaccessed>
<addedtofile><datetime>20110915T181808,05+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby>
<wassignedby><name>CN=Administrator/O=Comture</name></wassignedby>
<globals><code event='options'><lotusscript>Option Public
Option Declare
Use "NotesUICommonLib"
Use "ToolsLib"
</lotusscript></code></globals>
<body><richtext>
<pardef id='1'/>
<par def='1'/>
<table widthtype='fitmargins' refwidth='8.8542in'><tablecolumn width='100%'/>
<tablerow>
<tablecell valign='center' borderwidth='0px'>
<pardef id='3' align='right' hide='read print preview' keepwithnext='true'
 keeptogether='true'/>
<par def='3'><button characters='22' widthtype='fixedcharacter' wraptext='true'
 bgcolor='system'><font size='8pt'/>データベースの選択<code event='options'><lotusscript
>Option Declare

</lotusscript></code><code event='click'><lotusscript>Sub Click(Source As Button)
	On Error Goto ErrorHandle
	
	Dim workSpace As New NotesUIWorkspace
	Dim curUIDoc As NotesUIDocument
	Dim curDoc As NotesDocument
	Dim curDB As NotesDatabase
	
	Set curUIDoc = workSpace.CurrentDocument
	Set curDoc = curUIDoc.Document
	Set curDB = curDoc.ParentDatabase
	
	Dim docCol As NotesDocumentCollection
	Dim doc As NotesDocument
	
	Set docCol = workSpace.PickListCollection(3, False, curDB.Server, curDB.FilePath, "SelectDBInfo", "データベース情報の選択", "データベースを選択してください。")
	If docCol.Count = 0 Then
		Exit Sub
	End If
	Set doc = docCol.GetFirstDocument()
	
	Call curDoc.ReplaceItemValue("DbServer", doc.GetItemValue("DbServer"))
	Call curDoc.ReplaceItemValue("DbTitle", doc.GetItemValue("DbTitle"))
	Call curDoc.ReplaceItemValue("DbFilePath", doc.GetItemValue("DbFilePath"))
	Call curDoc.ReplaceItemValue("DbReplicaID", doc.GetItemValue("DbReplicaID"))
	
	Call curUIDoc.Reload()
	Call curUIDoc.Refresh()
	
	Exit Sub
ErrorHandle:
	Call SetErrorObject(Err, Error)
	Call Messagebox_Error(GetErrorMessage(), "")
	Exit Sub
End Sub</lotusscript></code></button></par></tablecell></tablerow></table>
<pardef id='4' hide='read print preview'/>
<par def='4'/>
<table widthtype='fitmargins' cellbordercolor='#4f4f4f' rowspacing='0.0396in'
 columnspacing='0.0396in' refwidth='8.8438in'><tablecolumn width='1.1813in'/><tablecolumn
 width='100%'/>
<tablerow>
<tablecell valign='center' bgcolor='silver'>
<pardef id='5' leftmargin='0.0104in' keepwithnext='true' keeptogether='true'/>
<par def='5'>サーバー</par></tablecell>
<tablecell valign='center'>
<pardef id='6' leftmargin='0.0104in' keepwithnext='true' keeptogether='true'/>
<par def='6'><field type='text' kind='computedfordisplay' name='DbServer'><code
 event='defaultvalue'><formula>@If(@IsNewDoc;@GetField(@ThisName);@GetDocField(@Text($REF);@ThisName))</formula></code></field><compositedata
 type='98' prevtype='65418' nexttype='222' afterparcount='7' containertype='65418'
 aftercontainercount='1' afterbegincount='3'>
Yg4BAIQAAAAAAAAAAAA=
</compositedata></par>
<pardef id='7' leftmargin='0.0104in' hide='read print preview' keepwithnext='true'
 keeptogether='true'/>
<par def='7'><run><font color='fuchsia'/>※省略で[現在のサーバー]</run></par></tablecell></tablerow>
<tablerow>
<tablecell valign='center' bgcolor='silver'>
<par def='5'>タイトル</par></tablecell>
<tablecell valign='center'>
<par def='6'><field type='text' kind='computedfordisplay' name='DbTitle'><code
 event='defaultvalue'><formula>@If(@IsNewDoc;@GetField(@ThisName);@GetDocField($REF;@ThisName))</formula></code></field><compositedata
 type='98' prevtype='65418' nexttype='222' afterparcount='6' containertype='65418'
 aftercontainercount='1' afterbegincount='3'>
Yg4BAIQAAAAAAAAAAAA=
</compositedata></par></tablecell></tablerow>
<tablerow>
<tablecell valign='center' bgcolor='silver'>
<par def='5'>ファイルパス</par></tablecell>
<tablecell valign='center'>
<par def='6'><field type='text' kind='computedfordisplay' name='DbFilePath'><code
 event='defaultvalue'><formula>@If(@IsNewDoc;@GetField(@ThisName);@GetDocField($REF;@ThisName))</formula></code></field><compositedata
 type='98' prevtype='65418' nexttype='222' afterparcount='6' containertype='65418'
 aftercontainercount='1' afterbegincount='3'>
Yg4BAIQAAAAAAAAAAAA=
</compositedata></par></tablecell></tablerow>
<tablerow>
<tablecell valign='center' bgcolor='silver'>
<pardef id='8' keepwithnext='true' keeptogether='true'/>
<par def='8'>レプリカID</par></tablecell>
<tablecell valign='center'>
<pardef id='9' keepwithnext='true' keeptogether='true'/>
<par def='9'><field type='text' kind='computedfordisplay' name='DbReplicaID'><code
 event='defaultvalue'><formula>@If(@IsNewDoc;@GetField(@ThisName);@GetDocField($REF;@ThisName))</formula></code></field><compositedata
 type='98' prevtype='65418' nexttype='222' afterparcount='7' containertype='65418'
 aftercontainercount='1' afterbegincount='3'>
Yg4BAIQAAAAAAAAAAAA=
</compositedata></par></tablecell></tablerow></table>
<par def='1'/></richtext></body>
<item name='OriginalModTime' sign='true'><datetime>20110727T095908,23+09</datetime></item>
<item name='$$ScriptName' summary='false' sign='true'><text>SubDbInfo</text></item></subform>

<view name='(データベース情報選択)' alias='SelectDBInfo' showinmenu='false' publicaccess='false'
 designerversion='6.5' unreadmarks='none' onopengoto='lastopened' onrefresh='displayindicator'
 headers='simple' opencollapsed='false' showresponsehierarchy='true' showmargin='true'
 shrinkrows='true' extendlastcolumn='true' showhierarchies='false' unreadcolor='black'
 rowlinecount='3' headerlinecount='1' rowspacing='1.25' bgcolor='white' altrowcolor='#efefef'
 totalscolor='black' headerbgcolor='#e1e1e1' boldunreadrows='false' evaluateactions='false'
 allownewdocuments='false' allowcustomizations='false' hidemarginborder='false'
 marginwidth='0px' marginbgcolor='white' gridstyle='solid' gridcolor='#e1e1e1'
 uniquekeys='false' formatnoteid='7F3CB7A21A0117B5492576C8002C12A4'>
<noteinfo noteid='3ca' unid='87CDD2B770DE6510492578CE0008B4B8' sequence='20'>
<created><datetime>20110715T103505,52+09</datetime></created>
<modified><datetime>20181031T100054,25+09</datetime></modified>
<revised><datetime>20181031T100054,24+09</datetime></revised>
<lastaccessed><datetime>20181211T164656,35+09</datetime></lastaccessed>
<addedtofile><datetime>20110915T181808,06+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby>
<wassignedby><name>CN=Administrator/O=Comture</name></wassignedby><code event='selection'><formula
>SELECT Form="DbInfoDoc"</formula></code>
<actionbar bgcolor='#d4d0c8' bordercolor='black'>
<actionbuttonstyle bgcolor='#d4d0c8'/><font color='system'/><border style='solid'
 width='0px 0px 1px'/></actionbar>
<column sort='ascending' hidedetailrows='false' itemname='$1' width='1' resizable='false'
 separatemultiplevalues='true' sortnoaccent='false' sortnocase='true' showaslinks='false'
 hidecolumntitle='true' categorized='true' twisties='true'><font size='9pt'
 color='navy' style='bold'/><columnheader title='サーバー'><font size='8pt'/></columnheader><code
 event='value'><formula>tmp:=DbServer;
tmp:=@If(tmp="";@Subset(@DbName;1);tmp);
@If(tmp="";"-Local-";tmp)</formula></code></column>
<column sort='ascending' hidedetailrows='false' itemname='$2' width='1' resizable='false'
 separatemultiplevalues='true' sortnoaccent='false' sortnocase='true' showaslinks='false'
 hidecolumntitle='true' categorized='true' twisties='true'><font size='9pt'
 color='teal' style='bold'/><columnheader title='ファイルパス'><font size='8pt'/></columnheader><code
 event='value'><formula>@ReplaceSubstring(@LeftBack(DbFilePath;"\\");"\\";"＼")</formula></code></column>
<column sort='ascending' hidedetailrows='false' itemname='$4' width='10' resizable='true'
 separatemultiplevalues='false' sortnoaccent='false' sortnocase='true' showaslinks='false'><font
 size='9pt'/><columnheader title='タイトル'><font size='8pt'/></columnheader><code
 event='value'><formula>DbTitle + " [" + @RightBack(DbFilePath;"\\") + "]"</formula></code></column></view>

<view name='20.Teamstadio\01.TeamstadioInfo' alias='TeamstadioInfo' showinmenu='false'
 publicaccess='false' designerversion='8' unreadmarks='none' onopengoto='lastopened'
 onrefresh='displayindicator' headers='simple' opencollapsed='false' showresponsehierarchy='true'
 showmargin='true' shrinkrows='true' extendlastcolumn='false' showhierarchies='false'
 unreadcolor='black' rowlinecount='3' headerlinecount='1' rowspacing='1.25'
 bgcolor='white' altrowcolor='#efefef' totalscolor='black' headerbgcolor='#e1e1e1'
 boldunreadrows='false' evaluateactions='false' allownewdocuments='false'
 allowcustomizations='false' hidemarginborder='false' marginwidth='0px' marginbgcolor='white'
 gridstyle='solid' gridcolor='#e1e1e1' uniquekeys='false' formatnoteid='7F3CB7A21A0117B5492576C8002C12A4'>
<noteinfo noteid='3ce' unid='E1C5B862B53B6F2E4925790C003335F2' sequence='14'>
<created><datetime>20110915T181921,46+09</datetime></created>
<modified><datetime>20181031T100054,55+09</datetime></modified>
<revised><datetime>20181031T100054,54+09</datetime></revised>
<lastaccessed><datetime>20181031T100054,55+09</datetime></lastaccessed>
<addedtofile><datetime>20110915T181921,46+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby>
<wassignedby><name>CN=Administrator/O=Comture</name></wassignedby><code event='selection'><formula
>SELECT ((Form = "(TM01.TeamstadioInfo)") | (Form = "TeamstadioInfo"))</formula></code>
<actionbar bgcolor='#d4d0c8' bordercolor='black'>
<actionbuttonstyle showdropdown='true' bgcolor='#d4d0c8'/><font color='system'/><border
 style='solid' width='0px 0px 1px'/>
<sharedactionref id='3'>
<action title='閉じる(_X)' icon='112'><code event='click'><formula>FIELD SaveOptions:="0";
@Command([FileCloseWindow])</formula></code><code event='label'><formula>"閉じる"</formula></code></action></sharedactionref>
<action title='Teamstadio設定' icon='29' showinmenu='false'><code event='click'><formula
>@If(@IsError(@Command([EditDocument]));@Command([Compose];"TeamstadioInfo");"")</formula></code></action></actionbar>
<column sort='ascending' hidedetailrows='false' itemname='Form' width='10'
 resizable='true' separatemultiplevalues='false' sortnoaccent='true' sortnocase='true'
 showaslinks='false'><font size='9pt'/><columnheader title='Form'><font size='8pt'/></columnheader></column>
<item name='$SelQuery' sign='true'>
<rawitemdata type='f'>
gQYAAAAAif8wAAAAAAABACQAKFRNMDEuVGVhbXN0YWRpb0luZm8pfFRlYW1zdGFkaW9JbmZv
</rawitemdata></item></view>

<form name='(TM01.TeamstadioInfo)' alias='TeamstadioInfo' nocompose='true'
 publicaccess='false' designerversion='8' renderpassthrough='true'>
<noteinfo noteid='3d2' unid='8C373DA52D9C35384925790C003341BE' sequence='15'>
<created><datetime>20110915T181951,66+09</datetime></created>
<modified><datetime>20181031T100053,90+09</datetime></modified>
<revised><datetime>20181031T100053,89+09</datetime></revised>
<lastaccessed><datetime>20181031T100053,90+09</datetime></lastaccessed>
<addedtofile><datetime>20110915T181951,67+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby>
<wassignedby><name>CN=Administrator/O=Comture</name></wassignedby><code event='windowtitle'><formula
>"Teamstadio設定"</formula></code>
<actionbar bgcolor='#e0dfe3' bordercolor='black'>
<actionbuttonstyle bgcolor='#e0dfe3'/><font color='system'/><border style='solid'
 width='0px 0px 1px'/>
<sharedactionref id='1'>
<action title='保存(_S)' icon='42' hide='preview read'><code event='click'><formula
>@Command([FileSave])</formula></code><code event='label'><formula>"保存"</formula></code></action></sharedactionref>
<sharedactionref id='2'>
<action title='編集(_E)' icon='29' hide='edit previewedit'><code event='click'><formula
>@If(@IsError(@Command([EditDocument]));"";"")</formula></code><code event='label'><formula
>"編集"</formula></code></action></sharedactionref>
<sharedactionref id='3'>
<action title='閉じる(_X)' icon='112'><code event='click'><formula>FIELD SaveOptions:="0";
@Command([FileCloseWindow])</formula></code><code event='label'><formula>"閉じる"</formula></code></action></sharedactionref></actionbar>
<body><richtext>
<pardef id='1'/>
<par def='1'/>
<table widthtype='fixedleft' refwidth='6.6931in'><tablecolumn width='6.6931in'/>
<tablerow>
<tablecell borderwidth='0px'>
<pardef id='3' keepwithnext='true' keeptogether='true'/>
<par def='3'/>
<table widthtype='fitmargins' leftmargin='0' refwidth='6.6201in'><border dropshadow='true'
 dropshadowwidth='7px'/><tablecolumn width='100%'/>
<tablerow>
<tablecell colorstyle='hgradient' borderwidth='0px' bgcolor='#ffffd0' altbgcolor='#ffff7f'>
<pardef id='5' spacebefore='1.5' spaceafter='1.5' keepwithnext='true' keeptogether='true'/>
<par def='5'>　Teamstudio</par></tablecell></tablerow></table>
<par def='3'/>
<table widthtype='fitmargins' rowdisplay='tabs' leftmargin='0' columnspacing='0.3542in'
 refwidth='6.6188in'><border dropshadow='true' dropshadowwidth='7px'/><tablecolumn
 width='100%'/>
<tablerow tablabel='Delta'>
<tablecell>
<pardef id='6' keepwithnext='true' keeptogether='true'/>
<par def='6'/>
<table widthtype='fitmargins' leftmargin='0.0104in' columnspacing='0.0396in'
 refwidth='5.8896in'><tablecolumn width='1.5750in'/><tablecolumn width='100%'/>
<tablerow>
<tablecell valign='center' bgcolor='#ffffd0' columnheader='true'>
<pardef id='8' keepwithnext='true' keeptogether='true'/>
<par def='8'>Teamsutudio Reports テンプレート</par></tablecell>
<tablecell valign='center'>
<pardef id='9' keepwithnext='true' keeptogether='true'/>
<par def='9'><field type='text' kind='editable' name='TSTemplate'><code event='defaultvalue'><formula
>"tmslogs.ntf"</formula></code></field><compositedata type='98' prevtype='65418'
 nexttype='222' afterparcount='7' containertype='65418' aftercontainercount='1'
 afterbegincount='3'>
Yg4BAIQAAAAAAAAAAAA=
</compositedata></par></tablecell></tablerow></table>
<par def='6'/>
<table widthtype='fitmargins' leftmargin='0.0104in' rowspacing='0.0396in'
 columnspacing='0.0396in' refwidth='5.8896in'><tablecolumn width='1.5750in'/><tablecolumn
 width='100%'/>
<tablerow>
<tablecell valign='center' bgcolor='#ffffd0'>
<par def='8'>実行モード</par></tablecell>
<tablecell valign='center'>
<par def='9'><field borderstyle='none' lookupeachchar='false' lookupaddressonrefresh='false'
 type='keyword' allowmultivalues='true' kind='editable' name='TSDeltaIsSilent'
 listinputseparators='comma' listdisplayseparator='comma'><keywords helperbutton='false'
 columns='1' ui='checkbox'><textlist><text>サイレントモードで実行|1</text></textlist></keywords><code
 event='defaultvalue'><formula>"1"</formula></code></field></par>
<par def='9'><field borderstyle='none' lookupeachchar='false' lookupaddressonrefresh='false'
 type='keyword' allowmultivalues='true' kind='editable' name='TSDeltaIsNotSingle'
 listinputseparators='comma' listdisplayseparator='comma'><keywords helperbutton='false'
 columns='1' ui='checkbox'><textlist><text>各設計要素に別の返答文書を使う|2</text></textlist></keywords><code
 event='defaultvalue'><formula>"2"</formula></code></field></par></tablecell></tablerow>
<tablerow>
<tablecell valign='center' bgcolor='#ffffd0' columnheader='true'>
<par def='8'>出力オプション</par></tablecell>
<tablecell valign='center'>
<par def='9'><field borderstyle='none' lookupeachchar='false' lookupaddressonrefresh='false'
 type='keyword' allowmultivalues='true' kind='editable' name='TSDeltaOptions'
 listinputseparators='comma' listdisplayseparator='comma'><keywords helperbutton='false'
 columns='2' ui='checkbox'><textlist><text>ｽﾏｰﾄﾌｨﾙﾀの使用|4</text><text>同一の項目を非表示|8</text><text
>ﾌﾟﾛﾊﾟﾃｨを非表示|16</text><text>同一のﾌﾟﾛﾊﾟﾃｨを非表示|32</text><text>CDﾚｺｰﾄﾞを除外しない|64</text></textlist></keywords><code
 event='defaultvalue'><formula>"4":"8":"32"</formula></code></field></par></tablecell></tablerow></table>
<par def='6'/>
<table widthtype='fitmargins' leftmargin='0.0104in' rowspacing='0.0396in'
 columnspacing='0.0396in' refwidth='5.8896in'><tablecolumn width='1.5750in'/><tablecolumn
 width='100%'/>
<tablerow>
<tablecell valign='center' bgcolor='#ffffd0'>
<par def='8'>出力先のデフォルト</par></tablecell>
<tablecell valign='center'>
<par def='9'><field type='text' kind='editable' name='OutFileDir'><code event='defaultvalue'><formula
>"delta\\"</formula></code></field><compositedata type='98' prevtype='65418'
 nexttype='222' afterparcount='6' containertype='65418' aftercontainercount='1'
 afterbegincount='3'>
Yg4BAIQAAAAAAAAAAAA=
</compositedata></par></tablecell></tablerow></table></tablecell></tablerow></table></tablecell></tablerow></table>
<par def='1'/></richtext></body>
<item name='$$ScriptName' summary='false' sign='true'><text>TeamstadioInfo</text></item></form>

<form name='(TM02.DeltaSetting)' alias='DeltaSetting' nocompose='true' publicaccess='false'
 designerversion='8.5.3' type='response' renderpassthrough='true'>
<noteinfo noteid='3d6' unid='7F5A76FFE7C3FD974925790C003341BF' sequence='54'>
<created><datetime>20110915T181951,67+09</datetime></created>
<modified><datetime>20181031T100053,93+09</datetime></modified>
<revised><datetime>20181031T100053,92+09</datetime></revised>
<lastaccessed><datetime>20181031T100053,93+09</datetime></lastaccessed>
<addedtofile><datetime>20110915T181951,69+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby>
<wassignedby><name>CN=Administrator/O=Comture</name></wassignedby>
<globals><code event='options'><lotusscript>Option Public
Option Declare
Use "NotesUICommonLib"
</lotusscript></code></globals><code event='windowtitle'><formula>"Delta設定"</formula></code>
<actionbar bgcolor='#e0dfe3' bordercolor='black'>
<actionbuttonstyle bgcolor='#e0dfe3'/><font color='system'/><border style='solid'
 width='0px 0px 1px'/>
<sharedactionref id='1'>
<action title='保存(_S)' icon='42' hide='preview read'><code event='click'><formula
>@Command([FileSave])</formula></code><code event='label'><formula>"保存"</formula></code></action></sharedactionref>
<sharedactionref id='2'>
<action title='編集(_E)' icon='29' hide='edit previewedit'><code event='click'><formula
>@If(@IsError(@Command([EditDocument]));"";"")</formula></code><code event='label'><formula
>"編集"</formula></code></action></sharedactionref>
<sharedactionref id='3'>
<action title='閉じる(_X)' icon='112'><code event='click'><formula>FIELD SaveOptions:="0";
@Command([FileCloseWindow])</formula></code><code event='label'><formula>"閉じる"</formula></code></action></sharedactionref></actionbar>
<body><richtext>
<pardef id='1' hide='notes web mobile'/>
<par def='1'/><subformref name='(データベース情報記憶) | SubSetDbInfo'/>
<par def='1'/>
<table widthtype='fixedleft' refwidth='6.6931in'><tablecolumn width='6.6931in'/>
<tablerow>
<tablecell borderwidth='0px'>
<pardef id='3' keepwithnext='true' keeptogether='true'/>
<par def='3'/>
<table widthtype='fitmargins' leftmargin='0' refwidth='6.6097in'><border dropshadow='true'
 dropshadowwidth='7px'/><tablecolumn width='100%'/>
<tablerow>
<tablecell valign='center'>
<pardef id='5' spacebefore='1.5' spaceafter='1.5' keepwithnext='true' keeptogether='true'/>
<par def='5'><run><font size='14pt' style='bold' name='HGSｺﾞｼｯｸM' pitch='variable'
 truetype='true' familyid='30'/>　Delta</run></par></tablecell></tablerow></table>
<par def='3'><field type='text' kind='computedfordisplay' name='TeamstadioInfoUNID'><code
 event='defaultvalue'><formula>@DbLookup("Notes":"ReCache";"";"TeamstadioInfo";"TeamstadioInfo";1;[ReturnDocumentUniqueID])</formula></code></field><compositedata
 type='98' prevtype='65418' nexttype='222' afterparcount='6' containertype='65418'
 aftercontainercount='1' afterbegincount='3'>
Yg4BAIQAAAAAAAAAAAA=
</compositedata></par>
<table widthtype='fitmargins' leftmargin='0' refwidth='6.6931in'><tablecolumn
 width='1.5750in'/><tablecolumn width='0.7479in'/><tablecolumn width='100%'/>
<tablerow>
<tablecell valign='center' borderwidth='0px'>
<pardef id='6' keepwithnext='true' keeptogether='true'/>
<par def='6'>ステータス：<field type='text' kind='computedwhencomposed' name='Status'><code
 event='defaultvalue'><formula>@If(@ThisValue="";"79";@ThisValue)</formula></code></field><compositedata
 type='98' prevtype='65418' nexttype='222' afterparcount='7' containertype='65418'
 aftercontainercount='1' afterbegincount='3'>
Yg4BAIQAAAAAAAAAAAA=
</compositedata></par></tablecell>
<tablecell borderwidth='0px'>
<pardef id='7' keepwithnext='true' keeptogether='true'/>
<par def='7'>メッセージ：</par></tablecell>
<tablecell borderwidth='0px'>
<pardef id='8' keepwithnext='true' keeptogether='true'/>
<par def='8'><field type='text' kind='computedwhencomposed' name='Message'><code
 event='defaultvalue'><formula>@ThisValue</formula></code></field><compositedata
 type='98' prevtype='65418' nexttype='222' afterparcount='7' containertype='65418'
 aftercontainercount='1' afterbegincount='3'>
Yg4BAIQAAAAAAAAAAAA=
</compositedata></par></tablecell></tablerow></table>
<par def='3'/>
<table widthtype='fitmargins' rowdisplay='tabs' leftmargin='0' columnspacing='0.3542in'
 refwidth='6.6188in'><border dropshadow='true' dropshadowwidth='7px'/><tablecolumn
 width='100%'/>
<tablerow tablabel='設定'>
<tablecell>
<pardef id='9' keepwithnext='true' keeptogether='true'/>
<par def='9'/>
<table widthtype='fitmargins' leftmargin='0.0104in' refwidth='5.9000in'><tablecolumn
 width='100%'/>
<tablerow>
<tablecell borderwidth='0px 0px 2px'>
<par def='9'><run><font size='11pt' style='bold' name='HGｺﾞｼｯｸM' pitch='fixed'
 truetype='true' familyid='30'/>データベース１</run></par></tablecell></tablerow></table><subformref
 name='(データベース情報選択) | SubDbInfo'/>
<pardef id='11' hide='edit previewedit' keepwithnext='true' keeptogether='true'/>
<par def='11'/>
<table widthtype='fitmargins' leftmargin='0.0104in' refwidth='5.9000in'><tablecolumn
 width='100%'/>
<tablerow>
<tablecell borderwidth='0px 0px 2px'>
<par def='9'><run><font size='11pt' style='bold' name='HGｺﾞｼｯｸM' pitch='fixed'
 truetype='true' familyid='30'/>データベース２</run></par></tablecell></tablerow></table>
<par def='9'/>
<table widthtype='fitmargins' cellbordercolor='gray' leftmargin='0.0104in'
 refwidth='5.9000in'><tablecolumn width='100%'/>
<tablerow>
<tablecell borderwidth='0px'>
<pardef id='13' align='right' hide='read print preview' keepwithnext='true'
 keeptogether='true'/>
<par def='13'><button characters='22' widthtype='fixedcharacter' wraptext='true'
 bgcolor='system'><font size='8pt'/>データベースの選択<code event='options'><lotusscript
>Option Declare

</lotusscript></code><code event='click'><lotusscript>Sub Click(Source As Button)
	On Error Goto ErrorHandle
	
	Dim workSpace As New NotesUIWorkSpace
	Dim curUIDoc As NotesUIDocument
	Dim curDoc As NotesDocument
	Dim curDB As NotesDatabase
	Dim server As String
	
	Dim catalogDB As NotesDatabase
	
	Dim docCol As NotesDocumentCollection
	Dim selDoc As NotesDocument
	
	Dim session As New NotesSession
	Dim db As New NotesDatabase("", "")
	Dim retVal As Variant
	
	Set curUIDoc = workSpace.CurrentDocument
	Set curDoc = curUIDoc.Document
	Set curDB = curDoc.ParentDatabase
	
	server = curDoc.GetItemValue("DbServer")(0)
	If server = "" Then server = curDB.Server
	
	Set catalogDB = New NotesDatabase("", "")
	
	'R5以下
	If session.NotesBuildVersion &lt;= 166 Then
		
		If catalogDB.Open(server, "catalog.nsf") = True Then
			Set docCol = workSpace.PickListCollection(PICKLIST_CUSTOM, False, server, "catalog.nsf", "ByTitle", "データベースの選択", "データベースを選択してください。")
			If docCol.Count = 0 Then
				Exit Sub
			End If
			
			Set selDoc = docCol.GetFirstDocument()
			
			If db.Open(server,selDoc.GetItemValue("Pathname")(0)) = False Then
				Call Messagebox_Error(selDoc.GetItemValue("Title")(0) &amp; "が開けません。", "")
				Exit Sub
			End If
			
		Else
			retVal = workSpace.OpenFileDialog(False, "ファイルの選択", "Notes Database|*.nsf|Notes Template|*.ntf", "", "")
			If Isempty(retVal) = True Then
				Exit Sub
			End If
			
			If db.Open("", retVal(0)) = False Then
				Call Messagebox_Error(retVal(0) &amp; "が開けません。", "")
				Exit Sub
			End If
			
		End If
		
	'R6以上
	Else
		
		retVal = workSpace.Prompt(13, "", "")
		If Isempty(retVal) = True Then
			Exit Sub
		End If
		
		If db.Open(retVal(0), retVal(1)) = False Then
			Call Messagebox_Error(retVal(2) &amp; "が開けません。", "")
			Exit Sub
		End If
		
	End If
	
	Call curDoc.ReplaceItemValue("CompDbServer", db.Server)
	Call curDoc.ReplaceItemValue("CompDbTitle", db.Title)
	Call curDoc.ReplaceItemValue("CompDbFilePath", db.FilePath)
	Call curDoc.ReplaceItemValue("CompDbReplicaID", db.ReplicaID)
	
	Exit Sub
ErrorHandle:
	Call SetErrorObject(Err, Error)
	Call Messagebox_Error(GetErrorMessage(), "")
	Exit Sub
End Sub</lotusscript></code></button></par></tablecell></tablerow></table>
<pardef id='14' hide='read print preview' keepwithnext='true' keeptogether='true'/>
<par def='14'/>
<table widthtype='fitmargins' cellbordercolor='#4f4f4f' leftmargin='0.0104in'
 rowspacing='0.0396in' columnspacing='0.0396in' refwidth='5.8896in'><tablecolumn
 width='1.1813in'/><tablecolumn width='100%'/>
<tablerow>
<tablecell valign='center' bgcolor='silver'>
<pardef id='15' leftmargin='0.0104in' keepwithnext='true' keeptogether='true'/>
<par def='15'>サーバー</par></tablecell>
<tablecell valign='center'>
<pardef id='16' leftmargin='0.0104in' keepwithnext='true' keeptogether='true'/>
<par def='16'><field type='text' kind='editable' name='CompDbServer'><code
 event='defaultvalue'><formula>@Subset(@DbName;1)</formula></code><code event='inputtranslation'><formula
>@ReplaceSubstring(@ThisValue;@NewLine;"")</formula></code></field><compositedata
 type='98' prevtype='65418' nexttype='222' afterparcount='7' containertype='65418'
 aftercontainercount='1' afterbegincount='3'>
Yg4BAIQAAAAAAAAAAAA=
</compositedata></par>
<pardef id='17' leftmargin='0.0104in' hide='read print preview' keepwithnext='true'
 keeptogether='true'/>
<par def='17'><run><font color='fuchsia'/>※省略で[現在のサーバー]</run></par></tablecell></tablerow>
<tablerow>
<tablecell valign='center' bgcolor='silver'>
<par def='15'>タイトル</par></tablecell>
<tablecell valign='center'>
<par def='16'><field type='text' kind='editable' name='CompDbTitle'><code
 event='inputtranslation'><formula>@ReplaceSubstring(@ThisValue;@NewLine;"")</formula></code></field><compositedata
 type='98' prevtype='65418' nexttype='222' afterparcount='6' containertype='65418'
 aftercontainercount='1' afterbegincount='3'>
Yg4BAIQAAAAAAAAAAAA=
</compositedata></par></tablecell></tablerow>
<tablerow>
<tablecell valign='center' bgcolor='silver'>
<par def='15'>ファイルパス</par></tablecell>
<tablecell valign='center'>
<par def='16'><field type='text' kind='editable' name='CompDbFilePath'><code
 event='inputtranslation'><formula>@ReplaceSubstring(@ThisValue;@NewLine;"")</formula></code></field><compositedata
 type='98' prevtype='65418' nexttype='222' afterparcount='6' containertype='65418'
 aftercontainercount='1' afterbegincount='3'>
Yg4BAIQAAAAAAAAAAAA=
</compositedata></par></tablecell></tablerow>
<tablerow>
<tablecell valign='center' bgcolor='silver'>
<pardef id='18' keepwithnext='true' keeptogether='true'/>
<par def='18'>レプリカID</par></tablecell>
<tablecell valign='center'>
<pardef id='19' keepwithnext='true' keeptogether='true'/>
<par def='19'><field type='text' kind='editable' name='CompDbReplicaID'><code
 event='defaultvalue'><formula>@ThisValue</formula></code></field><compositedata
 type='98' prevtype='65418' nexttype='222' afterparcount='7' containertype='65418'
 aftercontainercount='1' afterbegincount='3'>
Yg4BAIQAAAAAAAAAAAA=
</compositedata></par></tablecell></tablerow></table></tablecell></tablerow>
<tablerow tablabel='出力'>
<tablecell>
<par def='9'/>
<table widthtype='fitmargins' leftmargin='0.0104in' refwidth='5.9000in'><tablecolumn
 width='100%'/>
<tablerow>
<tablecell borderwidth='0px 0px 2px'>
<par def='9'><run><font size='11pt' style='bold' name='HGｺﾞｼｯｸM' pitch='fixed'
 truetype='true' familyid='30'/>出力先</run></par></tablecell></tablerow></table>
<par def='9'/>
<table widthtype='fitmargins' leftmargin='0.0104in' rowspacing='0.0396in'
 columnspacing='0.0396in' refwidth='5.8896in'><tablecolumn width='1.1813in'/><tablecolumn
 width='100%'/>
<tablerow>
<tablecell valign='center' bgcolor='silver'>
<par def='18'>フォルダ名</par></tablecell>
<tablecell valign='center'>
<par def='19'><field type='text' kind='editable' name='OutFileDir'><code event='defaultvalue'><formula
>defDir:=@DbLookup("Notes":"ReCache";"";"TeamstadioInfo";"TeamstadioInfo";@ThisName);
@If(@IsError(defDir);"delta\\";defDir)</formula></code></field><compositedata
 type='98' prevtype='65418' nexttype='222' afterparcount='6' containertype='65418'
 aftercontainercount='1' afterbegincount='3'>
Yg4BAIQAAAAAAAAAAAA=
</compositedata></par></tablecell></tablerow>
<tablerow>
<tablecell valign='center' bgcolor='silver'>
<par def='18'>ファイル名</par></tablecell>
<tablecell valign='center'>
<par def='19'><field type='text' kind='editable' name='OutFileName'><code
 event='defaultvalue'><formula>@RightBack(Parent_DbFilePath;"\\")</formula></code></field><compositedata
 type='98' prevtype='65418' nexttype='222' afterparcount='6' containertype='65418'
 aftercontainercount='1' afterbegincount='3'>
Yg4BAIQAAAAAAAAAAAA=
</compositedata></par></tablecell></tablerow>
<tablerow>
<tablecell valign='center' bgcolor='silver'>
<par def='18'>タイトル</par></tablecell>
<tablecell valign='center'>
<par def='19'><field type='text' kind='editable' name='OutFileTitle'><code
 event='defaultvalue'><formula>"Delta Reports "+Parent_DbTitle</formula></code></field><compositedata
 type='98' prevtype='65418' nexttype='222' afterparcount='6' containertype='65418'
 aftercontainercount='1' afterbegincount='3'>
Yg4BAIQAAAAAAAAAAAA=
</compositedata></par></tablecell></tablerow>
<tablerow>
<tablecell valign='center' bgcolor='silver'>
<par def='18'>フルパス&lt;自動&gt;</par></tablecell>
<tablecell valign='center'>
<par def='19'><field type='text' kind='computed' name='OutFilePath'><code
 event='defaultvalue'><formula>OutFileDir+OutFileName</formula></code></field><compositedata
 type='98' prevtype='65418' nexttype='222' afterparcount='6' containertype='65418'
 aftercontainercount='1' afterbegincount='3'>
Yg4BAIQAAAAAAAAAAAA=
</compositedata></par></tablecell></tablerow></table></tablecell></tablerow></table></tablecell></tablerow></table>
<pardef id='20'/>
<par def='20'/></richtext></body>
<item name='$SubForm_RepIDs' sign='true'><textlist><text>0000000000000000</text><text
>0000000000000000</text></textlist></item>
<item name='$$ScriptName' summary='false' sign='true'><text>DeltaSetting</text></item></form>

<scriptlibrary name='Delta' hide='v3 v4strict' language='ja-JP' comment='tmslogs.ntf からコピー'>
<noteinfo noteid='3da' unid='8185574B97EF4E7C4925790C00334A4B' sequence='10'>
<created><datetime>20110915T182013,55+09</datetime></created>
<modified><datetime>20181031T100050,76+09</datetime></modified>
<revised><datetime>20181031T100050,75+09</datetime></revised>
<lastaccessed><datetime>20181031T100050,76+09</datetime></lastaccessed>
<addedtofile><datetime>20110915T182013,56+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby>
<wassignedby><name>CN=Administrator/O=Comture</name></wassignedby><code event='options'><lotusscript
>Option Public

</lotusscript></code><code event='declarations'><lotusscript>'Delta: 

Const DBDIFF_FLAG_SILENT = 1 ' UI ﾌｨｰﾄﾞﾊﾞｯｸなし (ﾌﾟﾛｸﾞﾚｽﾊﾞｰ) 
Const DBDIFF_FLAG_SINGLE = 2  '全てのﾚﾎﾟｰﾄ文書を単一のﾃﾞｰﾀﾍﾞｰｽに置く
Const DBDIFF_FLAG_SMART_FILTER = 4 ' ｽﾏｰﾄﾌｨﾙﾀの使用
Const DBDIFF_FLAG_HIDE_ID_OBJECT = 8 ' 同一の項目を非表示
Const DBDIFF_FLAG_HIDE_PROP = 16 ' ﾌﾟﾛﾊﾟﾃｨを非表示
Const DBDIFF_FLAG_HIDE_ID_PROP = 32 ' 同一のﾌﾟﾛﾊﾟﾃｨを非表示
Const DBDIFF_FLAG_CDFILTER_SHOWALL = 64 ' CDﾚｺｰﾄﾞを除外しない
Const DBDIFF_FLAG_DEFAULT = DBDIFF_FLAG_SILENT +  DBDIFF_FLAG_SMART_FILTER +  DBDIFF_FLAG_HIDE_ID_OBJECT + DBDIFF_FLAG_HIDE_ID_PROP    ' Default Options

' Diff report
Declare Function DIFFReportW32 Lib "ndbdiff.dll" Alias "DIFFReport" _
( Byval szLeft As Lmbcs String, Byval szRight As Lmbcs String, Byval szReport As Lmbcs String, _
Byval szTitle As Lmbcs String, Byval szTemplate As Lmbcs String, Byval szFilter As Lmbcs String, _
Byval wFlags As Integer ) As Long

' Diff Data report
Declare Function DIFFDataReportW32 Lib "ndbdiff.dll" Alias "DIFFDataReport" _
( Byval szLeft As Lmbcs String, Byval szRight As Lmbcs String, Byval szReport As Lmbcs String, _
Byval szTitle As Lmbcs String, Byval szView As Lmbcs String, Byval szTemplate As Lmbcs String, Byval szFilter As Lmbcs String, _
Byval wFlags As Integer ) As Long

'ｴﾗｰ番号をｴﾗｰﾒｯｾｰｼﾞに変換
Declare Function DIFFStringLoadW32 Lib "ndbdiff.dll" Alias "DIFFStringLoad" _
( Byval status As Long, Byval szBuffer As Lmbcs String, Byval cbBufLen As Long ) As Long

</lotusscript></code><code event='terminate'><lotusscript>Sub Terminate
End Sub
</lotusscript></code><code event='Delta'><lotusscript>' Usage
' pszLeft と pszRight はﾃﾞﾙﾀによって比較されるﾃﾞｰﾀﾍﾞｰｽ
' pszReport はﾚﾎﾟｰﾄが出力されるﾃﾞｰﾀﾍﾞｰｽ
' pszTitle is はﾚﾎﾟｰﾄﾃﾞｰﾀﾍﾞｰｽのﾀｲﾄﾙ (新規作成される場合)
' pszTemplate はﾚﾎﾟｰﾄﾃﾞｰﾀﾍﾞｰｽに使われるﾃﾝﾌﾟﾚｰﾄ ( 新規作成され、ﾕｰｻﾞｰ選択のﾃﾝﾌﾟﾚｰﾄの場合) - この変数を空にして、ﾃﾞﾌｫﾙﾄの設定を使うことを推奨します
' pszFilter は 現在未使用
' wFlags:
' DBDIFF_FLAG_SILENT = 1 ' UI ﾌｨｰﾄﾞﾊﾞｯｸなし (ﾌﾟﾛｸﾞﾚｽﾊﾞｰ)  
' DBDIFF_FLAG_SINGLE = 2  '出力ﾃﾞｰﾀを複数の文書に分けず、単一の文書とする （ﾃﾞｰﾀﾍﾞｰｽのｻｲｽﾞが小さい時のみこのﾌﾗｸﾞをご使用ください）
' DBDIFF_FLAG_SMART_FILTER = 4 ' ｽﾏｰﾄﾌｨﾙﾀの使用
' DBDIFF_FLAG_HIDE_ID_OBJECT = 8 ' 同一の項目を非表示
' DBDIFF_FLAG_HIDE_PROP = 16 'ﾌﾟﾛﾊﾟﾃｨを非表示
' DBDIFF_FLAG_HIDE_ID_PROP = 32 ' 同一のﾌﾟﾛﾊﾟﾃｨを非表示
' DBDIFF_FLAG_DEFAULT = DBDIFF_FLAG_SILENT +  DBDIFF_FLAG_SMART_FILTER +  DBDIFF_FLAG_HIDE_ID_OBJECT + DBDIFF_FLAG_HIDE_ID_PROP    ' ﾃﾞﾌｫﾙﾄｵﾌﾟｼｮﾝ

Function Delta( Byval pszLeft As String, Byval pszRight As String, Byval pszReport As String, _
Byval pszTitle As String, Byval pszTemplate As String, Byval pszFilter As String, _
Byval wFlags As Integer ) As Long
	
     'Platform Independent Wrapper
	Set Session = New NotesSession
	
	Select Case Session.Platform
		
	Case  "Windows/32"  'Windows 32-bit
		Delta = DIFFReportW32( pszLeft, pszRight, pszReport, pszTitle, pszTemplate, pszFilter, wFlags )
		
	Case Else
          'ｻﾎﾟｰﾄされないﾌﾟﾗｯﾄﾌｫｰﾑ、 ｴﾗｰは生成されません
	End Select
	
End Function

</lotusscript></code><code event='DeltaData'><lotusscript>' Usage
' pszLeft と pszRight はﾃﾞﾙﾀによって比較されるﾃﾞｰﾀﾍﾞｰｽ
' pszReport はﾚﾎﾟｰﾄが出力されるﾃﾞｰﾀﾍﾞｰｽ
' pszTitle is はﾚﾎﾟｰﾄﾃﾞｰﾀﾍﾞｰｽのﾀｲﾄﾙ (新規作成される場合)
' pszView はﾃﾞｰﾀﾚﾎﾟｰﾄ生成の際使われるﾋﾞｭｰ
' pszTemplate はﾚﾎﾟｰﾄﾃﾞｰﾀﾍﾞｰｽに使われるﾃﾝﾌﾟﾚｰﾄ ( 新規作成され、ﾕｰｻﾞｰ選択のﾃﾝﾌﾟﾚｰﾄの場合) - この変数を空にして、ﾃﾞﾌｫﾙﾄの設定を使うことを推奨します
' pszFilter は 現在未使用
' wFlags:
' DBDIFF_FLAG_SILENT = 1 ' UI ﾌｨｰﾄﾞﾊﾞｯｸなし (ﾌﾟﾛｸﾞﾚｽﾊﾞｰ)  
' DBDIFF_FLAG_SINGLE = 2  '出力ﾃﾞｰﾀを複数の文書に分けず、単一の文書とする （ﾃﾞｰﾀﾍﾞｰｽのｻｲｽﾞが小さい時のみこのﾌﾗｸﾞをご使用ください）
' DBDIFF_FLAG_SMART_FILTER = 4 ' ｽﾏｰﾄﾌｨﾙﾀの使用
' DBDIFF_FLAG_HIDE_ID_OBJECT = 8 ' 同一の項目を非表示
' DBDIFF_FLAG_HIDE_PROP = 16 'ﾌﾟﾛﾊﾟﾃｨを非表示
' DBDIFF_FLAG_HIDE_ID_PROP = 32 ' 同一のﾌﾟﾛﾊﾟﾃｨを非表示
' DBDIFF_FLAG_DEFAULT = DBDIFF_FLAG_SILENT +  DBDIFF_FLAG_SMART_FILTER +  DBDIFF_FLAG_HIDE_ID_OBJECT + DBDIFF_FLAG_HIDE_ID_PROP    ' ﾃﾞﾌｫﾙﾄｵﾌﾟｼｮﾝ

Function DeltaData( Byval pszLeft As String, Byval pszRight As String, Byval pszReport As String, _
Byval pszTitle As String, Byval pszView As String, Byval pszTemplate As String, Byval pszFilter As String, _
Byval wFlags As Integer ) As Long
	
     'Platform Independent Wrapper
	Set Session = New NotesSession
	
	Select Case Session.Platform
		
	Case  "Windows/32"  'Windows 32-bit
		DeltaData = DIFFDataReportW32( pszLeft, pszRight, pszReport, pszTitle, pszView, pszTemplate, pszFilter, wFlags )
		
	Case Else
          'ｻﾎﾟｰﾄされないﾌﾟﾗｯﾄﾌｫｰﾑ、 ｴﾗｰは生成されません
	End Select
	
End Function</lotusscript></code>
<item name='$LastBuildTime' sign='true'><datetime dst='true'>19991004T160005,37-05</datetime></item>
<item name='$BabelInfo' sign='true'><text>0000011A</text></item>
<item name='$POID'><datetime>20140930T200605,64+09</datetime></item></scriptlibrary>

<agent name='(ローカルフォルダの一括選択)' alias='SelectLocalDir' hide='v3' publicaccess='false'
 designerversion='8'>
<noteinfo noteid='3fa' unid='BA34DDB0665128EB4925790C0034374F' sequence='19'>
<created><datetime>20110915T183020,31+09</datetime></created>
<modified><datetime>20181031T100052,37+09</datetime></modified>
<revised><datetime>20181031T100052,36+09</datetime></revised>
<lastaccessed><datetime>20181031T100052,37+09</datetime></lastaccessed>
<addedtofile><datetime>20110915T183050,28+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby>
<wassignedby><name>CN=Administrator/O=Comture</name></wassignedby>
<designchange><datetime>20181031T100052,36+09</datetime></designchange>
<trigger type='agentlist'/>
<documentset type='runonce'/><code event='options'><lotusscript>Option Public
Option Declare

</lotusscript></code><code event='initialize'><lotusscript>Sub Initialize
	On Error Goto ErrorHandle
	
	Dim workSpace As New NotesUIWorkspace
	Dim dlgVal As Variant
	
	Dim folder As String
	Dim fileName As String
	
	dlgVal = workSpace.SaveFileDialog(True, "フォルダの選択", , , )
	If Isempty(dlgVal) Then
		Exit Sub
	End If
	
	folder = dlgVal(0)
	
	Dim session As New NotesSession
	Dim curDB As NotesDatabase
	Dim newDoc As NotesDocument
	Dim db As NotesDatabase
	
	Set curDB = session.CurrentAgent.Parent
	
	
	fileName = Dir(folder &amp; "\*.n?f")
	Do Until fileName = ""
		
		Set db = New NotesDatabase("", folder &amp; "\" &amp; fileName)
		
		Set newDoc = curDB.CreateDocument()
		
		newDoc.Form = "DbInfoDoc"
		newDoc.DbServer = ""
		newDoc.DbTitle = db.Title
		newDoc.DbFilePath = db.FilePath
		newDoc.DbReplicaID = db.ReplicaID
		
		Call newDoc.Save(True, True)
		
NextLoop:
		fileName = Dir()
	Loop
	
	Exit Sub
ErrorHandle:
	Print "(" &amp; Err &amp; ")" &amp; Error &amp; "[" &amp; Erl &amp; "]"
	Resume NextLoop
End Sub</lotusscript></code>
<rundata processeddocs='0' exitcode='0' agentdata='8CF03074B4C3DCBA4925790C0035F8F1'>
<agentmodified><datetime>20110926T155234,91+09</datetime></agentmodified>
<agentrun><datetime>20120118T160302,37+09</datetime></agentrun>
<runlog>エージェント (ローカルフォルダの一括選択)|SelectLocalDir の 2012/01/18 16:03:00 での実行が開始しました。
LotusScript を実行しました
エージェント (ローカルフォルダの一括選択)|SelectLocalDir の実行が終了しました。(2012/01/18 16:03:02)
</runlog></rundata>
<item name='$POID'><datetime>20140930T200605,66+09</datetime></item></agent>

<agentdata>
<noteinfo noteid='42e' unid='1E1399A32DE13FD14925790C0035BA1A' sequence='1'>
<created><datetime>20110915T184650,50+09</datetime></created>
<modified><datetime>20110915T184650,52+09</datetime></modified>
<revised><datetime>20110915T184650,51+09</datetime></revised>
<lastaccessed><datetime>20110915T184650,49+09</datetime></lastaccessed>
<addedtofile><datetime>20110915T184650,49+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=COMTURE</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='43a' unid='8CF03074B4C3DCBA4925790C0035F8F1' sequence='1'>
<created><datetime>20110915T184931,37+09</datetime></created>
<modified><datetime>20110915T184931,38+09</datetime></modified>
<revised><datetime>20110915T184931,37+09</datetime></revised>
<lastaccessed><datetime>20110915T184931,37+09</datetime></lastaccessed>
<addedtofile><datetime>20110915T184931,37+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=COMTURE</name></updatedby></agentdata>

<agent name='Teamstadio\Deltaの実行' alias='RunDelta' hide='v3' publicaccess='false'
 designerversion='8.5.3' clientbackgroundthread='true' restrictions='unrestricted'>
<noteinfo noteid='446' unid='B7EA58AB2FCDE0954925790C003B4876' sequence='94'>
<created><datetime>20110915T194731,74+09</datetime></created>
<modified><datetime>20181031T100053,01+09</datetime></modified>
<revised><datetime>20181031T100053,00+09</datetime></revised>
<lastaccessed><datetime>20181031T100053,01+09</datetime></lastaccessed>
<addedtofile><datetime>20110915T194833,04+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby>
<wassignedby><name>CN=Administrator/O=Comture</name></wassignedby>
<designchange><datetime>20181031T100052,98+09</datetime></designchange>
<trigger type='actionsmenu'/>
<documentset type='runonce'/><code event='options'><lotusscript>Option Public
Option Declare
Use "Delta"
Use "ErrorLib"

</lotusscript></code><code event='initialize'><lotusscript>Sub Initialize
	Call SetProcess("*AG - Delta実行")
	Call Main()
End Sub

</lotusscript></code><code event='CallDeltaModule'><lotusscript>Function CallDeltaModule(tsInfoDoc As NotesDocument, dsDoc As NotesDocument) As Integer
	On Error Goto ErrorHandle
	
	Dim db As NotesDatabase
	Dim parentDoc As NotesDocument
	
	Dim tsTemplate As String
	
	Dim itemOptions As NotesItem
	Dim deltaFlgs As Integer
	
	tsTemplate = tsInfoDoc.GetItemValue("TSTemplate")(0)
	
	deltaFlgs = 0
	'サイレントモード
	If tsInfoDoc.GetItemValue("TSDeltaIsSilent")(0) &lt;&gt; "" Then
		deltaFlgs = deltaFlgs + DBDIFF_FLAG_SILENT
	End If
	
	'全てのﾚﾎﾟｰﾄ文書を単一のﾃﾞｰﾀﾍﾞｰｽに置く
	If tsInfoDoc.GetItemValue("TSDeltaIsNotSingle")(0) = "" Then
		deltaFlgs = deltaFlgs + DBDIFF_FLAG_SINGLE
	End If
	
	Set itemOptions = tsInfoDoc.GetFirstItem("TSDeltaOptions")
	With itemOptions
		'ｽﾏｰﾄﾌｨﾙﾀの使用
		If .Contains("4") Then deltaFlgs = deltaFlgs + DBDIFF_FLAG_SMART_FILTER
		
		'同一の項目を非表示
		If .Contains("8") Then deltaFlgs = deltaFlgs + DBDIFF_FLAG_HIDE_ID_OBJECT
		
		'ﾌﾟﾛﾊﾟﾃｨを非表示
		If .Contains("16") Then deltaFlgs = deltaFlgs + DBDIFF_FLAG_HIDE_ID_OBJECT
		
		'同一のﾌﾟﾛﾊﾟﾃｨを非表示
		If .Contains("32") Then deltaFlgs = deltaFlgs + DBDIFF_FLAG_HIDE_ID_PROP
		
		'CDﾚｺｰﾄﾞを除外しない
		If .Contains("64") Then deltaFlgs = deltaFlgs + DBDIFF_FLAG_CDFILTER_SHOWALL
	End With
	
	Dim tmpBuff As String*255, tmpError As String*255
	Dim dbFile1 As String*255, dbFile2 As String*255
	Dim outFile As String
	Dim outFileTitle As String
	Dim retStatus As Variant
	
	Set db = dsDoc.Parentdatabase
	Set parentDoc = db.Getdocumentbyunid(dsDoc.Parentdocumentunid)
	
	If parentDoc.GetItemValue("DbServer")(0) = "" then
		dbFile1 = parentDoc.GetItemValue("DbFilePath")(0)
	Else
		dbFile1 = parentDoc.GetItemValue("DbServer")(0) &amp; "!!" &amp; parentDoc.GetItemValue("DbFilePath")(0)
	End If
	If dsDoc.GetItemValue("CompDbServer")(0) = "" then
		dbFile2 = dsDoc.GetItemValue("CompDbFilePath")(0)
	Else
		dbFile2 = dsDoc.GetItemValue("CompDbServer")(0) &amp; "!!" &amp; dsDoc.GetItemValue("CompDbFilePath")(0)
	End If
	outFile = dsDoc.GetItemValue("OutFilePath")(0)
	outFileTitle = dsDoc.GetItemValue("OutFileTitle")(0)
	
	retStatus = Delta(dbFile1, dbFile2 , outFile, "", tsTemplate, "",  deltaFlgs)
	
	If retStatus &lt;&gt; 0 Then
		DIFFStringLoadW32 retStatus, tmpBuff, 255
          'ｴﾗｰﾃｷｽﾄを 'C' ﾊﾞｯﾌｧから通常のﾛｰﾀｽｽｸﾘﾌﾟﾄ文字列に変換
		tmpError = Left$(tmpBuff, Instr(tmpBuff, Chr(0))-1)
		Error USERERR, tmpError
	End If
	
	Dim deltaDB As New NotesDatabase("", outFile)
	deltaDB.Title = outFileTitle
	Set deltaDB = Nothing
	
	CallDeltaModule = FUNCTIONSUCCESS
ExitTag:
	Exit Function
ErrorHandle:
	Call SetErrorObject(Err, Error)
	CallDeltaModule = FUNCTIONFAILURE
	Resume ExitTag
End Function

</lotusscript></code><code event='Main'><lotusscript>Sub Main()
	On Error Goto ErrorHandle
	
	Dim session As New NotesSession
	Dim curDB As NotesDatabase
	
	Set curDB = session.CurrentAgent.Parent
	
	Dim tsInfoDoc As NotesDocument
	
	If GetTeamstadioInfo(curDB, tsInfoDoc) = FUNCTIONFAILURE Then
		Error USERERR, Error()
	End If
	
	Dim dsVW As NotesView
	Dim dsDoc As NotesDocument
	Dim nextDoc As NotesDocument
	Dim i As Long
	Dim max As Long
	Dim par As Integer
	
	Set dsVW = curDB.GetView("DeltaSetting")
	Set dsDoc = dsVW.GetFirstDocument()
	
	i = 0
	max = dsVW.AllEntries.Count
	
	Do Until dsDoc Is Nothing
		Set nextDoc = dsVW.GetNextDocument(dsDoc)
		
		If dsDoc.GetItemValue("Status")(0) &lt;&gt; "79" Then
			Goto NextLoop
		End If
		
		If CallDeltaModule(tsInfoDoc, dsDoc) = FUNCTIONFAILURE Then
			Call dsDoc.ReplaceItemValue("Status", "81")
			Call dsDoc.ReplaceItemValue("Message", GetErrorMessage())
			Call ClearErrorObject()
			Call dsDoc.Save(True, True)
		Else
			Call dsDoc.ReplaceItemValue("Status", "82")
			Call dsDoc.ReplaceItemValue("Message", "")
			Call dsDoc.Save(True, True)
		End If
		
NextLoop:
		
		i = i + 1
		par = Cint((i / max) * 100)
		If par Mod 5 = 0 Then Print "running delta... " &amp; par &amp; " %"
		
		Set dsDoc = nextDoc
	Loop
	
	'Call Messagebox_Info("完了しました。", "")
	Print "情報：完了しました。"
	
ExitTag:
	Exit Sub
ErrorHandle:
	Call SetErrorObject(Err, Error)
	'Call Messagebox_Error(GetErrorMessage(), "")
	Print "エラー：" &amp; GetErrorMessage()
	Resume ExitTag
End Sub

</lotusscript></code><code event='GetTeamstadioInfo'><lotusscript>Function GetTeamstadioInfo(curDB As NotesDatabase, TSInfoDoc As NotesDocument) As Integer
	On Error Goto ErrorHandle
	
	Dim view As NotesView
	Set view = curDB.GetView("TeamstadioInfo")
	Set TSInfoDoc = view.GetFirstDocument()
	
	GetTeamstadioInfo = FUNCTIONSUCCESS
ExitTag:
	Exit Function
ErrorHandle:
	Call SetErrorObject(Err, Error)
	GetTeamstadioInfo = FUNCTIONFAILURE
	Resume ExitTag
End Function</lotusscript></code>
<rundata processeddocs='0' exitcode='0' agentdata='1C865DDD4692C52849257EB2000746C9'>
<agentmodified><datetime>20181031T100053,01+09</datetime></agentmodified>
<agentrun><datetime>20181214T154001,54+09</datetime></agentrun>
<runlog>エージェント Teamstadio\Deltaの実行|RunDelta の 2018/12/14 15:39:24 での実行が開始しました。
LotusScript を実行しました
エージェント Teamstadio\Deltaの実行|RunDelta の実行が終了しました。(2018/12/14 15:40:01)
</runlog></rundata>
<item name='$POID'><datetime>20140930T200605,73+09</datetime></item></agent>

<agentdata>
<noteinfo noteid='526' unid='F6DEA56C715E08E84925790C004017EA' sequence='1'>
<created><datetime>20110915T204004,26+09</datetime></created>
<modified><datetime>20110915T204004,27+09</datetime></modified>
<revised><datetime>20110915T204004,26+09</datetime></revised>
<lastaccessed><datetime>20110915T204004,26+09</datetime></lastaccessed>
<addedtofile><datetime>20110915T204004,26+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=administrator/O=Comture</name></updatedby></agentdata>
<sharedcolumn name='DbServer' alias='DbServer' designerversion='8'>
<noteinfo noteid='60a' unid='B3159FD9C62F7E1A4925790D00231C85' sequence='13'>
<created><datetime>20110916T152330,61+09</datetime></created>
<modified><datetime>20181031T100054,71+09</datetime></modified>
<revised><datetime>20181031T100054,70+09</datetime></revised>
<lastaccessed><datetime>20181031T100054,71+09</datetime></lastaccessed>
<addedtofile><datetime>20110916T152504,32+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby>
<wassignedby><name>CN=Administrator/O=Comture</name></wassignedby>
<column sort='ascending' hidedetailrows='false' itemname='$0' width='1' resizable='false'
 separatemultiplevalues='true' sortnoaccent='true' sortnocase='true' showaslinks='false'
 hidecolumntitle='true' categorized='true' twisties='true'><font size='9pt'
 color='teal' style='bold'/><columnheader title='DbServer'><font size='8pt'/></columnheader><code
 event='value'><formula>tmp:=DbServer;
tmp:=@If(tmp="";@Subset(@DbName;1);tmp);
@If(tmp="";"-Local-";tmp)</formula></code><twistieimage><imageref database='0000000000000000'
 name='PlusMinus.gif'/></twistieimage></column></sharedcolumn>
<sharedcolumn name='DbFilePath' alias='DbFilePath' designerversion='8'>
<noteinfo noteid='60e' unid='E13A3257D41695264925790D002352FA' sequence='14'>
<created><datetime>20110916T152550,02+09</datetime></created>
<modified><datetime>20181031T100054,68+09</datetime></modified>
<revised><datetime>20181031T100054,67+09</datetime></revised>
<lastaccessed><datetime>20181031T100054,68+09</datetime></lastaccessed>
<addedtofile><datetime>20110916T152637,43+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby>
<wassignedby><name>CN=Administrator/O=Comture</name></wassignedby>
<column sort='ascending' hidedetailrows='false' itemname='$0' width='1' resizable='false'
 separatemultiplevalues='true' sortnoaccent='true' sortnocase='true' showaslinks='false'
 hidecolumntitle='true' categorized='true' twisties='true'><font size='9pt'
 color='teal' style='bold'/><columnheader title='DbFilePath'><font size='8pt'/></columnheader><code
 event='value'><formula>@ReplaceSubstring(@LeftBack(DbFilePath;"\\");"\\";"＼")+" ("+@Text(@DocDescendants)+")"</formula></code><twistieimage
><imageref database='0000000000000000' name='PlusMinus.gif'/></twistieimage></column></sharedcolumn>

<view name='20.Teamstadio\02.デルタ\01.待ち' alias='DeltaSettingUI' showinmenu='false'
 publicaccess='false' designerversion='7' unreadmarks='none' onopengoto='lastopened'
 onrefresh='displayindicator' headers='simple' opencollapsed='false' showresponsehierarchy='false'
 showmargin='true' shrinkrows='true' extendlastcolumn='false' showhierarchies='false'
 unreadcolor='black' rowlinecount='3' headerlinecount='1' rowspacing='1.25'
 bgcolor='white' altrowcolor='#efefef' totalscolor='black' headerbgcolor='#e1e1e1'
 boldunreadrows='false' evaluateactions='false' allownewdocuments='false'
 allowcustomizations='false' hidemarginborder='false' marginwidth='0px' marginbgcolor='white'
 gridstyle='solid' gridcolor='#e1e1e1' uniquekeys='false' formatnoteid='7F3CB7A21A0117B5492576C8002C12A4'>
<noteinfo noteid='612' unid='410FFB19E231061B492579120044EBDB' sequence='24'>
<created><datetime>20110921T213248,27+09</datetime></created>
<modified><datetime>20181031T100054,58+09</datetime></modified>
<revised><datetime>20181031T100054,57+09</datetime></revised>
<lastaccessed><datetime>20181211T164641,98+09</datetime></lastaccessed>
<addedtofile><datetime>20110921T213248,27+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby>
<wassignedby><name>CN=Administrator/O=Comture</name></wassignedby><code event='selection'><formula
>SELECT ((Form = "DeltaSetting") &amp; Status = "79")</formula></code>
<actionbar bgcolor='#d4d0c8' bordercolor='black'>
<actionbuttonstyle showdropdown='true' bgcolor='#d4d0c8'/><font color='system'/><border
 style='solid' width='0px 0px 1px'/>
<sharedactionref id='3'>
<action title='閉じる(_X)' icon='112'><code event='click'><formula>FIELD SaveOptions:="0";
@Command([FileCloseWindow])</formula></code><code event='label'><formula>"閉じる"</formula></code></action></sharedactionref>
<sharedactionref id='2'>
<action title='編集(_E)' icon='29' hide='edit previewedit'><code event='click'><formula
>@If(@IsError(@Command([EditDocument]));"";"")</formula></code><code event='label'><formula
>"編集"</formula></code></action></sharedactionref>
<action title='新規作成\単一作成' icon='30' showinmenu='false'><code event='click'><formula
>@Command([Compose];"DeltaSetting")</formula></code></action>
<action title='新規作成\一括作成' showinmenu='false'><code event='options'><lotusscript
>Option Declare
Use "NotesUICommonLib"
</lotusscript></code><code event='initialize'><lotusscript>Sub Initialize
	Call SetProcess("*AC - 一括作成")
End Sub
</lotusscript></code><code event='click'><lotusscript>Sub Click(Source As Button)
	On Error Goto ErrorHandle
	
	Dim workSpace As New NotesUIWorkspace
	Dim curUIView As NotesUIView
	Dim curDB As NotesDatabase
	Dim unpro As NotesDocumentCollection
	
	Set curUIView = workSpace.CurrentView
	Set curDB = curUIView.View.Parent
	
	Set unpro = workSpace.PickListCollection(3, True, curDB.Server, curDB.FilePath, "SelectDbInfo", "データベース情報の選択(複数)", "データベース情報を選択してください。")
	
	If unpro.Count = 0 Then
		Exit Sub
	End If
	
	Dim doc As NotesDocument
	Dim newDoc As NotesDocument
	
	Set doc = unpro.GetFirstDocument()
	
	Do Until doc Is Nothing
		
		Set newDoc = curDB.CreateDocument
		
		newDoc.Form = "DeltaSetting"
		newDoc.Parent_DbServer = doc.DbServer
		newDoc.Parent_DbFilePath = doc.DbFilePath
		newDoc.Parent_DbTitle = doc.DbTitle
		newDoc.Parent_DbReplicaID = doc.DbReplicaID
		
		Call newDoc.MakeResponse(doc)
		Call newDoc.ComputeWithForm(True, True)
		Call newDoc.Save(True, True)
		
		Set doc = unpro.GetNextDocument(doc)
	Loop
	
	Call curUIView.DeselectAll()
	Call workSpace.ViewRefresh()
	
ExitTag:
	Exit Sub
ErrorHandle:
	Call SetErrorObject(Err, Error)
	Call Messagebox_Error(GetErrorMessage(), "")
	Resume ExitTag
End Sub</lotusscript></code></action>
<action title='ツールメニュー\Delta実行' icon='109' showinrightbuttonmenu='true'><code
 event='click'><formula>@If(@True=@Prompt([YesNo];"Deltaの実行";"アクションメニューから実行すると、スレッドを分離できます。"+@NewLine+"このまま実行しますか？");@Command([ToolsRunMacro];"RunDelta");"")</formula></code></action>
<action title='ツールメニュー\ステータス\処理対象にする' showinrightbuttonmenu='true'><code event='options'><lotusscript
>Option Declare

</lotusscript></code><code event='click'><lotusscript>Sub Click(Source As Button)
	
	Dim workSpace As New NotesUIWorkspace
	Dim curUIView As NotesUIView
	Dim curDB As NotesDatabase
	Dim unpro As NotesDocumentCollection
	
	Set curUIView = workSpace.CurrentView
	Set curDB = curUIView.View.Parent
	Set unpro = curUIView.Documents
	
	If unpro.Count = 0 Then
		Set unpro = curDB.UnprocessedDocuments
	End If
	
	Call unpro.StampAll("Status", "79")
	Call curUIview.DeselectAll()
	Call workSpace.ViewRefresh()
	
End Sub</lotusscript></code></action>
<action title='ツールメニュー\ステータス\処理から除外する' icon='41' showinrightbuttonmenu='true'><code
 event='options'><lotusscript>Option Declare

</lotusscript></code><code event='click'><lotusscript>Sub Click(Source As Button)
	
	Dim workSpace As New NotesUIWorkspace
	Dim curUIView As NotesUIView
	Dim curDB As NotesDatabase
	Dim unpro As NotesDocumentCollection
	
	Set curUIView = workSpace.CurrentView
	Set curDB = curUIView.View.Parent
	Set unpro = curUIView.Documents
	
	If unpro.Count = 0 Then
		Set unpro = curDB.UnprocessedDocuments
	End If
	
	Call unpro.StampAll("Status", "80")
	Call curUIview.DeselectAll()
	Call workSpace.ViewRefresh()
	
End Sub</lotusscript></code></action>
<action title='ツールメニュー\パス変更\Delta Reports' icon='41' showinrightbuttonmenu='true'><code
 event='options'><lotusscript>Option Declare
Use "NotesUICommonLib"
</lotusscript></code><code event='click'><lotusscript>Sub Click(Source As Button)
	On Error Goto ErrorHandle
	
	Dim workSpace As New NotesUIWorkspace
	Dim dlgVal As Variant
	
	Dim folder As String
	Dim fileName As String
	
	dlgVal = workSpace.SaveFileDialog(True, "フォルダの選択", , , )
	If Isempty(dlgVal) Then
		Exit Sub
	End If
	
	folder = dlgVal(0)
	
	Dim curUIView As NotesUIView
	Dim curDB As NotesDatabase
	Dim unpro As NotesDocumentCollection
	Dim doc As NotesDocument
	
	Set curUIView = workSpace.CurrentView
	Set curDB = curUIView.View.Parent
	Set unpro = curUIView.Documents
	If unpro.Count = 0 Then
		Set unpro = curDB.UnprocessedDocuments
	End If
	
	Set doc = unpro.GetFirstDocument()
	
	Do Until doc Is Nothing
		
		doc.OutFileDir = folder &amp; "\"
		
		Call doc.ComputeWithForm(True, True)
		Call doc.Save(True, True)
		
		Set doc = unpro.GetNextDocument(doc)
	Loop
	
	Call curUIView.DeselectAll
	Call workSpace.ViewRefresh()
	
ExitTag:
	Exit Sub
ErrorHandle:
	Call SetErrorObject(Err, Error)
	Call Messagebox_Error(GetErrorMessage(), "")
	Resume ExitTag
End Sub
</lotusscript></code><code event='initialize'><lotusscript>Sub Initialize
	Call SetProcess("*AC - 出力先")
End Sub</lotusscript></code></action>
<action title='ツールメニュー\パス変更\データベース２' showinrightbuttonmenu='true'><code event='options'><lotusscript
>Option Declare
Use "NotesUICommonLib"
</lotusscript></code><code event='click'><lotusscript>Sub Click(Source As Button)
	On Error Goto ErrorHandle
	
	Dim workSpace As New NotesUIWorkspace
	Dim curUIView As NotesUIView
	Dim curDB As NotesDatabase
	Dim unpro As NotesDocumentCollection
	
	Set curUIView = workSpace.CurrentView
	Set curDB = curUIView.View.Parent
	Set unpro = curUIView.Documents
	If unpro.Count = 0 Then
		Set unpro = curDB.UnprocessedDocuments
	End If
	
	Dim db As NotesDatabase
	Dim retVal As Variant
	
	retVal = workSpace.Prompt(13, "", "")
	If Isempty(retVal) = True Then
		Exit Sub
	End If
	
	Set db = New NotesDatabase("", "")
	If db.Open(retVal(0), retVal(1)) = False Then
		Call Messagebox_Error(retVal(2) &amp; "が開けません。", "")
		Exit Sub
	End If
	
	Call unpro.StampAll("CompDbServer", db.Server)
	Call unpro.StampAll("CompDbTitle", db.Title)
	Call unpro.StampAll("CompDbFilePath", db.FilePath)
	Call unpro.StampAll("CompDbReplicaID", db.ReplicaID)
	
	Call curUIView.DeselectAll()
	Call workSpace.ViewRefresh()
	
ExitTag:
	Exit Sub
ErrorHandle:
	Call SetErrorObject(Err, Error)
	Call Messagebox_Error(GetErrorMessage(), "")
	Resume ExitTag
End Sub</lotusscript></code></action>
<action title='ツールメニュー\アイコン追加\データベース１' showinrightbuttonmenu='true'><code
 event='options'><lotusscript>Option Declare
Use "NotesUICommonLib"
</lotusscript></code><code event='click'><lotusscript>Sub Click(Source As Button)
	On Error Goto ErrorHandle
	On Error 4412 Goto Error4412Handle
	
	Dim workSpace As New NotesUIWorkspace
	Dim curUIView As NotesUIView
	Dim curDB As NotesDatabase
	Dim unpro As NotesDocumentCollection
	
	Set curUIView = workSpace.CurrentView
	Set curDB = curUIView.View.Parent
	Set unpro = curUIView.Documents
	If unpro.Count = 0 Then
		Set unpro = curDB.UnprocessedDocuments
	End If
	
	Dim doc As NotesDocument
	Dim db As NotesDatabase
	
	Set doc = unpro.GetFirstDocument()
	
	Do Until doc Is Nothing
		
		Set db = New NotesDatabase("", "")
		If db.Open(doc.CompDbServer(0), doc.DbFilePath(0)) = True Then
			Call workSpace.AddDatabase(doc.DbServer(0), doc.DbFilePath(0))
		Else
			Error 4412, "Notesエラー : file does not exist  [server = " &amp; doc.DbServer(0) &amp; " filePath = " &amp; doc.DbFilePath(0) &amp; "]"
		End If
		
NextLoop:
		Set doc = unpro.GetNextDocument(doc)
	Loop
	
	Call curUIView.DeselectAll()
	Call workSpace.ViewRefresh()
	
ExitTag:
	Exit Sub
Error4412Handle:
	Call SetErrorObject(Err, Error)
	Print "エラー：" &amp; GetErrorMessage()
	Call ClearErrorObject()
	Resume NextLoop
ErrorHandle:
	Call SetErrorObject(Err, Error)
	Call Messagebox_Error(GetErrorMessage(), "")
	Resume ExitTag
End Sub
</lotusscript></code><code event='initialize'><lotusscript>Sub Initialize
	Call SetProcess("*AC - ツールメニュー\アイコン追加\データベース１")
End Sub</lotusscript></code></action>
<action title='ツールメニュー\アイコン追加\データベース２' showinrightbuttonmenu='true'><code
 event='options'><lotusscript>Option Declare
Use "NotesUICommonLib"
</lotusscript></code><code event='click'><lotusscript>Sub Click(Source As Button)
	On Error Goto ErrorHandle
	On Error 4412 Goto Error4412Handle
	
	Dim workSpace As New NotesUIWorkspace
	Dim curUIView As NotesUIView
	Dim curDB As NotesDatabase
	Dim unpro As NotesDocumentCollection
	
	Set curUIView = workSpace.CurrentView
	Set curDB = curUIView.View.Parent
	Set unpro = curUIView.Documents
	If unpro.Count = 0 Then
		Set unpro = curDB.UnprocessedDocuments
	End If
	
	Dim doc As NotesDocument
	Dim db As NotesDatabase
	
	Set doc = unpro.GetFirstDocument()
	
	Do Until doc Is Nothing
		
		Set db = New NotesDatabase("", "")
		If db.Open(doc.CompDbServer(0), doc.CompDbFilePath(0)) = True Then
			Call workSpace.AddDatabase(doc.CompDbServer(0), doc.CompDbFilePath(0))
		Else
			Error 4412, "Notesエラー : file does not exist  [server = " &amp; doc.CompDbServer(0) &amp; " filePath = " &amp; doc.CompDbFilePath(0) &amp; "]"
		End If
		
NextLoop:
		Set doc = unpro.GetNextDocument(doc)
	Loop
	
	Call curUIView.DeselectAll()
	Call workSpace.ViewRefresh()
	
ExitTag:
	Exit Sub
Error4412Handle:
	Call SetErrorObject(Err, Error)
	Print "エラー：" &amp; GetErrorMessage()
	Call ClearErrorObject()
	Resume NextLoop
ErrorHandle:
	Call SetErrorObject(Err, Error)
	Call Messagebox_Error(GetErrorMessage(), "")
	Resume ExitTag
End Sub
</lotusscript></code><code event='initialize'><lotusscript>Sub Initialize
	Call SetProcess("*AC - ツールメニュー\アイコン追加\データベース２")
End Sub</lotusscript></code></action>
<action title='ツールメニュー\アイコン追加\Delta Reports' showinrightbuttonmenu='true'><code
 event='options'><lotusscript>Option Declare
Use "NotesUICommonLib"
</lotusscript></code><code event='click'><lotusscript>Sub Click(Source As Button)
	On Error Goto ErrorHandle
	On Error 4412 Goto Error4412Handle
	
	Dim workSpace As New NotesUIWorkspace
	Dim curUIView As NotesUIView
	Dim curDB As NotesDatabase
	Dim unpro As NotesDocumentCollection
	
	Set curUIView = workSpace.CurrentView
	Set curDB = curUIView.View.Parent
	Set unpro = curUIView.Documents
	If unpro.Count = 0 Then
		Set unpro = curDB.UnprocessedDocuments
	End If
	
	Dim doc As NotesDocument
	Dim db As NotesDatabase
	
	Set doc = unpro.GetFirstDocument()
	
	Do Until doc Is Nothing
		
		Set db = New NotesDatabase("", "")
		If db.Open("", doc.OutFilePath(0)) = True Then
			Call workSpace.AddDatabase("", doc.OutFilePath(0))
		Else
			Error 4412, "Notesエラー : file does not exist  [filePath = " &amp; doc.OutFilePath(0) &amp; "]"
		End If
		
NextLoop:
		Set doc = unpro.GetNextDocument(doc)
	Loop
	
	Call curUIView.DeselectAll()
	Call workSpace.ViewRefresh()
	
ExitTag:
	Exit Sub
Error4412Handle:
	Call SetErrorObject(Err, Error)
	Print "エラー：" &amp; GetErrorMessage()
	Call ClearErrorObject()
	Resume NextLoop
ErrorHandle:
	Call SetErrorObject(Err, Error)
	Call Messagebox_Error(GetErrorMessage(), "")
	Resume ExitTag
End Sub
</lotusscript></code><code event='initialize'><lotusscript>Sub Initialize
	Call SetProcess("*AC - ツールメニュー\アイコン追加\Delta Reports")
End Sub</lotusscript></code></action>
<action title='選択全解除' icon='11' showinrightbuttonmenu='true'><code event='click'><formula
>@Command([EditDeselectAll])</formula></code></action></actionbar>
<column hidedetailrows='false' itemname='$15' width='1' resizable='true' separatemultiplevalues='false'
 sortnoaccent='false' sortnocase='true' showaslinks='false' showascolor='true'
 hidden='true'><columnheader><font size='9pt' style='bold'/></columnheader><code
 event='value'><formula>@If(@IsResponseDoc;255:255:194:0:0:0;0)</formula></code></column>
<column resort='both' hidedetailrows='false' itemname='$8' width='1' resizable='true'
 separatemultiplevalues='false' sortnoaccent='false' sortnocase='true' showaslinks='false'
 showasicons='true'><columnheader><font size='9pt' style='bold'/></columnheader><code
 event='value'><formula>tmp:=@TextToNumber(Status);
@If(@IsError(tmp);0;tmp)</formula></code></column>
<column sort='ascending' hidedetailrows='false' itemname='$18' width='1' resizable='true'
 separatemultiplevalues='true' sortnoaccent='false' sortnocase='true' showaslinks='false'
 hidecolumntitle='true' categorized='true' twisties='true'><font size='9pt'
 color='teal' style='bold'/><columnheader title='Parent_DbServer'><font size='9pt'
 style='bold'/></columnheader><code event='value'><formula>tmp:=Parent_DbServer;
tmp:=@If(tmp="";@Subset(@DbName;1);tmp);
@If(tmp="";"-Local-";tmp)</formula></code></column>
<column sort='ascending' hidedetailrows='false' itemname='$17' width='1' resizable='true'
 separatemultiplevalues='true' sortnoaccent='false' sortnocase='true' showaslinks='false'
 hidecolumntitle='true' categorized='true' twisties='true'><font size='9pt'
 color='teal' style='bold'/><columnheader title='Parent_DbFilePath'><font
 size='9pt' style='bold'/></columnheader><code event='value'><formula>@ReplaceSubstring(@LeftBack(Parent_DbFilePath;"\\");"\\";"＼")+" ("+@Text(@DocDescendants)+")"</formula></code></column>
<column resort='both' hidedetailrows='false' itemname='Parent_DbTitle' width='15'
 resizable='true' separatemultiplevalues='false' sortnoaccent='true' sortnocase='true'
 showaslinks='false' twisties='true'><font size='9pt'/><columnheader title='DB1'><font
 size='8pt'/></columnheader></column>
<column sort='ascending' resort='both' hidedetailrows='false' itemname='$4'
 width='10' resizable='true' separatemultiplevalues='false' sortnoaccent='false'
 sortnocase='true' showaslinks='false'><font size='9pt'/><columnheader title='FileName'><font
 size='8pt'/></columnheader><code event='value'><formula>@RightBack(Parent_DbFilePath;"\\")</formula></code></column>
<column resort='both' hidedetailrows='false' itemname='CompDbTitle' width='15'
 resizable='true' separatemultiplevalues='false' sortnoaccent='false' sortnocase='true'
 showaslinks='false'><font size='9pt'/><columnheader title='DB2'><font size='8pt'/></columnheader></column>
<column resort='both' hidedetailrows='false' itemname='$6' width='10' resizable='true'
 separatemultiplevalues='false' sortnoaccent='false' sortnocase='true' showaslinks='false'><font
 size='9pt'/><columnheader title='FileName'><font size='8pt'/></columnheader><code
 event='value'><formula>@RightBack(CompDbFilePath;"\\")</formula></code></column>
<column hidedetailrows='false' itemname='OutFileTitle' width='15' resizable='true'
 separatemultiplevalues='false' sortnoaccent='false' sortnocase='true' showaslinks='false'><font
 size='9pt'/><columnheader title='Delta Reports'><font size='8pt'/></columnheader></column>
<column hidedetailrows='false' itemname='OutFileName' width='10' resizable='true'
 separatemultiplevalues='false' sortnoaccent='false' sortnocase='true' showaslinks='false'><font
 size='9pt'/><columnheader title='FileName'><font size='8pt'/></columnheader></column>
<column hidedetailrows='false' itemname='OutFilePath' width='20' resizable='true'
 separatemultiplevalues='false' sortnoaccent='false' sortnocase='true' showaslinks='false'><font
 size='9pt'/><columnheader title='Path'><font size='8pt'/></columnheader></column></view>

<view name='20.Teamstadio\02.デルタ\02.完了' alias='DeltaCompUI' showinmenu='false'
 publicaccess='false' designerversion='7' unreadmarks='none' onopengoto='lastopened'
 onrefresh='displayindicator' headers='simple' opencollapsed='false' showresponsehierarchy='false'
 showmargin='true' shrinkrows='true' extendlastcolumn='false' showhierarchies='false'
 unreadcolor='black' rowlinecount='3' headerlinecount='1' rowspacing='1.25'
 bgcolor='white' altrowcolor='#efefef' totalscolor='black' headerbgcolor='#e1e1e1'
 boldunreadrows='false' evaluateactions='false' allownewdocuments='false'
 allowcustomizations='false' hidemarginborder='false' marginwidth='0px' marginbgcolor='white'
 gridstyle='solid' gridcolor='#e1e1e1' uniquekeys='false' formatnoteid='7F3CB7A21A0117B5492576C8002C12A4'>
<noteinfo noteid='61e' unid='A8EB3510C2E881D14925791200454FBC' sequence='26'>
<created><datetime>20110921T213703,96+09</datetime></created>
<modified><datetime>20181031T100054,63+09</datetime></modified>
<revised><datetime>20181031T100054,62+09</datetime></revised>
<lastaccessed><datetime>20190301T154011,49+09</datetime></lastaccessed>
<addedtofile><datetime>20110921T213703,96+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby>
<wassignedby><name>CN=Administrator/O=Comture</name></wassignedby><code event='selection'><formula
>SELECT ((Form = "DeltaSetting") &amp; Status != "79")</formula></code>
<actionbar bgcolor='#d4d0c8' bordercolor='black'>
<actionbuttonstyle showdropdown='true' bgcolor='#d4d0c8'/><font color='system'/><border
 style='solid' width='0px 0px 1px'/>
<sharedactionref id='3'>
<action title='閉じる(_X)' icon='112'><code event='click'><formula>FIELD SaveOptions:="0";
@Command([FileCloseWindow])</formula></code><code event='label'><formula>"閉じる"</formula></code></action></sharedactionref>
<sharedactionref id='2'>
<action title='編集(_E)' icon='29' hide='edit previewedit'><code event='click'><formula
>@If(@IsError(@Command([EditDocument]));"";"")</formula></code><code event='label'><formula
>"編集"</formula></code></action></sharedactionref>
<action title='新規作成\単一作成' icon='30' showinmenu='false'><code event='click'><formula
>@Command([Compose];"DeltaSetting")</formula></code></action>
<action title='新規作成\一括作成' showinmenu='false'><code event='options'><lotusscript
>Option Declare
Use "NotesUICommonLib"
</lotusscript></code><code event='initialize'><lotusscript>Sub Initialize
	Call SetProcess("*AC - 一括作成")
End Sub
</lotusscript></code><code event='click'><lotusscript>Sub Click(Source As Button)
	On Error Goto ErrorHandle
	
	Dim workSpace As New NotesUIWorkspace
	Dim curUIView As NotesUIView
	Dim curDB As NotesDatabase
	Dim unpro As NotesDocumentCollection
	
	Set curUIView = workSpace.CurrentView
	Set curDB = curUIView.View.Parent
	
	Set unpro = workSpace.PickListCollection(3, True, curDB.Server, curDB.FilePath, "SelectDbInfo", "データベース情報の選択(複数)", "データベース情報を選択してください。")
	
	If unpro.Count = 0 Then
		Exit Sub
	End If
	
	Dim doc As NotesDocument
	Dim newDoc As NotesDocument
	
	Set doc = unpro.GetFirstDocument()
	
	Do Until doc Is Nothing
		
		Set newDoc = curDB.CreateDocument
		
		newDoc.Form = "DeltaSetting"
		newDoc.DbServer = doc.DbServer
		newDoc.DbFilePath = doc.DbFilePath
		newDoc.DbTitle = doc.DbTitle
		newDoc.DbReplicaID = doc.DbReplicaID
		
		Call newDoc.ComputeWithForm(True, True)
		
		Call newDoc.Save(True, True)
		
		Set doc = unpro.GetNextDocument(doc)
	Loop
	
	Call curUIView.DeselectAll()
	Call workSpace.ViewRefresh()
	
ExitTag:
	Exit Sub
ErrorHandle:
	Call SetErrorObject(Err, Error)
	Call Messagebox_Error(GetErrorMessage(), "")
	Resume ExitTag
End Sub</lotusscript></code></action>
<action title='ツールメニュー\Delta実行' icon='109' showinrightbuttonmenu='true'><code
 event='click'><formula>@If(@True=@Prompt([YesNo];"Deltaの実行";"アクションメニューから実行すると、スレッドを分離できます。"+@NewLine+"このまま実行しますか？");@Command([ToolsRunMacro];"RunDelta");"")</formula></code></action>
<action title='ツールメニュー\ステータス\処理対象にする' showinrightbuttonmenu='true'><code event='options'><lotusscript
>Option Declare

</lotusscript></code><code event='click'><lotusscript>Sub Click(Source As Button)
	
	Dim workSpace As New NotesUIWorkspace
	Dim curUIView As NotesUIView
	Dim curDB As NotesDatabase
	Dim unpro As NotesDocumentCollection
	
	Set curUIView = workSpace.CurrentView
	Set curDB = curUIView.View.Parent
	Set unpro = curUIView.Documents
	
	If unpro.Count = 0 Then
		Set unpro = curDB.UnprocessedDocuments
	End If
	
	Call unpro.StampAll("Status", "79")
	Call curUIview.DeselectAll()
	Call workSpace.ViewRefresh()
	
End Sub</lotusscript></code></action>
<action title='ツールメニュー\ステータス\処理から除外する' icon='41' showinrightbuttonmenu='true'><code
 event='options'><lotusscript>Option Declare

</lotusscript></code><code event='click'><lotusscript>Sub Click(Source As Button)
	
	Dim workSpace As New NotesUIWorkspace
	Dim curUIView As NotesUIView
	Dim curDB As NotesDatabase
	Dim unpro As NotesDocumentCollection
	
	Set curUIView = workSpace.CurrentView
	Set curDB = curUIView.View.Parent
	Set unpro = curUIView.Documents
	
	If unpro.Count = 0 Then
		Set unpro = curDB.UnprocessedDocuments
	End If
	
	Call unpro.StampAll("Status", "80")
	Call curUIview.DeselectAll()
	Call workSpace.ViewRefresh()
	
End Sub</lotusscript></code></action>
<action title='ツールメニュー\パス変更\Delta Reports' icon='41' showinrightbuttonmenu='true'><code
 event='options'><lotusscript>Option Declare
Use "NotesUICommonLib"
</lotusscript></code><code event='click'><lotusscript>Sub Click(Source As Button)
	On Error Goto ErrorHandle
	
	Dim workSpace As New NotesUIWorkspace
	Dim dlgVal As Variant
	
	Dim folder As String
	Dim fileName As String
	
	dlgVal = workSpace.SaveFileDialog(True, "フォルダの選択", , , )
	If Isempty(dlgVal) Then
		Exit Sub
	End If
	
	folder = dlgVal(0)
	
	Dim curUIView As NotesUIView
	Dim curDB As NotesDatabase
	Dim unpro As NotesDocumentCollection
	Dim doc As NotesDocument
	
	Set curUIView = workSpace.CurrentView
	Set curDB = curUIView.View.Parent
	Set unpro = curUIView.Documents
	If unpro.Count = 0 Then
		Set unpro = curDB.UnprocessedDocuments
	End If
	
	Set doc = unpro.GetFirstDocument()
	
	Do Until doc Is Nothing
		
		doc.OutFileDir = folder &amp; "\"
		
		Call doc.ComputeWithForm(True, True)
		Call doc.Save(True, True)
		
		Set doc = unpro.GetNextDocument(doc)
	Loop
	
	Call curUIView.DeselectAll
	Call workSpace.ViewRefresh()
	
ExitTag:
	Exit Sub
ErrorHandle:
	Call SetErrorObject(Err, Error)
	Call Messagebox_Error(GetErrorMessage(), "")
	Resume ExitTag
End Sub
</lotusscript></code><code event='initialize'><lotusscript>Sub Initialize
	Call SetProcess("*AC - 出力先")
End Sub</lotusscript></code></action>
<action title='ツールメニュー\パス変更\データベース２' showinrightbuttonmenu='true'><code event='options'><lotusscript
>Option Declare
Use "NotesUICommonLib"
</lotusscript></code><code event='click'><lotusscript>Sub Click(Source As Button)
	On Error Goto ErrorHandle
	
	Dim workSpace As New NotesUIWorkspace
	Dim curUIView As NotesUIView
	Dim curDB As NotesDatabase
	Dim unpro As NotesDocumentCollection
	
	Set curUIView = workSpace.CurrentView
	Set curDB = curUIView.View.Parent
	Set unpro = curUIView.Documents
	If unpro.Count = 0 Then
		Set unpro = curDB.UnprocessedDocuments
	End If
	
	Dim db As NotesDatabase
	Dim retVal As Variant
	
	retVal = workSpace.Prompt(13, "", "")
	If Isempty(retVal) = True Then
		Exit Sub
	End If
	
	Set db = New NotesDatabase("", "")
	If db.Open(retVal(0), retVal(1)) = False Then
		Call Messagebox_Error(retVal(2) &amp; "が開けません。", "")
		Exit Sub
	End If
	
	Call unpro.StampAll("CompDbServer", db.Server)
	Call unpro.StampAll("CompDbTitle", db.Title)
	Call unpro.StampAll("CompDbFilePath", db.FilePath)
	Call unpro.StampAll("CompDbReplicaID", db.ReplicaID)
	
	Call curUIView.DeselectAll()
	Call workSpace.ViewRefresh()
	
ExitTag:
	Exit Sub
ErrorHandle:
	Call SetErrorObject(Err, Error)
	Call Messagebox_Error(GetErrorMessage(), "")
	Resume ExitTag
End Sub</lotusscript></code></action>
<action title='ツールメニュー\アイコン追加\データベース１' showinrightbuttonmenu='true'><code
 event='options'><lotusscript>Option Declare
Use "NotesUICommonLib"
</lotusscript></code><code event='click'><lotusscript>Sub Click(Source As Button)
	On Error Goto ErrorHandle
	On Error 4412 Goto Error4412Handle
	
	Dim workSpace As New NotesUIWorkspace
	Dim curUIView As NotesUIView
	Dim curDB As NotesDatabase
	Dim unpro As NotesDocumentCollection
	
	Set curUIView = workSpace.CurrentView
	Set curDB = curUIView.View.Parent
	Set unpro = curUIView.Documents
	If unpro.Count = 0 Then
		Set unpro = curDB.UnprocessedDocuments
	End If
	
	Dim doc As NotesDocument
	Dim db As NotesDatabase
	
	Set doc = unpro.GetFirstDocument()
	
	Do Until doc Is Nothing
		
		Set db = New NotesDatabase("", "")
		If db.Open(doc.CompDbServer(0), doc.DbFilePath(0)) = True Then
			Call workSpace.AddDatabase(doc.DbServer(0), doc.DbFilePath(0))
		Else
			Error 4412, "Notesエラー : file does not exist  [server = " &amp; doc.DbServer(0) &amp; " filePath = " &amp; doc.DbFilePath(0) &amp; "]"
		End If
		
NextLoop:
		Set doc = unpro.GetNextDocument(doc)
	Loop
	
	Call curUIView.DeselectAll()
	Call workSpace.ViewRefresh()
	
ExitTag:
	Exit Sub
Error4412Handle:
	Call SetErrorObject(Err, Error)
	Print "エラー：" &amp; GetErrorMessage()
	Call ClearErrorObject()
	Resume NextLoop
ErrorHandle:
	Call SetErrorObject(Err, Error)
	Call Messagebox_Error(GetErrorMessage(), "")
	Resume ExitTag
End Sub
</lotusscript></code><code event='initialize'><lotusscript>Sub Initialize
	Call SetProcess("*AC - ツールメニュー\アイコン追加\データベース１")
End Sub</lotusscript></code></action>
<action title='ツールメニュー\アイコン追加\データベース２' showinrightbuttonmenu='true'><code
 event='options'><lotusscript>Option Declare
Use "NotesUICommonLib"
</lotusscript></code><code event='click'><lotusscript>Sub Click(Source As Button)
	On Error Goto ErrorHandle
	On Error 4412 Goto Error4412Handle
	
	Dim workSpace As New NotesUIWorkspace
	Dim curUIView As NotesUIView
	Dim curDB As NotesDatabase
	Dim unpro As NotesDocumentCollection
	
	Set curUIView = workSpace.CurrentView
	Set curDB = curUIView.View.Parent
	Set unpro = curUIView.Documents
	If unpro.Count = 0 Then
		Set unpro = curDB.UnprocessedDocuments
	End If
	
	Dim doc As NotesDocument
	Dim db As NotesDatabase
	
	Set doc = unpro.GetFirstDocument()
	
	Do Until doc Is Nothing
		
		Set db = New NotesDatabase("", "")
		If db.Open(doc.CompDbServer(0), doc.CompDbFilePath(0)) = True Then
			Call workSpace.AddDatabase(doc.CompDbServer(0), doc.CompDbFilePath(0))
		Else
			Error 4412, "Notesエラー : file does not exist  [server = " &amp; doc.CompDbServer(0) &amp; " filePath = " &amp; doc.CompDbFilePath(0) &amp; "]"
		End If
		
NextLoop:
		Set doc = unpro.GetNextDocument(doc)
	Loop
	
	Call curUIView.DeselectAll()
	Call workSpace.ViewRefresh()
	
ExitTag:
	Exit Sub
Error4412Handle:
	Call SetErrorObject(Err, Error)
	Print "エラー：" &amp; GetErrorMessage()
	Call ClearErrorObject()
	Resume NextLoop
ErrorHandle:
	Call SetErrorObject(Err, Error)
	Call Messagebox_Error(GetErrorMessage(), "")
	Resume ExitTag
End Sub
</lotusscript></code><code event='initialize'><lotusscript>Sub Initialize
	Call SetProcess("*AC - ツールメニュー\アイコン追加\データベース２")
End Sub</lotusscript></code></action>
<action title='ツールメニュー\アイコン追加\Delta Reports' showinrightbuttonmenu='true'><code
 event='options'><lotusscript>Option Declare
Use "NotesUICommonLib"
</lotusscript></code><code event='click'><lotusscript>Sub Click(Source As Button)
	On Error Goto ErrorHandle
	On Error 4412 Goto Error4412Handle
	
	Dim workSpace As New NotesUIWorkspace
	Dim curUIView As NotesUIView
	Dim curDB As NotesDatabase
	Dim unpro As NotesDocumentCollection
	
	Set curUIView = workSpace.CurrentView
	Set curDB = curUIView.View.Parent
	Set unpro = curUIView.Documents
	If unpro.Count = 0 Then
		Set unpro = curDB.UnprocessedDocuments
	End If
	
	Dim doc As NotesDocument
	Dim db As NotesDatabase
	
	Set doc = unpro.GetFirstDocument()
	
	Do Until doc Is Nothing
		
		Set db = New NotesDatabase("", "")
		If db.Open("", doc.OutFilePath(0)) = True Then
			Call workSpace.AddDatabase("", doc.OutFilePath(0))
		Else
			Error 4412, "Notesエラー : file does not exist  [filePath = " &amp; doc.OutFilePath(0) &amp; "]"
		End If
		
NextLoop:
		Set doc = unpro.GetNextDocument(doc)
	Loop
	
	Call curUIView.DeselectAll()
	Call workSpace.ViewRefresh()
	
ExitTag:
	Exit Sub
Error4412Handle:
	Call SetErrorObject(Err, Error)
	Print "エラー：" &amp; GetErrorMessage()
	Call ClearErrorObject()
	Resume NextLoop
ErrorHandle:
	Call SetErrorObject(Err, Error)
	Call Messagebox_Error(GetErrorMessage(), "")
	Resume ExitTag
End Sub
</lotusscript></code><code event='initialize'><lotusscript>Sub Initialize
	Call SetProcess("*AC - ツールメニュー\アイコン追加\Delta Reports")
End Sub</lotusscript></code></action>
<action title='選択全解除' icon='11' showinrightbuttonmenu='true'><code event='click'><formula
>@Command([EditDeselectAll])</formula></code></action></actionbar>
<column hidedetailrows='false' itemname='$15' width='1' resizable='true' separatemultiplevalues='false'
 sortnoaccent='false' sortnocase='true' showaslinks='false' showascolor='true'
 hidden='true'><columnheader><font size='9pt' style='bold'/></columnheader><code
 event='value'><formula>@If(@IsResponseDoc;255:255:194:0:0:0;0)</formula></code></column>
<column resort='both' hidedetailrows='false' itemname='$8' width='1' resizable='true'
 separatemultiplevalues='false' sortnoaccent='false' sortnocase='true' showaslinks='false'
 showasicons='true'><columnheader><font size='9pt' style='bold'/></columnheader><code
 event='value'><formula>tmp:=@TextToNumber(Status);
@If(@IsError(tmp);0;tmp)</formula></code></column>
<column sort='ascending' hidedetailrows='false' itemname='$18' width='1' resizable='true'
 separatemultiplevalues='true' sortnoaccent='false' sortnocase='true' showaslinks='false'
 hidecolumntitle='true' categorized='true' twisties='true'><font size='9pt'
 color='teal' style='bold'/><columnheader title='Parent_DbServer'><font size='9pt'
 style='bold'/></columnheader><code event='value'><formula>tmp:=Parent_DbServer;
tmp:=@If(tmp="";@Subset(@DbName;1);tmp);
@If(tmp="";"-Local-";tmp)</formula></code></column>
<column sort='ascending' hidedetailrows='false' itemname='$17' width='1' resizable='true'
 separatemultiplevalues='true' sortnoaccent='false' sortnocase='true' showaslinks='false'
 hidecolumntitle='true' categorized='true' twisties='true'><font size='9pt'
 color='teal' style='bold'/><columnheader title='Parent_DbFilePath'><font
 size='9pt' style='bold'/></columnheader><code event='value'><formula>@ReplaceSubstring(@LeftBack(Parent_DbFilePath;"\\");"\\";"＼")+" ("+@Text(@DocDescendants)+")"</formula></code></column>
<column resort='both' hidedetailrows='false' itemname='Parent_DbTitle' width='15'
 resizable='true' separatemultiplevalues='false' sortnoaccent='true' sortnocase='true'
 showaslinks='false'><font size='9pt'/><columnheader title='DB1'><font size='8pt'/></columnheader></column>
<column sort='ascending' resort='both' hidedetailrows='false' itemname='$4'
 width='10' resizable='true' separatemultiplevalues='false' sortnoaccent='false'
 sortnocase='true' showaslinks='false'><font size='9pt'/><columnheader title='FileName'><font
 size='8pt'/></columnheader><code event='value'><formula>@RightBack(Parent_DbFilePath;"\\")</formula></code></column>
<column resort='both' hidedetailrows='false' itemname='CompDbTitle' width='15'
 resizable='true' separatemultiplevalues='false' sortnoaccent='false' sortnocase='true'
 showaslinks='false'><font size='9pt'/><columnheader title='DB2'><font size='8pt'/></columnheader></column>
<column resort='both' hidedetailrows='false' itemname='$6' width='10' resizable='true'
 separatemultiplevalues='false' sortnoaccent='false' sortnocase='true' showaslinks='false'><font
 size='9pt'/><columnheader title='FileName'><font size='8pt'/></columnheader><code
 event='value'><formula>@RightBack(CompDbFilePath;"\\")</formula></code></column>
<column hidedetailrows='false' itemname='OutFileTitle' width='15' resizable='true'
 separatemultiplevalues='false' sortnoaccent='false' sortnocase='true' showaslinks='false'><font
 size='9pt'/><columnheader title='Delta Reports'><font size='8pt'/></columnheader></column>
<column hidedetailrows='false' itemname='OutFileName' width='10' resizable='true'
 separatemultiplevalues='false' sortnoaccent='false' sortnocase='true' showaslinks='false'><font
 size='9pt'/><columnheader title='FileName'><font size='8pt'/></columnheader></column>
<column hidedetailrows='false' itemname='OutFilePath' width='20' resizable='true'
 separatemultiplevalues='false' sortnoaccent='false' sortnocase='true' showaslinks='false'><font
 size='9pt'/><columnheader title='Path'><font size='8pt'/></columnheader></column></view>
<databasescript>
<noteinfo noteid='63a' unid='0FD1FCF9DF84E2A8492579170007C8B4' sequence='19'>
<created><datetime>20110926T102501,32+09</datetime></created>
<modified><datetime>20181031T100052,94+09</datetime></modified>
<revised><datetime>20181031T100052,93+09</datetime></revised>
<lastaccessed><datetime>20181031T100052,94+09</datetime></lastaccessed>
<addedtofile><datetime>20110926T102559,82+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby>
<wassignedby><name>CN=Administrator/O=Comture</name></wassignedby><code event='options'><lotusscript
>Option Declare
Use "NotesUICommonLib"
</lotusscript></code><code event='RemoveAllChildren'><lotusscript>Sub RemoveAllChildren(docCol As NotesDocumentCollection, counter As Double)
	
	Dim doc As NotesDocument
	Dim children As NotesDocumentCollection
	Dim child As NotesDocument
	Dim nextChild As NotesDocument
	Dim count As Double
	Dim i As Double
	
	Set doc = docCol.GetFirstDocument()
	Do Until doc Is Nothing
		Set children = doc.Responses
		If Not children Is Nothing Then
			Call RemoveAllChildren(children, counter)
		End If
		Set doc = docCol.GetNextDocument(doc)
	Loop
	
	counter = counter + docCol.Count
	Call docCol.RemoveAll(True)
	Print counter &amp; " 文書 削除しました。"
	
End Sub
</lotusscript></code><code event='querydocumentdelete'><lotusscript>Sub Querydocumentdelete(Source As Notesuidatabase, Continue As Variant)
	
	On Error Goto ErrorHandle
	
	Dim workSpace As New NotesUIWorkspace
	Dim docCol As NotesDocumentCollection
	Dim count As Double
	
	Set docCol = Source.Documents
	
	If 7 = Messagebox_YesNo("選択した " &amp; docCol.Count &amp; " 文書と従属する返答を全て削除します。", "") Then
		Goto ExitTag
	End If
	
	Call RemoveAllChildren(docCol, count)
	
	Call workSpace.ViewRefresh()
	
ExitTag:
	Continue = False
	Exit Sub
ErrorHandle:
	Resume ExitTag
	Exit Sub
End Sub
</lotusscript></code><code event='initialize'><lotusscript>Sub Initialize
	Call SetProcess("*DatabaseScript")
End Sub</lotusscript></code>
<item name='$POID'><datetime>20140930T200605,29+09</datetime></item></databasescript>

<page name='アウトライン' alias='Outline' publicaccess='false' designerversion='8'
 renderpassthrough='true'>
<noteinfo noteid='63e' unid='83E4C0699C8D456D49257917000B2CD7' sequence='26'>
<created><datetime>20110926T110203,75+09</datetime></created>
<modified><datetime>20181031T100053,03+09</datetime></modified>
<revised><datetime>20181031T100053,02+09</datetime></revised>
<lastaccessed><datetime>20181031T100053,03+09</datetime></lastaccessed>
<addedtofile><datetime>20110926T110225,60+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby>
<wassignedby><name>CN=Administrator/O=Comture</name></wassignedby><code event='windowtitle'><formula
>@DbTitle</formula></code>
<body><richtext>
<pardef id='1' leftmargin='0.7681in'/>
<par def='1'><embeddedoutline outline='アウトライン' showtwistie='true' osstyletwistie='true'
 widthtype='fitwindow' heighttype='fitcontent' width='99%' height='2.2604in'
 expand='all' targetframe='view'><title style='simple'><font size='16pt' style='bold emboss'
 name='HG丸ｺﾞｼｯｸM-PRO' pitch='variable' truetype='true' familyid='30'/><eoutlinebackground
 normalcolor='#ffc0b6' mouseovercolor='#ffc0b6'/><layout labelalign='middlecenter'
 heighttype='fixed' height='0.3938in' labelhoffset='0.1965in' labelvoffset='0'/></title><toplevel
 selectedcolor='white'><font name='HGSｺﾞｼｯｸM' pitch='variable' truetype='true'
 familyid='30'/><eoutlinebackground selectedcolor='navy' mouseovercolor='yellow'/><layout
 labelalign='middleleft' heighttype='fixed' height='0.1965in' imagealign='middleleft'
 labelhoffset='0.2000in' labelvoffset='0'/></toplevel><sublevel selectedcolor='white'><font
 name='HGPｺﾞｼｯｸM' pitch='variable' truetype='true' familyid='30'/><eoutlinebackground
 selectedcolor='navy' mouseovercolor='yellow'/><layout labelalign='middleleft'
 heighttype='fixed' height='0.1965in' entryhoffset='0.0042in' imagealign='middleleft'
 labelhoffset='0.2000in' labelvoffset='0'/></sublevel><border width='1px'/></embeddedoutline></par></richtext></body>
<item name='$$ScriptName' summary='false' sign='true'><text>Outline</text></item></page>

<outline name='アウトライン' publicaccess='true' designerversion='7'>
<noteinfo noteid='642' unid='C2C30EB4FF8DD52249257917000B37A6' sequence='10'>
<created><datetime>20110926T110231,42+09</datetime></created>
<modified><datetime>20150528T093235,12+09</datetime></modified>
<revised><datetime>20140930T200605,33+09</datetime></revised>
<lastaccessed><datetime>20150528T093235,12+09</datetime></lastaccessed>
<addedtofile><datetime>20110926T110332,56+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=PSL85/O=Comture</name></updatedby>
<outlineentry label='データベース設定' type='namedelementlink'><imageref database='492576C8002C1298'
 name='dbicon.gif'/><namedelementlink type='view' name='00.データベース設定'/></outlineentry>
<outlineentry label='値代入用' type='namedelementlink'><imageref database='492576C8002C1298'
 name='view.gif'/><namedelementlink type='view' name='InputDataUI'/></outlineentry>
<outlineentry label='エージェント実行用' type='namedelementlink'><imageref database='492576C8002C1298'
 name='actn031.gif'/><namedelementlink type='view' name='RunAgentUI'/></outlineentry>
<outlineentry label='DB設計' type='namedelementlink'><namedelementlink type='view'
 name='DbDesignUI'/></outlineentry>
<outlineentry label='置換禁止有' level='1' type='namedelementlink'><namedelementlink
 type='view' name='DbDesignNotReplace'/></outlineentry>
<outlineentry label='Teamstadio' type='none'/>
<outlineentry label='Teamstadio設定' level='1' type='namedelementlink'><imageref
 database='492576C8002C1298' name='tmsicon.gif'/><namedelementlink type='view'
 name='TeamstadioInfo'/></outlineentry>
<outlineentry label='デルタ' level='1' type='none'/>
<outlineentry label='01.待ち' level='2' type='namedelementlink'><namedelementlink
 type='view' name='DeltaSettingUI'/></outlineentry>
<outlineentry label='02.完了' level='2' type='namedelementlink'><namedelementlink
 type='view' name='DeltaCompUI'/></outlineentry>
<outlineentry type='otherviews'/>
<outlineentry type='otherprivateviews'/>
<outlineentry type='otherfolders'/>
<outlineentry type='otherprivatefolders'/></outline>

<frameset name='フレームセット' publicaccess='false' designerversion='8' columns='1 100% 1'
 spacing='0px' borderwidth='4px' bordercolor='none'>
<noteinfo noteid='646' unid='AE3AEA1723BF4B4949257917000B563A' sequence='5'>
<created><datetime>20110926T110349,70+09</datetime></created>
<modified><datetime>20150528T093235,20+09</datetime></modified>
<revised><datetime>20140930T200605,35+09</datetime></revised>
<lastaccessed><datetime>20150528T093235,20+09</datetime></lastaccessed>
<addedtofile><datetime>20110926T110516,71+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=PSL85/O=Comture</name></updatedby>
<frame/>
<frameset rows='1px 1 1px' spacing='0px'>
<frame/>
<frame><namedelementlink type='frameset' name='InnerFS'/></frame>
<frame/></frameset>
<frame/></frameset>

<frameset name='(左フレーム)' alias='LeftFS' publicaccess='false' designerversion='8'
 spacing='0px' bordercolor='none'>
<noteinfo noteid='64a' unid='2F73E8290C49968849257917000B7BF4' sequence='7'>
<created><datetime>20110926T110526,28+09</datetime></created>
<modified><datetime>20150528T093235,06+09</datetime></modified>
<revised><datetime>20140930T200605,37+09</datetime></revised>
<lastaccessed><datetime>20150528T093235,06+09</datetime></lastaccessed>
<addedtofile><datetime>20110926T110547,50+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=PSL85/O=Comture</name></updatedby>
<frame name='Navi'><namedelementlink type='page' name='アウトライン'/></frame></frameset>

<frameset name='(右フレーム)' alias='RightFS' publicaccess='false' designerversion='8'
 spacing='0px' bordercolor='none'>
<noteinfo noteid='64e' unid='B809FD39C06078D049257917000B935F' sequence='5'>
<created><datetime>20110926T110626,23+09</datetime></created>
<modified><datetime>20150528T093235,04+09</datetime></modified>
<revised><datetime>20140930T200605,39+09</datetime></revised>
<lastaccessed><datetime>20150528T093235,04+09</datetime></lastaccessed>
<addedtofile><datetime>20110926T110724,54+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=PSL85/O=Comture</name></updatedby>
<frame name='view'><namedelementlink type='view' name='AllDoc'/></frame></frameset>

<frameset name='(インナーフレーム)' alias='InnerFS' publicaccess='false' designerversion='8'
 columns='180px 81%' spacing='0px' borderwidth='4px' bordercolor='#e1e1e1'>
<noteinfo noteid='652' unid='652E656D7E3AE36A49257917000BAD1C' sequence='45'>
<created><datetime>20110926T110732,12+09</datetime></created>
<modified><datetime>20150528T093234,82+09</datetime></modified>
<revised><datetime>20140930T200605,41+09</datetime></revised>
<lastaccessed><datetime>20150528T093234,82+09</datetime></lastaccessed>
<addedtofile><datetime>20110926T110812,43+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=PSL85/O=Comture</name></updatedby>
<frame name='Left'><bordercaption><font size='8pt'/></bordercaption><namedelementlink
 type='frameset' name='LeftFS'/></frame>
<frame name='Right'><bordercaption><font size='6pt'/></bordercaption><namedelementlink
 type='frameset' name='RightFS'/></frame></frameset>

<imageresource name='actn020.gif' noreplace='true' publicaccess='false' designerversion='8'>
<noteinfo noteid='656' unid='0FC0A647B150F7E949257917000D88D9' sequence='1'>
<created><datetime>20110926T112750,01+09</datetime></created>
<modified><datetime>20110926T112750,07+09</datetime></modified>
<revised><datetime>20110926T112750,06+09</datetime></revised>
<lastaccessed><datetime>20110926T112750,06+09</datetime></lastaccessed>
<addedtofile><datetime>20110926T112750,06+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=administrator/O=Comture</name></updatedby><gif>
R0lGODlhFQAVAMQAAAAAAP///zVXh8rg/tDk/tPl/tbn/tnp/tvq/t3r/mKV1pq75f//mcrKyPnJ
YPW0RYRaS8qPfMmWjP///wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACH5BAEA
ABMALAAAAAAVABUAAAWC4CSOZGmeaKquZuROEMSKEWPHMls/vBPrjAfu4VvtIIskhJg7HReJ6GJZ
bAWRiGx2yiw9D+DwgVsVSWILQ2DNDhimv5IiUFjj1nVB4zQn2Hlrfnp8AX4BSw+BAYMmfX+JhYt7
jQEDdhAOa5aMcm1UbZwkCgKkpaakkyYNq6ytrDMrIQA7
</gif>
<item name='$FileSize' sign='true'><number>261</number></item>
<item name='$MimeType' sign='true'><text>image/gif</text></item>
<item name='$FileModDT' sign='true'><datetime>20070621T152500,00+09</datetime></item></imageresource>

<imageresource name='dbicon.gif' noreplace='true' publicaccess='false' designerversion='8'>
<noteinfo noteid='65a' unid='240C4228CCD71B5949257917000DAC35' sequence='1'>
<created><datetime>20110926T112920,53+09</datetime></created>
<modified><datetime>20110926T112920,54+09</datetime></modified>
<revised><datetime>20110926T112920,53+09</datetime></revised>
<lastaccessed><datetime>20110926T112920,53+09</datetime></lastaccessed>
<addedtofile><datetime>20110926T112920,53+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=administrator/O=Comture</name></updatedby><gif>
R0lGODlhIAAgANUAAAAAAP///yYTOCMQNyEISoJC/7i3wICA/5+f/7+//+Dg/wkJCrq6w7m5wri4
wbe3wLy8xLa2vicoK//hGCQiGCQhGP+/GAkIBv+6R+RpAuJiAP+BQf+fcYCAgBMTEwMDAwEBAf//
/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACH5BAEAACEALAAAAAAgACAAAAb/wJBw
SCwaj8ikcplEFCrQaAHBTFamiqzWWakaKwmtWNz1DisAACKsTSBAl7I5dC14Fp/8J114zoUVBwcI
hAmGHVGJU1VXCINuCVBrYm5+S4GDhWBjnHJIjY8IaGpsWW5wnkeYhGt1d3p7AH2pX1Ohq4WGhAUH
tEIdacEAHa22a8cJg5ZFwxPOz8CigqyGbk69RgDOFtzdzgCgyGvKqdoTGhoW6OrpFgDTuda8nh0d
E+z46xb1juLJXES0dRtI0F2mNbquedLGAV26dQ45uOsHaRzAIQwd5kMn8R21hPMC3tuIj5uaUJDI
ieQG8WE7gx/lYcM4smXJDSf9qRxSj6XLMpL1KsQkVIFCNm4cJCa1sBRnCESJonRAAqBgN6d/MHbY
wLUrsKxFgAkbBras2bNokwQBADs=
</gif>
<item name='$FileSize' sign='true'><number>533</number></item>
<item name='$MimeType' sign='true'><text>image/gif</text></item>
<item name='$FileModDT' sign='true'><datetime>20020710T114614,00+09</datetime></item></imageresource>

<imageresource name='view.gif' noreplace='true' publicaccess='false' designerversion='8'>
<noteinfo noteid='65e' unid='9E33DC00D81EEF7249257917000DDED2' sequence='1'>
<created><datetime>20110926T113130,10+09</datetime></created>
<modified><datetime>20110926T113130,11+09</datetime></modified>
<revised><datetime>20110926T113130,10+09</datetime></revised>
<lastaccessed><datetime>20110926T113130,10+09</datetime></lastaccessed>
<addedtofile><datetime>20110926T113130,10+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=administrator/O=Comture</name></updatedby><gif>
R0lGODlhEgAOAPcAAAAAAP///4EAAoMBBoMCEv/g5v/AzsIAQWQAKJkzZuWfy8wIyOQh4P/B/cwA
zI0AjCgAKA4ADgIAAr8Fv+Ya5uEZ4RICEgUBBZhCmFI5Uq2craWfpf77/mAhYvHg/2JBgaFg/0AA
/+jg/zkK9wUC/xMN/WJgoQAA/wEA9wAA3QAAmgAAhAAAgAAAIgUF/jExzjExnEJCgl9fn5aW62Zm
mb+//5mZzLGx0rq6w7e3uQAP/x80+ik/rT1WyfHz+gBD+AA4yAAzmRRj4Sg3UFKR7+/z+WSSw5Sq
wwCA/wAzZkGBwAIDBILA/0RbcqbK8P3+/+zt7jhOYsDh/wBIh3m89Xmp0rbO4uDx/0tzjgCc/xBB
YPf8/3Gyz6Hi/wCg301pc8Lv/wDA/yybweT4/t/4/WCaoABAQQUzNAD//wCDgmP//zNoZ2bMzJz/
/36srIu0tGSBgcz//5vAwJy4uISZmeD//7nT09rv78vf39Xl5bfExNzo6LK7u+Lt7efw8IKHh+/1
9fT5+ezw8NPV1fX29jxfXi2XkX/CvEVYVlC4qylZUqfJxADEnUplX4L/ylt1aTmYYQDuAACAAAAR
AJnMmcbexq29rV/fPzNmAOD/v7i4AIGBADMzAAoKABERA4WFQfr6iPHxtM3Nm///wv//0P//0v//
1f//2P//9SsrKmNhAP73DdDKb/+/GfHftIRgDP7uzdGubmpdSP/gr9+fP/+CACsWACMiIeJiANGy
nP+sdppiT/MNAKkjHogAAIAAABMAAMQODv9AQGYzMwQDA6OhoZiXl/7+/vz8/Pr6+vj4+Pf39/X1
9fDw8O/v7+3t7erq6ubm5uLi4uHh4dzc3NLS0tDQ0M7OzszMzMnJycfHx8PDw8DAwL29vbS0tLKy
srGxsaqqqqWlpaKiop6eno+Pj4GBgXNzc2hoaGZmZmBgYF9fX1VVVVJSUlBQUE9PT01NTURERDc3
NzMzMzAwMC8vLywsLBgYGA8PDwwMDAoKCgYGBgQEBAMDAwEBAf///yH5BAEAAP8ALAAAAAASAA4A
QAhfAP8BGEiwoEEA/wQGWKhlocOHARAqZAgRokQADhtWdHhRicePIEFezLiRY0KMFEtGPBmy5ceL
WmLKnDlzpLkADc3p3KlzpcKbOXnu9IkRaAChQ23iPIr05sWDUAf+CwgAOw==
</gif>
<item name='$FileSize' sign='true'><number>898</number></item>
<item name='$MimeType' sign='true'><text>image/gif</text></item>
<item name='$FileModDT' sign='true'><datetime>20020710T114720,00+09</datetime></item></imageresource>

<imageresource name='actn031.gif' noreplace='true' publicaccess='false' designerversion='8'>
<noteinfo noteid='662' unid='42198EC6ACFBA0B949257917000DFE9E' sequence='1'>
<created><datetime>20110926T113251,50+09</datetime></created>
<modified><datetime>20110926T113251,51+09</datetime></modified>
<revised><datetime>20110926T113251,50+09</datetime></revised>
<lastaccessed><datetime>20110926T113251,50+09</datetime></lastaccessed>
<addedtofile><datetime>20110926T113251,50+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=administrator/O=Comture</name></updatedby><gif>
R0lGODlhFQAVALMAAAAAAP////j4mOiYGPjAYN6XMsCAKMiAKMrKyv///wAAAAAAAAAAAAAAAAAA
AAAAACH5BAEAAAkALAAAAAAVABUAQARmMMlJq52DGFIK6t0HItcIeiOWBcQxXLB0ouZJWneC5HB2
xBfDhmX4AWG7SVKyLIVso+ak9gxZXsfrQODKSjKCgFig8SYG28OBMC20gwlr3COjV2akTj3VptL4
FH4idhaCgIU3coQRADs=
</gif>
<item name='$FileSize' sign='true'><number>185</number></item>
<item name='$MimeType' sign='true'><text>image/gif</text></item>
<item name='$FileModDT' sign='true'><datetime>20070621T152532,00+09</datetime></item></imageresource>

<imageresource name='tmsicon.gif' noreplace='true' publicaccess='false' designerversion='8'>
<noteinfo noteid='666' unid='74F4939FA2D3432949257917000E5EDE' sequence='1'>
<created><datetime>20110926T113657,90+09</datetime></created>
<modified><datetime>20110926T113657,93+09</datetime></modified>
<revised><datetime>20110926T113657,92+09</datetime></revised>
<lastaccessed><datetime>20110926T113657,92+09</datetime></lastaccessed>
<addedtofile><datetime>20110926T113657,92+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=administrator/O=Comture</name></updatedby><gif>
R0lGODlhIAAgAKoAAP///wAAAICAgP8AAAD/AP//AAAAAAAAACH5BAAAAAAALAAAAAAgACAAAAPl
CKq0EE6JBaNdjcapryMgo1RCKY1SOXFA9j0AG88Qy00umBGBbPcnm0vUAl4ExtUCZ2nUTqcnlBVq
ZUg3DjZmurgqSwfYE/k6ZDByYM1uu9/wNjndQc3VkfHYo1Km2XYVA4MDAIVQMzR0GhCHhgqFWSox
axSVDwGHhY4DNzMrlx1rmo+QiWcwe6mlpY4mk38Vl4Kbg0diFmCqZDKqunNxwcJuuXUXux56FgXG
ybN2BczSgYC/jDDMC9MQ1ty4IwHZy7NyoXnhHgXP3t503tPaq3mW4NDRAPexmLvKCuLNyPYgs2Ms
AQA7
</gif>
<item name='$FileSize' sign='true'><number>288</number></item>
<item name='$MimeType' sign='true'><text>image/gif</text></item>
<item name='$FileModDT' sign='true'><datetime>20110926T113636,78+09</datetime></item></imageresource>
<sharedcolumn name='DbTitle' alias='DbTitle' designerversion='8'>
<noteinfo noteid='66a' unid='4306F661360A844049257917001B1C40' sequence='16'>
<created><datetime>20110926T135607,04+09</datetime></created>
<modified><datetime>20181031T100054,74+09</datetime></modified>
<revised><datetime>20181031T100054,73+09</datetime></revised>
<lastaccessed><datetime>20181031T100054,74+09</datetime></lastaccessed>
<addedtofile><datetime>20110926T135646,91+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby>
<wassignedby><name>CN=Administrator/O=Comture</name></wassignedby>
<column hidedetailrows='false' itemname='$0' width='20' resizable='true' separatemultiplevalues='false'
 sortnoaccent='true' sortnocase='true' showaslinks='false' twisties='true'><font
 color='navy'/><columnheader title='タイトル'><font size='8pt'/></columnheader><code
 event='value'><formula>fp:=DbFilePath;
fn:=@RightBack(fp;"\\");
DbTitle + " [" + @If(fn="";fp;fn) + "]"</formula></code><twistieimage><imageref
 database='0000000000000000' name='PlusMinus.gif'/></twistieimage></column></sharedcolumn>

<imageresource name='PlusMinus.gif' noreplace='true' publicaccess='false'
 designerversion='8'>
<noteinfo noteid='66e' unid='96E329F966F0C20249257917001D4AEF' sequence='1'>
<created><datetime>20110926T141957,27+09</datetime></created>
<modified><datetime>20110926T141957,30+09</datetime></modified>
<revised><datetime>20110926T141957,29+09</datetime></revised>
<lastaccessed><datetime>20110926T141957,29+09</datetime></lastaccessed>
<addedtofile><datetime>20110926T141957,29+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=administrator/O=Comture</name></updatedby><gif>
R0lGODlhGwANAKIFAGpqav///wAAAOLi4sLCwv///wAAAAAAACH5BAHoAwUALAAAAAAbAA0AAANL
WLrc/jDKAqq17WoGgv8BkIGfuHSe4A3mSQYs96kD0SroV9+d4Pu20Q/Im8GCMtBONhgImkhXcxql
1AhY7M2azfI0GA64Mimbz44EADs=
</gif>
<item name='$FileSize' sign='true'><number>134</number></item>
<item name='$MimeType' sign='true'><text>image/gif</text></item>
<item name='$FileModDT' sign='true'><datetime>20100804T105323,35+09</datetime></item></imageresource>
<sharedcolumn name='icon' alias='icon' designerversion='8'>
<noteinfo noteid='672' unid='35D1736B8EB193FA49257917001D802D' sequence='42'>
<created><datetime>20110926T142213,57+09</datetime></created>
<modified><datetime>20181031T100054,76+09</datetime></modified>
<revised><datetime>20181031T100054,75+09</datetime></revised>
<lastaccessed><datetime>20181031T100054,76+09</datetime></lastaccessed>
<addedtofile><datetime>20110926T142458,21+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby>
<wassignedby><name>CN=Administrator/O=Comture</name></wassignedby>
<column hidedetailrows='false' itemname='$1' width='1' resizable='false' separatemultiplevalues='false'
 sortnoaccent='true' sortnocase='true' showaslinks='false' hidecolumntitle='true'
 showasicons='true'><font size='9pt'/><columnheader title='icon'><font size='8pt'/></columnheader><code
 event='value'><formula>@If(Form="DbInfoDoc";@If(DbServer="";53;54);
Form="ViewInfoDoc";19;
Form="AgentEnvDoc";70;
0)</formula></code></column></sharedcolumn>

<agentdata>
<noteinfo noteid='6a6' unid='AD845B2D3EE641A94925791F0028BE7E' sequence='1'>
<created><datetime>20111004T162502,06+09</datetime></created>
<modified><datetime>20111004T162502,07+09</datetime></modified>
<revised><datetime>20111004T162502,06+09</datetime></revised>
<lastaccessed><datetime>20111004T162502,06+09</datetime></lastaccessed>
<addedtofile><datetime>20111004T162502,06+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=System Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='6be' unid='F8F075BF2D208F8D49257A050037DFEE' sequence='1'>
<created><datetime>20120521T191018,06+09</datetime></created>
<modified><datetime>20120521T191018,07+09</datetime></modified>
<revised><datetime>20120521T191018,06+09</datetime></revised>
<lastaccessed><datetime>20120521T191018,06+09</datetime></lastaccessed>
<addedtofile><datetime>20120521T191018,06+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=System Administrator/O=Comture</name></updatedby></agentdata>

<subform name='(データベース情報記憶)' alias='SubSetDbInfo' designerversion='8.5' renderpassthrough='true'>
<noteinfo noteid='6de' unid='987727868F79520B4925798300261280' sequence='13'>
<created><datetime>20120112T155551,04+09</datetime></created>
<modified><datetime>20181031T100053,43+09</datetime></modified>
<revised><datetime>20181031T100053,42+09</datetime></revised>
<lastaccessed><datetime>20181031T100053,43+09</datetime></lastaccessed>
<addedtofile><datetime>20120522T212650,29+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby>
<wassignedby><name>CN=Administrator/O=Comture</name></wassignedby>
<body><richtext>
<pardef id='1' hide='notes web mobile'/>
<par def='1'/>
<pardef id='2' leftmargin='0.7500in' hide='notes web mobile'/>
<section><sectiontitle pardef='2' borderstyle='single' color='teal'><font
 color='gray' style='bold'/><text>◆ 非表示</text></sectiontitle>
<par def='1'><field type='text' kind='computed' name='Parent_DbServer'><code
 event='defaultvalue'><formula>tmp:=@GetDocField($REF;@Right(@ThisName;"_"));
@If(@IsError(tmp);@ThisValue;tmp)</formula></code></field><compositedata type='98'
 prevtype='65418' nexttype='222' afterparcount='6' containertype='65418' aftercontainercount='1'
 afterbegincount='3'>
Yg4BAIQAAAAAAAAAAAA=
</compositedata><field type='text' kind='computed' name='Parent_DbTitle'><code
 event='defaultvalue'><formula>tmp:=@GetDocField($REF;@Right(@ThisName;"_"));
@If(@IsError(tmp);@ThisValue;tmp)</formula></code></field><compositedata type='98'
 prevtype='65418' nexttype='222' afterparcount='12' containertype='65418'
 aftercontainercount='1' afterbegincount='3'>
Yg4BAIQAAAAAAAAAAAA=
</compositedata><field type='text'
 kind='computed' name='Parent_DbFilePath'><code event='defaultvalue'><formula
>tmp:=@GetDocField($REF;@Right(@ThisName;"_"));
@If(@IsError(tmp);@ThisValue;tmp)</formula></code></field><compositedata type='98'
 prevtype='65418' nexttype='222' afterparcount='18' containertype='65418'
 aftercontainercount='1' afterbegincount='3'>
Yg4BAIQAAAAAAAAAAAA=
</compositedata><field type='text'
 kind='computed' name='Parent_DbReplicaID'><code event='defaultvalue'><formula
>tmp:=@GetDocField($REF;@Right(@ThisName;"_"));
@If(@IsError(tmp);@ThisValue;tmp)</formula></code></field><compositedata type='98'
 prevtype='65418' nexttype='222' afterparcount='24' containertype='65418'
 aftercontainercount='1' afterbegincount='3'>
Yg4BAIQAAAAAAAAAAAA=
</compositedata></par>
<par def='1'/></section>
<par def='1'/></richtext></body>
<item name='$$ScriptName' summary='false' sign='true'><text>SubSetDbInfo</text></item></subform>

<agent name='(イベント)\(返答更新)' alias='UpdateResponse' hide='v3' publicaccess='false'
 designerversion='8.5.3' restrictions='unrestricted'>
<noteinfo noteid='6e6' unid='A8500A66D924219A4925798300243515' sequence='35'>
<created><datetime>20120112T153528,85+09</datetime></created>
<modified><datetime>20181101T092506,84+09</datetime></modified>
<revised><datetime>20181101T092506,83+09</datetime></revised>
<lastaccessed><datetime>20181101T092506,84+09</datetime></lastaccessed>
<addedtofile><datetime>20120522T212650,31+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby>
<wassignedby><name>CN=Administrator/O=Comture</name></wassignedby>
<designchange><datetime>20181101T092506,81+09</datetime></designchange>
<trigger type='agentlist'/>
<documentset type='selected'/><code event='options'><lotusscript>Option Public
Option Declare


</lotusscript></code><code event='initialize'><lotusscript>Sub Initialize()
	
	Dim session As New NotesSession
	Dim curDB As NotesDatabase
	
	Dim unpro As NotesDocumentCollection
	Dim doc As NotesDocument
	
	Set curDB = session.Currentdatabase
	Set unpro = curDB.Unprocesseddocuments
	Set doc = unpro.Getfirstdocument()
	
	Dim children As NotesDocumentCollection
	Dim child As NotesDocument
	
	Do Until doc Is Nothing
		
		Set children = doc.Responses
		If Not children Is Nothing Then
			Set child = children.Getfirstdocument()
			Do Until child Is Nothing
				
				If child.Computewithform(true, false) Then
					Call child.save(True, False, False)
				End If
				
				Set child = children.Getnextdocument(child)
			Loop
			
		End If
		Set doc = unpro.Getnextdocument(doc)
	Loop
	
	Print "従属する返答文書を更新しました。"
	
End Sub</lotusscript></code>
<rundata processeddocs='0' exitcode='0' agentdata='F26B1E30FD3E08E049257983002578F4'>
<agentmodified><datetime>20181101T092506,84+09</datetime></agentmodified>
<agentrun><datetime>20190513T112401,56+09</datetime></agentrun>
<runlog>エージェント (イベント)\(返答更新)|UpdateResponse の 2019/05/13 11:24:01 での実行が開始しました。
選択文書で実行します。 合計 1
1 文書が検索条件に一致しました。
LotusScript を実行しました
エージェント (イベント)\(返答更新)|UpdateResponse の実行が終了しました。(2019/05/13 11:24:01)
</runlog></rundata>
<item name='$POID'><datetime>20140930T200604,79+09</datetime></item></agent>

<agent name='削除スタブ削除' alias='DeleteStabbs' hide='v3' publicaccess='false'
 designerversion='8.5' comment='[CNAPWeb] 削除スタブ対策' enabled='false'>
<noteinfo noteid='6ee' unid='A3F9022F3DB40EB4492579830028C294' sequence='31'>
<created><datetime>20120112T162512,52+09</datetime></created>
<modified><datetime>20181031T100052,26+09</datetime></modified>
<revised><datetime>20181031T100052,25+09</datetime></revised>
<lastaccessed><datetime>20181031T100052,26+09</datetime></lastaccessed>
<addedtofile><datetime>20120522T212650,32+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby>
<wassignedby><name>CN=Administrator/O=Comture</name></wassignedby>
<designchange><datetime>20181031T100052,23+09</datetime></designchange>
<trigger type='actionsmenu'/>
<documentset type='selected'/><code event='options'><lotusscript>Option Public
Option Declare
Use "NotesUICommonLib"

</lotusscript></code><code event='declarations'><lotusscript>Const wAPIModule = "NNOTES"  ' Windows/32

Declare Private Sub IDDestroyTable Lib wAPIModule Alias "IDDestroyTable" _
(  Byval hT As Long)
Declare Private Function IDScan Lib wAPIModule Alias "IDScan" _
(  Byval hT As Long, Byval F As Integer, ID As Long) As Integer

Declare Private Function NSFDbOpen Lib wAPIModule Alias "NSFDbOpen" _
(  Byval P As String, hDB As Long) As Integer
Declare Private Function NSFDbClose Lib wAPIModule Alias "NSFDbClose" _
(  Byval hDB As Long) As Integer
Declare Private Function NSFDbGetModifiedNoteTable Lib wAPIModule Alias "NSFDbGetModifiedNoteTable" _
(  Byval hDB As Long, Byval C As Integer, Byval S As Currency, U As Currency, hT As Long) As Integer

Declare Private Function NSFNoteDelete Lib wAPIModule Alias "NSFNoteDelete" _
(  Byval hDB As Long, Byval N As Long, Byval F As Integer) As Integer

Declare Private Function OSPathNetConstruct Lib wAPIModule Alias "OSPathNetConstruct" _
(  Byval NullPort As Long, Byval Server As String, Byval FIle As String, Byval PathNet As String) As Integer

Declare Private Sub TimeConstant Lib wAPIModule Alias "TimeConstant" _
(  Byval C As Integer, T As Currency)




</lotusscript></code><code event='initialize'><lotusscript>Sub Initialize
	Call SetProcess("*AG - DeleteStabbs")
	Call Main()
End Sub

</lotusscript></code><code event='Main'><lotusscript>Sub Main()
'*************************************
'データベースの削除スタブを全件削除する
'@param
' 	
'*************************************
	On Error GoTo ErrorHandle
	
	Dim session As New NotesSession
	Dim db As NotesDatabase
	Dim unpro As NotesDocumentCollection
	Dim doc As NotesDocument
	
	Set db = session.CurrentDatabase
	Set unpro = db.Unprocesseddocuments
	Set doc = unpro.Getfirstdocument()
	
	Dim server As String, filePath As String
	
	server = doc.Getitemvalue("DbServer")(0)
	filePath = doc.Getitemvalue("DbFilePath")(0)
	
	If filePath = "" Then Error Usererr, "ファイルパスが設定されていません。"
	
	If DeleteStabbs(server, filePath) = FUNCTIONFAILURE Then
		Error USERERR, Error()
	End If
	
	Exit Sub
ErrorHandle:
	Call SetErrorObject(Err, Error)
	Call Messagebox_Error(GetErrorMessage(), "")
	Exit Sub
End Sub

</lotusscript></code><code event='DeleteStabbs'><lotusscript>Function DeleteStabbs(server As String, filePath As String) As Integer
'*************************************
'データベースの削除スタブを全件削除する
'@param
' 	
'*************************************
	On Error GoTo ErrorHandle
	
	Dim db As NotesDatabase
	Dim np As String
	Dim n As Double
	Dim done As Integer
	
	Set db = New NotesDatabase(server, filePath)
	
	With db
		np$ = Space(1024)
		OSPathNetConstruct 0, db.Server, db.FilePath, np$
	End With
	
	Dim hDB As Long
	NSFDbOpen np$, hDB
	
	Dim ever As Currency, last As Currency
	TimeConstant 2, ever
	
	Dim hT As Long
	NSFDbGetModifiedNoteTable hDB, &amp;H7FFF, ever, last, hT
	
	Dim RRV As Long
	n# = 0
	done = (IDScan(hT, True, RRV) = 0)
	While Not done
		If RRV &lt; 0 Then
			NSFNoteDelete hDB, RRV And &amp;H7FFFFFFF, &amp;H0201
			n# = n# + 1
		End If
		done = (IDScan(hT, False, RRV) = 0)
	Wend
	
	IDDestroyTable hT
	
	NSFDbClose hDB
	
	Exit Function
ErrorHandle:
	Call SetErrorObject(Err, Error)
	Error Err, Error
	Exit Function
	
End Function</lotusscript></code>
<rundata processeddocs='0' exitcode='0' agentdata='38BC63E051D255744925798300299941'>
<agentmodified><datetime>20120112T163406,05+09</datetime></agentmodified>
<agentrun><datetime>20120112T163439,73+09</datetime></agentrun>
<runlog>エージェント 削除スタブ削除|DeleteStabbs の 2012/01/12 16:34:22 での実行が開始しました。
選択文書で実行します。 合計 1
1 文書が検索条件に一致しました。
LotusScript を実行しました
エージェント 削除スタブ削除|DeleteStabbs の実行が終了しました。(2012/01/12 16:34:39)
</runlog></rundata>
<item name='$POID'><datetime>20140930T200604,81+09</datetime></item></agent>

<agentdata>
<noteinfo noteid='6f2' unid='3FB35854FA6B7A5449257A1D000D3DAD' sequence='1'>
<created><datetime>20120614T112437,57+09</datetime></created>
<modified><datetime>20120614T112437,58+09</datetime></modified>
<revised><datetime>20120614T112437,57+09</datetime></revised>
<lastaccessed><datetime>20120614T112437,57+09</datetime></lastaccessed>
<addedtofile><datetime>20120614T112437,57+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=COMTURE</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='706' unid='BA41A5C5BABEB4CA49257A300039EEAF' sequence='1'>
<created><datetime>20120703T193246,55+09</datetime></created>
<modified><datetime>20120703T193246,56+09</datetime></modified>
<revised><datetime>20120703T193246,55+09</datetime></revised>
<lastaccessed><datetime>20120703T193246,55+09</datetime></lastaccessed>
<addedtofile><datetime>20120703T193246,55+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=System Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='70a' unid='43C07EC26B76FEE649257A30003A7DD1' sequence='1'>
<created><datetime>20120703T193852,97+09</datetime></created>
<modified><datetime>20120703T193852,98+09</datetime></modified>
<revised><datetime>20120703T193852,97+09</datetime></revised>
<lastaccessed><datetime>20120703T193852,97+09</datetime></lastaccessed>
<addedtofile><datetime>20120703T193852,97+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=System Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='77e' unid='959D0509FB2F046949257AF40038FF7E' sequence='1'>
<created><datetime>20130115T192234,22+09</datetime></created>
<modified><datetime>20130115T192234,23+09</datetime></modified>
<revised><datetime>20130115T192234,22+09</datetime></revised>
<lastaccessed><datetime>20130115T192234,22+09</datetime></lastaccessed>
<addedtofile><datetime>20130115T192234,22+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=System Administrator/O=Comture</name></updatedby></agentdata>

<view name='03.DB設計\置換禁止' alias='DbDesignNotReplace' showinmenu='false' publicaccess='false'
 designerversion='7' unreadmarks='none' onopengoto='lastopened' onrefresh='displayindicator'
 headers='simple' opencollapsed='false' showresponsehierarchy='false' showmargin='true'
 shrinkrows='true' extendlastcolumn='false' showhierarchies='false' unreadcolor='black'
 rowlinecount='3' headerlinecount='1' rowspacing='1.25' bgcolor='white' altrowcolor='#e0e0ff'
 totalscolor='black' headerbgcolor='#e1e1e1' boldunreadrows='false' evaluateactions='false'
 allownewdocuments='false' allowcustomizations='false' hidemarginborder='false'
 marginwidth='0px' marginbgcolor='white' gridstyle='solid' gridcolor='#e1e1e1'
 uniquekeys='false' formatnoteid='7F3CB7A21A0117B5492576C8002C12A4'>
<noteinfo noteid='81a' unid='F1AAB976F9BA254449257B2700294E15' sequence='27'>
<created><datetime>20130307T163109,65+09</datetime></created>
<modified><datetime>20181031T100054,47+09</datetime></modified>
<revised><datetime>20181031T100054,46+09</datetime></revised>
<lastaccessed><datetime>20181031T100054,47+09</datetime></lastaccessed>
<addedtofile><datetime>20150528T093235,30+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby>
<wassignedby><name>CN=Administrator/O=Comture</name></wassignedby><code event='selection'><formula
>SELECT (Form = "(03.DB設計文書)") |
( (Form = "DbDesignDoc") &amp; (
	( @Like($Flags; "P%") | @Like($Flags; "%P") | @Like($Flags; "%P%") ) |
	( @Like($Flags; "R%") | @Like($Flags; "%R") | @Like($Flags; "%R%") )
) )</formula></code>
<actionbar bgcolor='#d4d0c8' bordercolor='black'>
<actionbuttonstyle showdropdown='true' bgcolor='#d4d0c8'/><font color='system'/><border
 style='solid' width='0px 0px 1px'/>
<sharedactionref id='3'>
<action title='閉じる(_X)' icon='112'><code event='click'><formula>FIELD SaveOptions:="0";
@Command([FileCloseWindow])</formula></code><code event='label'><formula>"閉じる"</formula></code></action></sharedactionref>
<action title='置換禁止解除'><code event='click'><formula>@Command([ToolsRunMacro];"UpdateProhibitionRelease")</formula></code></action></actionbar>
<column sort='ascending' hidedetailrows='false' itemname='$14' width='1' resizable='true'
 separatemultiplevalues='true' sortnoaccent='false' sortnocase='true' showaslinks='false'
 categorized='true' twisties='true'><font color='navy' style='bold'/><columnheader
 title='サーバー'><font size='8pt'/></columnheader><code event='value'><formula
>@If(DbServer="";"-Local-";DbServer)</formula></code></column>
<column sort='ascending' hidedetailrows='false' itemname='$10' width='1' resizable='true'
 separatemultiplevalues='true' sortnoaccent='false' sortnocase='true' showaslinks='false'
 categorized='true' twisties='true'><font color='teal' style='bold'/><columnheader
 title='ファイルパス'><font size='8pt'/></columnheader><code event='value'><formula
>@ReplaceSubstring(@LeftBack(DbFilePath;"\\");"\\";"／")</formula></code></column>
<column sort='ascending' hidedetailrows='false' itemname='$12' width='1' resizable='true'
 separatemultiplevalues='true' sortnoaccent='false' sortnocase='true' showaslinks='false'
 categorized='true' twisties='true'><font color='navy' style='bold'/><columnheader
 title='データベース'><font size='8pt'/></columnheader><code event='value'><formula
>DbTitle+"("+@RightBack(DbFilePath;"\\")+")"+" ("+@Text(@DocDescendants)+")"</formula></code></column>
<column sort='ascending' hidedetailrows='false' itemname='DesignType' width='1'
 resizable='true' separatemultiplevalues='true' sortnoaccent='false' sortnocase='true'
 showaslinks='false' categorized='true' twisties='true'><font style='bold'/><columnheader
 title='設計の種類'><font size='8pt'/></columnheader></column>
<column sort='ascending' hidedetailrows='false' itemname='$13' width='40'
 resizable='true' separatemultiplevalues='false' sortnoaccent='false' sortnocase='true'
 showaslinks='false'><columnheader title='設計の名前'><font size='8pt'/></columnheader><code
 event='value'><formula>@Implode($Title;"|")</formula></code></column></view>

<note class='form'>
<noteinfo noteid='81e' unid='2F28D790FE05DBBA49257C1D002C09BD' sequence='3'>
<created><datetime>20131108T170100,77+09</datetime></created>
<modified><datetime>20150528T093235,34+09</datetime></modified>
<revised><datetime>20140930T200604,96+09</datetime></revised>
<lastaccessed><datetime>20150528T093235,34+09</datetime></lastaccessed>
<addedtofile><datetime>20150528T093235,34+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=PSL85/O=Comture</name></updatedby>
<item name='$Flags'><text>~C4g</text></item>
<item name='$FlagsExt' sign='true'><text>w</text></item>
<item name='$TITLE'><text>WEB-INF/xsp.properties</text></item>
<item name='$DesignerVersion' sign='true'><text>8.5.3</text></item>
<item name='$FileSize' sign='true'><number>89</number></item>
<item name='$FileData' sign='true'>
<rawitemdata type='1'>
YQAYAAAAAABZAAAAAQAAAAAAAAAAAAAAYABrAAAAWQBaAAAAAAAAAAAAeHNwLmFqYXgucmVuZGVy
d2hvbGV0cmVlPWZhbHNlDQp4c3AucGVyc2lzdGVuY2UubW9kZT1maWxlDQp4c3AucmVzb3VyY2Vz
LmFnZ3JlZ2F0ZT10cnVlDQoA
</rawitemdata></item>
<item name='$FileNames' sign='true'><text>WEB-INF/xsp.properties</text></item></note>

<view name='(FindFilePath)' alias='FindFilePath' showinmenu='false' publicaccess='false'
 designerversion='7' unreadmarks='none' onopengoto='top' onrefresh='displayindicator'
 headers='beveled' opencollapsed='false' showresponsehierarchy='true' showmargin='true'
 shrinkrows='false' extendlastcolumn='false' showhierarchies='false' unreadcolor='black'
 rowlinecount='1' headerlinecount='1' rowspacing='1' bgcolor='white' altrowcolor='#e1e1e1'
 totalscolor='black' headerbgcolor='white' boldunreadrows='false' evaluateactions='false'
 allownewdocuments='false' allowcustomizations='false' hidemarginborder='false'
 marginwidth='0px' marginbgcolor='white' uniquekeys='false' initialbuildrestricted='true'
 noemptycategories='false'>
<noteinfo noteid='822' unid='E18D1E9E779B500249257ACC00287E1F' sequence='18'>
<created><datetime>20121206T162217,27+09</datetime></created>
<modified><datetime>20181031T100054,32+09</datetime></modified>
<revised><datetime>20181031T100054,31+09</datetime></revised>
<lastaccessed><datetime>20181031T100054,32+09</datetime></lastaccessed>
<addedtofile><datetime>20150528T093235,36+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby>
<wassignedby><name>CN=Administrator/O=Comture</name></wassignedby><code event='selection'><formula
>SELECT (Form = "DbInfoDoc") &amp; (DbFilePath != "")</formula></code>
<column sort='ascending' hidedetailrows='false' itemname='DbServer' width='10'
 resizable='true' separatemultiplevalues='false' sortnoaccent='false' sortnocase='true'
 showaslinks='false'><font size='9pt'/><columnheader title='DbServer'><font
 size='8pt'/></columnheader></column>
<column sort='ascending' hidedetailrows='false' itemname='DbFilePath' width='60'
 resizable='true' separatemultiplevalues='false' sortnoaccent='true' sortnocase='true'
 showaslinks='false'><font size='9pt'/><columnheader title='DbFilePath'><font
 size='8pt'/></columnheader></column></view>

<agent name='(サーバーフォルダの一括選択)' alias='SelectDir' hide='v3' publicaccess='false'
 designerversion='8.5.3'>
<noteinfo noteid='82a' unid='532E30BB9C70BC4A49257ACC0025AB03' sequence='72'>
<created><datetime>20121206T155126,11+09</datetime></created>
<modified><datetime>20190220T103355,27+09</datetime></modified>
<revised><datetime>20190220T103355,26+09</datetime></revised>
<lastaccessed><datetime>20190220T103355,27+09</datetime></lastaccessed>
<addedtofile><datetime>20150528T093235,38+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby>
<wassignedby><name>CN=Administrator/O=Comture</name></wassignedby>
<designchange><datetime>20190220T103355,22+09</datetime></designchange>
<trigger type='agentlist'/>
<documentset type='runonce'/><code event='options'><lotusscript>Option Public
Option Declare
Use "NotesUICommonLib"
Use "ToolsLib"

</lotusscript></code><code event='initialize'><lotusscript>Sub Initialize
	Call SetProcess("*AG - サーバーフォルダの一括選択")
	Call Main()
End Sub

</lotusscript></code><code event='Main'><lotusscript>Sub Main()
	On Error Goto ErrorHandle
	
	Dim workSpace As New NotesUIWorkspace
	Dim curDB As NotesDatabase
	Dim dlgDoc As NotesDocument
	
	Dim retVal As Variant
	Dim server As String
	Dim filePath As String
	
	Set curDB = workSpace.CurrentDatabase.Database
	Set dlgDoc = curDB.CreateDocument()
	
	dlgDoc.Form = "SelectFileDialog"
	dlgDoc.DbServer = curDB.Server
	dlgDoc.DbFilePath = curDB.FilePath
	
	Do
		retVal = workSpace.DialogBox("SelectFileDialog", True, True, False, False, False, False, "ファイルの選択", dlgDoc, False, False, True)
		If Isempty(retVal) Then
			Exit Sub
		Elseif retVal = False Then
			Exit Sub
		End If
		
		server = Trim$(dlgDoc.GetItemValue("DbServer")(0))
		filePath = Trim$(dlgDoc.GetItemValue("DbFilePath")(0))
		
		If filePath &lt;&gt; "" Then
			Exit Do
		End If
		
	Loop
	
	Dim findFilePath As NotesView
	Dim key(0 To 1) As String
	Dim nameObj As NotesName
	
	Dim session As New NotesSession
	Dim ndir As NotesDbDirectory
	Dim db As NotesDatabase
	Dim folder As String
	Dim fileName As String
	Dim dbServer As String
	Dim dbFilePath As String
	
	Dim newDoc As NotesDocument
	
	Dim notesDIR As String
	
	If server = "" Then
		notesDir = session.Getenvironmentstring("Directory", True)
		notesDir = notesDir &amp; "\"
		filePath = Replace(filePath, notesDir, "")
	End If
	
	Set findFilePath = curDB.GetView("FindFilePath")
	
	If GetDrive(filePath) = "" Then
		
		If Instr(filePath, "*") &lt;&gt; 0 Or Instr(filePath, "?") &lt;&gt; 0 Then
			Set ndir = New NotesDbDirectory(server)
			Set db = ndir.GetFirstDatabase(TEMPLATE_CANDIDATE)
			
			Do Until db Is Nothing
				
				If UCase$(db.FilePath) Like UCase$(filePath) Then
					Set nameObj = New NotesName(db.Server)
					
					dbServer = nameObj.Abbreviated
					dbFilePath = db.FilePath
					If notesDir &lt;&gt; "" Then
						dbFilePath = Replace(dbFilePath, notesDir, "")
					End If
					
					key(0) = dbServer
					key(1) = dbFilePath
					
					Set newDoc = findFilePath.GetDocumentByKey(key, True)
					If newDoc Is Nothing Then
						Set newDoc = curDB.CreateDocument()
						newDoc.Form = "DbInfoDoc"
					End If
					
					newDoc.DbServer = dbServer
					newDoc.DbTitle = db.Title
					newDoc.DbFilePath = dbFilePath
					newDoc.DbReplicaID = db.ReplicaID
					
					Call newDoc.Save(True, False, False)
					
				End If
				
				Set db = ndir.GetNextDatabase()
			Loop
			
		Else
			
			Set db = New NotesDatabase(server, filePath)
			
			Set nameObj = New NotesName(db.Server)
			
			dbServer = nameObj.Abbreviated
			dbFilePath = db.FilePath
			If notesDir &lt;&gt; "" Then
				dbFilePath = Replace(dbFilePath, notesDir, "")
			End If
			
			key(0) = dbServer
			key(1) = dbFilePath
			
			Set newDoc = findFilePath.GetDocumentByKey(key, True)
			If newDoc Is Nothing Then
				Set newDoc = curDB.CreateDocument()
				newDoc.Form = "DbInfoDoc"
			End If
			
			newDoc.DbServer = dbServer
			newDoc.DbTitle = db.Title
			newDoc.DbFilePath = dbFilePath
			newDoc.DbReplicaID = db.ReplicaID
			
			Call newDoc.Save(True, False, False)
			
		End If
		
	Else
		folder = Strleftback(filePath, "\")
		fileName = Dir(filePath, 16)
		Do Until fileName = ""
			
			Set db = New NotesDatabase("", folder &amp; "\" &amp; fileName)
			
			Set nameObj = New NotesName(db.Server)
			
			dbServer = nameObj.Abbreviated
			dbFilePath = db.FilePath
			If notesDir &lt;&gt; "" Then
				dbFilePath = Replace(dbFilePath, notesDir, "")
			End If
			
			key(0) = dbServer
			key(1) = dbFilePath
			
			Set newDoc = findFilePath.GetDocumentByKey(key, True)
			If newDoc Is Nothing Then
				Set newDoc = curDB.CreateDocument()
				newDoc.Form = "DbInfoDoc"
			End If
			
			newDoc.DbServer = dbServer
			newDoc.DbTitle = db.Title
			newDoc.DbFilePath = dbFilePath
			newDoc.DbReplicaID = db.ReplicaID
			
			Call newDoc.Save(True, False, False)
			
NextLoop:
			fileName = Dir()
		Loop
		
	End If
	
	Exit Sub
ErrorHandle:
	Call SetErrorObject(Err, Error)
	Call Messagebox_Error(GetErrorMessage(), "")
	Exit Sub
End Sub</lotusscript></code>
<rundata processeddocs='0' exitcode='0' agentdata='3DA2A0ED6BB0CA9A492583A70008A551'>
<agentmodified><datetime>20190220T103355,27+09</datetime></agentmodified>
<agentrun><datetime>20190528T143318,49+09</datetime></agentrun>
<runlog>エージェント (サーバーフォルダの一括選択)|SelectDir の 2019/05/28 14:33:11 での実行が開始しました。
LotusScript を実行しました
エージェント (サーバーフォルダの一括選択)|SelectDir の実行が終了しました。(2019/05/28 14:33:18)
</runlog></rundata>
<item name='$POID'><datetime>20140930T200605,00+09</datetime></item></agent>

<agent name='(ツール)\(データベースの新規作成)' alias='CreateDatabase' hide='v3' publicaccess='false'
 designerversion='8.5.3'>
<noteinfo noteid='832' unid='6343C8B8BF5039E849257ACC002CB9E0' sequence='48'>
<created><datetime>20121206T170831,68+09</datetime></created>
<modified><datetime>20181031T100052,48+09</datetime></modified>
<revised><datetime>20181031T100052,47+09</datetime></revised>
<lastaccessed><datetime>20181031T100052,48+09</datetime></lastaccessed>
<addedtofile><datetime>20150528T093235,40+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby>
<wassignedby><name>CN=Administrator/O=Comture</name></wassignedby>
<designchange><datetime>20181031T100052,47+09</datetime></designchange>
<trigger type='agentlist'/>
<documentset type='selected'><search type='byformnames'><formchoice name='(01.データベース情報)|DbInfoDoc'/></search></documentset><code
 event='options'><lotusscript>Option Public
Option Declare
Use "NotesUICommonLib"

</lotusscript></code><code event='initialize'><lotusscript>Sub Initialize
	Call Main()
End Sub

</lotusscript></code><code event='Main'><lotusscript>Sub Main()
	On Error Goto ErrorHandle
	
	Dim workSpace As New NotesUIWorkspace
	Dim curUiView As NotesUIView
	Dim curDB As NotesDatabase
	Dim unpro As NotesDocumentCollection
	Dim doc As NotesDocument
	
	Set curUIView = workSpace.CurrentView
	
	If curUIView Is Nothing Then
		Set curDB = workSpace.CurrentDatabase.Database
		Set unpro = curDB.UnprocessedDocuments
	Else
		Set curDB = curUIView.View.Parent
		'Set unpro = curUIView.Documents
		Set unpro = curDB.UnprocessedDocuments
	End If
	
	If unpro.Count = 0 Then
		Exit Sub
	End If
	Set doc = unpro.GetFirstDocument()
	
	Dim dlgdoc As NotesDocument
	Dim retVal As Variant
	Dim server As String
	Dim filePath As String
	
	Dim template As NotesDatabase
	Dim db As NotesDatabase
	Dim folder As String
	Dim fileName As String
	
	Set dlgDoc = curDB.CreateDocument()
	dlgDoc.Form = "SelectFileDialog"
	dlgDoc.DbServer = doc.DbServer(0)
	dlgDoc.DbFilePath = Strleftback(doc.DbFilePath(0), "\")
	
	Do
		retVal = workSpace.DialogBox("SelectFileDialog", True, True, False, False, False, False, "フォルダの選択", dlgDoc, False, False, True)
		If Isempty(retVal) Then
			Exit Sub
		Elseif retVal = False Then
			Exit Sub
		End If
		
		server = Trim$(dlgDoc.GetItemValue("DbServer")(0))
		filePath = Trim$(dlgDoc.GetItemValue("DbFilePath")(0))
		
		If filePath &lt;&gt; "" Then
			Exit Do
		End If
		
	Loop
	
	folder = filePath
	fileName = Strrightback(filePath, "\")
	If fileName Like "*.n?f" Then
		folder = Strleftback(filePath, "\")
	End If
	
	Do Until doc Is Nothing
		
		server = doc.DbServer(0)
		filePath = doc.DbFilePath(0)
		fileName = Strrightback(filePath, "\")
		
'		If 4 = Messagebox_YesNo("folder=" &amp; folder &amp; " fileName=" &amp; fileName, "") Then Exit Do
		
		If Lcase$(Right$(fileName, 4)) &lt;&gt; ".ntf" Then Goto NextLoop
		
		fileName = Strleftback(fileName, ".ntf") &amp; ".nsf"
		Set template = New NotesDatabase(server, filePath)
		Set db = template.CreateFromTemplate(server, folder &amp; "\" &amp; fileName, False)
		Call db.Sign( ,False)
NextLoop:
		Set doc = unpro.GetNextDocument(doc)
	Loop
	
ExitTag:
	On Error Resume Next
	If Not curUIView Is Nothing Then Call curUIView.DeselectAll()
	Call workSpace.ViewRefresh()
	
	Exit Sub
ErrorHandle:
	Call SetErrorObject(Err, Error)
	Call Messagebox_Error(GetErrorMessage(), "")
	Goto ExitTag
End Sub</lotusscript></code>
<rundata processeddocs='0' exitcode='0' agentdata='C346BFF7D66A33714925830F001AE19D'>
<agentmodified><datetime>20180921T135329,83+09</datetime></agentmodified>
<agentrun><datetime>20180921T140055,05+09</datetime></agentrun>
<runlog>エージェント (データベースの新規作成)|CreateDatabase の 2018/09/21 13:59:10 での実行が開始しました。
選択文書で実行します。 合計 1
1 文書が検索条件に一致しました。
LotusScript を実行しました
エージェント (データベースの新規作成)|CreateDatabase の実行が終了しました。(2018/09/21 14:00:55)
</runlog></rundata>
<item name='$POID'><datetime>20140930T200605,02+09</datetime></item></agent>

<subform name='(ファイル選択ダイアログ)' alias='SelectFileDialog' designerversion='8.5.3'
 renderpassthrough='true'>
<noteinfo noteid='836' unid='4CE652B1FCA7C0F249257ACC00252638' sequence='18'>
<created><datetime>20121206T154546,16+09</datetime></created>
<modified><datetime>20181031T100053,65+09</datetime></modified>
<revised><datetime>20181031T100053,64+09</datetime></revised>
<lastaccessed><datetime>20181031T100053,65+09</datetime></lastaccessed>
<addedtofile><datetime>20150528T093235,42+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby>
<wassignedby><name>CN=Administrator/O=Comture</name></wassignedby>
<body><richtext>
<pardef id='1'/>
<par def='1'/><compositedata type='183' prevtype='129' nexttype='131' afterparcount='1'>
txygBScW6QUPAAAASAAAAAAAAAAAAAAAAAAAAA==
</compositedata>
<par def='1'/><compositedata type='186' prevtype='129' nexttype='65410' afterparcount='1'>
uipICdgAMQ8hAQEAAAoBAAEA////AAEAAAAAAAAAAAAAAAAAAAAAAAAA
</compositedata>
<pardef id='2'/>
<par def='2'><field type='names' kind='editable' name='DbServer'/></par><compositedata
 type='184' prevtype='129' nexttype='131' afterparcount='1'>
uCrrBboA7gMhAQEAAAoBAAUA////AAAAAJAAAAAAAAAAAAAAAAAAAAAA
</compositedata>
<par def='2'>サーバー：</par><compositedata type='184' prevtype='129' nexttype='131'
 afterparcount='1'>
uCroBYgCgQQhAQEAAAoBAAUA////AAAAAJAAAAAAAAAAAAAAAAAAAAAA
</compositedata>
<par def='2'>ファイルパス：</par><compositedata type='186' prevtype='129' nexttype='131'
 afterparcount='1'>
uiroBfADkRIhAQEAAAoBAAEA////AAEAAAAAAAAAAAAAAAAAAAAAAAAA
</compositedata>
<par def='2'><field type='text' kind='editable' name='DbFilePath'/><compositedata
 type='98' prevtype='65418' nexttype='222' afterparcount='6' containertype='65418'
 aftercontainercount='1' afterbegincount='3'>
Yg4BAIQAAAAAAAAAAAA=
</compositedata></par><compositedata
 type='194' prevtype='129' nexttype='131' afterparcount='1'>
wioIGagDlQJ4AQEAAAgBAAEA////AAAAAAAAAAAAAAAAAAAAAAAAAAAA
</compositedata>
<par def='2'><button width='2in' widthtype='maximum' maxlines='1' wraptext='true'
 bgcolor='system'><font size='8pt'/>選択<code event='options'><lotusscript>Option Declare
Use "NotesUICommonLib"

</lotusscript></code><code event='click'><lotusscript>Sub Click(Source As Button)
	On Error Goto ErrorHandle
	
	Dim workSpace As New NotesUIWorkSpace
	Dim curUIDoc As NotesUIDocument
	Dim curDoc As NotesDocument
	Dim curDB As NotesDatabase
	Dim server As String
	Dim filePath As String
	
	Dim catalogDB As NotesDatabase
	
	Dim docCol As NotesDocumentCollection
	Dim selDoc As NotesDocument
	
	Dim session As New NotesSession
	
	Dim retVal As Variant
	
	Set curUIDoc = workSpace.CurrentDocument
	Set curDoc = curUIDoc.Document
	Set curDB = curDoc.ParentDatabase
	
	server = curDoc.GetItemValue("DbServer")(0)
	If server = "" Then server = curDB.Server
	
	Set catalogDB = New NotesDatabase("", "")
	
	'R5以下
	If session.NotesBuildVersion &lt;= 166 Then
		
		If catalogDB.Open(server, "catalog.nsf") = True Then
			Set docCol = workSpace.PickListCollection(PICKLIST_CUSTOM, False, server, "catalog.nsf", "ByTitle", "データベースの選択", "データベースを選択してください。")
			If docCol.Count = 0 Then
				Exit Sub
			End If
			
			Set selDoc = docCol.GetFirstDocument()
			
		Else
			retVal = workSpace.OpenFileDialog(False, "ファイルの選択", "Notes Database|*.nsf|Notes Template|*.ntf", "", "")
			If Isempty(retVal) = True Then
				Exit Sub
			End If
			
			filePath = retVal
			
		End If
		
	'R6以上
	Else
		
		retVal = workSpace.Prompt(13, "", "")
		If Isempty(retVal) = True Then
			Exit Sub
		End If
		
		server = retVal(0)
		filePath = retVal(1)
		
	End If
	
	Call curDoc.ReplaceItemValue("DbServer", server)
	Call curDoc.ReplaceItemValue("DbFilePath", filePath)
	
	Exit Sub
ErrorHandle:
	Call SetErrorObject(Err, Error)
	Call Messagebox_Error(GetErrorMessage(), "")
	Exit Sub
End Sub</lotusscript></code></button><compositedata type='185' prevtype='222'
 nexttype='129' afterparcount='12'>
uRIAAAAAAAAAAAAAAAAAAAAA
</compositedata></par>
<par def='1'/></richtext></body>
<item name='$$ScriptName' summary='false' sign='true'><text>SelectFileDialog</text></item></subform>

<note class='form'>
<noteinfo noteid='83a' unid='2BB329C28C58C47849257C1D002C0A29' sequence='45'>
<created><datetime>20131108T170101,85+09</datetime></created>
<modified><datetime>20190604T151448,08+09</datetime></modified>
<revised><datetime>20190604T151448,07+09</datetime></revised>
<lastaccessed><datetime>20190604T151448,08+09</datetime></lastaccessed>
<addedtofile><datetime>20150528T093235,46+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby>
<wassignedby><name>CN=Administrator/O=Comture</name></wassignedby>
<item name='$Flags'><text>~C4g</text></item>
<item name='$TITLE'><text>.settings/org.eclipse.wst.jsdt.ui.superType.container</text></item>
<item name='$DesignerVersion'><text>8.5.3</text></item>
<item name='$FileSize' sign='true'><number>49</number></item>
<item name='$FileData' sign='true'>
<rawitemdata type='1'>
YQAYAAAAAAAxAAAAAQAAAAAAAAAAAAAAYABDAAAAMQAyAAAAAAAAAAAAb3JnLmVjbGlwc2Uud3N0
LmpzZHQubGF1bmNoaW5nLmJhc2VCcm93c2VyTGlicmFyeS4=
</rawitemdata></item>
<item name='$FileNames' sign='true'><text>.settings/org.eclipse.wst.jsdt.ui.superType.container</text></item></note>

<note class='form'>
<noteinfo noteid='83e' unid='97B3A62766184B2F49257C1D002C0A26' sequence='45'>
<created><datetime>20131108T170101,82+09</datetime></created>
<modified><datetime>20190604T151447,97+09</datetime></modified>
<revised><datetime>20190604T151447,96+09</datetime></revised>
<lastaccessed><datetime>20190604T151447,97+09</datetime></lastaccessed>
<addedtofile><datetime>20150528T093235,50+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby>
<wassignedby><name>CN=Administrator/O=Comture</name></wassignedby>
<item name='$Flags'><text>~C4g</text></item>
<item name='$TITLE'><text>.settings/org.eclipse.wst.jsdt.ui.superType.name</text></item>
<item name='$DesignerVersion'><text>8.5.3</text></item>
<item name='$FileSize' sign='true'><number>6</number></item>
<item name='$FileData' sign='true'>
<rawitemdata type='1'>
YQAYAAAAAAAGAAAAAQAAAAAAAAAAAAAAYAAYAAAABgAGAAAAAAAAAAAAV2luZG93
</rawitemdata></item>
<item name='$FileNames' sign='true'><text>.settings/org.eclipse.wst.jsdt.ui.superType.name</text></item></note>

<note class='form'>
<noteinfo noteid='842' unid='F28C5A7F05A6573149257C1D002C0A2C' sequence='5'>
<created><datetime>20131108T170101,88+09</datetime></created>
<modified><datetime>20190617T103828,46+09</datetime></modified>
<revised><datetime>20190617T103828,45+09</datetime></revised>
<lastaccessed><datetime>20190617T103828,46+09</datetime></lastaccessed>
<addedtofile><datetime>20150528T093235,54+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby>
<wassignedby><name>CN=Administrator/O=Comture</name></wassignedby>
<item name='$Flags'><text>~C4g</text></item>
<item name='$TITLE'><text>.settings/.jsdtscope</text></item>
<item name='$DesignerVersion'><text>8.5.3</text></item>
<item name='$FileSize' sign='true'><number>339</number></item>
<item name='$FileData' sign='true'>
<rawitemdata type='1'>
YQAYAAAAAABTAQAAAQAAAAAAAAAAAAAAYABlAQAAUwFUAQAAAAAAAAAAPD94bWwgdmVyc2lvbj0i
MS4wIiBlbmNvZGluZz0iVVRGLTgiPz4NCjxjbGFzc3BhdGg+DQoJPGNsYXNzcGF0aGVudHJ5IGtp
bmQ9InNyYyIgcGF0aD0iQ29kZS9TY3JpcHRMaWJyYXJpZXMiLz4NCgk8Y2xhc3NwYXRoZW50cnkg
a2luZD0iY29uIiBwYXRoPSJvcmcuZWNsaXBzZS53c3QuanNkdC5sYXVuY2hpbmcuSlJFX0NPTlRB
SU5FUiIvPg0KCTxjbGFzc3BhdGhlbnRyeSBraW5kPSJjb24iIHBhdGg9Im9yZy5lY2xpcHNlLndz
dC5qc2R0LmxhdW5jaGluZy5iYXNlQnJvd3NlckxpYnJhcnkiLz4NCgk8Y2xhc3NwYXRoZW50cnkg
a2luZD0ib3V0cHV0IiBwYXRoPSIiLz4NCjwvY2xhc3NwYXRoPg0Kcg==
</rawitemdata></item>
<item name='$FileNames' sign='true'><text>.settings/.jsdtscope</text></item></note>

<agent name='データベースプロパティ出力' hide='v3' publicaccess='false' designerversion='8.5.3'>
<noteinfo noteid='84a' unid='52B648FDB0D2689749257CF50023F374' sequence='74'>
<created><datetime>20140612T153240,84+09</datetime></created>
<modified><datetime>20181031T100052,07+09</datetime></modified>
<revised><datetime>20181031T100052,06+09</datetime></revised>
<lastaccessed><datetime>20181031T100052,07+09</datetime></lastaccessed>
<addedtofile><datetime>20150528T093235,56+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby>
<wassignedby><name>CN=Administrator/O=Comture</name></wassignedby>
<designchange><datetime>20181031T100052,00+09</datetime></designchange>
<trigger type='actionsmenu'/>
<documentset type='selected'><search type='byform'><formfieldschoice form='(01.データベース情報)'>
<fieldchoice name='DbServer'><textlist><text/></textlist></fieldchoice>
<fieldchoice name='DbTitle'><textlist><text/></textlist></fieldchoice>
<fieldchoice name='DbFilePath'><textlist><text/></textlist></fieldchoice>
<fieldchoice name='DbReplicaID'><textlist><text/></textlist></fieldchoice></formfieldschoice></search></documentset><code
 event='options'><lotusscript>Option Public
Option Declare
Use "ToolsLib"
Use "NotesUICommonLib"
Use "NotesDXLLib"

</lotusscript></code><code event='initialize'><lotusscript>Sub Initialize
	Call SetProcess("*AG - (データベースのプロパティ出力)")
	Call Main()
End Sub

</lotusscript></code><code event='OutputXML'><lotusscript>Function OutputXML(notes As NotesNoteCollection, stream As IOStreamEX) As Integer
	On Error GoTo ErrorHandle
	
	Dim s As NotesStream
	Dim objDXL As New CNotesDesignDXL
	
	Set s = stream.Stream
	
	Call objDXL.ExportDXL(notes, s)
	
	Set stream.Stream = s
	
	Exit Function
ErrorHandle:
	Call SetErrorObject(Err, Error)
	OutputXML = FUNCTIONFAILURE
	Exit Function
End Function

</lotusscript></code><code event='Main'><lotusscript>Sub Main()
	On Error GoTo ErrorHandle
	
	Dim session As New NotesSession
	Dim workSpace As New NotesUIWorkspace
	Dim uiView As NotesUIView
	Dim curDB As NotesDatabase
	Dim unpro As NotesDocumentCollection
	Dim doc As NotesDocument
	
	Set curDB = session.CurrentDatabase
	Set uiView = workSpace.CurrentView
	If Not uiView Is Nothing Then
		Set unpro = uiView.Documents
		If unpro.Count = 0 Then Set unpro = Nothing
	End If
	
	If unpro Is Nothing Then Set unpro = curDB.UnprocessedDocuments
	
	If unpro.Count = 0 Then
		Call Messagebox_Alert("データベースを選択してください", "")
		Exit Sub
	End If
	
	Dim varSelectKind As Variant
	
	varSelectKind = "データベース情報"
	
	Dim defDir As String
	Dim defFileName As String
	Dim filePath As Variant
	
	Set doc = unpro.GetFirstDocument()
	
	If doc.Getitemvalue("DbTitle")(0) &lt;&gt; "" Then
		defFileName = "[" &amp; doc.Getitemvalue("DbTitle")(0) &amp; "]"
	End If
	defFileName = defFileName &amp; "_" &amp; varSelectKind &amp; ".xml"
	
	defDir = GetEnviron("USERPROFILE") &amp; "\Desktop"
	
	Do
		filePath = workSpace.Savefiledialog(False, "XMLファイル選択", "XMLファイル|*.xml", defDir, defFileName)
		If IsEmpty(filePath) Then
			Exit Sub
		ElseIf CheckDir(filePath(0), 0) = True Then
			If 7 = Messagebox_YesNo("ファイルを上書きしますか？", "") Then
			ElseIf CheckFileOpend(filePath(0)) = True Then
				Call Messagebox_Alert("ファイルが別のプロセスによりロックされている為書き込みできません。", "")
			Else
				Exit Do
			End If
		Else
			Exit Do
		End If
	Loop
	
	Dim targetDB As NotesDatabase
	Dim notes As NotesNoteCollection
	Dim note As NotesDocument
	Dim noteID As String
	
	Dim stream As New IOStreamEX
	
	Set doc = unpro.GetFirstDocument()
	
	Do Until doc Is Nothing
		
		Set targetDB = New NotesDatabase(doc.DbServer(0), doc.DbFilePath(0))
		If targetDB.Isopen = True Then
			
			Set notes = targetDB.CreateNoteCollection(False)
			notes.SelectIcon = true
			notes.SelectReplicationFormulas = True
			notes.SelectProfiles = True
			
			Call notes.Buildcollection()
			
			Set stream = New IOStreamEX
			Call stream.OpenStream(CStr(filePath(0)), "UTF-8")
			Call stream.Stream.Truncate()
			
			Call outputXML(notes, stream)
			
			Call stream.CloseStream()
			
		End If
NextLoop:
		Exit Do
		Set doc = unpro.GetNextDocument(doc)
	Loop
	
ExitTag:
	
	Exit Sub
Error4412Handle:
Error4060Handle:
	Call SetErrorObject(Err, Error)
	Print "エラー：" &amp; GetErrorMessage()
	Call ClearErrorObject()
	Resume NextLoop
ErrorHandle:
	Call SetErrorObject(Err, Error)
	Call Messagebox_Error(GetErrorMessage(), "")
	Resume ExitTag
End Sub</lotusscript></code>
<rundata processeddocs='0' exitcode='0' agentdata='0336AC415D17099C49258319002C52CD'>
<agentmodified><datetime>20181001T135313,54+09</datetime></agentmodified>
<agentrun><datetime>20181009T163703,28+09</datetime></agentrun>
<runlog>エージェント データベースプロパティ出力 の 2018/10/09 16:36:56 での実行が開始しました。
選択文書で実行します。 合計 1
1 文書が検索条件に一致しました。
LotusScript を実行しました
エージェント データベースプロパティ出力 の実行が終了しました。(2018/10/09 16:37:03)
</runlog></rundata>
<item name='$POID'><datetime>20140930T200604,72+09</datetime></item></agent>

<agent name='更新' hide='v3' publicaccess='false' designerversion='7'>
<noteinfo noteid='852' unid='C49556385F8D4C9149257AFD000B47B6' sequence='14'>
<created><datetime>20130124T110312,54+09</datetime></created>
<modified><datetime>20181031T100052,30+09</datetime></modified>
<revised><datetime>20181031T100052,29+09</datetime></revised>
<lastaccessed><datetime>20181031T100052,30+09</datetime></lastaccessed>
<addedtofile><datetime>20150528T093235,58+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby>
<wassignedby><name>CN=Administrator/O=Comture</name></wassignedby>
<designchange><datetime>20181031T100052,28+09</datetime></designchange>
<trigger type='actionsmenu'/>
<documentset type='selected'/><code event='options'><lotusscript>Option Public

</lotusscript></code><code event='initialize'><lotusscript>Sub Initialize
	
	Dim session As New NotesSession
	Dim curDB As NotesDatabase
	Dim unpro As NotesDocumentCollection
	Dim doc As NotesDocument
	
	Set curDB = session.CurrentDatabase
	Set unpro = curDB.UnprocessedDocuments
	Set doc = unpro.GetFirstDocument
	
	Do Until doc Is Nothing
		
		Call doc.ComputeWithForm(True, False)
		Call doc.Save(ture, True, False)
		Set doc = unpro.GetNextDocument(doc)
	Loop
	
End Sub</lotusscript></code>
<rundata processeddocs='0' exitcode='0' agentdata='DE492A124501D7CF49257AFD000BAF00'>
<agentmodified><datetime>20130124T110732,36+09</datetime></agentmodified>
<agentrun><datetime>20130124T110754,52+09</datetime></agentrun>
<runlog>エージェント 更新 の 2013/01/24 11:07:54 での実行が開始しました。
選択文書で実行します。 合計 2
2 文書が検索条件に一致しました。
LotusScript を実行しました
エージェント 更新 の実行が終了しました。(2013/01/24 11:07:54)
</runlog></rundata>
<item name='$POID'><datetime>20140930T200605,12+09</datetime></item></agent>

<agent name='(ツール)\(ACL一覧出力)' alias='OutputACLForCSV' hide='v3' publicaccess='false'
 designerversion='8.5.3' restrictions='unrestricted'>
<noteinfo noteid='87a' unid='8C110E2ADE23F04A49257EA6002AEF42' sequence='187'>
<created><datetime>20150819T164857,62+09</datetime></created>
<modified><datetime>20181031T100052,65+09</datetime></modified>
<revised><datetime>20181031T100052,64+09</datetime></revised>
<lastaccessed><datetime>20181031T100052,65+09</datetime></lastaccessed>
<addedtofile><datetime>20150819T164857,65+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby>
<wassignedby><name>CN=Administrator/O=Comture</name></wassignedby>
<designchange><datetime>20181031T100052,62+09</datetime></designchange>
<trigger type='agentlist'/>
<documentset type='runonce'/><code event='options'><lotusscript>Option Public
Option Declare
Use "NotesUICommonLib"
Use "ToolsLib"


</lotusscript></code><code event='declarations'><lotusscript>Dim g_lstLevelText List As String
Dim g_lstUserTypeText List As String


</lotusscript></code><code event='initialize'><lotusscript>Sub Initialize
	Call SetProcess("*AG - OutputACL")
	
	'アクセスレベルテキスト
	g_lstLevelText(ACLLEVEL_NOACCESS) = "なし"
	g_lstLevelText(ACLLEVEL_DEPOSITOR) = "投稿者"
	g_lstLevelText(ACLLEVEL_READER) = "読者"
	g_lstLevelText(ACLLEVEL_AUTHOR) = "作成者"
	g_lstLevelText(ACLLEVEL_EDITOR) = "編集者"
	g_lstLevelText(ACLLEVEL_DESIGNER) = "設計者"
	g_lstLevelText(ACLLEVEL_MANAGER) = "管理者"
	
	'種類テキスト
	g_lstUserTypeText(ACLTYPE_UNSPECIFIED) = "指定なし"
	g_lstUserTypeText(ACLTYPE_PERSON) = "ユーザー"
	g_lstUserTypeText(ACLTYPE_SERVER) = "サーバー"
	g_lstUserTypeText(ACLTYPE_MIXED_GROUP) = "混在グループ"
	g_lstUserTypeText(ACLTYPE_PERSON_GROUP) = "ユーザーグループ"
	g_lstUserTypeText(ACLTYPE_SERVER_GROUP) = "サーバーグループ"
	
	Call Main()
End Sub

</lotusscript></code><code event='GetOptionText'><lotusscript>Function GetOptionText(e As NotesACLEntry) As Variant
	
	Dim o As Variant
	ReDim o(0) As String
	Select Case e.Level
		Case ACLLEVEL_NOACCESS, ACLLEVEL_DEPOSITOR
			If e.IsPublicReader Then o = ArrayAppend(o, "パブリック文書[読者]")
			If e.Ispublicreader Then o = ArrayAppend(o, "パブリック文書[作成者]")
			If e.Canreplicateorcopydocuments Then o = ArrayAppend(o, "文書を複製またはコピー")
			
		Case ACLLEVEL_READER
			If e.CancreatePersonalAgent Then o = ArrayAppend(o, "個人エージェントの作成")
			If e.CancreatePersonalFolder Then o = ArrayAppend(o, "個人フォルダ/ビューの作成")
			If e.CanCreateLsorJavaAgent Then o = ArrayAppend(o, "LotusScript/Java エージェントの作成")
			If e.Ispublicreader Then o = ArrayAppend(o, "パブリック文書[作成者]")
			If e.Canreplicateorcopydocuments Then o = ArrayAppend(o, "文書を複製またはコピー")
			
		Case ACLLEVEL_AUTHOR
			If e.CanCreateDocuments Then o = ArrayAppend(o, "文書の作成")
			If e.CanDeleteDocuments Then o = ArrayAppend(o, "文書の削除")
			If e.CancreatePersonalAgent Then o = ArrayAppend(o, "個人エージェントの作成")
			If e.CancreatePersonalFolder Then o = ArrayAppend(o, "個人フォルダ/ビューの作成")
			If e.CanCreateLsorJavaAgent Then o = ArrayAppend(o, "LotusScript/Java エージェントの作成")
			If e.Ispublicreader Then o = ArrayAppend(o, "パブリック文書[作成者]")
			If e.Canreplicateorcopydocuments Then o = ArrayAppend(o, "文書を複製またはコピー")
			
		Case ACLLEVEL_EDITOR
			If e.CanDeleteDocuments Then o = ArrayAppend(o, "文書の削除")
			If e.CancreatePersonalAgent Then o = ArrayAppend(o, "個人エージェントの作成")
			If e.CancreatePersonalFolder Then o = ArrayAppend(o, "個人フォルダ/ビューの作成")
			If e.CanCreateSharedFolder Then o = ArrayAppend(o, "共有フォルダ/ビューの作成")
			If e.CanCreateLsorJavaAgent Then o = ArrayAppend(o, "LotusScript/Java エージェントの作成")
			If e.Canreplicateorcopydocuments Then o = ArrayAppend(o, "文書を複製またはコピー")
			
		Case ACLLEVEL_DESIGNER
			If e.CanDeleteDocuments Then o = ArrayAppend(o, "文書の削除")
			If e.CanCreateLsorJavaAgent Then o = ArrayAppend(o, "LotusScript/Java エージェントの作成")
			If e.Canreplicateorcopydocuments Then o = ArrayAppend(o, "文書を複製またはコピー")
			
		Case ACLLEVEL_MANAGER
			If e.CanDeleteDocuments Then o = ArrayAppend(o, "文書の削除")
			If e.Canreplicateorcopydocuments Then o = ArrayAppend(o, "文書を複製またはコピー")
			
	End Select
	
	GetOptionText = FullTrim(o)
	
End Function

</lotusscript></code><code event='GetUserTypeText'><lotusscript>Function GetUserTypeText(userType As Integer) As String
	
	If IsElement(g_lstUserTypeText(userType)) Then GetUserTypeText = g_lstUserTypeText(userType)
	
End Function

</lotusscript></code><code event='Main'><lotusscript>Sub Main()
	On Error GoTo ErrorHandle
	On Error 4412 GoTo Error4412Handle
	On Error 4060 GoTo Error4060Handle
	
	Dim session As New NotesSession
	Dim workSpace As New NotesUIWorkspace
	Dim uiView As NotesUIView
	Dim curDB As NotesDatabase
	Dim unpro As NotesDocumentCollection
	Dim doc As NotesDocument
	Dim targetDB As NotesDatabase
	
	Dim bolErrorFlg As Boolean
	
	Set curDB = session.Currentdatabase
	Set uiView = workSpace.CurrentView
	If Not uiView Is Nothing Then
		Set unpro = uiView.Documents
		If unpro.count = 0 Then Set unpro = Nothing
	End If
	
	If unpro Is Nothing Then Set unpro = curDB.UnprocessedDocuments
	If unpro.Count = 0 Then
		Call Messagebox_Alert("データベースを選択してください", "")
		Exit Sub
	End If
	
	Dim stream As New OutputStreamCSV
	Dim defDir As String
	Dim defFileName As String
	Dim filePath As Variant
	
	Set doc = unpro.GetFirstDocument()
	
	defDir = GetEnviron("USERPROFILE") &amp; "\Desktop"
	
	If doc.Getitemvalue("DbTitle")(0) &lt;&gt; "" Then
		defFileName = "[" &amp; doc.Getitemvalue("DbTitle")(0) &amp; "]"
		If unpro.Count &lt;&gt; 1 Then
			defFileName = defFileName &amp; " 等(全" &amp; unpro.Count &amp; " DB) "
		End If
	End If
	defFileName = defFileName &amp; "ACL一覧.csv"
	
	Do
		filePath = workSpace.Savefiledialog(False, "CSVファイル選択", "CSVファイル|*.csv", defDir, defFileName)
		If IsEmpty(filePath) Then
			Exit Sub
		ElseIf CheckDir(filePath(0), 0) = True Then
			If 7 = Messagebox_YesNo("ファイルを上書きしますか？", "") Then
			ElseIf CheckFileOpend(filePath(0)) = True Then
				Call Messagebox_Alert("ファイルが別のプロセスによりロックされている為書き込みできません。", "")
			Else
				Exit Do
			End If
		Else
			Exit Do
		End If
	Loop
	
	Set doc = unpro.GetFirstDocument()
	
	Do Until doc Is Nothing
		
		Set targetDB = New NotesDatabase(doc.DbServer(0), doc.DbFilePath(0))
		If targetDB.IsOpen Then
			If OutputACL(targetDB, stream) = FUNCTIONFAILURE Then
				Error Err, Error
			End If
		End If
		
NextLoop:
		Set doc = unpro.Getnextdocument(doc)
	Loop
	
	Call stream.SaveStream(CStr(filePath(0)), True, "")
	
ExitTag:
	If Not stream Is Nothing Then
		Call stream.CloseStream()
	End If
	Exit Sub
	
Error4412Handle:
Error4060Handle:
	Call SetErrorObject(Err, Error)
	Print "エラー：" &amp; GetErrorMessage()
	Call ClearErrorObject()
	bolErrorFlg = True
	Resume NextLoop
	
ErrorHandle:
	Call SetErrorObject(Err, Error)
	Call Messagebox_Error(GetErrorMessage(), "")
	Resume ExitTag
End Sub

</lotusscript></code><code event='OutputACL'><lotusscript>Function OutputACL(db As NotesDatabase, stream As OutputStreamCSV) As Integer
	On Error GoTo ErrorHandle
	
	Dim dbTitle As String
	Dim dbFilePath As String
	Dim dbReplicaID As String
	
	Dim acl As NotesACL
	Dim aclE As NotesACLEntry
	Dim aryElem List As String
	Dim options As Variant
	
	dbTitle = db.Title
	dbFilePath = db.Filepath
	dbReplicaID = db.ReplicaID
	
	Set acl = db.Acl
	Set aclE = acl.GetFirstEntry()
	
	Do Until aclE Is Nothing
		
		options = GetOptionText(aclE)
		
		aryElem("データベース名") = dbTitle
		aryElem("ファイルパス") = dbFilePath
		aryElem("レプリカID") = dbReplicaID
		aryElem("エントリ名") = aclE.Name
		aryElem("アクセス権") = GetLevelText(aclE.Level)
		aryElem("種類") = GetUserTypeText(aclE.UserType)
		aryElem("オプション") = Implode(options, Chr(10))
		aryElem("ロール") = Implode(aclE.Roles, Chr(10))
		aryElem("備考") = ""
		If aclE.IsAdminServer Then
			aryElem("備考") = "システム管理サーバー"
		End If
		
		'ヘッダーを書き込む
		If stream.LineNum = 1 Then
			ForAll v In aryElem
				Call stream.AddLineEntry(ListTag(v), True)
			End ForAll
			Call stream.FlashLine()
			Call stream.SheekNextLine()
		End If
		
		Call stream.AddLineEntries(aryElem, True)
		Call stream.FlashLine()
		Call stream.SheekNextLine()
		
		Set aclE = acl.GetNextEntry(aclE)
	Loop
	
	Exit Function
ErrorHandle:
	Call SetErrorObject(Err, Error)
	OutputACL = FUNCTIONFAILURE
	Exit Function
End Function

</lotusscript></code><code event='GetLevelText'><lotusscript>Function GetLevelText(level As integer) As String
	
	If IsElement(g_lstLevelText(level)) Then GetLevelText = g_lstLevelText(level)
	
End Function</lotusscript></code>
<rundata processeddocs='0' exitcode='0' agentdata='5782A1AC38DABE8649257EB900070D4E'>
<agentmodified><datetime>20181031T100052,65+09</datetime></agentmodified>
<agentrun><datetime>20190110T142231,46+09</datetime></agentrun>
<runlog>エージェント (ツール)\(ACL一覧出力)|OutputACLForCSV の 2019/01/10 14:22:27 での実行が開始しました。
LotusScript を実行しました
エージェント (ツール)\(ACL一覧出力)|OutputACLForCSV の実行が終了しました。(2019/01/10 14:22:31)
</runlog></rundata></agent>

<agentdata>
<noteinfo noteid='28e2' unid='195A04B95434E75E49257EA600320D11' sequence='1'>
<created><datetime>20150819T180641,45+09</datetime></created>
<modified><datetime>20150819T180641,46+09</datetime></modified>
<revised><datetime>20150819T180641,45+09</datetime></revised>
<lastaccessed><datetime>20150819T180641,46+09</datetime></lastaccessed>
<addedtofile><datetime>20150819T180641,46+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=System Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='28ee' unid='F34C495F222B3CB349257EA6003283AE' sequence='1'>
<created><datetime>20150819T181145,10+09</datetime></created>
<modified><datetime>20150819T181145,11+09</datetime></modified>
<revised><datetime>20150819T181145,10+09</datetime></revised>
<lastaccessed><datetime>20150819T181145,11+09</datetime></lastaccessed>
<addedtofile><datetime>20150819T181145,11+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=System Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='28fa' unid='778C2A22E66C68E349257EA700068AC9' sequence='1'>
<created><datetime>20150820T101127,45+09</datetime></created>
<modified><datetime>20150820T101127,46+09</datetime></modified>
<revised><datetime>20150820T101127,45+09</datetime></revised>
<lastaccessed><datetime>20150820T101127,46+09</datetime></lastaccessed>
<addedtofile><datetime>20150820T101127,46+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=System Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='2902' unid='8A11F51355FA16C949257EA70006A93B' sequence='1'>
<created><datetime>20150820T101245,39+09</datetime></created>
<modified><datetime>20150820T101245,41+09</datetime></modified>
<revised><datetime>20150820T101245,40+09</datetime></revised>
<lastaccessed><datetime>20150820T101245,41+09</datetime></lastaccessed>
<addedtofile><datetime>20150820T101245,41+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=System Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='2912' unid='CDC46C79901BA49F49257EA7000713AF' sequence='1'>
<created><datetime>20150820T101717,91+09</datetime></created>
<modified><datetime>20150820T101717,93+09</datetime></modified>
<revised><datetime>20150820T101717,92+09</datetime></revised>
<lastaccessed><datetime>20150820T101717,93+09</datetime></lastaccessed>
<addedtofile><datetime>20150820T101717,93+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=System Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='2936' unid='18A3A60D6E3173F449257EA700098CA3' sequence='1'>
<created><datetime>20150820T104418,27+09</datetime></created>
<modified><datetime>20150820T104418,28+09</datetime></modified>
<revised><datetime>20150820T104418,27+09</datetime></revised>
<lastaccessed><datetime>20150820T104418,28+09</datetime></lastaccessed>
<addedtofile><datetime>20150820T104418,28+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=System Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='2946' unid='91144FFAAE014A2349257EA70009A4EC' sequence='1'>
<created><datetime>20150820T104520,44+09</datetime></created>
<modified><datetime>20150820T104520,45+09</datetime></modified>
<revised><datetime>20150820T104520,44+09</datetime></revised>
<lastaccessed><datetime>20150820T104520,45+09</datetime></lastaccessed>
<addedtofile><datetime>20150820T104520,45+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=System Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='2952' unid='0D9BEA189D460CE649257EA7000A6729' sequence='1'>
<created><datetime>20150820T105337,69+09</datetime></created>
<modified><datetime>20150820T105337,71+09</datetime></modified>
<revised><datetime>20150820T105337,70+09</datetime></revised>
<lastaccessed><datetime>20150820T105337,71+09</datetime></lastaccessed>
<addedtofile><datetime>20150820T105337,71+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=System Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='2962' unid='684EE413B9CB8E5749257EA7000BB520' sequence='1'>
<created><datetime>20150820T110752,64+09</datetime></created>
<modified><datetime>20150820T110752,65+09</datetime></modified>
<revised><datetime>20150820T110752,64+09</datetime></revised>
<lastaccessed><datetime>20150820T110752,65+09</datetime></lastaccessed>
<addedtofile><datetime>20150820T110752,65+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=System Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='2996' unid='01EF6490982F5FCB49257EA7000D5CAD' sequence='1'>
<created><datetime>20150820T112556,93+09</datetime></created>
<modified><datetime>20150820T112556,95+09</datetime></modified>
<revised><datetime>20150820T112556,94+09</datetime></revised>
<lastaccessed><datetime>20150820T112556,95+09</datetime></lastaccessed>
<addedtofile><datetime>20150820T112556,95+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=System Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='299e' unid='81BA26F7FAFF634349257EA7000DA255' sequence='1'>
<created><datetime>20150820T112855,25+09</datetime></created>
<modified><datetime>20150820T112855,27+09</datetime></modified>
<revised><datetime>20150820T112855,26+09</datetime></revised>
<lastaccessed><datetime>20150820T112855,27+09</datetime></lastaccessed>
<addedtofile><datetime>20150820T112855,27+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=System Administrator/O=Comture</name></updatedby></agentdata>

<agent name='(ツール)\(エージェントのプロパティをCSV出力)' alias='OutputAgentForCSV' hide='v3'
 publicaccess='false' designerversion='8.5.3' restrictions='unrestricted'>
<noteinfo noteid='2a2a' unid='735816DB8516AAD549257EA7001D0C1F' sequence='1305'>
<created><datetime>20150820T141716,47+09</datetime></created>
<modified><datetime>20181031T100052,54+09</datetime></modified>
<revised><datetime>20181031T100052,53+09</datetime></revised>
<lastaccessed><datetime>20181031T100052,54+09</datetime></lastaccessed>
<addedtofile><datetime>20150820T141716,50+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby>
<wassignedby><name>CN=Administrator/O=Comture</name></wassignedby>
<designchange><datetime>20181031T100052,50+09</datetime></designchange>
<trigger type='agentlist'/>
<documentset type='selected'><search type='byformnames'><formchoice name='(01.データベース情報)|DbInfoDoc'/></search></documentset><code
 event='options'><lotusscript>Option Public
Option Declare
Use "NotesUICommonLib"
Use "ToolsLib"
Use "NotesDXLLIb"

</lotusscript></code><code event='initialize'><lotusscript>Sub Initialize
	Call SetProcess("*AG - (エージェントのプロパティ)")
	Call Main()
End Sub

</lotusscript></code><code event='OutputCSV'><lotusscript>Function OutputCSV(notes As NotesNoteCollection, stream As OutputStreamCSV, aryCols As Variant) As Integer
	On Error GoTo ErrorHandle
	
	Dim note As NotesDocument
	Dim noteID As String
	Dim session As NotesSession
	Dim db As NotesDatabase
	
	Dim objDXL As CNotesAgentDXL
	Dim tmpColName As String
	
	Dim aryElem List As String
	Dim varStartTime As Variant
	Dim varEndTime As Variant
	
	Dim strType As String
	Dim tmpStr As String
	Dim tmpDate As Variant
	Dim tmpVar As Variant
	Dim tmpAry As Variant
	
	Set db = notes.Parent
	Set session = db.Parent
	noteID = notes.GetFirstNoteID()
	
	Do Until noteID = ""
		Set note = db.GetDocumentByID(noteID)
		
		Set objDXL = New CNotesAgentDXL
		Call objDXL.ParseDOM(note)
		
		'データベースの情報
		tmpColName = "データベース名"
		If Not IsNull( ArrayGetIndex(aryCols, tmpColName) ) Then
			aryElem(tmpColName) = db.Title
		End If
		tmpColName = "ファイルパス"
		If Not IsNull( ArrayGetIndex(aryCols, tmpColName) ) Then
			aryElem(tmpColName) = db.FilePath
		End If
		tmpColName = "レプリカID"
		If Not IsNull( ArrayGetIndex(aryCols, tmpColName) ) Then
			aryElem(tmpColName) = db.Replicaid
		End If
		
		'設計名称
		tmpColName = "設計名"
		If Not IsNull( ArrayGetIndex(aryCols, tmpColName) ) Then
			tmpStr = objDXL.GetProperty("alias")
			If tmpStr &lt;&gt; "" Then
				tmpStr = objDXL.GetProperty("name") &amp; "|" &amp; tmpStr
			Else
				tmpStr = objDXL.GetProperty("name")
			End If
			aryElem(tmpColName) = tmpStr
		End If
		
		tmpColName = "トリガ"
		If Not IsNull( ArrayGetIndex(aryCols, tmpColName) ) Then
			'トリガ
			aryElem(tmpColName) = objDXL.GetPropertyText("trigger")
		End If
		tmpColName = "種類"
		If Not IsNull( ArrayGetIndex(aryCols, tmpColName) ) Then
			'種類
			aryElem(tmpColName) = objDXL.GetScheduleText("type")
		End If
		tmpColName = "対象"
		If Not IsNull( ArrayGetIndex(aryCols, tmpColName) ) Then
			'対象
			aryElem(tmpColName) = objDXL.GetPropertyText("documentset")
		End If
		tmpColName = "有効/無効"
		If Not IsNull( ArrayGetIndex(aryCols, tmpColName) ) Then
			'有効/無効
			aryElem(tmpColName) = objDXL.GetPropertyText("enabled")
		End If
		
		tmpColName = "実行時刻"
		If Not IsNull( ArrayGetIndex(aryCols, tmpColName) ) Then
			'[有効時間帯]or[実行時刻]
			strType = objDXL.GetSchedule("type")
			'開始時刻
			varStartTime = objDXL.GetSchedule("starttime")
			'終了時刻
			varEndTime = objDXL.GetSchedule("endtime")
			
			tmpStr = ""
			If Not IsEmpty(varEndTime) Then
				tmpStr = Format(varEndTime, "h:mm")
			End If
			If Not IsEmpty(varStartTime) Then
				If tmpStr &lt;&gt; "" Then
					tmpStr = " - " &amp; tmpStr
				End If
				tmpStr = "[" &amp; Format(varStartTime, "h:mm") &amp; tmpStr &amp; "]"
			End If
			If tmpStr = "" Then
				If strType = "byminutes" Then tmpStr = "[終日]"
			End If
			aryElem(tmpColName) = tmpStr
		End If
		
		tmpColName = "周期"
		If Not IsNull( ArrayGetIndex(aryCols, tmpColName) ) Then
			'周期
			strType = objDXL.GetSchedule("type")
			Select Case strType
			Case "byminutes"
				tmpStr = objDXL.GetSchedule("hours")
				If tmpStr = "" Or tmpStr = "0" Then
					tmpStr = ""
				Else
					tmpStr = tmpStr &amp; "時間"
				End If
				tmpStr = "[" &amp; tmpStr &amp; objDXL.GetSchedule("minutes") &amp; "分]毎"
			Case "daily"
				tmpStr = "毎日"
			Case "weekly"
				tmpStr = "毎週" &amp; "[" &amp; objDXL.GetScheduleText("dayofweek") &amp; "]"
			Case "monthly"
				tmpStr = "毎月" &amp; "[" &amp; objDXL.GetSchedule("dateinmonth") &amp; "日" &amp; "]"
			Case "never"
				tmpStr = "なし"
			Case Else
				tmpStr = ""
			End Select
			
			aryElem(tmpColName) = tmpStr
		End If
		
		tmpColName = "実行開始日"
		If Not IsNull( ArrayGetIndex(aryCols, tmpColName) ) Then
			'開始日
			tmpDate = objDXL.GetSchedule("startdate")
			If IsEmpty(tmpDate) Then tmpDate = ""
			aryElem(tmpColName) = tmpDate
		End If
		
		tmpColName = "実行終了日"
		If Not IsNull( ArrayGetIndex(aryCols, tmpColName) ) Then
			'終了日
			tmpDate = objDXL.GetSchedule("enddate")
			If IsEmpty(tmpDate) Then tmpDate = ""
			aryElem(tmpColName) = tmpDate
		End If
		
		tmpColName = "週末はエージェントを実行しない"
		If Not IsNull( ArrayGetIndex(aryCols, tmpColName) ) Then
			'週末はエージェントを実行しない
			tmpStr = objDXL.GetScheduleText("onweekends")
			If tmpStr &lt;&gt; "" Then tmpStr = "○"
			aryElem(tmpColName) = tmpStr
		End If
		
		tmpColName = "実行場所"
		If Not IsNull( ArrayGetIndex(aryCols, tmpColName) ) Then
			'実行場所
			tmpStr = objDXL.GetSchedule("runserver")
			If tmpStr = "" Then tmpStr = objDXL.GetScheduleText("runlocation")
			aryElem(tmpColName) = tmpStr
		End If
		
		tmpColName = "セキュリティ情報"
		If Not IsNull( ArrayGetIndex(aryCols, tmpColName) ) Then
			ReDim tmpAry(0) As String
			
			'Webユーザで実行
			tmpAry = ArrayAppend(tmpAry, objDXL.GetPropertyText("runaswebuser"))
			
			'代理で実行
			tmpStr = objDXL.GetPropertyText("runonbehalfof")
			If tmpStr &lt;&gt; "" Then
				tmpAry = ArrayAppend(tmpAry, "代理で実行[" &amp; tmpStr &amp; "]")
			End If
			
			'セキュリティ
			tmpAry = ArrayAppend(tmpAry, objDXL.GetPropertyText("restrictions"))
			
			'読者
			tmpVar = objDXL.GetProperty("readers")
			If IsEmpty(tmpVar) Then
				tmpStr = ""
			Else
				tmpStr = Join(tmpVar, ",")
				tmpAry = ArrayAppend(tmpAry, "読者[" &amp; tmpStr &amp; "]")
			End If
			tmpAry = ArrayAppend(tmpAry, objDXL.GetPropertyText("publicaccess"))
			tmpAry = ArrayAppend(tmpAry, objDXL.GetPropertyText("activatable"))
			
			tmpAry = FullTrim(tmpAry)
			tmpStr = Join(tmpAry, Chr(10) &amp; "・")
			If tmpStr &lt;&gt; "" Then
				tmpStr = "・" &amp; tmpStr
			End If
			aryElem(tmpColName) = tmpStr
		End If
		
		tmpColName = "作成日(初回)"
		If Not IsNull( ArrayGetIndex(aryCols, tmpColName) ) Then
			aryElem(tmpColName) = objDXL.Created
		End If
		tmpColName = "更新日(初回)"
		If Not IsNull( ArrayGetIndex(aryCols, tmpColName) ) Then
			aryElem(tmpColName) = objDXL.Modified
		End If
		tmpColName = "追加日(現在のファイル)"
		If Not IsNull( ArrayGetIndex(aryCols, tmpColName) ) Then
			aryElem(tmpColName) = objDXL.AddedToFile
		End If
		tmpColName = "更新日(現在のファイル)"
		If Not IsNull( ArrayGetIndex(aryCols, tmpColName) ) Then
			aryElem(tmpColName) = objDXL.Revised
		End If
		tmpColName = "文書ID"
		If Not IsNull( ArrayGetIndex(aryCols, tmpColName) ) Then
			aryElem(tmpColName) = objDXL.NoteID
		End If
		tmpColName = "ユニバーサルID"
		If Not IsNull( ArrayGetIndex(aryCols, tmpColName) ) Then
			aryElem(tmpColName) = objDXL.UniversalID
		End If
		tmpColName = "コメント"
		If Not IsNull( ArrayGetIndex(aryCols, tmpColName) ) Then
			aryElem(tmpColName) = objDXL.GetProperty("comment")
		End If
		
		tmpColName = "その他"
		If Not IsNull( ArrayGetIndex(aryCols, tmpColName) ) Then
			ReDim tmpAry(0) As String
			tmpStr = objDXL.GetProperty("fromtemplate")
			If tmpStr &lt;&gt; "" Then
				tmpAry = ArrayAppend(tmpAry, "テンプレートから設計を引き継ぐ[" &amp; tmpStr &amp; "]")
			End If
			tmpAry = ArrayAppend(tmpAry, objDXL.GetPropertyText("noreplace"))
			tmpAry = ArrayAppend(tmpAry, objDXL.GetPropertyText("propagatenoreplace"))
			tmpStr = objDXL.GetPropertyText("hide")
			If tmpStr &lt;&gt; "" Then
				tmpAry = ArrayAppend(tmpAry, Split(tmpStr, ","))
			End If
			tmpAry = ArrayAppend(tmpAry, objDXL.GetPropertyText("allowremotedebugging"))
			tmpAry = ArrayAppend(tmpAry, objDXL.GetPropertyText("private"))
			tmpAry = ArrayAppend(tmpAry, objDXL.GetPropertyText("showinsearch"))
			tmpAry = ArrayAppend(tmpAry, objDXL.GetPropertyText("storehighlights"))
			tmpAry = ArrayAppend(tmpAry, objDXL.GetPropertyText("clientbackgroundthread"))
			tmpAry = ArrayAppend(tmpAry, objDXL.GetPropertyText("profile"))
			
			If objDXL.HasSearch = True Then
				tmpAry = ArrayAppend(tmpAry, "文書の選択[有]")
			End If
			tmpAry = ArrayAppend(tmpAry, "Ver. " &amp; objDXL.GetPropertyText("designerversion"))
			
			tmpAry = FullTrim(tmpAry)
			tmpStr = Join(tmpAry, Chr(10) &amp; "・")
			If tmpStr &lt;&gt; "" Then
				tmpStr = "・" &amp; tmpStr
			End If
			aryElem(tmpColName) = tmpStr
			
		End If
		
		If stream.LineNum = 1 Then
			ForAll v In aryElem
				Call stream.AddLineEntry(ListTag(v), True)
			End ForAll
			Call stream.FlashLine()
			Call stream.SheekNextLine()
		End If
		
		Call stream.AddLineEntries(aryElem, True)
		Call stream.FlashLine()
		Call stream.SheekNextLine()
		
		noteID = notes.GetNextNoteID(noteID)
	Loop
	
	Exit Function
ErrorHandle:
	Call SetErrorObject(Err, Error)
	OutputCSV = FUNCTIONFAILURE
	Exit Function
End Function

</lotusscript></code><code event='Main'><lotusscript>Sub Main()
	On Error GoTo ErrorHandle
	
	Dim session As New NotesSession
	Dim workSpace As New NotesUIWorkspace
	Dim uiView As NotesUIView
	Dim curDB As NotesDatabase
	Dim unpro As NotesDocumentCollection
	Dim doc As NotesDocument
	
	Set curDB = session.CurrentDatabase
	Set uiView = workSpace.CurrentView
	If Not uiView Is Nothing Then
		Set unpro = uiView.Documents
		If unpro.Count = 0 Then Set unpro = Nothing
	End If
	
	If unpro Is Nothing Then Set unpro = curDB.UnprocessedDocuments
	
	If unpro.Count = 0 Then
		Call Messagebox_Alert("データベースを選択してください", "")
		Exit Sub
	End If
	
	Dim varSelectKind As Variant
	Dim varSelectCols As Variant
	Dim aryLst As Variant
	Dim aryDef As Variant
	
	ReDim aryLst(0) As String
	aryLst = ArrayAppend(aryLst, "エージェント(全て)")
	aryLst = ArrayAppend(aryLst, "エージェント(スケジュールのみ)")
	aryLst = ArrayAppend(aryLst, "エージェント(スケジュール以外)")
	aryLst = FullTrim(aryLst)
	
	varSelectKind = workSpace.Prompt(PROMPT_OKCANCELLIST , "CSV出力", "出力する設計の種類を選択", "", aryLst)
	If IsEmpty(varSelectKind) Then
		Exit Sub
	End If
	
	ReDim aryLst(0) As String
	aryLst = ArrayAppend(aryLst, "データベース名")
	aryLst = ArrayAppend(aryLst, "ファイルパス")
	aryLst = ArrayAppend(aryLst, "レプリカID")
	aryLst = ArrayAppend(aryLst, "設計名")
	aryLst = ArrayAppend(aryLst, "トリガ")
	aryLst = ArrayAppend(aryLst, "種類")
	aryLst = ArrayAppend(aryLst, "対象")
	aryLst = ArrayAppend(aryLst, "有効/無効")
	aryLst = ArrayAppend(aryLst, "実行時刻")
	aryLst = ArrayAppend(aryLst, "周期")
	aryLst = ArrayAppend(aryLst, "実行開始日")
	aryLst = ArrayAppend(aryLst, "実行終了日")
	aryLst = ArrayAppend(aryLst, "週末はエージェントを実行しない")
	aryLst = ArrayAppend(aryLst, "実行場所")
	aryLst = ArrayAppend(aryLst, "セキュリティ情報")
	aryLst = ArrayAppend(aryLst, "作成日(初回)")
	aryLst = ArrayAppend(aryLst, "更新日(初回)")
	aryLst = ArrayAppend(aryLst, "追加日(現在のファイル)")
	aryLst = ArrayAppend(aryLst, "更新日(現在のファイル)")
	aryLst = ArrayAppend(aryLst, "文書ID")
	aryLst = ArrayAppend(aryLst, "ユニバーサルID")
	aryLst = ArrayAppend(aryLst, "コメント")
	aryLst = ArrayAppend(aryLst, "その他")
	aryLst = FullTrim(aryLst)
	
	ReDim aryDef(0) As String
	aryDef = ArrayAppend(aryDef, "データベース名")
	aryDef = ArrayAppend(aryDef, "ファイルパス")
	aryDef = ArrayAppend(aryDef, "設計名")
	aryDef = ArrayAppend(aryDef, "トリガ")
	aryDef = ArrayAppend(aryDef, "種類")
	aryDef = ArrayAppend(aryDef, "対象")
	aryDef = ArrayAppend(aryDef, "有効/無効")
	If varSelectKind &lt;&gt; "エージェント(スケジュール以外)" Then
		aryDef = ArrayAppend(aryDef, "実行時刻")
		aryDef = ArrayAppend(aryDef, "周期")
		aryDef = ArrayAppend(aryDef, "実行開始日")
		aryDef = ArrayAppend(aryDef, "実行終了日")
		aryDef = ArrayAppend(aryDef, "週末はエージェントを実行しない")
		aryDef = ArrayAppend(aryDef, "実行場所")
	End If
	aryDef = FullTrim(aryDef)
	
	varSelectCols = workSpace.Prompt(PROMPT_OKCANCELLISTMULT, "CSV出力", "出力する列を選択", aryDef, aryLst)
	If IsEmpty(varSelectCols) Then
		Exit Sub
	End If
	
	Dim defDir As String
	Dim defFileName As String
	Dim filePath As Variant
	
	Set doc = unpro.GetFirstDocument()
	
	If doc.Getitemvalue("DbTitle")(0) &lt;&gt; "" Then
		defFileName = "[" &amp; doc.Getitemvalue("DbTitle")(0) &amp; "]"
		If unpro.Count &lt;&gt; 1 Then
			defFileName = defFileName &amp; " 等(全" &amp; unpro.Count &amp; " DB) "
		End If
	End If
	defFileName = defFileName &amp; "_" &amp; varSelectKind &amp; ".csv"
	
	defDir = GetEnviron("USERPROFILE") &amp; "\Desktop"
	
	Do
		filePath = workSpace.Savefiledialog(False, "CSVファイル選択", "CSVファイル|*.csv", defDir, defFileName)
		If IsEmpty(filePath) Then
			Exit Sub
		ElseIf CheckDir(filePath(0), 0) = True Then
			If 7 = Messagebox_YesNo("ファイルを上書きしますか？", "") Then
			ElseIf CheckFileOpend(filePath(0)) = True Then
				Call Messagebox_Alert("ファイルが別のプロセスによりロックされている為書き込みできません。", "")
			Else
				Exit Do
			End If
		Else
			Exit Do
		End If
	Loop
	
	Dim targetDB As NotesDatabase
	Dim notes As NotesNoteCollection
	Dim note As NotesDocument
	Dim noteID As String
	
	Dim stream As New OutputStreamCSV
	
	Set doc = unpro.GetFirstDocument()
	
	Do Until doc Is Nothing
		
		Set targetDB = New NotesDatabase(doc.DbServer(0), doc.DbFilePath(0))
		If targetDB.Isopen = True Then
			
			Set notes = targetDB.CreateNoteCollection(False)
			notes.Selectagents = True
			Select Case varSelectKind
			Case "エージェント(スケジュールのみ)"
				notes.SelectionFormula = |$AssistTrigger="1"|
			Case "エージェント(スケジュール以外)"
				notes.SelectionFormula = |$AssistTrigger!="1"|
			Case Else
				notes.SelectionFormula = ""
			End Select
			Call notes.Buildcollection()
			
			If OutputCSV(notes, stream, varSelectCols) = FUNCTIONFAILURE Then
				Error Err, Error
			End If
			
		End If
NextLoop:
		Set doc = unpro.GetNextDocument(doc)
	Loop
	
	Call stream.SaveStream(CStr(filePath(0)), True, "")
	
ExitTag:
	If Not stream Is Nothing Then
		Call stream.CloseStream()
	End If
	Exit Sub
Error4412Handle:
Error4060Handle:
	Call SetErrorObject(Err, Error)
	Print "エラー：" &amp; GetErrorMessage()
	Call ClearErrorObject()
	Resume NextLoop
ErrorHandle:
	Call SetErrorObject(Err, Error)
	Call Messagebox_Error(GetErrorMessage(), "")
	Resume ExitTag
End Sub

</lotusscript></code>
<rundata processeddocs='0' exitcode='0' agentdata='4BC44BEB5F965DED49258319002CF68D'>
<agentmodified><datetime>20181031T100052,54+09</datetime></agentmodified>
<agentrun><datetime>20190109T162144,00+09</datetime></agentrun>
<runlog>エージェント (ツール)\(エージェントのプロパティをCSV出力)|OutputAgentForCSV の 2019/01/09 16:21:30 での実行が開始しました。
選択文書で実行します。 合計 17
17 文書が検索条件に一致しました。
LotusScript を実行しました
エージェント (ツール)\(エージェントのプロパティをCSV出力)|OutputAgentForCSV の実行が終了しました。(2019/01/09 16:21:44)
</runlog></rundata></agent>

<agentdata>
<noteinfo noteid='2a42' unid='C6CD9ED7DAFDAB6849257EA7001DBB27' sequence='1'>
<created><datetime>20150820T142444,55+09</datetime></created>
<modified><datetime>20150820T142444,56+09</datetime></modified>
<revised><datetime>20150820T142444,55+09</datetime></revised>
<lastaccessed><datetime>20150820T142444,56+09</datetime></lastaccessed>
<addedtofile><datetime>20150820T142444,56+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=System Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='2a4a' unid='E6B53CDF78C4AA7549257EA7001DCA12' sequence='1'>
<created><datetime>20150820T142522,74+09</datetime></created>
<modified><datetime>20150820T142522,76+09</datetime></modified>
<revised><datetime>20150820T142522,75+09</datetime></revised>
<lastaccessed><datetime>20150820T142522,76+09</datetime></lastaccessed>
<addedtofile><datetime>20150820T142522,76+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=System Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='2a86' unid='C4DA1415DE7801C149257EA700278BF2' sequence='1'>
<created><datetime>20150820T161157,30+09</datetime></created>
<modified><datetime>20150820T161157,32+09</datetime></modified>
<revised><datetime>20150820T161157,31+09</datetime></revised>
<lastaccessed><datetime>20150820T161157,32+09</datetime></lastaccessed>
<addedtofile><datetime>20150820T161157,32+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=System Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='2a8e' unid='5D4B283C66CE8C0A49257EA70027AFB7' sequence='1'>
<created><datetime>20150820T161328,87+09</datetime></created>
<modified><datetime>20150820T161328,88+09</datetime></modified>
<revised><datetime>20150820T161328,87+09</datetime></revised>
<lastaccessed><datetime>20150820T161328,88+09</datetime></lastaccessed>
<addedtofile><datetime>20150820T161328,88+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=System Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='2a96' unid='7BF5E186065BC76449257EA700289287' sequence='1'>
<created><datetime>20150820T162309,51+09</datetime></created>
<modified><datetime>20150820T162309,52+09</datetime></modified>
<revised><datetime>20150820T162309,51+09</datetime></revised>
<lastaccessed><datetime>20150820T162309,52+09</datetime></lastaccessed>
<addedtofile><datetime>20150820T162309,52+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=System Administrator/O=Comture</name></updatedby></agentdata>

<scriptlibrary name='ISOLib' hide='v3 v4strict' comment='ISO8601(国際標準規格日付基本形式)'>
<noteinfo noteid='2aa2' unid='767679E3A71DDF6949257EA7002D49DF' sequence='39'>
<created><datetime>20150820T171440,31+09</datetime></created>
<modified><datetime>20181031T100051,04+09</datetime></modified>
<revised><datetime>20181031T100051,03+09</datetime></revised>
<lastaccessed><datetime>20181031T100051,04+09</datetime></lastaccessed>
<addedtofile><datetime>20150820T171440,34+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby>
<wassignedby><name>CN=Administrator/O=Comture</name></wassignedby><code event='options'><lotusscript
>Option Public
Option Declare
Use "ObjectLib"

</lotusscript></code><code event='declarations'><lotusscript>Class ISO8601AnyPart As CObjectable
	
	Private Property Get StrAnyPart As String
		StrAnyPart = Me.Members("StrAnyPart")
	End Property
	Private Property Set StrAnyPart As String
		Me.Members("StrAnyPart") = StrAnyPart
	End Property
	
	Function Build(anyData As Variant) As Integer
		On Error Goto ErrorHandle
		
		If Me.BuildOfIso(Cstr(anyData)) = FUNCTIONFAILURE Then
			Error Err, Error()
		End If
		
ExitTag: Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Build = FUNCTIONFAILURE
		Resume ExitTag
	End Function
	
	Function BuildOfIso(strAnyPart As String) As Integer
		On Error Goto ErrorHandle
		
		Me.StrAnyPart = strAnyPart
		If ProcessOfISO(Me.strAnyPart) = FUNCTIONFAILURE Then Error USERERR, Error
		
ExitTag: Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		BuildOfIso = FUNCTIONFAILURE
		Resume ExitTag
	End Function
	
	'@abstract: override is neccesary in a subclass
	'@param:
	' strAryPart: text of this part
	Function ProcessOfISO(Byval strAryPart As String) As Integer
		ProcessOfIso = FUNCTIONSUCCESS
	End Function
	
	'@return text of this part
	Property Get PartText As String
		PartText = Me.strAnyPart
	End Property
	
End Class

Class ISO8601Base As ISO8601AnyPart
	
	Private Property Get ObjDT As NotesDateTime
		Set ObjDT = Me.Members("ObjDT")
	End Property
	Private Property Set ObjDT As NotesDateTime
		Set Me.Members("ObjDT") = ObjDT
	End Property
	
	Private Property Get ObjDPart As ISO8601BaseDatePart
		Set ObjDPart = Me.Members("ObjDPart")
	End Property
	Private Property Set ObjDPart As ISO8601BaseDatePart
		Set Me.Members("ObjDPart") = ObjDPart
	End Property
	
	Private Property Get ObjTPart As ISO8601BaseTimePart
		Set ObjTPart = Me.Members("ObjTPart")
	End Property
	Private Property Set ObjTPart As ISO8601BaseTimePart
		Set Me.Members("ObjTPart") = ObjTPart
	End Property
	
	'@override
	'@param:
	' anyData:
	'	as String: convert it in NotesDateTime from ISO8601
	'	as NotesDateTime: convert it in ISO8601 from NotesDateTime
	Function Build(anyData As Variant) As Integer
		On Error Goto ErrorHandle
		
		If Typename(anyData) = "NOTESDATETIME" Then
			Set Me.objDT = anyData
			If ProcessOfNDT() = FUNCTIONFAILURE Then
				Error Err, Error()
			End If
		Else
			Build = ISO8601AnyPart..Build(anyData)
		End If
		
ExitTag: Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Build = FUNCTIONFAILURE
		Resume ExitTag
	End Function
	
	'@override
	'@param
	'	strDateTime: format is ISO8601 basic
	Function ProcessOfISO(Byval strISO8601 As String) As Integer
		On Error Goto ErrorHandle
		
		Dim strDatePart As String
		Dim strTimePart As String
		Dim index As Integer
		
		Set Me.objDPart = New ISO8601BaseDatePart
		Set Me.objTPart = New ISO8601BaseTimePart
		
		'Tを区切りにして、日付と時刻に分ける
		index = Instr(strISO8601, "T")
		If index &lt;&gt; 0 Then
			'日付部
			strDatePart = Left(strISO8601, index-1)
			'時刻部
			strTimePart = Mid(strISO8601, index)
			
			If objDPart.BuildOfIso(strDatePart) = FUNCTIONFAILURE Then Error USERERR, Error()
			If objTPart.BuildOfIso(strTimePart) = FUNCTIONFAILURE Then Error USERERR, Error()
			
		Else
			'日付部
			strDatePart = strISO8601
			'時刻部
			strTimePart = ""
			
			If objDPart.BuildOfIso(strDatePart) = FUNCTIONFAILURE Then Error USERERR, Error()
			
		End If
		
		If CreateNotesDateTime() = FUNCTIONFAILURE Then Error USERERR, Error()
		
ExitTag: Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		ProcessOfIso = FUNCTIONFAILURE
		Resume ExitTag
	End Function
	
	'@proc: create NotesDateTime object
	Function CreateNotesDateTime() As Integer
		On Error Goto ErrorHandle
		
		Dim varDate As Variant
		Dim varTime As Variant
		Dim objTZPart As ISO8601BaseTimeZonePart
		
		'none date
		If Me.objDPart.PartText = "" Then
			'time only
			varTime = Me.objTPart.getTimeValue()
			Set Me.objDT = New NotesDateTime(varTime)
			
		'none time
		Elseif Me.objTPart.PartText = "" Then
			'date only
			varDate = Me.objDPart.GetDateValue()
			Set Me.objDT = New NotesDateTime(varDate)
			
		'date and time
		Else
			varDate = Me.objDPart.GetDateValue()
			varTime = Me.objTPart.getTimeValue()
			Set objTZPart = Me.objTPart.TimeZonePart
			
			'set GMT
			Set Me.objDT = New NotesDateTime((varDate+varTime) &amp; " GMT")
			
			'Because a value advances in the case of '+' than GMT, I subtract it from
			If objTZPart.MarkText = "+" Then
				Call Me.objDT.AdjustMinute(-objTZPart.MinuteNum)
				Call Me.objDT.AdjustHour(-objTZPart.HourNum)
			'In the case of '-', it is the reverse
			Else
				Call Me.objDT.AdjustMinute(objTZPart.MinuteNum)
				Call Me.objDT.AdjustHour(objTZPart.HourNum)
			End If
			
			Set Me.objDT = New NotesDateTime(Me.objDT.LSLocalTime)
			
		End If
		
ExitTag: Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		CreateNotesDateTime = FUNCTIONFAILURE
		Resume ExitTag
	End Function
	
	'@proc: Create ISO8601 string
	Function ProcessOfNDT() As Integer
		On Error Goto ErrorHandle
		
		Dim varDT As Variant
		varDT = objDT.LSLocalTime
		
		Dim strDate As String, strTime As String, strTZ As String
		
		If Me.objDT.DateOnly &lt;&gt; "" Then
			strDate = Cstr(Year(varDT))
			strDate = strDate &amp; Right("00" &amp; Cstr(Month(varDT)), 2)
			strDate = strDate &amp; Right("00" &amp; Cstr(Day(varDT)), 2)
		End If
		
		If Me.objDT.TimeOnly &lt;&gt; "" Then
			strTime = "T"
			strTime = strTime &amp; Right("00" &amp; Cstr(Hour(varDT)), 2)
			strTime = strTime &amp; Right("00" &amp; Cstr(Minute(varDT)), 2)
			strTime = strTime &amp; Right("00" &amp; Cstr(Second(varDT)), 2)
			strTime = strTime &amp; ",00"
		End If
		
		If strDate &lt;&gt; "" And strTime &lt;&gt; "" Then
			strTZ = Cstr(-(objDT.TimeZone))
			If Left(strTZ, 1) Like "[0-9]" Then
				strTZ = "+" &amp; Right("00" &amp; strTZ, 2)
			Else
				strTZ = Left(strTZ, 1) &amp; Right("00" &amp; Abs(objDT.TimeZone), 2)
			End If
		End If
		
		Me.strAnyPart = strDate &amp; strTime &amp; strTZ
		
ExitTag: Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		ProcessOfNDT = FUNCTIONFAILURE
		Resume ExitTag
	End Function
	
	Property Get DateTime As NotesDateTime
		Set DateTime = Me.objDT
	End Property
	
End Class

Class ISO8601BaseDatePart As ISO8601AnyPart
	
	Private Property Get StrYear As String
		StrYear = Me.Members("StrYear")
	End Property
	Private Property Set StrYear As String
		Me.Members("StrYear") = StrYear
	End Property
	
	Private Property Get StrMonth As String
		StrMonth = Me.Members("StrMonth")
	End Property
	Private Property Set StrMonth As String
		Me.Members("StrMonth") = StrMonth
	End Property
	
	Private Property Get StrDay As String
		StrDay = Me.Members("StrDay")
	End Property
	Private Property Set StrDay As String
		Me.Members("StrDay") = StrDay
	End Property
	
	'@override
	'@param:
	' strDatePart: format is 'YYYYMMDD'
	Function ProcessOfISO(Byval strDatePart As String) As Integer
		On Error Goto ErrorHandle
		
		If strDatePart = "" Then Goto ExitTag
		
		Me.strYear = Left(strDatePart, 4) 'YYYY
		strDatePart = Right(strDatePart, 4) 'remaind (MMDD)
		Me.strMonth = Left(strDatePart, 2) 'MM
		Me.strDay = Right(strDatePart, 2) 'DD
		
ExitTag: Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		ProcessOfIso = FUNCTIONFAILURE
		Resume ExitTag
	End Function
	
	'@return: date of the locale
	Function GetDateValue() As Variant
		On Error Goto ErrorHandle
		
		GetDateValue = Datenumber(Me.YearNum, Me.MonthNum, Me.dayNum)
		
ExitTag: Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Goto ExitTag
	End Function
	
	'@return: text of year
	Property Get YearText As String
		YearText = Me.strYear
	End Property
	'@return: number of year
	Property Get YearNum As Integer
		YearNum = Cint(Me.YearText)
	End Property
	
	'@return: text of month
	Property Get MonthText As String
		MonthText = Me.strMonth
	End Property
	'@return: number of month
	Property Get MonthNum As Integer
		MonthNum = Cint(Me.MonthText)
	End Property
	
	'@return: text of day
	Property Get DayText As String
		DayText = Me.strDay
	End Property
	'@return: number of day
	Property Get DayNum As Integer
		DayNum = Cint(Me.DayText)
	End Property
	
End Class

Class ISO8601BaseTimePart As ISO8601AnyPart
	
	Private Property Get StrHour As String
		StrHour = Me.Members("StrHour")
	End Property
	Private Property Set StrHour As String
		Me.Members("StrHour") = StrHour
	End Property
	
	Private Property Get StrMinute As String
		StrMinute = Me.Members("StrMinute")
	End Property
	Private Property Set StrMinute As String
		Me.Members("StrMinute") = StrMinute
	End Property
	
	Private Property Get StrSec As String
		StrSec = Me.Members("StrSec")
	End Property
	Private Property Set StrSec As String
		Me.Members("StrSec") = StrSec
	End Property
	
	Private Property Get StrDecimal As String
		StrDecimal = Me.Members("StrDecimal")
	End Property
	Private Property Set StrDecimal As String
		Me.Members("StrDecimal") = StrDecimal
	End Property
	
	Private Property Get ObjTZPart As ISO8601BaseTimeZonePart
		Set ObjTZPart = Me.Members("ObjTZPart")
	End Property
	Private Property Set ObjTZPart As ISO8601BaseTimeZonePart
		Set Me.Members("ObjTZPart") = ObjTZPart
	End Property
	
	'@override
	'@param:
	' strTimePart: format is 'Thhmmss[,s][TZ]'
	Function ProcessOfISO(Byval strTimePart As String) As Integer
		On Error Goto ErrorHandle
		
		Dim strTZPart As String
		Dim index As Integer
		
		Set Me.objTZPart = New ISO8601BaseTimeZonePart
		
		If strTimePart = "" Then Goto ExitTag
		
		'time zone
		If strTimePart Like "*[+-]*" Then
			
			index = Instr(strTimePart, "+")
			If index = 0 Then index = Instr(strTimePart, "-")
			strTZPart = Mid(strTimePart, index)
			strTimePart = Left(strTimePart, index-1)
			
			If Me.objTZPart.BuildOfIso(strTZPart) = FUNCTIONFAILURE Then
				Error USERERR, Error()
			End If
			
		End If
		
		'decilam
		index = Instr(strTimePart, ",")
		If index &lt;&gt; 0 Then
			strDecimal = Mid(strTimePart, index+1)
			strTimePart = Left(strTimePart, index-1)
		End If
		
		strTimePart = Mid(strTimePart, 2)
		Me.strHour = Left(strTimePart, 2)
		strTimePart = Mid(strTimePart, 3)
		Me.strMinute = Left(strTimePart, 2)
		strTimePart = Mid(strTimePart, 3)
		Me.strSec = strTimePart
		
ExitTag: Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		ProcessOfIso = FUNCTIONFAILURE
		Resume ExitTag
	End Function
	
	Function GetTimeValue() As Variant
		On Error Goto ErrorHandle
		
		GetTimeValue = Timenumber(Me.HourNum, Me.MinuteNum, Me.SecondNum)
		
ExitTag: Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
	End Function
	
	'@return: text of hour
	Property Get HourText As String
		HourText = Me.strHour
	End Property
	'@return: number of hour
	Property Get HourNum As Integer
		HourNum = Cint(Me.HourText)
	End Property
	
	'@return: text of minute
	Property Get MinuteText As String
		MinuteText = Me.strMinute
	End Property
	'@return: number of minute
	Property Get MinuteNum As Integer
		MinuteNum = Cint(Me.MinuteText)
	End Property
	
	'@return: text of second
	Property Get SecondText As String
		SecondText = Me.strSec
	End Property
	Property Get SecondNum As Integer
		SecondNum = Cint(Me.SecondText)
	End Property
	
	'@return: text of decimal (milli second)
	Property Get DecimalText As String
		DecimalText = Me.strDecimal
	End Property
	'@return: number of decimal
	Property Get DecimalNum As String
		DecimalNum = Cint(Me.DecimalText)
	End Property
	
	Property Get TimeZonePart As ISO8601BaseTimeZonePart
		Set TimeZonePart = Me.objTZPart
	End Property
	
End Class

Class ISO8601BaseTimeZonePart As ISO8601AnyPart
	
	Private Property Get StrMark As String
		StrMark = Me.Members("StrMark")
	End Property
	Private Property Set StrMark As String
		Me.Members("StrMark") = StrMark
	End Property
	
	Private Property Get StrHour As String
		StrHour = Me.Members("StrHour")
	End Property
	Private Property Set StrHour As String
		Me.Members("StrHour") = StrHour
	End Property
	
	Private Property Get StrMinute As String
		StrMinute = Me.Members("StrMinute")
	End Property
	Private Property Set StrMinute As String
		Me.Members("StrMinute") = StrMinute
	End Property
	
	'@override
	' strTZPart: format is '+(-)h[h[mm]]'
	Function ProcessOfISO(Byval strTZPart As String) As Integer
		On Error Goto ErrorHandle
		Dim length As Integer
		
		If strTZPart = "" Then Goto ExitTag
		
		strMark = Left(strTZPart, 1)
		strTZPart = Mid(strTZPart, 2)
		
		length = Len(strTZPart)
		Select Case length
		Case 4, 3 '[h]hmm
			strHour = Left(strTZPart, length-2)
			strMinute = Right(strTZPart, 2)
		Case 2, 1 '[h]h
			strHour = strTZPart
			strMinute = ""
		End Select
		
ExitTag: Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		ProcessOfIso = FUNCTIONFAILURE
		Goto ExitTag
	End Function
	
	'@return: text of mark
	Property Get MarkText As String
		MarkText = Me.strMark
	End Property
	
	'@return: text of hour
	Property Get HourText As String
		HourText = Me.strHour
	End Property
	'@return: number of hour
	Property Get HourNum As Integer
		HourNum = Cint(Me.HourText)
	End Property
	
	'@return: text of minute
	Property Get MinuteText As String
		MinuteText = Me.strMinute
	End Property
	'@return: number of minute
	Property Get MinuteNum As Integer
		Dim strM As String
		strM = Me.MinuteText
		If strM = "" Then strM="0"		
		MinuteNum = Cint(strM)
	End Property
	
End Class
</lotusscript></code><code event='initialize'><lotusscript>Sub Initialize
	Call SetProcess("*SL - ISOLib")
End Sub

</lotusscript></code><code event='ConvISO8601Base'><lotusscript>Function ConvISO8601Base(objDT As NotesDateTime) As String
'***********************************************************************************
'NotesDateTime形式で示される日付/時刻形式をISO8601 基本形式のテキスト文字列に変換する
'@param
'	objDT: NotesDateTimeオブジェクト
'@return
'	ISO8601 基本形式で示される 日付, 時刻, 日付/時刻テキスト
'***********************************************************************************
	On Error Goto ErrorHandle
	
	Dim objISO8601b As New ISO8601Base
	
	Call objISO8601b.Build(objDT)
	
	ConvISO8601Base = objISO8601b.PartText
	
ExitTag: Exit Function
ErrorHandle:
	Call SetErrorObject(Err, Error)
	Error Err, Error
End Function

</lotusscript></code><code event='ConvDateTime'><lotusscript>Function ConvDateTime(strISO8601 As Variant) As NotesDateTime
'***********************************************************************************
'ISO8601 基本形式で示される日付/時刻形式のテキスト文字列をNotesDateTime形式に変換する
'@param
'	strISO8601: ISO8601 基本形式で示される 日付, 時刻, 日付/時刻テキスト
'	書式:
'		日付: YYYYMMDD
'		時刻: Thhmmss[,s] (小数部の区切りは , ｶﾝﾏ. 桁数の制限は無し)
'		tiem zone: +(-)[h]h[mm] ([ ]内は省略可能)
'		日付/時刻(フル): YYYYMMDDThhmmss[,s]+(-)[h]h[mm]
'@return
'	ロケールのTimeZoneが指定されたNotesDateTimeオブジェクト
'***********************************************************************************
	On Error Goto ErrorHandle
	
	Dim objISO8601b As New ISO8601Base
	
	Call objISO8601b.Build(strISO8601)
	
	Set ConvDateTime = objISO8601b.DateTime
	
ExitTag: Exit Function
ErrorHandle:
	Call SetErrorObject(Err, Error)
	Error Err, Error
End Function
</lotusscript></code>
<item name='$POID'><datetime>20141218T223716,22+09</datetime></item></scriptlibrary>

<agentdata>
<noteinfo noteid='2aea' unid='A00729B5B13DF48449257EA800075508' sequence='1'>
<created><datetime>20150821T102005,20+09</datetime></created>
<modified><datetime>20150821T102005,21+09</datetime></modified>
<revised><datetime>20150821T102005,20+09</datetime></revised>
<lastaccessed><datetime>20150821T102005,21+09</datetime></lastaccessed>
<addedtofile><datetime>20150821T102005,21+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=System Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='2af2' unid='EEE9946E26BE0A6A49257EA80007A691' sequence='1'>
<created><datetime>20150821T102333,93+09</datetime></created>
<modified><datetime>20150821T102333,95+09</datetime></modified>
<revised><datetime>20150821T102333,94+09</datetime></revised>
<lastaccessed><datetime>20150821T102333,95+09</datetime></lastaccessed>
<addedtofile><datetime>20150821T102333,95+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=System Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='2afa' unid='3D9E7C233C55D3EA49257EA800084AEC' sequence='1'>
<created><datetime>20150821T103034,68+09</datetime></created>
<modified><datetime>20150821T103034,69+09</datetime></modified>
<revised><datetime>20150821T103034,68+09</datetime></revised>
<lastaccessed><datetime>20150821T103034,69+09</datetime></lastaccessed>
<addedtofile><datetime>20150821T103034,69+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=System Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='2b06' unid='DE5CE4527FEAA89049257EA80008799C' sequence='1'>
<created><datetime>20150821T103234,20+09</datetime></created>
<modified><datetime>20150821T103234,21+09</datetime></modified>
<revised><datetime>20150821T103234,20+09</datetime></revised>
<lastaccessed><datetime>20150821T103234,21+09</datetime></lastaccessed>
<addedtofile><datetime>20150821T103234,21+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=System Administrator/O=Comture</name></updatedby></agentdata>

<agent name='(設計をXMLで出力)' alias='OutputDesignForXML' hide='v3' publicaccess='false'
 designerversion='8.5.3'>
<noteinfo noteid='2b0e' unid='26BDBFDBDE2F4FD649257EA8000C4436' sequence='97'>
<created><datetime>20150821T111358,94+09</datetime></created>
<modified><datetime>20181031T100052,85+09</datetime></modified>
<revised><datetime>20181031T100052,84+09</datetime></revised>
<lastaccessed><datetime>20181031T100052,85+09</datetime></lastaccessed>
<addedtofile><datetime>20150821T111358,97+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby>
<wassignedby><name>CN=Administrator/O=Comture</name></wassignedby>
<designchange><datetime>20181031T100052,82+09</datetime></designchange>
<trigger type='actionsmenu'/>
<documentset type='selected'/><code event='options'><lotusscript>Option Public
Option Declare
Use "NotesUICommonLib"
Use "ToolsLib"
Use "NotesDXLLib"

</lotusscript></code><code event='initialize'><lotusscript>Sub Initialize
	Call SetProcess("*AG - エージェントのプロパティ")
	Call Main()
End Sub

</lotusscript></code><code event='OutputXML'><lotusscript>Function OutputXML(notes As NotesNoteCollection, stream As IOStreamEX) As Integer
	On Error GoTo ErrorHandle
	
	Dim s As NotesStream
	Dim objDXL As New CNotesDesignDXL
	
	Set s = stream.Stream
	
	Call objDXL.ExportDXL(notes, s)
	
	Set stream.Stream = s
	
	Exit Function
ErrorHandle:
	Call SetErrorObject(Err, Error)
	OutputXML = FUNCTIONFAILURE
	Exit Function
End Function

</lotusscript></code><code event='Main'><lotusscript>Sub Main()
	On Error GoTo ErrorHandle
	
	Dim session As New NotesSession
	Dim workSpace As New NotesUIWorkspace
	Dim uiView As NotesUIView
	Dim curDB As NotesDatabase
	Dim unpro As NotesDocumentCollection
	Dim doc As NotesDocument
	
	Set curDB = session.CurrentDatabase
	Set uiView = workSpace.CurrentView
	If Not uiView Is Nothing Then
		Set unpro = uiView.Documents
		If unpro.Count = 0 Then Set unpro = Nothing
	End If
	
	If unpro Is Nothing Then Set unpro = curDB.UnprocessedDocuments
	
	If unpro.Count = 0 Then
		Call Messagebox_Alert("データベースを選択してください", "")
		Exit Sub
	End If
	
	Dim aryKindList() As String
	Dim varSelectKind As Variant
	
	ReDim aryKindList(15)
	aryKindList(0) = "全て"
	aryKindList(1) = "フォーム"
	aryKindList(2) = "ビュー"
	aryKindList(3) = "フォルダ"
	aryKindList(4) = "フレームセット"
	aryKindList(5) = "ページ"
	aryKindList(6) = "サブフォーム"
	aryKindList(7) = "共有フィールド"
	aryKindList(8) = "共有列[未対応]"
	aryKindList(9) = "アウトライン"
	aryKindList(10) = "エージェント[全て]"
	aryKindList(11) = "エージェント[スケジュールのみ]"
	aryKindList(12) = "エージェント[スケジュール以外]"
	aryKindList(13) = "共有アクション"
	aryKindList(14) = "スクリプトライブラリ"
	aryKindList(15) = "データベーススクリプト"
	
	varSelectKind = workSpace.Prompt(PROMPT_OKCANCELLIST , "出力設計の選択", "出力する設計の種類を選択してください", "全て", aryKindList)
	If IsEmpty(varSelectKind) Then
		Exit Sub
	End If
	
	Dim stream As IOStreamEX
	Dim defDir As String
	Dim defFileName As String
	Dim filePath As Variant
	
	Set doc = unpro.GetFirstDocument()
	
	If doc.Getitemvalue("DbTitle")(0) &lt;&gt; "" Then
		defFileName = "[" &amp; doc.Getitemvalue("DbTitle")(0) &amp; "]"
	End If
	defFileName = defFileName &amp; "_" &amp; varSelectKind &amp; ".xml"
	
	defDir = GetEnviron("USERPROFILE") &amp; "\Desktop"
	
	Do
		filePath = workSpace.Savefiledialog(False, "XMLファイル選択", "XMLファイル|*.xml", defDir, defFileName)
		If IsEmpty(filePath) Then
			Exit Sub
		Else
			Exit Do
		End If
	Loop
	
	Dim targetDB As NotesDatabase
	Dim notes As NotesNoteCollection
	
	Set doc = unpro.GetFirstDocument()
	
	Do Until doc Is Nothing
		
		Set targetDB = New NotesDatabase(doc.DbServer(0), doc.DbFilePath(0))
		If targetDB.Isopen = True Then
			
			Set notes = targetDB.CreateNoteCollection(False)
			
			Select Case varSelectKind
			Case "全て": notes.SelectAllDesignElements(True)
			Case "フォーム":notes.SelectForms = True
			Case "ビュー":notes.SelectViews = True
			Case "フォルダ":notes.SelectFolders = True
			Case "フレームセット":notes.SelectFrameSets = True
			Case "ページ":notes.SelectPages = True
			Case "サブフォーム":notes.SelectSubForms = True
			Case "共有フィールド":notes.SelectSharedFields = True
			'Case "共有列":notes.SelectForms = True
			Case "アウトライン":notes.SelectOutlines = True
			Case "エージェント[全て]":notes.SelectAgents = True
			Case "エージェント[スケジュールのみ]"
				notes.SelectAgents = True
				notes.SelectionFormula = |$AssistTrigger="1"|
			Case "エージェント[スケジュール以外]"
				notes.SelectAgents = True
				notes.SelectionFormula = |$AssistTrigger!="1"|
			Case "共有アクション":notes.SelectActions = True
			Case "スクリプトライブラリ":notes.SelectScriptLibraries = True
			Case "データベーススクリプト":notes.SelectDatabaseScript = True
			End Select
			
			
			Call notes.BuildCollection()
			
			Set stream = New IOStreamEX
			Call stream.OpenStream(CStr(filePath(0)), "UTF-8")
			Call stream.Stream.Truncate()
			
			Call OutputXML(notes, stream)
			
			Call stream.CloseStream()
			
		End If
		
		Exit Do
	Loop
	
ExitTag:
	Exit Sub
ErrorHandle:
	Call SetErrorObject(Err, Error)
	Call Messagebox_Error(GetErrorMessage(), "")
	GoTo ExitTag
End Sub</lotusscript></code>
<rundata processeddocs='0' exitcode='0' agentdata='8AC3E670DFEF9BC74925840F002259DA'>
<agentmodified><datetime>20181031T100052,85+09</datetime></agentmodified>
<agentrun><datetime>20190605T091451,74+09</datetime></agentrun>
<runlog>エージェント (設計をXMLで出力)|OutputDesignForXML の 2019/06/05 09:14:48 での実行が開始しました。
選択文書で実行します。 合計 1
1 文書が検索条件に一致しました。
LotusScript を実行しました
エージェント (設計をXMLで出力)|OutputDesignForXML の実行が終了しました。(2019/06/05 09:14:51)
</runlog></rundata></agent>

<agentdata>
<noteinfo noteid='2b62' unid='09725B76044F08E949257EA800100187' sequence='1'>
<created><datetime>20150821T115449,67+09</datetime></created>
<modified><datetime>20150821T115449,68+09</datetime></modified>
<revised><datetime>20150821T115449,67+09</datetime></revised>
<lastaccessed><datetime>20150821T115449,68+09</datetime></lastaccessed>
<addedtofile><datetime>20150821T115449,68+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=System Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='2b6a' unid='B68D781BD0502C7449257EA800100E24' sequence='1'>
<created><datetime>20150821T115521,96+09</datetime></created>
<modified><datetime>20150821T115521,97+09</datetime></modified>
<revised><datetime>20150821T115521,96+09</datetime></revised>
<lastaccessed><datetime>20150821T115521,97+09</datetime></lastaccessed>
<addedtofile><datetime>20150821T115521,97+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=System Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='2b72' unid='8C1409373DD85C7949257EA80015D055' sequence='1'>
<created><datetime>20150821T125815,89+09</datetime></created>
<modified><datetime>20150821T125815,92+09</datetime></modified>
<revised><datetime>20150821T125815,91+09</datetime></revised>
<lastaccessed><datetime>20150821T125815,92+09</datetime></lastaccessed>
<addedtofile><datetime>20150821T125815,92+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=System Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='2b7a' unid='1817411111D8FBDA49257EA80015F749' sequence='1'>
<created><datetime>20150821T125955,61+09</datetime></created>
<modified><datetime>20150821T125955,62+09</datetime></modified>
<revised><datetime>20150821T125955,61+09</datetime></revised>
<lastaccessed><datetime>20150821T125955,62+09</datetime></lastaccessed>
<addedtofile><datetime>20150821T125955,62+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=System Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='2b82' unid='5B3AC8301CD9B41D49257EA800165A98' sequence='1'>
<created><datetime>20150821T130409,84+09</datetime></created>
<modified><datetime>20150821T130409,86+09</datetime></modified>
<revised><datetime>20150821T130409,85+09</datetime></revised>
<lastaccessed><datetime>20150821T130409,86+09</datetime></lastaccessed>
<addedtofile><datetime>20150821T130409,86+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=System Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='2c62' unid='381610E1BB88DE4C49257EA8001EA332' sequence='1'>
<created><datetime>20150821T143438,58+09</datetime></created>
<modified><datetime>20150821T143438,59+09</datetime></modified>
<revised><datetime>20150821T143438,58+09</datetime></revised>
<lastaccessed><datetime>20150821T143438,59+09</datetime></lastaccessed>
<addedtofile><datetime>20150821T143438,59+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=System Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='2c6a' unid='53D06810B283D20A49257EA8001EC698' sequence='1'>
<created><datetime>20150821T143609,20+09</datetime></created>
<modified><datetime>20150821T143609,21+09</datetime></modified>
<revised><datetime>20150821T143609,20+09</datetime></revised>
<lastaccessed><datetime>20150821T143609,21+09</datetime></lastaccessed>
<addedtofile><datetime>20150821T143609,21+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=System Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='2c72' unid='DAA4AFE1CA400D0B49257EA8001EE45D' sequence='1'>
<created><datetime>20150821T143725,41+09</datetime></created>
<modified><datetime>20150821T143725,42+09</datetime></modified>
<revised><datetime>20150821T143725,41+09</datetime></revised>
<lastaccessed><datetime>20150821T143725,42+09</datetime></lastaccessed>
<addedtofile><datetime>20150821T143725,42+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=System Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='2c7a' unid='A4BC6A9DED4AE96549257EA8001F05D8' sequence='1'>
<created><datetime>20150821T143851,12+09</datetime></created>
<modified><datetime>20150821T143851,14+09</datetime></modified>
<revised><datetime>20150821T143851,13+09</datetime></revised>
<lastaccessed><datetime>20150821T143851,14+09</datetime></lastaccessed>
<addedtofile><datetime>20150821T143851,14+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=System Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='2c82' unid='4433EDA8624BCD1549257EA8001F0EEF' sequence='1'>
<created><datetime>20150821T143914,39+09</datetime></created>
<modified><datetime>20150821T143914,40+09</datetime></modified>
<revised><datetime>20150821T143914,39+09</datetime></revised>
<lastaccessed><datetime>20150821T143914,40+09</datetime></lastaccessed>
<addedtofile><datetime>20150821T143914,40+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=System Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='2c8e' unid='6300166FFF73B69349257EA800225F38' sequence='1'>
<created><datetime>20150821T151526,00+09</datetime></created>
<modified><datetime>20150821T151526,01+09</datetime></modified>
<revised><datetime>20150821T151526,00+09</datetime></revised>
<lastaccessed><datetime>20150821T151526,01+09</datetime></lastaccessed>
<addedtofile><datetime>20150821T151526,01+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=System Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='2ca2' unid='B552C8FD9682668749257EA80022CF0C' sequence='1'>
<created><datetime>20150821T152012,28+09</datetime></created>
<modified><datetime>20150821T152012,29+09</datetime></modified>
<revised><datetime>20150821T152012,28+09</datetime></revised>
<lastaccessed><datetime>20150821T152012,29+09</datetime></lastaccessed>
<addedtofile><datetime>20150821T152012,29+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=System Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='2cb6' unid='1A79BE86261CB69D49257EA80023AE30' sequence='1'>
<created><datetime>20150821T152943,52+09</datetime></created>
<modified><datetime>20150821T152943,54+09</datetime></modified>
<revised><datetime>20150821T152943,53+09</datetime></revised>
<lastaccessed><datetime>20150821T152943,54+09</datetime></lastaccessed>
<addedtofile><datetime>20150821T152943,54+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=System Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='2cbe' unid='2483788890718FAC49257EA80023D8F8' sequence='1'>
<created><datetime>20150821T153133,04+09</datetime></created>
<modified><datetime>20150821T153133,05+09</datetime></modified>
<revised><datetime>20150821T153133,04+09</datetime></revised>
<lastaccessed><datetime>20150821T153133,05+09</datetime></lastaccessed>
<addedtofile><datetime>20150821T153133,05+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=System Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='2cca' unid='0AE971105CAC8A0949257EA800242613' sequence='1'>
<created><datetime>20150821T153450,43+09</datetime></created>
<modified><datetime>20150821T153450,44+09</datetime></modified>
<revised><datetime>20150821T153450,43+09</datetime></revised>
<lastaccessed><datetime>20150821T153450,44+09</datetime></lastaccessed>
<addedtofile><datetime>20150821T153450,44+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=System Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='2cd2' unid='286DEEDB9877B28449257EA800249808' sequence='1'>
<created><datetime>20150821T153942,16+09</datetime></created>
<modified><datetime>20150821T153942,17+09</datetime></modified>
<revised><datetime>20150821T153942,16+09</datetime></revised>
<lastaccessed><datetime>20150821T153942,17+09</datetime></lastaccessed>
<addedtofile><datetime>20150821T153942,17+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=System Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='2ffa' unid='4E0CE08B22EBEBA349257EAB0015737B' sequence='1'>
<created><datetime>20150824T125418,19+09</datetime></created>
<modified><datetime>20150824T125418,20+09</datetime></modified>
<revised><datetime>20150824T125418,19+09</datetime></revised>
<lastaccessed><datetime>20150824T125418,20+09</datetime></lastaccessed>
<addedtofile><datetime>20150824T125418,20+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=System Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='3002' unid='19BEEFCE606A9E0D49257EAB00157E60' sequence='1'>
<created><datetime>20150824T125446,08+09</datetime></created>
<modified><datetime>20150824T125446,09+09</datetime></modified>
<revised><datetime>20150824T125446,08+09</datetime></revised>
<lastaccessed><datetime>20150824T125446,09+09</datetime></lastaccessed>
<addedtofile><datetime>20150824T125446,09+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=System Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='300e' unid='8B04B45D46F5680749257EAB0015B8DA' sequence='1'>
<created><datetime>20150824T125715,78+09</datetime></created>
<modified><datetime>20150824T125715,79+09</datetime></modified>
<revised><datetime>20150824T125715,78+09</datetime></revised>
<lastaccessed><datetime>20150824T125715,79+09</datetime></lastaccessed>
<addedtofile><datetime>20150824T125715,79+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=System Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='3022' unid='74CE8D9E3017D8B949257EAB001672FC' sequence='1'>
<created><datetime>20150824T130512,28+09</datetime></created>
<modified><datetime>20150824T130512,29+09</datetime></modified>
<revised><datetime>20150824T130512,28+09</datetime></revised>
<lastaccessed><datetime>20150824T130512,29+09</datetime></lastaccessed>
<addedtofile><datetime>20150824T130512,29+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=System Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='3036' unid='DBD27C5F71F364EB49257EAB00195866' sequence='1'>
<created><datetime>20150824T133650,30+09</datetime></created>
<modified><datetime>20150824T133650,31+09</datetime></modified>
<revised><datetime>20150824T133650,30+09</datetime></revised>
<lastaccessed><datetime>20150824T133650,31+09</datetime></lastaccessed>
<addedtofile><datetime>20150824T133650,31+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=System Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='3046' unid='D6E2B53075A4133D49257EAB0019A993' sequence='1'>
<created><datetime>20150824T134018,11+09</datetime></created>
<modified><datetime>20150824T134018,12+09</datetime></modified>
<revised><datetime>20150824T134018,11+09</datetime></revised>
<lastaccessed><datetime>20150824T134018,12+09</datetime></lastaccessed>
<addedtofile><datetime>20150824T134018,12+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=System Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='304e' unid='6DECDC89C513392C49257EAB0019D99B' sequence='1'>
<created><datetime>20150824T134221,07+09</datetime></created>
<modified><datetime>20150824T134221,08+09</datetime></modified>
<revised><datetime>20150824T134221,07+09</datetime></revised>
<lastaccessed><datetime>20150824T134221,08+09</datetime></lastaccessed>
<addedtofile><datetime>20150824T134221,08+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=System Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='3056' unid='76A2E25431F2A4A749257EAB0019E3F6' sequence='1'>
<created><datetime>20150824T134247,58+09</datetime></created>
<modified><datetime>20150824T134247,59+09</datetime></modified>
<revised><datetime>20150824T134247,58+09</datetime></revised>
<lastaccessed><datetime>20150824T134247,59+09</datetime></lastaccessed>
<addedtofile><datetime>20150824T134247,59+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=System Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='306a' unid='5A0F7DF84695AC7C49257EAB001A63C2' sequence='1'>
<created><datetime>20150824T134814,74+09</datetime></created>
<modified><datetime>20150824T134814,75+09</datetime></modified>
<revised><datetime>20150824T134814,74+09</datetime></revised>
<lastaccessed><datetime>20150824T134814,75+09</datetime></lastaccessed>
<addedtofile><datetime>20150824T134814,75+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=System Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='309e' unid='2824262EAD72F4BD49257EAB001C5594' sequence='1'>
<created><datetime>20150824T140929,16+09</datetime></created>
<modified><datetime>20150824T140929,17+09</datetime></modified>
<revised><datetime>20150824T140929,16+09</datetime></revised>
<lastaccessed><datetime>20150824T140929,17+09</datetime></lastaccessed>
<addedtofile><datetime>20150824T140929,17+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=System Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='30a6' unid='B431EF34B51BF61D49257EAB001C662A' sequence='1'>
<created><datetime>20150824T141011,62+09</datetime></created>
<modified><datetime>20150824T141011,63+09</datetime></modified>
<revised><datetime>20150824T141011,62+09</datetime></revised>
<lastaccessed><datetime>20150824T141011,63+09</datetime></lastaccessed>
<addedtofile><datetime>20150824T141011,63+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=System Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='30ca' unid='E38898E003860D9749257EAB001D0E22' sequence='1'>
<created><datetime>20150824T141721,62+09</datetime></created>
<modified><datetime>20150824T141721,63+09</datetime></modified>
<revised><datetime>20150824T141721,62+09</datetime></revised>
<lastaccessed><datetime>20150824T141721,63+09</datetime></lastaccessed>
<addedtofile><datetime>20150824T141721,63+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=System Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='30de' unid='5353AA3A5E215D1E49257EAB0020DC7D' sequence='1'>
<created><datetime>20150824T145855,97+09</datetime></created>
<modified><datetime>20150824T145856,00+09</datetime></modified>
<revised><datetime>20150824T145855,99+09</datetime></revised>
<lastaccessed><datetime>20150824T145856,00+09</datetime></lastaccessed>
<addedtofile><datetime>20150824T145856,00+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=System Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='30ee' unid='8AE232E90E9C7B8D49257EAB0021685F' sequence='1'>
<created><datetime>20150824T150454,07+09</datetime></created>
<modified><datetime>20150824T150454,08+09</datetime></modified>
<revised><datetime>20150824T150454,07+09</datetime></revised>
<lastaccessed><datetime>20150824T150454,08+09</datetime></lastaccessed>
<addedtofile><datetime>20150824T150454,08+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=System Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='30f6' unid='ACDAA432F2548EDA49257EAB0021B095' sequence='1'>
<created><datetime>20150824T150758,93+09</datetime></created>
<modified><datetime>20150824T150758,94+09</datetime></modified>
<revised><datetime>20150824T150758,93+09</datetime></revised>
<lastaccessed><datetime>20150824T150758,94+09</datetime></lastaccessed>
<addedtofile><datetime>20150824T150758,94+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=System Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='30fe' unid='D58983797B431F7949257EAB0021D264' sequence='1'>
<created><datetime>20150824T150925,48+09</datetime></created>
<modified><datetime>20150824T150925,49+09</datetime></modified>
<revised><datetime>20150824T150925,48+09</datetime></revised>
<lastaccessed><datetime>20150824T150925,49+09</datetime></lastaccessed>
<addedtofile><datetime>20150824T150925,49+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=System Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='310a' unid='7A023EB7C7FC5D2A49257EAB002292CC' sequence='1'>
<created><datetime>20150824T151738,04+09</datetime></created>
<modified><datetime>20150824T151738,05+09</datetime></modified>
<revised><datetime>20150824T151738,04+09</datetime></revised>
<lastaccessed><datetime>20150824T151738,05+09</datetime></lastaccessed>
<addedtofile><datetime>20150824T151738,05+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=System Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='3112' unid='1A7A6BB3E0298BB449257EAB0022C0E5' sequence='1'>
<created><datetime>20150824T151936,05+09</datetime></created>
<modified><datetime>20150824T151936,06+09</datetime></modified>
<revised><datetime>20150824T151936,05+09</datetime></revised>
<lastaccessed><datetime>20150824T151936,06+09</datetime></lastaccessed>
<addedtofile><datetime>20150824T151936,06+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=System Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='3126' unid='06CD67EDD950365749257EAB00233B12' sequence='1'>
<created><datetime>20150824T152448,82+09</datetime></created>
<modified><datetime>20150824T152448,83+09</datetime></modified>
<revised><datetime>20150824T152448,82+09</datetime></revised>
<lastaccessed><datetime>20150824T152448,83+09</datetime></lastaccessed>
<addedtofile><datetime>20150824T152448,83+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=System Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='312e' unid='8E2DCCA221B38D4D49257EAB00237EF8' sequence='1'>
<created><datetime>20150824T152742,64+09</datetime></created>
<modified><datetime>20150824T152742,65+09</datetime></modified>
<revised><datetime>20150824T152742,64+09</datetime></revised>
<lastaccessed><datetime>20150824T152742,65+09</datetime></lastaccessed>
<addedtofile><datetime>20150824T152742,65+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=System Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='3136' unid='3D176AD69C38B41149257EAB00239856' sequence='1'>
<created><datetime>20150824T152847,58+09</datetime></created>
<modified><datetime>20150824T152847,59+09</datetime></modified>
<revised><datetime>20150824T152847,58+09</datetime></revised>
<lastaccessed><datetime>20150824T152847,59+09</datetime></lastaccessed>
<addedtofile><datetime>20150824T152847,59+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=System Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='313e' unid='8FB1EC7199A617AA49257EAB0023B1F3' sequence='1'>
<created><datetime>20150824T152953,15+09</datetime></created>
<modified><datetime>20150824T152953,16+09</datetime></modified>
<revised><datetime>20150824T152953,15+09</datetime></revised>
<lastaccessed><datetime>20150824T152953,16+09</datetime></lastaccessed>
<addedtofile><datetime>20150824T152953,16+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=System Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='3146' unid='F8B4AB332EC1840449257EAB0023F59A' sequence='1'>
<created><datetime>20150824T153246,34+09</datetime></created>
<modified><datetime>20150824T153246,35+09</datetime></modified>
<revised><datetime>20150824T153246,34+09</datetime></revised>
<lastaccessed><datetime>20150824T153246,35+09</datetime></lastaccessed>
<addedtofile><datetime>20150824T153246,35+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=System Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='3152' unid='201B0C04BBA1F8F549257EAB0024292B' sequence='1'>
<created><datetime>20150824T153458,35+09</datetime></created>
<modified><datetime>20150824T153458,36+09</datetime></modified>
<revised><datetime>20150824T153458,35+09</datetime></revised>
<lastaccessed><datetime>20150824T153458,36+09</datetime></lastaccessed>
<addedtofile><datetime>20150824T153458,36+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=System Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='316a' unid='BCFF28ACAF19830449257EAB00253396' sequence='1'>
<created><datetime>20150824T154620,38+09</datetime></created>
<modified><datetime>20150824T154620,39+09</datetime></modified>
<revised><datetime>20150824T154620,38+09</datetime></revised>
<lastaccessed><datetime>20150824T154620,39+09</datetime></lastaccessed>
<addedtofile><datetime>20150824T154620,39+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=System Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='317e' unid='1A7AC8F4A863684D49257EAB0025C8F2' sequence='1'>
<created><datetime>20150824T155242,74+09</datetime></created>
<modified><datetime>20150824T155242,75+09</datetime></modified>
<revised><datetime>20150824T155242,74+09</datetime></revised>
<lastaccessed><datetime>20150824T155242,75+09</datetime></lastaccessed>
<addedtofile><datetime>20150824T155242,75+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=System Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='31a6' unid='6A3BB856136C458B49257EAB0027C1CE' sequence='1'>
<created><datetime>20150824T161415,18+09</datetime></created>
<modified><datetime>20150824T161415,19+09</datetime></modified>
<revised><datetime>20150824T161415,18+09</datetime></revised>
<lastaccessed><datetime>20150824T161415,19+09</datetime></lastaccessed>
<addedtofile><datetime>20150824T161415,19+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=System Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='31b2' unid='2B31CFD4AD92FF0149257EAB0027CF23' sequence='1'>
<created><datetime>20150824T161449,31+09</datetime></created>
<modified><datetime>20150824T161449,33+09</datetime></modified>
<revised><datetime>20150824T161449,32+09</datetime></revised>
<lastaccessed><datetime>20150824T161449,33+09</datetime></lastaccessed>
<addedtofile><datetime>20150824T161449,33+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=System Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='31ba' unid='94133EE4845ED50A49257EAB0027E064' sequence='1'>
<created><datetime>20150824T161533,48+09</datetime></created>
<modified><datetime>20150824T161533,50+09</datetime></modified>
<revised><datetime>20150824T161533,49+09</datetime></revised>
<lastaccessed><datetime>20150824T161533,50+09</datetime></lastaccessed>
<addedtofile><datetime>20150824T161533,50+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=System Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='31c2' unid='9536408D3697B7EF49257EAB0027E7AF' sequence='1'>
<created><datetime>20150824T161552,15+09</datetime></created>
<modified><datetime>20150824T161552,16+09</datetime></modified>
<revised><datetime>20150824T161552,15+09</datetime></revised>
<lastaccessed><datetime>20150824T161552,16+09</datetime></lastaccessed>
<addedtofile><datetime>20150824T161552,16+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=System Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='31ca' unid='1A1D04FC16CB0BC249257EAB0027F798' sequence='1'>
<created><datetime>20150824T161632,88+09</datetime></created>
<modified><datetime>20150824T161632,89+09</datetime></modified>
<revised><datetime>20150824T161632,88+09</datetime></revised>
<lastaccessed><datetime>20150824T161632,89+09</datetime></lastaccessed>
<addedtofile><datetime>20150824T161632,89+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=System Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='31de' unid='1BF1ED2E01229A9049257EAB0028E576' sequence='1'>
<created><datetime>20150824T162641,82+09</datetime></created>
<modified><datetime>20150824T162641,84+09</datetime></modified>
<revised><datetime>20150824T162641,83+09</datetime></revised>
<lastaccessed><datetime>20150824T162641,84+09</datetime></lastaccessed>
<addedtofile><datetime>20150824T162641,84+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=System Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='31e6' unid='A7A1EBF9E3B3239649257EAB002921A1' sequence='1'>
<created><datetime>20150824T162915,85+09</datetime></created>
<modified><datetime>20150824T162915,86+09</datetime></modified>
<revised><datetime>20150824T162915,85+09</datetime></revised>
<lastaccessed><datetime>20150824T162915,86+09</datetime></lastaccessed>
<addedtofile><datetime>20150824T162915,86+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=System Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='3216' unid='EFC3E8BD63A00F6449257EAB0029C0B4' sequence='1'>
<created><datetime>20150824T163603,08+09</datetime></created>
<modified><datetime>20150824T163603,09+09</datetime></modified>
<revised><datetime>20150824T163603,08+09</datetime></revised>
<lastaccessed><datetime>20150824T163603,09+09</datetime></lastaccessed>
<addedtofile><datetime>20150824T163603,09+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=System Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='323a' unid='6B9383B048A4701449257EAB002BA5FB' sequence='1'>
<created><datetime>20150824T165645,39+09</datetime></created>
<modified><datetime>20150824T165645,40+09</datetime></modified>
<revised><datetime>20150824T165645,39+09</datetime></revised>
<lastaccessed><datetime>20150824T165645,40+09</datetime></lastaccessed>
<addedtofile><datetime>20150824T165645,40+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=System Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='3242' unid='198FA5AE1337F15C49257EAB002BEF98' sequence='1'>
<created><datetime>20150824T165953,84+09</datetime></created>
<modified><datetime>20150824T165953,85+09</datetime></modified>
<revised><datetime>20150824T165953,84+09</datetime></revised>
<lastaccessed><datetime>20150824T165953,85+09</datetime></lastaccessed>
<addedtofile><datetime>20150824T165953,85+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=System Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='325a' unid='24643C8C084A054049257EAB002C4161' sequence='1'>
<created><datetime>20150824T170323,21+09</datetime></created>
<modified><datetime>20150824T170323,22+09</datetime></modified>
<revised><datetime>20150824T170323,21+09</datetime></revised>
<lastaccessed><datetime>20150824T170323,22+09</datetime></lastaccessed>
<addedtofile><datetime>20150824T170323,22+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=System Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='3262' unid='4AA6BDF1F5035ED749257EAB002CAA12' sequence='1'>
<created><datetime>20150824T170751,22+09</datetime></created>
<modified><datetime>20150824T170751,23+09</datetime></modified>
<revised><datetime>20150824T170751,22+09</datetime></revised>
<lastaccessed><datetime>20150824T170751,23+09</datetime></lastaccessed>
<addedtofile><datetime>20150824T170751,23+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=System Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='3276' unid='DAAFFA6D0E663A8B49257EAB002D4615' sequence='1'>
<created><datetime>20150824T171430,61+09</datetime></created>
<modified><datetime>20150824T171430,63+09</datetime></modified>
<revised><datetime>20150824T171430,62+09</datetime></revised>
<lastaccessed><datetime>20150824T171430,63+09</datetime></lastaccessed>
<addedtofile><datetime>20150824T171430,63+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=System Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='32ae' unid='DE01EE362994A73D49257EAB0032F010' sequence='1'>
<created><datetime>20150824T181622,56+09</datetime></created>
<modified><datetime>20150824T181622,57+09</datetime></modified>
<revised><datetime>20150824T181622,56+09</datetime></revised>
<lastaccessed><datetime>20150824T181622,57+09</datetime></lastaccessed>
<addedtofile><datetime>20150824T181622,57+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=System Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='32de' unid='25841FEB68E8507B49257EAB0036B98C' sequence='1'>
<created><datetime>20150824T185744,44+09</datetime></created>
<modified><datetime>20150824T185744,45+09</datetime></modified>
<revised><datetime>20150824T185744,44+09</datetime></revised>
<lastaccessed><datetime>20150824T185744,45+09</datetime></lastaccessed>
<addedtofile><datetime>20150824T185744,45+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=System Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='3362' unid='F6205E219FCE357D49257EAC000B66A6' sequence='1'>
<created><datetime>20150825T110431,74+09</datetime></created>
<modified><datetime>20150825T110431,75+09</datetime></modified>
<revised><datetime>20150825T110431,74+09</datetime></revised>
<lastaccessed><datetime>20150825T110431,75+09</datetime></lastaccessed>
<addedtofile><datetime>20150825T110431,75+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=System Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='336a' unid='00BE850B4A6B67F849257EAC000BE66B' sequence='1'>
<created><datetime>20150825T110958,83+09</datetime></created>
<modified><datetime>20150825T110958,84+09</datetime></modified>
<revised><datetime>20150825T110958,83+09</datetime></revised>
<lastaccessed><datetime>20150825T110958,84+09</datetime></lastaccessed>
<addedtofile><datetime>20150825T110958,84+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=System Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='337e' unid='72D679952F132C8449257EAC000EBE84' sequence='1'>
<created><datetime>20150825T114102,76+09</datetime></created>
<modified><datetime>20150825T114102,77+09</datetime></modified>
<revised><datetime>20150825T114102,76+09</datetime></revised>
<lastaccessed><datetime>20150825T114102,77+09</datetime></lastaccessed>
<addedtofile><datetime>20150825T114102,77+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=System Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='3386' unid='1C4E2E6F8635B90D49257EAC000EF46C' sequence='1'>
<created><datetime>20150825T114320,76+09</datetime></created>
<modified><datetime>20150825T114320,77+09</datetime></modified>
<revised><datetime>20150825T114320,76+09</datetime></revised>
<lastaccessed><datetime>20150825T114320,77+09</datetime></lastaccessed>
<addedtofile><datetime>20150825T114320,77+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=System Administrator/O=Comture</name></updatedby></agentdata>

<scriptlibrary name='ErrorLib' hide='v3 v4strict'>
<noteinfo noteid='338a' unid='47DC00A98A6495FC49257EAC0015466A' sequence='19'>
<created><datetime>20150825T125222,82+09</datetime></created>
<modified><datetime>20181031T100050,92+09</datetime></modified>
<revised><datetime>20181031T100050,91+09</datetime></revised>
<lastaccessed><datetime>20181031T100050,92+09</datetime></lastaccessed>
<addedtofile><datetime>20150825T125222,83+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby>
<wassignedby><name>CN=Administrator/O=Comture</name></wassignedby><code event='options'><lotusscript
>Option Explicit
Option Public
Option Base 0
Use "ProcessLib"

</lotusscript></code><code event='declarations'><lotusscript>'ErrorLib: 


'エラーオブジェクトの宣言
Dim ErrorObject As CError

'ユーザ定義エラーコード
Const USERERR = 10000

'関数の評価結果
Const FUNCTIONSUCCESS = 0
Const FUNCTIONFAILURE = -1

'ユーザカスタムエラー
Dim USERERRAFLG As Variant
Dim USERERRAREA As String

'クライアントタイプ
Const CLIENTTYPE_NOTES$ = "Notes"
Const CLIENTTYPE_WEB$ = "Web"
Const CLIENTTYPE_NONE$ = "None"



' エラークラス
'
'  アプリケーションエラーの追加はmakeErrorStringに記述する
'
Class CError
	errorCode As Integer
	errorString As String
	errorModule As String
	errorProc As String
	errorLine As Integer
	callModuleList List As String
	id As Integer
	
	' コンストラクタ
	Sub New
		errorCode = 0
		errorString = ""
		USERERRAREA = ""
		USERERRAFLG = False
	End Sub
	
	' デストラクタ
	Sub Delete
	End Sub
	
	' エラーの設定
	Function SetError(er As Integer,s As String) As Integer
		errorCode = er
		errorString = s
		SetError = 0
	End Function
	
	' エラーの取得
	Function GetErrorCode As Integer
		GetErrorCode = errorCode
	End Function
	
	' エラーメッセージの取得
	Function GetErrorString As String
		GetErrorString = errorString
	End Function
	
	' エラーオブジェクトのリセット
	Function ErrorReset As Integer
		errorCode = 0
		errorString = ""
		USERERRAREA = ""
		USERERRAFLG = False
		Erase Me.callModuleList
		Me.id=0
		ErrorReset = 0
	End Function
	
	' エラーオブジェクトのコピー
	Function Copy(obj As CError) As Integer
		Copy = obj.SetError(errorCode,errorString)
	End Function
	
	'エラーモジュールの設定
	Function SetErrorModule(em As String) As Integer
		Me.errorModule = em
	End Function
	
	'エラープロセス名の設定
	Function SetErrorProc(ep As String) As Integer
		Me.errorProc = ep
	End Function
	
	'エラーモジュール名の取得
	Function GetErrorModule() As String
		GetErrorModule = Me.errorModule
	End Function
	
	'エラープロセス名の取得
	Function GetErrorProc() As String
		GetErrorProc = Me.errorProc
	End Function
	
	Function SetErrorLine(el As Integer) As Integer
		Me.errorLine = el
	End Function
	
	Function GetErrorLine() As Integer
		GetErrorLine = Me.errorLine
	End Function
	
	Function AddCallModule(msg As String, m As String, p As String, l As String) As Integer
		Me.callModuleList(Me.id) = "[" &amp; "" &amp; "(" &amp; m &amp; ")_" &amp; p &amp; " [" &amp; l &amp; "]]"
		id=id+1
	End Function
	
	Function GetAllCallModule(sep As String) As String
		Forall x In Me.callModuleList
			GetAllCallModule = GetAllCallModule &amp; x &amp; sep
		End Forall
	End Function
	
End Class
</lotusscript></code><code event='initialize'><lotusscript>Sub Initialize
	'//CNAPv3.0 2009/07/01 (エラー処理見直し) add
	Call SetProcess("*SL - ErrorLib")
End Sub

</lotusscript></code><code event='SetErrorObjectOnClass'><lotusscript>Function SetErrorObjectOnClass(errorCode As Integer, errorString As String, obj As Variant) As Integer
	
	Dim l As Integer
	Dim mdl As String
	Dim prc As String
	
	l = Erl
	mdl = GetProcess(GetThreadInfo( CNAP_THREADINFO_CALLMODULE))
	prc = GetThreadInfo(CNAP_THREADINFO_CALLPROC)
	If Not IsEmpty(obj) Then
		prc = TypeName(obj) &amp; "." &amp; prc
	End If
	
	'エラーオブジェクトが作成されていない場合は新規作成する
	If ErrorObject Is Nothing Then
		Set ErrorObject = New CError
		Call ErrorObject.SetError(errorCode, errorString)
		'//エラーモジュールの設定 Start--
		Call ErrorObject.SetErrorLine( l )
		Call ErrorObject.SetErrorModule( mdl )
		Call ErrorObject.SetErrorProc( prc )
	End If
	
	Call ErrorObject.AddCallModule(errorString, mdl, prc, CStr(l))
	
End Function

</lotusscript></code><code event='ClearErrorObject'><lotusscript>Sub ClearErrorObject()
	If Not (ErrorObject Is Nothing) Then
		Delete ErrorObject
		Set ErrorObject = Nothing
	End If
End Sub

</lotusscript></code><code event='MakeErrorMessage'><lotusscript>Function MakeErrorMessage(errorCode As Integer, errorString As String) As String
%REM
	If errorCode = USERERR Then
		MakeErrorMessage = errorString
	Else
		MakeErrorMessage = Cstr(errorCode) &amp; " : " &amp; errorString
	End If
%ENDREM
	Dim mess As String
	Dim nl As String
	nl = GetNewLine()
	
	If ErrorObject Is Nothing Then
		If Err = 0 Then
			mess = ""
		Else
			Call SetErrorObject(errorCode, errorString)
			mess = MakeErrorMessage(ErrorObject.GetErrorCode(), ErrorObject.GetErrorString())
		End If
	Else
		If Not errorCode = USERERR Then mess = mess &amp; Cstr(errorCode) &amp; " : "
		mess = mess &amp; errorString
		
		mess = mess &amp; nl &amp; nl &amp;_
		"Module :  [ (" &amp; ErrorObject.GetErrorModule &amp; ")_ " &amp; ErrorObject.GetErrorProc() &amp; "]" &amp; nl &amp;_
		"Line : " &amp; ErrorObject.GetErrorLine()
		
		mess = mess &amp; nl &amp; nl &amp; ErrorObject.GetAllCallModule(nl)
	End If
	
	MakeErrorMessage = mess
	
End Function

</lotusscript></code><code event='GetErrorMessage'><lotusscript>Function GetErrorMessage() As String
	
	Dim mess As String
	Dim nl As String
	nl = GetNewLine()
	
	If ErrorObject Is Nothing Then
		If Err = 0 Then
			mess = ""
		Else
			Call SetErrorObject(Err, Error)
			mess = GetErrorMessage()
		End If
	Else
		If Not ErrorObject.GetErrorCode() = USERERR Then mess = mess &amp; Cstr(ErrorObject.GetErrorCode()) &amp; " : "
		mess = mess &amp; ErrorObject.GetErrorString()
		
		mess = mess &amp; nl &amp; nl &amp;_
		"Module :  [ (" &amp; ErrorObject.GetErrorModule &amp; ")_ " &amp; ErrorObject.GetErrorProc() &amp; "]" &amp; nl &amp;_
		"Line : " &amp; ErrorObject.GetErrorLine()
		
		mess = mess &amp; nl &amp; nl &amp; ErrorObject.GetAllCallModule(nl)
	End If
	
	GetErrorMessage = mess
	
End Function

</lotusscript></code><code event='GetNewLine'><lotusscript>Function GetNewLine() As String
'//CNAP v3.0 add --
'実行環境を判別して、改行コード（または文字列）を返す。
	On Error Goto errorhandle
	
	Dim clientType As String
	Dim newLine As String
	
	clientType = GetClientType()
	
	Select Case Ucase$(clientType)
	'ノーツクライアント or サーバーエージェント
	Case Ucase$(CLIENTTYPE_NOTES)
		newLine = Chr(13) &amp; Chr(10)
	'Webクライアント
	Case Ucase$(CLIENTTYPE_WEB)
		newLine = "\n"
	'サーバーサイドバックグラウンド
	Case Ucase$(CLIENTTYPE_NONE)
		newLine = " "
	'上記以外はとりあえず、半角スペース
	Case Else
		newLine = " "
	End Select
	
exit_tag:
	GetNewLine = newLine
	Exit Function
errorhandle:
	Goto exit_tag
End Function





</lotusscript></code><code event='SetErrorObject'><lotusscript>Sub SetErrorObject(errorCode As Integer, errorString As String)
	
	'エラーオブジェクトが作成されていない場合は新規作成する
	If ErrorObject Is Nothing Then
		Set ErrorObject = New CError
		Call ErrorObject.SetError(errorCode, errorString)
		'//エラーモジュールの設定 Start--
		Call ErrorObject.SetErrorLine(Erl())
		Call ErrorObject.SetErrorModule(GetProcess(Getthreadinfo( CNAP_THREADINFO_CALLMODULE)))
		Call ErrorObject.SetErrorProc(Getthreadinfo(CNAP_THREADINFO_CALLPROC))
		Call ErrorObject.AddCallModule(errorString, GetProcess(Getthreadinfo( CNAP_THREADINFO_CALLMODULE)), Getthreadinfo(CNAP_THREADINFO_CALLPROC), Erl)
	Else
		Call ErrorObject.AddCallModule(errorString, GetProcess(Getthreadinfo( CNAP_THREADINFO_CALLMODULE)), Getthreadinfo(CNAP_THREADINFO_CALLPROC), Erl)
	End If
	
End Sub

</lotusscript></code><code event='GetClientType'><lotusscript>Function GetClientType() As String
'//CNAP v3.0 add --
'実行環境を判別する
%REM
*Designer Help 抜粋*
クライアントの種類が Lotus Notes Client であれば「Notes」が返されます。
クライアントの種類が Web ブラウザであれば「Web」が返されます。
サーバー側のバックグラウンドエージェントで @ClientType を実行すると、常に「None」が返されます。
%END REM
	Dim s As New NotesSession
	
	If s.IsOnServer = False Then
		GetClientType = CLIENTTYPE_NOTES
		Exit Function
	ElseIf s.DocumentContext Is Nothing Then
		GetClientType = CLIENTTYPE_NONE
		Exit Function
	End If
	Dim result As Variant
	result = Evaluate(|@ClientType|, s.DocumentContext)
	GetClientType = result(0)
End Function

</lotusscript></code><code event='DeleteErrorObject'><lotusscript>Sub DeleteErrorObject()
	'CNAP v30 start --
	If ErrorObject Is Nothing Then Exit Sub
	Delete ErrorObject
End Sub
</lotusscript></code>
<item name='$POID'><datetime>20130905T114517,97+09</datetime></item></scriptlibrary>

<agentdata>
<noteinfo noteid='3392' unid='394D72DA3BC7FF2049257EAC001569F5' sequence='1'>
<created><datetime>20150825T125353,81+09</datetime></created>
<modified><datetime>20150825T125353,82+09</datetime></modified>
<revised><datetime>20150825T125353,81+09</datetime></revised>
<lastaccessed><datetime>20150825T125353,82+09</datetime></lastaccessed>
<addedtofile><datetime>20150825T125353,82+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=System Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='339a' unid='666F71536C01D23E49257EAC0015B4EE' sequence='1'>
<created><datetime>20150825T125705,74+09</datetime></created>
<modified><datetime>20150825T125705,75+09</datetime></modified>
<revised><datetime>20150825T125705,74+09</datetime></revised>
<lastaccessed><datetime>20150825T125705,75+09</datetime></lastaccessed>
<addedtofile><datetime>20150825T125705,75+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=System Administrator/O=Comture</name></updatedby></agentdata>

<scriptlibrary name='NotesDXLLib' hide='v3 v4strict' designerversion='8.5.3'>
<noteinfo noteid='3402' unid='181C223B7490329649257EAC001C68DA' sequence='2379'>
<created><datetime>20150825T141018,50+09</datetime></created>
<modified><datetime>20181031T100051,24+09</datetime></modified>
<revised><datetime>20181031T100051,23+09</datetime></revised>
<lastaccessed><datetime>20181031T100051,24+09</datetime></lastaccessed>
<addedtofile><datetime>20150825T141018,51+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby>
<wassignedby><name>CN=Administrator/O=Comture</name></wassignedby><code event='options'><lotusscript
>Option Public
Option Declare
Use "ISOLib"
Use "ObjectLib"


</lotusscript></code><code event='declarations'><lotusscript>Class CNotesDesignDXL As CObjectable
	
	'メンバ変数の初期化
	Private Sub pInitMembers()
		Set Me.DocumentNode = Nothing
		Set Me.RootNode = Nothing
	End Sub
	
	'*******************************************************
	'NotesDXLImporterによりDXLをインポートする
	'@param
	'(Variant) varIn : インプット
	'	(String):
	'	(NotesRichTextItem): NotesRichTextItem
	'	(NotesStream):NotesStream
	'	(NotesDXLImporter): input が set 済みの NotesDXLImporter
	'db :(NotesDatabase) アウトプット
	'※XML 入力または出力にファイルを使用する前に、そのファイルに関連付けられた NoteStream オブジェクトを明示的に読み書きすることはできません。
	' 例えば、ファイルに書き込んでから XML 入力にそのファイルを使用する場合、NotesStream オブジェクトをいったん閉じてから再度開く必要があります。
	Function ImportDXL(varIn As Variant, db As NotesDatabase) As Integer
		On Error GoTo ErrorHandle
		
		Dim session As New NotesSession
		Dim importer As NotesDXLImporter
		
		Dim strIn As String
		Dim rtItem As NotesRichTextItem
		Dim stream As NotesStream
		
		'input
		If UCase$(TypeName(varIn)) = UCase$("NotesDXLImporter") Then
			Set importer = varIn
		Else
			Set importer = session.CreateDXLImporter()
			
			Select Case UCase$(TypeName(varIn))
			Case UCase$("String")
				strIn = varIn
				Call importer.SetInput(strIn)
			Case UCase$("NotesRichTextItem")
				Set rtItem = varIn
				Call importer.SetInput(rtItem)
			Case UCase$("NotesStream")
				Set stream = varIn
				Call importer.SetInput(stream)
			End Select
		End If
		
		'output
		Call importer.SetOutput(db)
		
		Call importer.Process()
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		ImportDXL = FUNCTIONFAILURE
		Exit Function
	End Function
	
	'*******************************************************
	'NotesDXLExporterによりDXLにエクスポートする
	'@param
	'(Variant) varIn : インプット
	'	(NotesNoteCollection):ビルド済みのNotesNoteCollection
	'	(NotesDocument):NotesDocument
	'	(String):Notes URL
	'(Variant) varOut : アウトプット
	'	(NotesStream) : オープン済みのNotesStream
	'	(NotesRichTextItem) : NotesRichTextItem
	'	(NotesDOMParser) : NotesDOMParser
	Function ExportDXL(varIn As Variant, varOut As Variant) As Integer
		On Error GoTo ErrorHandle
		
		Dim session As New NotesSession
		Dim exporter As NotesDXLExporter
		
		Dim notes As NotesNoteCollection
		Dim note As NotesDocument
		Dim stream As NotesStream
		Dim rtItem As NotesRichTextItem
		Dim parser As NotesDOMParser
		
		Set exporter = session.CreateDXLExporter()
		
		'input
		Select Case UCase$(TypeName(varIn))
		Case UCase$("NotesNoteCollection")
			Set notes = varIn
			Call exporter.SetInput(notes)
		Case UCase$("NotesDocument")
			Set note = varIn
			Call exporter.SetInput(note)
		Case UCase$("String")
			Set note = session.Resolve(CStr(varIn))
			Call exporter.SetInput(note)
		End Select
		
		'output
		Select Case UCase$(TypeName(varOut))
		Case UCase$("NotesStream")
			Set stream = varOut
			Call exporter.SetOutput(stream)
		Case UCase$("NotesRichTextItem")
			Set rtItem = varOut
			Call exporter.SetOutput(rtItem)
		Case UCase$("NotesDOMParser")
			Set parser = varOut
			Call exporter.SetOutput(parser)
		End Select
		
		Call exporter.Process()
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		ExportDXL = FUNCTIONFAILURE
		Exit Function
	End Function
	
	'DOMをDXLへシリアライズする
	'@param
	'(Variant)param : output
	'	(NotesRichTextItem):NotesRichTextItem
	'	(NotesStream):NotesStream
	'	(NotesDXLImporter):NotesDXLImporter
	Function SerializeDXL(param As Variant) As Integer
		On Error GoTo ErrorHandle
		
		Dim parser As NotesDOMParser
		
		Dim rtItem As NotesRichTextItem
		Dim stream As NotesStream
		Dim importer As NotesDXLImporter
		
		Set parser = Me.pParser
		
		'input
		
		
		'output
		Select Case UCase$(TypeName(param))
			Case UCase$("NotesRichTextItem")
				Set rtItem = param
				Call parser.SetOutput(rtItem)
			Case UCase$("NotesStream")
				Set stream = param
				Call parser.SetOutput(stream)
			Case UCase$("NotesDXLImporter")
				Call parser.SetOutput(importer)
		End Select
		
		Call parser.Serialize()
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		SerializeDXL = FUNCTIONFAILURE
		Exit Function
	End Function
	
	'**********************************************
	'DXLのDOMへパースする
	'@param
	'(Variant)param : インプット
	'	(NotesDocument)DXLへパースする設計文書
	'	(NotesDOMElementNode)DXLへパースするNotesDOMElementNode
	Function ParseDOM(param As Variant) As Integer
		On Error GoTo ErrorHandle
		
		Dim note As NotesDocument
		Dim parentNode As NotesDOMNode
		
		Dim session As NotesSession
		Dim parser As NotesDOMParser
		
		If TypeName(param) = UCase$("NotesDomElementNode") Then
			Set parentNode = param
			Do Until parentNode Is Nothing
				If parentNode.ParentNode.IsNull = True Then
					Exit Do
				End If
				Set parentNode = parentNode.ParentNode
			Loop
			
			Set Me.DocumentNode = parentNode
			Set Me.RootNode = param
			Set Me.pParser = Nothing
			Set Me.pNote = Nothing
		Else
			Set session = New NotesSession
			Set note = param
			Set parser = session.CreateDOMParser()
			Call Me.ExportDXL(note, parser)
			Set Me.DocumentNode = parser.Document
			Set Me.RootNode = parser.Document.DocumEntelement
			Set Me.pParser = parser
			Set Me.pNote = note
		End If
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		ParseDOM = FUNCTIONFAILURE
		Exit Function
	End Function
	
	'@param
	'strItemName :(String) アイテムの名前
	'itemNode (@return):(NotesDOMElementNode) : itemノード
	Function GetItemNode(strItemName As String, itemNode As NotesDOMElementNode) As Integer
		On Error GoTo ErrorHandle
		
		Dim nodeList As NotesDOMNodeList
		Dim rootNode As NotesDOMElementNode
		Dim elemNode As NotesDOMElementNode
		
		Dim tmpItems List As NotesDOMElementNode
		Dim varItems As Variant
		Dim tmpName As String
		Dim num As Integer
		
		'初期化
		Set itemNode = Nothing
		
		If Me.IsAvailable("plstItems") = False Then
			Me.pListItems = tmpItems
			varItems = tmpItems
		Else
			varItems = Me.pListItems
		End If
		
		If IsElement(varItems( strItemName )) = False Then
			Set rootNode = Me.RootNode
			Set nodeList = rootNode.GetElementsByTagName("item")
			
			For num = 1 To nodeList.NumberOfEntries
				Set elemNode = Me.GetItemAt(nodeList, num)
				tmpName = elemNode.GetAttribute("name")
				Set varItems(tmpName) = elemNode
			Next
			
			Me.pListItems = varItems
		End If
		
		If IsElement(varItems( strItemName )) = False Then
			Set itemNode = Nothing
		Else
			Set itemNode = varItems( strItemName )
		End If
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		GetItemNode = FUNCTIONFAILURE
		Exit Function
	End Function
	
	'@param
	' domNode : (NotesDOMNode)
	Function GetParentNode(domNode As NotesDOMNode) As NotesDOMNode
		On Error GoTo ErrorHandle
		
		Dim parentNode As NotesDOMNode
		
		Set parentNode = domNode.ParentNode
		
		If parentNode.IsNull = True Then
			Set parentNode = Nothing
		End If
		
		Set GetParentNode = parentNode
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Function
	End Function
	
	'@param
	' nodeList : (NotesDOMNodeList)
	Function GetFirstNode(nodeList As NotesDOMNodeList) As NotesDOMNode
		On Error GoTo ErrorHandle
		
		Dim domNode As NotesDOMNode
		
		If nodeList Is Nothing Then
			Set domNode = Nothing
		ElseIf 0 &lt; nodeList.NumberOfEntries Then
			Set domNode = nodeList.GetItem(1)
		Else
			Set domNode = Nothing
		End If
		
		If domNode Is Nothing Then
		ElseIf domNode.IsNull = True Then
			Set domNode = Nothing
		End If
		
		Set GetFirstNode = domNode
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Function
	End Function
	
	Function GetItemAt(nodeList As NotesDOMNodeList, num As Integer) As NotesDOMNode
		On Error GoTo ErrorHandle
		
		Dim domNode As NotesDOMNode
		
		If nodeList Is Nothing Then
			Set domNode = Nothing
		ElseIf num &lt;= nodeList.NumberOfEntries Then
			Set domNode = nodeList.GetItem(num)
		Else
			Set domNode = Nothing
		End If
		
		If domNode Is Nothing Then
		ElseIf domNode.IsNull = True Then
			Set domNode = Nothing
		End If
		
		Set GetItemAt = domNode
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Function
	End Function
	
	'@param
	'domNode : (NotesDOMNode)
	Function GetNextSibling(domNode As NotesDOMNode) As NotesDOMNode
		On Error GoTo ErrorHandle
		
		Dim nextSibling As NotesDOMNode
		
		If domNode Is Nothing Then
			Set nextSibling = Nothing
		Else
			Set nextSibling = domNode.NextSibling
		End If
		
		If nextSibling Is Nothing Then
		ElseIf nextSibling.IsNull = True Then
			Set nextSibling = Nothing
		End If
		
		Set GetNextSibling = nextSibling
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Function
	End Function
	
	'@param
	' ListItems : (Variant)List As NotesDOMElementNode
	Private Property Get pListItems As Variant
		pListItems = Me.Members("pListItems")
	End Property
	'@param
	' ListItems : (Variant)List As NotesDOMElementNode
	Private Property Set pListItems As Variant
		Me.Members("pListItems") = pListItems
	End Property
	
	'@param
	'LoadedAllItems : (Boolean)
	'Private Property Get pLoadedAllItems As Boolean
	'	If Me.IsAvailable("pLoadedAllItems") Then pLoadedAllItems = Me.Members("pLoadedAllItems")
	'End Property
	'@param
	'LoadedAllItems : (Boolean)
	'Private Property Set pLoadedAllItems As Boolean
	'	Me.Members("pLoadedAllItems") = pLoadedAllItems
	'End Property
	
	'*************************************************
	'@return : (NotesDomElementNode)設計文書情報ノード
	Property Get NoteInfoNode As NotesDOMElementNode
		On Error GoTo ErrorHandle
		
		Dim rootNode As NotesDOMElementNode
		Dim nodeList As NotesDOMNodeList
		Dim elemNode As NotesDOMElementNode
		
		If Me.IsAvailable("NoteInfoNode") = False Then
			Set rootNode = Me.RootNode
			Set nodeList = rootNode.GetElementsByTagName("noteinfo")
			Set elemNode = Me.GetFirstNode(nodeList)
			Set Me.Members("NoteInfoNode") = elemNode
		Else
			Set elemNode = Me.Members("NoteInfoNode")
		End If
		
		Set NoteInfoNode = elemNode
		
		Exit Property
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Property
	End Property
	
	'************************
	'@return : (String)文書ID
	Property Get NoteID As String
		NoteID = Me.NoteInfoNode.GetAttribute("noteid")
	End Property
	
	'******************************
	'@return : (String)ユニバーサルID
	Property Get UniversalID As String
		UniversalID = Me.NoteInfoNode.GetAttribute("unid")
	End Property
	
	'***************************
	'@return : (String)シーケンス
	Property Get Sequence As String
		Sequence = Me.NoteInfoNode.GetAttribute("sequence")
	End Property
	
	'***********************
	'@return : (Date)作成日
	Property Get Created As Variant
		On Error GoTo ErrorHandle
		
		Dim nodeList As NotesDOMNodeList
		Dim elemNode As NotesDOMElementNode
		Dim objDT As NotesDateTime
		Dim varDate As Variant
		
		If Me.IsAvailable("Created") = False Then
			Set nodeList = Me.NoteInfoNode.GetElementsByTagName("created")
			Set elemNode = Me.GetFirstNode(nodeList)
			If Not elemNode Is Nothing Then
				Set nodeList = elemNode.GetElementsByTagName("datetime")
				Set elemNode = Me.GetFirstNode(nodeList)
				If Not elemNode Is Nothing Then
					Set objDT = ConvDateTime(elemNode.FirstChild.NodeValue)
					varDate = objDT.LsLocalTime
				End If
			End If
			Me.Members("Created") = varDate
		Else
			varDate = Me.Members("Created")
		End If
		
		Created = varDate
		
		Exit Property
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Property
	End Property
	
	'***********************
	'@return : (Date)更新日
	Property Get Modified As Variant
		On Error GoTo ErrorHandle
		
		Dim nodeList As NotesDOMNodeList
		Dim elemNode As NotesDOMElementNode
		Dim objDT As NotesDateTime
		Dim varDate As Variant
		
		If Me.IsAvailable("Modified") = False Then
			Set nodeList = Me.NoteInfoNode.GetElementsByTagName("modified")
			Set elemNode = Me.GetFirstNode(nodeList)
			If Not elemNode Is Nothing Then
				Set nodeList = elemNode.GetElementsByTagName("datetime")
				Set elemNode = Me.GetFirstNode(nodeList)
				If Not elemNode Is Nothing Then
					Set objDT = ConvDateTime(elemNode.FirstChild.NodeValue)
					varDate = objDT.LsLocalTime
				End If
			End If
			Me.Members("Modified") = varDate
		Else
			varDate = Me.Members("Modified")
		End If
		
		Modified = varDate
		
		Exit Property
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Property
	End Property
	
	'***********************
	'@return : (Date)更新日
	Property Get Revised As Variant
		On Error GoTo ErrorHandle
		
		Dim nodeList As NotesDOMNodeList
		Dim elemNode As NotesDOMElementNode
		Dim objDT As NotesDateTime
		Dim varDate As Variant
		
		If Me.IsAvailable("Revised") = False Then
			Set nodeList = Me.NoteInfoNode.GetElementsByTagName("revised")
			Set elemNode = Me.GetFirstNode(nodeList)
			If Not elemNode Is Nothing Then
				Set nodeList = elemNode.GetElementsByTagName("datetime")
				Set elemNode = Me.GetFirstNode(nodeList)
				If Not elemNode Is Nothing Then
					Set objDT = ConvDateTime(elemNode.FirstChild.NodeValue)
					varDate = objDT.LsLocalTime
				End If
			End If
			Me.Members("Revised") = varDate
		Else
			varDate = Me.Members("Revised")
		End If
		
		Revised = varDate
		
		Exit Property
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Property
	End Property
	
	'*************************
	'@return : (Date)追加日時
	Property Get AddedToFile As Variant
		On Error GoTo ErrorHandle
		
		Dim nodeList As NotesDOMNodeList
		Dim elemNode As NotesDOMElementNode
		Dim objDT As NotesDateTime
		Dim varDate As Variant
		
		If Me.IsAvailable("AddedToFile") = False Then
			Set nodeList = Me.NoteInfoNode.GetElementsByTagName("addedtofile")
			Set elemNode = Me.GetFirstNode(nodeList)
			If Not elemNode Is Nothing Then
				Set nodeList = elemNode.GetElementsByTagName("datetime")
				Set elemNode = Me.GetFirstNode(nodeList)
				If Not elemNode Is Nothing Then
					Set objDT = ConvDateTime(elemNode.FirstChild.NodeValue)
					varDate = objDT.LsLocalTime
				End If
			End If
			Me.Members("AddedToFile") = varDate
		Else
			varDate = Me.Members("AddedToFile")
		End If
		
		AddedToFile = varDate
		
		Exit Property
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Property
	End Property
	
	'*****************************
	'@return : (Date)最終アクセス日
	Property Get LastAccessed As Variant
		On Error GoTo ErrorHandle
		
		Dim nodeList As NotesDOMNodeList
		Dim elemNode As NotesDOMElementNode
		Dim objDT As NotesDateTime
		Dim varDate As Variant
		
		If Me.IsAvailable("LastAccessed") = False Then
			Set nodeList = Me.NoteInfoNode.GetElementsByTagName("lastaccessed")
			Set elemNode = Me.GetFirstNode(nodeList)
			If Not elemNode Is Nothing Then
				Set nodeList = elemNode.GetElementsByTagName("datetime")
				Set elemNode = Me.GetFirstNode(nodeList)
				If Not elemNode Is Nothing Then
					Set objDT = ConvDateTime(elemNode.FirstChild.NodeValue)
					varDate = objDT.LsLocalTime
				End If
			End If
			Me.Members("LastAccessed") = varDate
		Else
			varDate = Me.Members("LastAccessed")
		End If
		
		LastAccessed = varDate
		
		Exit Property
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Property
	End Property
	
	'*******************************
	'@return : (String Array)更新者
	Property Get UpdatedBy As Variant
		On Error GoTo ErrorHandle
		
		Dim rootNode As NotesDOMElementNode
		Dim elemNode As NotesDOMElementNode
		Dim nodeList As NotesDOMNodeList
		Dim aryString As Variant
		
		If Me.IsAvailable("UpdatedBy") = False Then
			ReDim aryString(0) As String
			Set rootNode = Me.DocumentNode.DocumentElement
			Set nodeList = rootNode.GetElementsByTagName("updatedby")
			Set elemNode = Me.GetFirstNode(nodeList)
			If Not elemNode Is Nothing Then
				Set nodeList = elemNode.GetElementsByTagName("name")
				Set elemNode = Me.GetFirstNode(nodeList)
				If Not elemNode Is Nothing Then
					aryString(0) = elemNode.FirstChild.NodeValue
					Set elemNode = Me.GetNextSibling(elemNode)
					Do Until elemNode Is Nothing
						aryString = ArrayAppend(aryString, elemNode.FirstChild.NodeValue)
						Set elemNode = Me.GetNextSibling(elemNode)
					Loop
				End If
			End If
			Me.Members("UpdatedBy") = aryString
		Else
			aryString = Me.Members("UpdatedBy")
		End If
		
		UpdatedBy = aryString
		
		Exit Property
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Property
	End Property
	
	'******************************
	'@return : (String Array)署名者
	Property Get SignedBy As Variant
		On Error GoTo ErrorHandle
		
		Dim rootNode As NotesDOMElementNode
		Dim elemNode As NotesDOMElementNode
		Dim nodeList As NotesDOMNodeList
		Dim aryString As Variant
		
		If Me.IsAvailable("SignedBy") = False Then
			ReDim aryString(0) As String
			Set rootNode = Me.DocumentNode.DocumentElement
			Set nodeList = rootNode.GetElementsByTagName("wassignedby")
			Set elemNode = Me.GetFirstNode(nodeList)
			If Not elemNode Is Nothing Then
				Set nodeList = elemNode.GetElementsByTagName("name")
				Set elemNode = Me.GetFirstNode(nodeList)
				If Not elemNode Is Nothing Then
					aryString(0) = elemNode.FirstChild.NodeValue
					Set elemNode = Me.GetNextSibling(elemNode)
					Do Until elemNode Is Nothing
						aryString = ArrayAppend(aryString, elemNode.FirstChild.NodeValue)
						Set elemNode = Me.GetNextSibling(elemNode)
					Loop
				End If
			End If
			Me.Members("SignedBy") = aryString
		Else
			aryString = Me.Members("SignedBy")
		End If
		
		SignedBy = aryString
		
		Exit Property
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Property
	End Property
	
	'****************************
	'@return : (Date Array)更新日
	Property Get DesignChange As Variant
		On Error GoTo ErrorHandle
		
		Dim rootNode As NotesDOMElementNode
		Dim elemNode As NotesDOMElementNode
		Dim nodeList As NotesDOMNodeList
		Dim aryDate As Variant
		Dim objDT As NotesDateTime
		Dim i As Integer
		
		If Me.IsAvailable("DesignChange") = False Then
			ReDim aryString(0) As String
			Set rootNode = Me.DocumentNode.DocumentElement
			Set nodeList = rootNode.GetElementsByTagName("designchange")
			Set elemNode = Me.GetFirstNode(nodeList)
			If Not elemNode Is Nothing Then
				Set nodeList = elemNode.GetElementsByTagName("datetime")
				Set elemNode = Me.GetFirstNode(nodeList)
				If Not elemNode Is Nothing Then
					aryDate(0) = elemNode.FirstChild.NodeValue
					Set elemNode = Me.GetNextSibling(elemNode)
					Do Until elemNode Is Nothing
						Set objDT = ConvDateTime(elemNode.FirstChild.NodeValue)
						aryDate = ArrayAppend(aryDate, objDT.Lslocaltime)
						Set elemNode = Me.GetNextSibling(elemNode)
					Loop
				End If
			End If
			Me.Members("DesignChange") = aryDate
		Else
			aryDate = Me.Members("DesignChange")
		End If
		
		DesignChange = aryDate
		
		Exit Property
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Property
	End Property
	
	'**************************************************************
	'@return : (NotesDOMDocumentNode)DXLのrootに位置するDocumentNode
	Property Get DocumentNode As NotesDOMDocumentNode
		Set DocumentNode = Me.Members("DocumentNode")
	End Property
	'**************************************************************
	'@param : (NotesDOMDocumentNode)DXLのrootに位置するDocumentNode
	Property Set DocumentNode As NotesDOMDocumentNode
		Set Me.Members("DocumentNode") = DocumentNode
	End Property
	
	'@param
	'RootNode : (NotesDOMElementNode)
	Property Get RootNode As NotesDOMElementNode
		Set RootNode = Me.Members("RootNode")
	End Property
	'@param
	'RootNode : (NotesDOMElementNode)
	Property Set RootNode As NotesDOMElementNode
		Set Me.Members("RootNode") = RootNode
	End Property
	
	'@param
	'Parser : (NotesDOMParser)
	Private Property Get pParser As NotesDOMParser
		Set pParser = Me.Members("pParser")
	End Property
	'@param
	'Parser : (NotesDOMParser)
	Private Property Set pParser As NotesDOMParser
		Set Me.Members("pParser") = pParser
	End Property
	
	'@param
	'Note : (NotesDocument)
	Private Property Get pNote As NotesDocument
		Set pNote = Me.Members("pNote")
	End Property
	'@param
	'Note : (NotesDocument)
	Private Property Set pNote As NotesDocument
		Set Me.Members("pNote") = pNote
	End Property
	
End Class
Class CNotesAgentDXL As CNotesDesignDXL
	
	'@return :(String Array)
	'  name,alias,enabled,trigger,documentset
	Property Get PropertyNames As Variant
		If Me.IsAvailable("PropertyNames") = False Then
			Me.Members("PropertyNames") = Split(_
			"name,alias,enabled,trigger,documentset"_
			, ",")
		End If
		PropertyNames = Me.Members("PropertyNames")
	End Property
	
	'@return :(String Array)
	'  name,alias,enabled,readers,
	'  designerversion,fromtemplate,hide,noreplace,
	'  propagatenoreplace,runaswebuser,restrictions,publicaccess,activatable,
	'  trigger, documentset
	Property Get AllPropertyNames As Variant
		If Me.IsAvailable("AllPropertyNames") = False Then
			Me.Members("AllPropertyNames") = Split(_
			"name,alias,enabled,readers," &amp;_
			"designerversion,fromtemplate,hide,noreplace," &amp;_
			"propagatenoreplace,runaswebuser,restrictions,publicaccess,activatable," &amp;_
			"trigger, documentset"_
			, ",")
		End If
		AllPropertyNames = Me.Members("AllPropertyNames")
	End Property
	
	'@return :(Variant List)
	Function GetPropertys() As Variant
		On Error GoTo ErrorHandle
		
		Dim aryNames As Variant
		
		aryNames = Me.PropertyNames
		
		GetPropertys = Me.GetPropertysByName(aryNames)
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Function
	End Function
	
	'@return :(Variant List)
	Function GetAllPropertys() As Variant
		On Error GoTo ErrorHandle
		
		Dim aryNames As Variant
		
		aryNames = Me.AllPropertyNames
		
		GetAllPropertys = Me.GetPropertysByName(aryNames)
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Function
	End Function
	
	'@param
	' aryNames : (String Array) property names
	'@return :(Variant List)
	Function GetPropertysByName(aryNames As Variant) As Variant
		On Error GoTo ErrorHandle
		
		Dim lstProperty List As Variant
		
		ForAll n In aryNames
			lstProperty(CStr(n)) = Me.GetProperty(CStr(n))
		End ForAll
		
		GetPropertysByName = lstProperty
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Function
	End Function
	
	'@return :(String Array)
	Property Get ScheduleNames As Variant
		
		Dim aryNames As Variant
		
		aryNames = Split(_
		"type,onweekends,runlocation,runserver,startdate,enddate"_
		, ",")
		
		Dim strType As String
		
		strType = Me.GetSchedule("type")
		
		Select Case strType
			Case "byminutes"
				aryNames = ArrayAppend(aryNames, Split("hours,minutes,starttime,endtime", ","))
			Case "daily"
				aryNames = ArrayAppend(aryNames, Split("starttime", ","))
			Case "weekly"
				aryNames = ArrayAppend(aryNames, Split("dayofweek,starttime", ","))
			Case "monthly"
				aryNames = ArrayAppend(aryNames, Split("dateinmonth,starttime", ","))
		End Select
		
		ScheduleNames = aryNames
	End Property
	
	'@return :(String Array)
	Property Get AllScheduleNames As Variant
		AllScheduleNames = Me.ScheduleNames
	End Property
	
	'@return :(Variant List)
	Function GetSchedules() As Variant
		On Error GoTo ErrorHandle
		
		Dim aryNames As Variant
		
		aryNames = Me.ScheduleNames
		
		GetSchedules = Me.GetSchedulesByName(aryNames)
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Function
	End Function
	
	'@return :(Variant List)
	Function GetAllSchedules() As Variant
		On Error GoTo ErrorHandle
		
		Dim aryNames As Variant
		
		aryNames = Me.AllScheduleNames
		
		GetAllSchedules = Me.GetSchedulesByName(aryNames)
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Function
	End Function
	
	'@param
	' aryNames : (String Array) property names
	'@return :(Variant List)
	Function GetSchedulesByName(aryNames As Variant) As Variant
		On Error GoTo ErrorHandle
		
		Dim lstSchedule List As Variant
		
		ForAll n In aryNames
			lstSchedule(CStr(n)) = Me.GetSchedule(CStr(n))
		End ForAll
		
		GetSchedulesByName = lstSchedule
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Function
	End Function
	
	Property Get AgentNode As NotesDOMElementNode
		On Error GoTo ErrorHandle
		
		Dim elemNode As NotesDOMElementNode
		Dim nodeList As NotesDOMNodeList
		
		If Me.IsAvailable("AgentNode") = False Then
			Set elemNode = Me.RootNode
			If StrCompare(elemNode.TagName, "agent", 1) &lt;&gt; 0 Then
				Set nodeList = elemNode.Getelementsbytagname("agent")
				Set elemNode = Me.GetFirstNode(nodeList)
			End If
			Set Me.Members("AgentNode") = elemNode
		Else
			Set elemNode = Me.Members("AgentNode")
		End If
		
		Set AgentNode = elemNode
		
		Exit Property
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Property
	End Property
	
	Property Get TriggerNode As NotesDOMElementNode
		On Error GoTo ErrorHandle
		
		Dim nodeList As NotesDOMNodeList
		Dim elemNode As NotesDOMElementNode
		
		If Me.IsAvailable("TriggerNode") = False Then
			Set elemNode = Me.AgentNode
			Set nodeList = elemNode.GetElementsByTagName("trigger")
			Set elemNode = Me.GetFirstNode(nodeList)
			Set Me.Members("TriggerNode") = elemNode
		Else
			Set elemNode = Me.Members("TriggerNode")
		End If
		
		Set TriggerNode = elemNode
		
		Exit Property
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Property
	End Property
	
	Property Get ScheduleNode As NotesDOMElementNode
		On Error GoTo ErrorHandle
		
		Dim nodeList As NotesDOMNodeList
		Dim elemNode As NotesDOMElementNode
		
		If Me.IsAvailable("ScheduleNode") = False Then
			Set nodeList = Me.TriggerNode.GetElementsByTagName("schedule")
			Set elemNode = Me.GetFirstNode(nodeList)
			Set Me.Members("ScheduleNode") = elemNode
		Else
			Set elemNode = Me.Members("ScheduleNode")
		End If
		
		Set ScheduleNode = elemNode
		
		Exit Property
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Property
	End Property
	
	Property Get DocumentSetNode As NotesDOMElementNode
		On Error GoTo ErrorHandle
		
		Dim nodeList As NotesDOMNodeList
		Dim elemNode As NotesDOMElementNode
		
		If Me.IsAvailable("DocumentSetNode") = False Then
			Set nodeList = Me.AgentNode.GetElementsByTagName("documentset")
			Set elemNode = Me.GetFirstNode(nodeList)
			Set Me.Members("DocumentSetNode") = elemNode
		Else
			Set elemNode = Me.Members("DocumentSetNode")
		End If
		
		Set DocumentSetNode = elemNode
		
		Exit Property
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Property
	End Property
	
	Function SetPropertys(lstProperty As Variant) As Integer
		On Error GoTo ErrorHandle
		
		Dim pn As String
		
		ForAll p In lstProperty
			pn = ListTag(p)
			
			Call Me.SetProperty(pn, p)
		End ForAll
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Function
	End Function
	
	'@param
	'strName : (String)
	' name, alias, enabled, readers, designerversion, fromtemplate, hide, noreplace
	' propagatenoreplace, runaswebuser, restrictions, publicaccess, activatable
	' trigger, documentset
	'varVal : (Variant)
	Function SetProperty(strName As String, varVal As Variant) As Integer
		On Error GoTo ErrorHandle
		
		Dim nodeList As NotesDOMNodeList
		Dim elemNode As NotesDOMElementNode
		
		Const CHECK_MSG$ = "この値は許可されていません。"
		
		Dim strTxt As String
		
		Select Case LCase$(strName)
		Case "trigger"
			Set elemNode = Me.TriggerNode
			If elemNode Is Nothing Then
			Else
				strTxt = Me.ChangePropertyText(strName, CStr(varVal))
				If strTxt = "" Then
					Error USERERR, CHECK_MSG &amp; "[name = '" &amp; strName &amp; "', val = " &amp; varVal &amp; "]"
				End If
				
				Call elemNode.SetAttribute("type", varVal)
			End If
		Case "documentset"
			Set elemNode = Me.DocumentSetNode
			If elemNode Is Nothing Then
			Else
				strTxt = Me.ChangePropertyText(strName, CStr(varVal))
				If strTxt = "" Then
					Error USERERR, CHECK_MSG &amp; "[name = '" &amp; strName &amp; "', val = " &amp; varVal &amp; "]"
				End If
				
				Call elemNode.SetAttribute("type", varVal)
			End If
		Case "readers"
			
		Case Else
			Set elemNode = Me.AgentNode
			If elemNode Is Nothing Then
			Else
				Call elemNode.SetAttribute(strName, varVal)
			End If
		End Select
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Function
	End Function
	
	'@param
	'(String) strName
	' name, alias, enabled, readers, designerversion, fromtemplate, hide, noreplace
	' propagatenoreplace, runaswebuser, restrictions, publicaccess, activatable
	' trigger, documentset
	'@return プロパティ値
	Function GetProperty(strName As String) As Variant
		On Error GoTo ErrorHandle
		
		Dim nodeList As NotesDOMNodeList
		Dim elemNode As NotesDOMElementNode
		Dim domNode As NotesDOMNode
		Dim varVal As Variant
		'Dim i As Integer
		Dim result As Integer
		
		Select Case LCase$(strName)
			Case "trigger"
				Set elemNode = Me.TriggerNode
				If elemNode Is Nothing Then
					varVal = ""
				Else
					varVal = elemNode.GetAttribute("type")
				End If
			Case "documentset"
				Set elemNode = Me.DocumentSetNode
				If elemNode Is Nothing Then
					varVal = ""
				Else
					varVal = elemNode.GetAttribute("type")
				End If
			Case "readers"
				Set elemNode = Me.AgentNode
				Set nodeList = elemNode.GetElementsByTagName("item")
				
				If nodeList.NumberOfEntries &lt;&gt; 0 Then
					result = Me.GetItemNode("$Readers", elemNode)
					If result = FUNCTIONFAILURE Then
						Error USERERR, Error
					End If
					
					If Not elemNode Is Nothing Then
						Set nodeList = elemNode.GetElementsByTagName("textlist")
						Set elemNode = Me.GetFirstNode(nodeList)
						
						If Not elemNode Is Nothing Then
							Set nodeList = elemNode.GetElementsByTagName("text")
							Set domNode = Me.GetFirstNode(nodeList)
							
							If Not domNode Is Nothing Then
								ReDim varVal(0) As String
								varVal(0) = domNode.FirstChild.NodeValue
								Set domNode = Me.GetNextSibling(domNode)
								
								Do Until domNode Is Nothing
									varVal = ArrayAppend(varVal, domNode.FirstChild.NodeValue)
									Set domNode = Me.GetNextSibling(domNode)
								Loop
								
							End If
							
						End If
						
					End If
					
				End If
				
			Case Else
				varVal = Me.AgentNode.GetAttribute(strName)
		End Select
		
		If IsArray(varVal) Then
		ElseIf varVal = "" Then
			Dim empty As Variant
			varVal = empty
		End If
		
		GetProperty = varVal
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Function
	End Function
	
	'@param
	'(String) strName
	' trigger, documentset, restrictions, enabled, runaswebuser, publicaccess, activatable
	' allowremotedebugging, profile, clientbackgroundthread, private, storehighlights
	Function GetPropertyText(strName As String) As String
		On Error GoTo ErrorHandle
		
		Dim strValue As String
		
		strValue = Me.GetProperty(strName)
		
		GetPropertyText = Me.ChangePropertyText(strName, strValue)
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Function
	End Function
	
	Function ChangePropertyLabel(strName As String) As String
		On Error GoTo ErrorHandle
		
		Dim retVal As String
		
		Select Case strName
			Case "trigger":retVal="トリガ"
			Case "documentset":retVal="対象"
			Case "restrictions":retVal="実行時のセキュリティレベル"
			Case "enabled":retVal="有効/無効"
			Case "noreplace":retVal = "更新時に再設計/設計の置換を禁止する"
			Case "propagatenoreplace":retVal = "設計の置換が禁止されていることを知らせる"
			Case "hide":retVal = "設計要素を非表示にする"
			Case "runaswebuser":retVal = "Webユーザーとして実行"
			Case "publicaccess":retVal = "パブリックユーザーに対してこのエージェントの参照と実行を許可する"
			Case "activatable":retVal = "「編集者」レベルのユーザーの有効化を許可"
			Case "allowremotedebugging":retVal = "リモートデバッグを許可"
			Case "private":retVal = "個人エージェント"
			Case "showinsearch":retVal = "検索バーメニューの検索を保存"
			Case "storehighlights":retVal = "文書中のハイライトを保存"
			Case "clientbackgroundthread":retVal = "クライアントのバックグラウンドスレッドで実行"
			Case "profile":retVal = "エージェントをプロファイル"
			Case Else:retVal = strName
		End Select
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Function
	End Function
	
	Function ChangePropertyText(strName As String, strValue As String) As String
		On Error GoTo ErrorHandle
		
		Dim retVal As String
		
		Select Case strName
			Case "trigger"
				Select Case strValue
				Case "scheduled":retVal="スケジュール"
				Case "actionsmenu":retVal="アクションメニューの選択"
				Case "agentlist":retVal="エージェントリストの選択"
				Case "beforenewmail":retVal="新規メールの受信前"
				Case "afternewmail":retVal="新規メールの受信後"
				Case "docupdate":retVal="文書の作成または更新後"
				Case "docpaste":retVal="文書が貼り付けられたとき"
				Case "serverstart":retVal="サーバー開始時"
				Case Else:retVal=strValue
				End Select
			Case "documentset"
				Select Case strValue
				Case "all":retVal="データベースのすべての文書"
				Case "modified":retVal="作成または変更されたすべての文書"
				Case "unreadinview":retVal="ビューのすべての未読文書"
				Case "allinview":retVal="ビューのすべての文書"
				Case "selected":retVal="すべての選択文書"
				Case "runonce","":retVal="なし"
				Case Else:retVal=strValue
				End Select
			Case "restrictions"
				Select Case strValue
				Case "unrestricted":retVal = "制限された操作を許可する"
				Case "fulladminunrestricted":retVal = "フルアドミニストレータ権限で制限された操作を許可する"
				Case Else:retVal = "制限された操作を許可しない"
				End Select
			Case "enabled"
				If Me.IsSchedule Or Me.IsAutomatic Or Me.IsDefault Then
					If strValue = "false" Then
						retVal = "無効"
					ElseIf strValue = "true" Or strValue = "" Then
						retVal = "有効"
					End If
				Else
					retVal = ""
				End If
			Case "noreplace"
				If strValue = "true" Then
					retVal = "更新時に再設計/設計の置換を禁止する"
				End If
				
			Case "propagatenoreplace"
				If strValue = "true" Then
					retVal = "設計の置換が禁止されていることを知らせる"
				End If
			Case "hide"
				retVal = strValue
				retVal = Replace(retVal, "v3", "")
				retVal = Trim$(retVal)
				retVal = Replace(retVal, " ", ",")
				retVal = Replace(retVal, "notes", "Lotus Notes R4.6以降のクライアントで非表示")
				retVal = Replace(retVal, "web", "Webブラウザで非表示")
				retVal = Replace(retVal, "v4", "Lotus Notes R4以降のクライアントのメニューに設計要素を表示しない")
			Case "runaswebuser":If strValue = "true" Then retVal = "Webユーザーとして実行"
			Case "publicaccess":If strValue = "true" Then retVal = "パブリックユーザーに対してこのエージェントの参照と実行を許可する"
			Case "activatable":If strValue = "true" Then retVal = "「編集者」レベルのユーザーの有効化を許可"
			Case "allowremotedebugging":If strValue = "true" Then retVal = "リモートデバッグを許可"
			Case "private":If strValue = "true" Then retVal = "個人エージェント"
			Case "showinsearch":If strValue = "true" Then retVal = "検索バーメニューの検索を保存"
			Case "storehighlights":If strValue = "true" Then retVal = "文書中のハイライトを保存"
			Case "clientbackgroundthread":If strValue = "true" Then retVal = "クライアントのバックグラウンドスレッドで実行"
			Case "profile":If strValue = "true" Then retVal = "エージェントをプロファイル"
			Case Else
				retVal = strValue
		End Select
		
		ChangePropertyText = retVal
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Function
	End Function
	
	Function SetSchedules(lstSchedule As Variant) As Integer
		On Error GoTo Errorhandle
		
		Dim pn As String
		
		ForAll s In lstSchedule
			pn = ListTag(s)
			Call Me.SetSchedule(pn, s)
		End ForAll
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Function
	End Function
	
	Function SetSchedule(strName As String, varVal As Variant) As Integer
		
		Dim nodeList As NotesDOMNodeList
		Dim elemNode As NotesDOMElementNode
		Dim objDT As NotesDateTime
		Dim strDT As String
		
		If Me.IsSchedule = False Then Exit Function
		
		Select Case LCase$(strName)
			Case "starttime", "endtime", "startdate", "enddate"
				Set elemNode = Me.ScheduleNode
				Set nodeList = elemNode.GetElementsByTagName(strName)
				Set elemNode = Me.GetFirstNode(nodeList)
				
				If Not elemNode Is Nothing Then
					Set nodeList = elemNode.GetElementsByTagName("datetime")
					Set elemNode = Me.GetFirstNode(nodeList)
					
					If Not elemNode Is Nothing Then
						Set objDT = New NotesDateTime(varVal)
						strDT = ConvISO8601Base(objDT)
						elemNode.NodeValue = strDT
					End If
					
				End If
				
			Case Else
				Set elemNode = Me.ScheduleNode
				Call elemNode.SetAttribute(strName, CStr(varVal))
		End Select
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Function
	End Function
	
	'@param
	' strName : パラメタ名
	'  type, onweekends, runlocation, runserver,
	'  hours, minutes, dayofweek, dateinmonth
	'  starttime, endtime, startdate, enddate
	'@return : (Variant)スケジュール設定値
	Function GetSchedule(strName As String) As Variant
		On Error GoTo ErrorHandle
		
		Dim nodeList As NotesDOMNodeList
		Dim elemNode As NotesDOMElementNode
		Dim objDT As NotesDateTime
		Dim varVal As Variant
		
		If Me.IsSchedule = False Then Exit Function
		
		Select Case LCase$(strName)
			Case "starttime", "endtime", "startdate", "enddate"
				Set elemNode = Me.ScheduleNode
				Set nodeList = elemNode.GetElementsByTagName(strName)
				Set elemNode = Me.GetFirstNode(nodeList)
				
				If Not elemNode Is Nothing Then
					Set nodeList = elemNode.GetElementsByTagName("datetime")
					Set elemNode = Me.GetFirstNode(nodeList)
					
					If Not elemNode Is Nothing Then
						Set objDT = ConvDateTime(elemNode.FirstChild.NodeValue)
						varVal = objDT.LsLocalTime
					End If
					
				End If
				
			Case Else
				Set elemNode = Me.ScheduleNode
				varVal = elemNode.GetAttribute(strName)
				
		End Select
		
		If IsArray(varVal) Then
		ElseIf varVal = "" Then
			Dim empty As Variant
			varVal = empty
		End If
		
		GetSchedule = varVal
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Function
	End Function
	
	'@param
	' strName : (String)
	'  type, dayofweek, runlocation, onweekends
	'@return : (String) スケジュール設定値のテキスト
	Function GetScheduleText(strName As String) As String
		On Error GoTo ErrorHandle
		
		Dim strValue As String
		
		strValue = Me.GetSchedule(strName)
		
		GetScheduleText = Me.ChangeScheduleText(strName, strValue)
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Function
	End Function
	
	Function ChangeScheduleText(strName As String, strValue As String) As String
		On Error GoTo ErrorHandle
		
		Dim retVal As String
		
		Select Case LCase$(strName)
		Case "type"
			Select Case strValue
			Case "byminutes":retVal="一日一回以上"
			Case "daily":retVal="日次"
			Case "weekly":retVal="週次"
			Case "monthly":retVal="月次"
			Case "never":retVal="なし"
			End Select
		Case "dayofweek"
			Select Case strValue
			Case "sunday":retVal = "日曜日"
			Case "monday":retVal = "月曜日"
			Case "tuesday":retVal = "火曜日"
			Case "wednesday":retVal = "水曜日"
			Case "thursday":retVal = "木曜日"
			Case "friday":retVal = "金曜日"
			Case "saturday":retVal = "土曜日"
			End Select
		Case "runlocation"
			Select Case strValue
			Case "choose":retVal = "エージェントが有効になったときにサーバーを指定"
			Case "specific":retVal = strValue
			Case Else:retVal = ""
			End Select
		Case "onweekends"
			If strValue = "false" Then retVal = "週末はエージェントを実行しない"
		Case Else
			retVal = strValue
		End Select
		
		ChangeScheduleText = retVal
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Function
	End Function
	
	'@return : (Boolean) True : スケジュールエージェント、False : スケジュールエージェント以外
	Property Get IsSchedule As Boolean
		IsSchedule = (Me.GetProperty("trigger") = "scheduled")
	End Property
	
	'@return : (Boolean) True : 自動エージェント、 False : 自動エージェント以外
	Property Get IsAutomatic As Boolean
		On Error GoTo ErrorHandle
		
		Dim elemNode As NotesDOMElementNode
		Set elemNode = Me.ScheduleNode
		If Not elemNode Is Nothing Then IsAutomatic = (elemNode.GetAttribute("type") = "automatic")
		
		Exit Property
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Property
	End Property
	
	'@return : (Boolean) True : デフォルトエージェント、 False : デフォルトエージェント以外
	Property Get IsDefault As Boolean
		IsDefault = (Me.GetProperty("default") = "true")
	End Property
	
	'@return
	'(Boolean) True : 文書の選択有、False : 無
	Property Get HasSearch As Boolean
		On Error GoTo ErrorHandle
		
		Dim elemNode As NotesDOMElementNode
		Set elemNode = Me.DocumentSetNode
		If Not elemNode Is Nothing Then HasSearch = (elemNode.NumberOfChildNodes &lt;&gt; 0)
		
		Exit Property
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Property
	End Property
	
End Class
Class CNotesDatabaseDXL As CNotesDesignDXL
	
	'@override
	'@param
	'(Variant)param: only NotesNoteCollection
	Function ParseDOM(param As Variant) As Integer
		On Error GoTo ErrorHandle
		
		Dim notes As NotesNoteCollection
		
		Set notes = param
		
		If TypeName(param) = UCase$("NotesNoteCollection") Then
			Set Me.Database = notes.Parent
			Call CNotesDesignDXL..ParseDOM(notes)
		End If
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		ParseDOM = FUNCTIONFAILURE
		Exit Function
	End Function
	
	'@override
	Property Get NoteInfoNode As NotesDOMElementNode
		On Error GoTo ErrorHandle
		
		Dim elemNode As NotesDOMElementNode
		Dim nodeList As NotesDOMNodeList
		
		If Me.IsAvailable("NoteInfoNode") = False Then
			Set elemNode = Me.GetNoteNode("icon", "true")
			If Not elemNode Is Nothing then
				Set nodeList = elemNode.GetElementsByTagName("noteinfo")
				Set elemNode = Me.GetFirstNode(nodeList)
			End If
			Set Me.Members("NoteInfoNode") = elemNode
		Else
			Set elemNode = Me.Members("NoteInfoNode")
		End If
		
		Set NoteInfoNode = elemNode
		
		Exit Property
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Property
	End Property
	
	Property Get DatabaseNode As NotesDOMElementNode
		On Error GoTo ErrorHandle
		
		Dim elemNode As NotesDOMElementNode
		
		If Me.IsAvailable("DatabaseNode") = False Then
			Set elemNode = Me.RootNode
			Set Me.Members("DatabaseNode") = elemNode
		Else
			Set elemNode = Me.Members("DatabaseNode")
		End If
		
		Set DatabaseNode = elemNode
		
		Exit Property
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Property
	End Property
	
	Property Get DatabaseInfoNode As NotesDOMElementNode
		On Error GoTo ErrorHandle
		
		Dim nodeList As NotesDOMNodeList
		Dim elemNode As NotesDOMElementNode
		
		If Me.IsAvailable("DatabaseInfoNode") = False Then
			Set nodeList = Me.DatabaseNode.GetElementsByTagName("databaseinfo")
			Set elemNode = Me.GetFirstNode(nodeList)
			Set Me.Members("DatabaseInfoNode") = elemNode
		Else
			Set elemNode = Me.Members("DatabaseInfoNode")
		End If
		
		Set DatabaseInfoNode = elemNode
		
		Exit Property
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Property
	End Property
	
	Property Get FullTextSettingsNode As NotesDOMElementNode
		On Error GoTo ErrorHandle
		
		Dim nodeList As NotesDOMNodeList
		Dim elemNode As NotesDOMElementNode
		
		If Me.IsAvailable("FullTextSettingsNode") = False Then
			Set nodeList = Me.DatabaseNode.GetElementsByTagName("fulltextsettings")
			Set elemNode = Me.GetFirstNode(nodeList)
			Set Me.Members("FullTextSettingsNode") = elemNode
		Else
			Set elemNode = Me.Members("FullTextSettingsNode")
		End If
		
		Set FullTextSettingsNode = elemNode
		
		Exit Property
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Property
	End Property
	
	Property Get LaunchSettingsNode As NotesDOMElementNode
		On Error GoTo ErrorHandle
		
		Dim nodeList As NotesDOMNodeList
		Dim elemNode As NotesDOMElementNode
		
		If Me.IsAvailable("LaunchSettingsNode") = False Then
			Set nodeList = Me.DatabaseNode.GetElementsByTagName("launchsettings")
			Set elemNode = Me.GetFirstNode(nodeList)
			Set Me.Members("LaunchSettingsNode") = elemNode
		Else
			Set elemNode = Me.Members("LaunchSettingsNode")
		End If
		
		Set LaunchSettingsNode = elemNode
		
		Exit Property
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Property
	End Property
	
	Property Get IconNoteDXL As CNotesDesignDXL
		On Error GoTo ErrorHandle
		
		Dim elemNode As NotesDOMElementNode
		Dim objDXL As CNotesDesignDXL
		
		If Me.IsAvailable("IconNoteDXL") = False Then
			Set elemNode = Me.GetNoteNode("icon", "true")
			If Not elemNode Is Nothing Then
				Set objDXL = New CNotesDesignDXL
				Call objDXL.ParseDOM(elemNode)
			End If
			Set Me.Members("IconNoteDXL") = objDXL
		Else
			Set objDXL = Me.Members("IconNoteDXL")
		End If
		
		Set IconNoteDXL = objDXL
		
		Exit Property
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Property
	End Property
	
	Property Get ReplicationFormulaDXL As CNotesDesignDXL
		On Error GoTo ErrorHandle
		
		Dim elemNode As NotesDOMElementNode
		Dim objDXL As CNotesDesignDXL
		
		If Me.IsAvailable("ReplicationFormulaDXL") = False Then
			Set elemNode = Me.GetNoteNode("replicationformula", "")
			If Not elemNode Is Nothing Then
				Set objDXL = New CNotesDesignDXL
				Call objDXL.ParseDOM(elemNode)
			End If
			Set Me.Members("ReplicationFormulaDXL") = objDXL
		Else
			Set objDXL = Me.Members("ReplicationFormulaDXL")
		End If
		
		Set ReplicationFormulaDXL = objDXL
		
		Exit Property
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Property
	End Property
	
	Property Get ArchiveProfileDXL As CNotesDesignDXL
		On Error GoTo ErrorHandle
		
		Dim elemNode As NotesDOMElementNode
		Dim objDXL As CNotesDesignDXL
		
		If Me.IsAvailable("ArchiveProfileDXL") = False Then
			Set elemNode = Me.GetProfileDocumentNode("archive profile")
			If Not elemNode Is Nothing Then
				Set objDXL = New CNotesDesignDXL
				Call objDXL.ParseDOM(elemNode)
			End If
			Set Me.Members("ArchiveProfileDXL") = objDXL
		Else
			Set objDXL = Me.Members("ArchiveProfileDXL")
		End If
		
		Set ArchiveProfileDXL = objDXL
		
		Exit Property
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Property
	End Property
	
	'@param
	'(String)strClass : Class Name
	'(String)strDefault : has "default" attribute
	Function GetNoteNode(strClass As String, strDefault As String) As NotesDOMElementNode
		On Error GoTo ErrorHandle
		
		Dim nodeList As NotesDOMNodeList
		Dim elemNode As NotesDOMElementNode
		Dim entryNode As NotesDOMElementNode
		Dim strMember As String
		
		strMember="obj" &amp; strClass &amp; "NoteNode"
		
		If Me.IsAvailable(strMember) = False Then
			Set nodeList = Me.DatabaseNode.GetElementsByTagName("note")
			Set elemNode = Me.GetFirstNode(nodeList)
			Do Until elemNode Is Nothing
				If elemNode.IsNull = True Then
				ElseIf elemNode.GetAttribute("class") = LCase$(strClass) Then
					Set entryNode = elemNode
					If LCase$(strDefault) = "true" And elemNode.GetAttribute("default") = LCase$(strDefault) Then
						Exit Do
					End If
				End If
				Set elemNode = Me.GetNextSibling(elemNode)
			Loop
			Set Me.Members(strMember) = entryNode
		Else
			Set entryNode = Me.Members(strMember)
		End If
		
		Set GetNoteNode = entryNode
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Function
	End Function
	
	'@param
	'(String)strName : Profile Name
	Function GetProfileDocumentNode(strName As String) As NotesDOMElementNode
		On Error GoTo ErrorHandle
		
		Dim nodeList As NotesDOMNodeList
		Dim elemNode As NotesDOMElementNode
		Dim entryNode As NotesDOMElementNode
		Dim strMember As String
		Dim i As Integer
		
		strMember="obj" &amp; strName &amp; "ProfileDocumentNode"
		
		If Me.IsAvailable(strMember) = False Then
			Set nodeList = Me.DatabaseNode.GetElementsByTagName("profiledocument")
			Set elemNode = Me.GetFirstNode(nodeList)
			Do Until elemNode Is Nothing
				If elemNode.IsNull = True Then
				ElseIf elemNode.GetAttribute("name") = LCase$(strName) Then
					Exit Do
				End If
				Set elemNode = Me.GetNextSibling(elemNode)
			Loop
			Set Me.Members(strMember) = entryNode
		Else
			Set entryNode = Me.Members(strMember)
		End If
		
		Set GetProfileDocumentNode = entryNode
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Function
	End Function
	
	'@param
	'(String)strName
	' dbid, odsversion, diskspace, percentused, numberofdocuments
	' datamodified, designmodified, created, modified
	Function GetProperty(strName As String) As Variant
		On Error GoTo ErrorHandle
		
		Dim elemNode As NotesDOMElementNode
		Dim nodeList As NotesDOMNodeList
		Dim objDT As NotesDateTime
		Dim retVal As Variant
		
		Select Case LCase$(strName)
			Case "dbid", "odsversion", "diskspace", "percentused", "numberofdocuments"
				Set elemNode = Me.DatabaseInfoNode
				If elemNode Is Nothing Then
					retVal = ""
				Else
					retVal = elemNode.GetAttribute(strName)
				End If
			Case "datamodified", "designmodified"
				If Me.IsAvailable("var" &amp; strName) = False Then
					Set elemNode = Me.DatabaseInfoNode
					Set nodeList = elemNode.GetElementsByTagName(strName)
					Set elemNode = Me.GetFirstNode(nodeList)
					If Not elemNode Is Nothing Then
						Set nodeList = elemNode.GetElementsByTagName("datetime")
						Set elemNode = Me.GetFirstNode(nodeList)
						Set objDT = ConvDateTime(elemNode.FirstChild.NodeValue)
						retVal = objDT.LsLocalTime
					End If
					Me.Members("var" &amp; strName) = retVal
				Else
					retVal = Me.Members("var" &amp; strName)
				End If
			Case "created":retVal=Me.Created
			Case "modified":retVal=Me.Modified
			Case Else
				retVal = Me.DatabaseNode.GetAttribute(strName)
		End Select
		
		GetProperty = retVal
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Function
	End Function
	
	'@param
	'(String)strName
	' usejavascriptinpages, requiressl, nourlopen, allowpost8html, allowbackgroundagents,
	' allowstoredforms, imageloadsdeferred, allowdocumentlocking, inheritostheme
	' diskspace, percentused, numberofdocuments, datamodified, designmodified
	' created, modified, replicaid, odsversion
	' allowdesignlocking, listindbcatalog, showinopendialog, multidbindexed,
	' markmodifiedunread, trackreplyfwd, fromtemplate, advancedtemplate,
	' copyprofiledocswithdesign, multilingual, defaultlanguage, defaultsortorder,
	' unicodestandardsorting
	' maintainunread, replicateunread, optimizetablebitmaps, overwritefreespace,
	' savelastaccessed, logtransactions, allowspecialhierarchy, uselz1, allowheadlinemonitors,
	' increasemaxfields, supportrespthread, nosimplesearch, compressdesign, compressdata,
	' noautoviewupdate, disableexport, allowsoftdeletion, maxupdatedbyentries, maxrevisionentries,
	' allowrestdbapi
	Function GetPropertyText(strName As String) As String
		On Error GoTo ErrorHandle
		
		Dim retVal As String, strValue As String, tmpStr As String
		Dim elemNode As NotesDOMElementNode
		Dim nodeList As NotesDOMNode
		Dim objDXL As CNotesAgentDXL
		Dim i As Integer
		Dim result As Integer
		
		strValue = Me.GetProperty(strName)
		
		Select Case strName
		'[基本]タブ
		Case "usejavascriptinpages":If strValue&lt;&gt;"false" Then retVal="ページ生成時に JavaScript を使用"
		Case "requiressl":If strValue="true" Then retVal="SSL接続の要求"
		Case "nourlopen":If strValue="true" Then retVal="URL参照を許可しない"
		Case "$AllowPost8HTML", "allowpost8html":
			Set objDXL = Me.IconNoteDXL
			If Not objDXL Is Nothing Then
				result = objDXL.GetItemNode("$AllowPost8HTML", elemNode)
				If result = FUNCTIONFAILURE Then
					Error USERERR, Error
				End If
				
				If elemNode Is Nothing Then
				ElseIf elemNode.NumberOfChildNodes &lt;&gt; 0 Then
				ElseIf elemNode.FirstChild.NodeValue = "1" Then
					retVal="拡張 HTML 生成を有効にする"
				End If
			End If
		Case "allowbackgroundagents":If strValue="false" Then retVal = "バックグラウンドエージェント不可"
		Case "allowstoredforms":If strValue&lt;&gt;"false" Then retVal="格納フォームの使用を許可"
		Case "imageloadsdeferred":If strValue="true" Then retVal="ロード後にイメージを表示"
		Case "allowdocumentlocking":If strValue="true" Then retVal="文書ロックを許可"
		Case "inheritostheme":If strValue="true" Then retVal="Lotus Notes プリファレンスからオペレーティングシステムのテーマを継承する"
		'[情報]タブ
		Case "diskspace"
			Dim aryUNIT As Variant, dblSize As Double, strUNIT As String
			aryUNIT=Split("B,MB,GB,TB")
			dblSize=CDbl(strValue)
			strUNIT=aryUNIT(0)
			For i = 0 To UBound(aryUNIT)
				If 4 &lt; Len(CStr(dblSize)) Then
					dblSize=(dblSize/1024)
					strUNIT=aryUNIT(i)
				End If
			Next
			retVal="サイズ[" &amp; strValue &amp; " " &amp; strUNIT &amp; "]"
		Case "percentused":retVal="使用率[" &amp; CStr(Round(strValue, 2)) &amp; " %]"
		Case "numberofdocuments":retVal="文書数[" &amp; strValue &amp; " 文書]"
		Case "datamodified":retVal="データ更新日[" &amp; strValue &amp; "]"
		Case "designmodified":retVal="設計更新日[" &amp; strValue &amp; "]"
		Case "created":retVal="作成日[" &amp; strValue &amp; "]"
		Case "modified":retVal="更新日[" &amp; strValue &amp; "]"
		Case "replicaid", "dbid":retVal="レプリカID[" &amp; strValue &amp; "]"
		Case "odsversion":retVal="ODSバージョン[" &amp; strValue &amp; "]"
		'ユーザーの使用状況はlog.nsfのSession文書を参照・集計することで得られる
		'[設計]タブ
		Case "allowdesignlocking":If strValue="true" Then retVal="設計のロックを許可"
		Case "ListInDbCatalog","listindbcatalog"
			If Me.Database.ListInDbCatalog Then
				retVal="データベースカタログに表示[" &amp; Me.GetProperty("categories") &amp; "]"
			End If
		Case "showinopendialog":If strValue&lt;&gt;"false" Then retVal="[アプリケーションを開く]ダイアログに表示"
		Case "multidbindexed":If strValue="true" Then retVal="サイト検索に含む"
		Case "markmodifiedunread":If strValue="false" Then retVal="更新文書に未読マークをつけない"
		Case "trackreplyfwd":If strValue="true" Then retVal="返信あるいは転送をマークする"
		Case "fromtemplate":If strValue&lt;&gt;"" Then retVal="テンプレートから設計を引き継ぐ[" &amp; strValue &amp; "]"
		Case "templatename":If strValue&lt;&gt;"" Then retVal="マスターテンプレートデータベース[" &amp; strValue &amp; "]"
		Case "advancedtemplate":If strValue="true" Then retVal="詳細テンプレートとして[新規アプリケーション]ダイアログにリスト表示"
		Case "copyprofiledocswithdesign":If strValue="true" Then retVal="設計と共にプロファイル文書をコピー"
		Case "multilingual":If strValue="true" Then retVal="マルチリンガル データベース"
		Case "defaultlanguage":If strValue&lt;&gt; "" Then retVal="デフォルトの言語[" &amp; strValue &amp; "]"
		Case "defaultsortorder":If strValue&lt;&gt;"" Then retVal="デフォルトのソート方法[" &amp; strValue &amp; "]"
		Case "unicodestandardsorting":If strValue="true" Then retVal="Unicode スタンダードソート"
		'[詳細タブ]
		Case "maintainunread":If strValue="false" Then retVal="未読マークを複製しない"
		Case "replicateunread"
			Select Case strValue
			Case "cluster":retVal="未読マークを複製する[クラスタサーバーのみ]"
			Case "all":retVal="未読マークを複製する[すべてのサーバー]"
			Case Else:retVal="未読マークを複製する[なし]"
			End Select
		Case "optimizetablebitmaps":If strValue="true" Then retVal="文書テーブルマップの最適化"
		Case "overwritefreespace":If strValue="false" Then retVal="空きスペースに上書きしない"
		Case "savelastaccessed":If strValue="true" Then retVal="LastAccessed プロパティを保持"
		Case "logtransactions":If strValue="false" Then retVal="トランザクションログを無効"
		Case "allowspecialhierarchy":If strValue="false" Then retVal="文書の階層情報を使用しない"
		Case "uselz1":If strValue="true" Then retVal="添付ファイルの圧縮形式として LZ1 を使用"
		Case "allowheadlinemonitors":If strValue="false" Then retVal="ヘッドラインモニターを許可しない"
		Case "increasemaxfields":If strValue="true" Then retVal="データベースで多くのフィールドを許可"
		Case "supportrespthread":If strValue="true" Then retVal="返答スレッド履歴をサポート"
		Case "nosimplesearch":If strValue="true" Then retVal="簡易検索を許可しない"
		Case "compressdesign":If strValue="true" Then retVal="データベース設計の圧縮"
		Case "compressdata":If strValue="true" Then retVal="文書データの圧縮"
		Case "noautoviewupdate":If strValue="true" Then retVal="ビューの自動更新を無効にする"
		Case "$DisableExport", "disableexport":
			Set objDXL = Me.IconNoteDXL
			If Not objDXL Is Nothing Then
				result = objDXL.GetItemNode("$DisableExport", elemNode)
				If result = FUNCTIONFAILURE Then
					Error USERERR, Error
				End If
				
				If elemNode Is Nothing Then
				ElseIf elemNode.NumberOfChildNodes &lt;&gt; 0 Then
				ElseIf elemNode.FirstChild.NodeValue = "1" Then
					retVal="ビューデータの書き出しを無効にする"
				End If
			End If
		Case "allowsoftdeletion"
			If strValue="true" Then
				tmpStr=Me.GetProperty("softdeletionsexpirein")
				If tmpStr = "" Then tmpStr="48"
				retVal="一時的削除を許可[文書を完全に削除:" &amp; tmpStr &amp; " 時間後]"
			End If
		Case "maxupdatedbyentries":retVal="$UpdatedBy フィールドのエントリ制限[" &amp; strValue &amp; "]"
		Case "maxrevisionentries":retVal="$Revisions フィールドのエントリ制限[" &amp; strValue &amp; "]"
		Case "$AllowRESTDbAPI", "allowrestdbapi"
			Set objDXL = Me.IconNoteDXL
			If Not objDXL Is Nothing Then
				result = objDXL.GetItemNode("$AllowRESTDbAPI", elemNode)
				If result = FUNCTIONFAILURE Then
					Error USERERR, Error
				End If
				
				If elemNode Is Nothing Then
				ElseIf elemNode.NumberOfChildNodes &lt;&gt; 0 Then
				ElseIf elemNode.FirstChild.NodeValue = "1" Then
					retVal="Lotus Domino データサービスを許可[ビューのみ]"
				ElseIf elemNode.FirstChild.NodeValue = "2" Then
					retVal="Lotus Domino データサービスを許可[ビューと文書]"
				End If
			End If
		Case Else:retVal = strValue
		End Select
		
		GetPropertyText = retVal
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Function
	End Function
	
	'
	Function GetArchiveProfile(strName As String) As Variant
		On Error GoTo ErrorHandle
		
		Dim itemNode As NotesDOMElementNode
		Dim nodeList As NotesDOMNodeList
		Dim elemNode As NotesDOMElementNode
		Dim objDXL As CNotesDesignDXL
		Dim retVal As Variant
		Dim i As Integer
		Dim result As Integer
		
		Set objDXL = Me.ArchiveProfileDXL
		If objDXL Is Nothing Then Exit Function
		
		Select Case strName
			Case "ArchProfilesToCopy", "ArchivePrivatePolicyList"
				result = objDXL.GetItemNode(strName, itemNode)
				
				
				If itemNode Is Nothing Then
				ElseIf itemNode.NumberOfChildNodes&lt;&gt; 0 Then
					Set elemNode = itemNode.FirstChild
					Set nodeList = elemNode.GetElementsByTagName("text")
					Set elemNode = Me.GetFirstNode(nodeList)
					If Not elemNode Is Nothing Then
						ReDim retVal(0) As Variant
						retVal(0) = elemNode.NodeValue
						Set elemNode = Me.GetNextSibling(elemNode)
						Do Until elemNode Is Nothing
							retVal = ArrayAppend(retVal, elemNode.NodeValue)
							Set elemNode = Me.GetNextSibling(elemNode)
						Loop
					End If
				End If
			Case "created":retVal=objDXL.Created
			Case "modified":retVal=objDXL.Modified
			Case "revised":retVal=objDXL.revised
			Case "lastaccessed":retVal=objDXL.LastAccessed
			Case "addedtofile":retVal=objDXL.AddedToFile
			Case "updatedby":retVal=objDXL.UpdatedBy
			Case "revisions":retVal=objDXL.Revised
			Case "wassignedby":retVal=objDXL.SignedBy
			Case Else
				result = Me.GetItemNode(strName, itemNode)
				If result = FUNCTIONFAILURE Then
					Error USERERR, Error
				End If
				
				If itemNode Is Nothing Then
				ElseIf itemNode.NumberOfChildNodes &lt;&gt; 0 Then
					Set nodeList = itemNode.GetElementsByTagName("text")
					Set elemNode = Me.GetFirstNode(nodeList)
					If Not elemNode Is Nothing Then
						retVal=elemNode.NodeValue
					End If
				End If
		End Select
		
		GetArchiveProfile = retVal
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Function
	End Function
	
	Function GetArchiveProfileText(strName As String) As String
		On Error GoTo ErrorHandle
		
		Dim retVal As Variant, strValue As String, tmpStr As String
		
		strValue=Me.GetArchiveProfileText(strName)
		Select Case strName
		Case "ArchiveOnClientOrServer"
			tmpStr=Me.GetArchiveProfile("ServerName")
			
			Select Case strValue
			Case "1"
				If tmpStr="" Then tmpStr="Local"
				retVal="Lotus Notes クライアントベース(実行先)[" &amp; tmpStr &amp; "]"
			Case "2"
				retVal=Me.GetArchiveProfile("ArchSrcServer")
				If tmpStr="" Then tmpStr="Local"
				If retVal="" Then retVal="Local"
				retVal="Lotus Domino サーバー(実行場所)[" &amp; tmpStr &amp; "=&gt;" &amp; retVal &amp; "]"
			End Select
		End Select
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Function
	End Function
	
	'@param
	'(String)strName
	' lastindexed, size, update, casesensitive, includeattachments, breakat
	Function GetFullTextSettings(strName As String) As Variant
		On Error GoTo ErrorHandle
		
		Dim elemNode As NotesDOMElementNode
		Dim nodeList As NotesDOMNodeList
		Dim objDT As NotesDateTime
		Dim retVal As Variant
		
		Select Case strName
			Case "lastindexed"
				If Me.IsAvailable("var" &amp; strName) = False Then
					Set elemNode = Me.FullTextSettingsNode
					Set nodeList = elemNode.GetElementsByTagName(strName)
					Set elemNode = Me.GetFirstNode(nodeList)
					If Not elemNode Is Nothing Then
						If elemNode.NumberOfChildNodes &lt;&gt; 0 Then
							Set objDT = ConvDateTime(elemNode.FirstChild.NodeValue)
							retVal = objDT.Lslocaltime
						End If
					End If
					Me.Members("var" &amp; strName) = retVal
				Else
					retVal = Me.Members("var" &amp; strName)
				End If
			Case Else
				Set elemNode = Me.FullTextSettingsNode
				If elemNode Is Nothing Then
					retVal = ""
				Else
					retVal = elemNode.GetAttribute(strName)
				End If
		End Select
		
		GetFullTextSettings = retVal
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Function
	End Function
	
	'@param
	'(String)strName
	' update, casesensitive, includeattachments, includeencryptedfields, breakat
	Function GetFullTextSettingsText(strName As String) As String
		On Error GoTo ErrorHandle
		
		Dim retVal As String, strValue As String
		strValue = Me.GetFullTextSettings(strName)
		Select Case strName
		Case "update"
			Select Case strValue
			Case "immediate":retVal="即時"
			Case "hourly":retVal="1時間おき"
			Case "scheduled":retVal="スケジュールに合わせる"
			Case "daily":retVal="毎日"
			Case Else:retVal=strValue
			End Select
		Case "casesensitive"
			If strValue="true" Then
				retVal="大文字/小文字を区別[ON]"
			Else
				retVal="大文字/小文字を区別[OFF]"
			End If
		Case "breakat"
			If strValue="wordssentencesparagraphs" Then
				retVal="単語、文、段落"
			Else
				retVal="単語のみ"
			End If
		Case "includeattachments", "attachmenttype"
			If Me.GetProperty("includeattachments")="true" Then
				If Me.GetProperty("attachmenttype")="includebinary" Then
					retVal="添付ファイルの索引[ON(詳細)]"
				Else
					retVal="添付ファイルの索引[ON(簡易)]"
				End If
			Else
				retVal="添付ファイルの索引[OFF)]"
			End If
		Case "includeencryptedfields"
			If strValue="false" Then
				retVal="暗号フィールドの索引[OFF]"
			Else
				retVal="暗号フィールドの索引[ON]"
			End If
		Case Else:retVal=strValue
		End Select
		
		GetFullTextSettingsText = retVal
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Function
	End Function
	
	'@param
	'(String)strTagName:
	' noteslaunch, weblaunch
	'(String)strName
	' whenopened, restorelastview, showaboutdocument
	Function GetLaunchSettings(strTagName As String, strName As String) As String
		On Error GoTo ErrorHandle
		
		Dim elemNode As NotesDOMElementNode
		Dim retVal As String
		
		Select Case strTagName
		Case "noteslaunch"
			Set elemNode = Me.LaunchSettingsNode
			If elemNode Is Nothing Then
				retVal = ""
			Else
				retVal = elemNode.GetAttribute(strName)
			End If
		case "weblaunch"
			Set elemNode = Me.LaunchSettingsNode
			If elemNode Is Nothing Then
				retVal = ""
			Else
				retVal = elemNode.GetAttribute(strName)
			End If
		Case Else
			retVal = ""
		End Select
		
		GetLaunchSettings = retVal
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Function
	End Function
	
	'@param
	'(String)strTagName:
	' noteslaunch, weblaunch
	'(String)strName
	' whenopened, restorelastview, showaboutdocument
	Function GetLaunchSettingsText(strTagName As String, strName As String) As String
		On Error GoTo ErrorHandle
		
		Dim elemNode As NotesDOMElementNode, nodeList As NotesDOMNodeList
		Dim retVal As String, strValue As String, tmpVal As String
		
		strValue = Me.GetLaunchSettings(strTagName, strName)
		Select Case strName
		Case "whenopened"
			Select Case strValue
			Case "openaboutdocument":retVal="「アプリケーションについて」文書を開く"
			Case "openframeset":retVal="指定されたフレームセットを開く[" &amp; Me.GetLaunchSettings(strTagName, "frameset") &amp; "]"
			Case "opennavigator"
				tmpVal=Me.GetLaunchSettings(strTagName, "navigator")
				If Me.GetLaunchSettings(strTagName, "navigatortype") = "page" Then
					retVal="指定されたナビゲータを開く[ページ:" &amp; tmpVal &amp; "]"
				ElseIf tmpVal = "Folder" Then
					retVal="指定されたナビゲータを開く[フォルダ]"
				Else
					retVal="指定されたナビゲータを開く[ナビゲータ:" &amp; tmpVal &amp; "]"
				End If
			Case "opennavigatorinwindow"
				tmpVal=Me.GetLaunchSettings(strTagName, "navigator")
				If Me.GetLaunchSettings(strTagName, "navigatortype") = "page" Then
					retVal="指定されたナビゲータを画面全体に表示する[ページ:" &amp; tmpVal &amp; "]"
				Else
					retVal="指定されたナビゲータを画面全体に表示する[ナビゲータ:" &amp; tmpVal &amp; "]"
				End If
			Case "openpage":retVal = "指定されたページを開く[ページ:" &amp; Me.GetLaunchSettings(strTagName, "page") &amp; "]"
			Case "openxpage":retVal = "指定されたXPageを開く[XPage:" &amp; Me.GetLaunchSettings(strTagName, "xpage") &amp; "]"
			Case "openfirstaboutattachment":retVal = "「アプリケーションについて」文書の最初の添付を起動する"
			Case "openfirstdoclink":retVal = "「アプリケーションについて」文書の最初の文書リンクを起動する"
			Case "opencompapp"
				tmpVal=Me.GetLaunchSettings(strTagName, "compapppage")
				retVal="コンポジットアプリケーションとして起動する[名前:" &amp; Me.GetLaunchSettings(strTagName, "compapp") &amp; ", ページ:" &amp; tmpVal &amp; "]"
			Case "openspecifieddoclink"
				Set elemNode = Me.LaunchSettingsNode
				Set nodeList = elemNode.GetElementsByTagName("doclink")
				Set elemNode = Me.GetFirstNode(nodeList)
				If Not elemNode Is Nothing Then
					tmpVal = "/" &amp; elemNode.GetAttribute("database") &amp; "/" &amp; elemNode.GetAttribute("view") &amp; "/" &amp; elemNode.GetAttribute("document")
				End If
				retVal="指定された文書リンクを起動する[" &amp; tmpVal &amp; "]"
			Case "openfirstdocumentinview"
				retVal="ビューの最初の文書を起動する[ビュー:" &amp; Me.GetLaunchSettings(strTagName, "view") &amp; "]"
			Case Else
				Select Case strTagName
				Case "noteslaunch":retVal="最後に表示していたものを表示する"
				Case "weblaunch":retVal="Lotus Notes 起動オプションを使う"
				End Select
			End Select
		Case "restorelastview":If strValue = "true" Then retVal = "最後に表示されていたものを表示する"
		Case "showaboutdocument"
			Select Case strValue
			Case "firstopenandchanged":retVal = "更新時に「アプリケーションについて」文書を表示する"
			Case "never":retVal = ""
			Case Else:retVal = "アプリケーションの初回起動時に「アプリケーションについて」文書を表示する"
			End Select
		Case Else
			retVal = strValue
		End Select
		
		GetLaunchSettingsText = retVal
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Function
	End Function
	
	Property Get Database As NotesDatabase
		If Me.IsAvailable("Database") = True Then Set Database = Me.Members("Database")
	End Property
	
	Property Set Database As NotesDatabase
		Set Me.Members("objDatabase") = Database
	End Property
	
End Class
Class CNotesFormDXL As CNotesDesignDXL
	
	Property Get FormNode As NotesDOMElementNode
		On Error GoTo ErrorHandle
		
		Dim elemNode As NotesDOMElementNode
		Dim nodeList As NotesDOMNodeList
		
		If Me.IsAvailable("FormNode") = False Then
			Set elemNode = Me.RootNode
			If StrCompare(elemNode.TagName, "form", 1) &lt;&gt; 0 Then
				Set nodeList = elemNode.GetElementsByTagName("form")
				Set elemNode = Me.GetFirstNode(nodeList)
			End If
			Set Me.Members("FormNode") = elemNode
		Else
			Set elemNode = Me.Members("FormNode")
		End If
		
		Set FormNode = elemNode
		
		Exit Property
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Property
	End Property
	
	Property Get BackgroundNode As NotesDOMElementNode
		On Error GoTo ErrorHandle
		
		Dim nodeList As NotesDOMNodeList
		Dim elemNode As NotesDOMElementNode
		
		If Me.IsAvailable("BackgroundNode") = False Then
			Set elemNode = Me.FormNode
			Set nodeList = elemNode.GetElementsByTagName("background")
			Set elemNode = Me.GetFirstNode(nodeList)
			Set Me.Members("BackgroundNode") = elemNode
		Else
			Set elemNode = Me.Members("BackgroundNode")
		End If
		
		Set BackgroundNode = elemNode
		
		Exit Property
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Property
	End Property
	
	'@return : (String Array)
	'name,alias,type,nocompose,otherdialog,
	'noquery,versions,manualversion,default,storeform,nofieldexchange,
	'recalc,anonymous,noinitialfocus,nofocusonf6,signdocuments,renderpassthrough,
	'nofieldindex,allowautosave,conflictaction,inherit,inheritdoc,inheritdocfield,
	'contextpane,editonopen,mailable,xpagealtclient,treatashtml,mimecharset,
	'htmlallfields,activelinkcolor,visitedlinkcolor,unvisitedlinkcolor,
	'metadataname,resourcename,autolunch,frameinfo,bgcolor,imageref,header,
	'footer,readers,formusers,keepprivate,publicaccess,designerversion
	Property Get AllPropertyNames As Variant
		On Error GoTo ErrorHandle
		
		If Me.IsAvailable("AllPropertyNames") = False Then
			Me.Members("AllPropertyNames") = Split("name,alias,type,nocompose,otherdialog," &amp;_
			"noquery,versions,manualversion,default,storeform,nofieldexchange," &amp;_
			"recalc,anonymous,noinitialfocus,nofocusonf6,signdocuments,renderpassthrough," &amp;_
			"nofieldindex,allowautosave,conflictaction,inherit,inheritdoc,inheritdocfield," &amp;_
			"contextpane,editonopen,mailable,xpagealtclient,treatashtml,mimecharset," &amp;_
			"htmlallfields,activelinkcolor,visitedlinkcolor,unvisitedlinkcolor," &amp;_
			"metadataname,resourcename,autolunch,frameinfo,bgcolor,imageref,header," &amp;_
			"footer,readers,formusers,keepprivate,publicaccess,designerversion"_
			, ",")
		End If
		
		AllPropertyNames = Me.Members("AllPropertyNames")
		
		Exit Property
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Property
	End Property
	
	'@param
	' lstProperty(戻り値) :(Variant List)
	Function GetAllPropertys(lstProperty As Variant) As Integer
		On Error GoTo ErrorHandle
		
		Dim aryNames As Variant
		Dim result As Integer
		
		aryNames = Me.AllPropertyNames
		
		result = Me.GetPropertysByName(aryNames, lstProperty)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		GetAllPropertys = lstProperty
		Exit Function
	End Function
	
	'@param
	' aryNames : (String Array) property names
	' lstProperty(戻り値) :(Variant List)
	Function GetPropertysByName(aryNames As Variant, lstProperty As Variant) As Integer
		On Error GoTo ErrorHandle
		
		'Dim lstProperty List As Variant
		Dim varVal As Variant
		Dim empty As Variant
		Dim result As Integer
		
		ForAll n In aryNames
			result = Me.GetProperty(CStr(n), varVal)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
			lstProperty(CStr(n)) = varVal
			varVal = empty
		End ForAll
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		GetPropertysByName = FUNCTIONFAILURE
		Exit Function
	End Function
	
	Function GetProperty2(strName As String) As Variant
		GetProperty2 = Me.FormNode.Getattribute(strName)
	End Function
	
	'@return プロパティ値
	Function GetProperty(strName As String, value As Variant) As Integer
		On Error GoTo ErrorHandle
		
		Dim elemNode As NotesDOMElementNode
		Dim nodeList As NotesDOMNodeList
		Dim domNode As NotesDOMNode
		Dim tmpAry As Variant
		Dim retVal As Variant
		Dim result As Integer
		
		Select Case strName
			'**フォーム情報**********
			'Case "name"':retVal="設計名"
			'Case "alias"':retVal="別名"
			'Case "type"':retVal="種類"
			'Case "nocompose"':retVal="メニューに含む"
			'Case "otherdialog"':retVal="[作成] - [その他] ダイアログ"
			'Case "noquery"':retVal="検索ビルダーに含む"
			'Case "versions"':retVal="バージョン"
			'Case "manualversion"':retVal="手動 - ファイル - 新規バージョン"
			'Case "default"':retVal="デフォルトのデータベースフォーム"
			'Case "storeform"':retVal="フォームを文書に格納"
			'Case "nofieldexchange"':retVal="データ交換機能を無効にする"
			'Case "recalc"':retVal="フィールドを自動更新"
			'Case "anonymous"':retVal="Anonymous のフォーム"
			'Case "noinitialfocus"':retVal="デフォルトのフォーカスなし"
			'Case "nofocusonf6"':retVal="F6 でフォーカスしない"
			'Case "signdocuments"':retVal="このフォームを使用する文書に署名する"
			'Case "renderpassthrough"':retVal = "IBM Notes パススルー HTML を解釈する"
			'Case "nofieldindex"':retVal = "インデックスにフィールドを追加しない"
			'Case "allowautosave"':retVal = "自動保存を許可する"
			'Case "conflictaction"':retVal="競合時の処理"
				
			'**デフォルト********
			'Case "inherit"':retVal="式で選択文書から値を引き継ぐ"
			'Case "inheritdoc"':retVal="選択文書全体をリッチテキストフィールドに引き継ぐ"
			'Case "inheritdocfield"':retVal="選択文書全体をリッチテキストフィールドに引き継ぐ"
			'Case "contextpane"':retVal="コンテキストペインを表示"
			'Case "editonopen"':retVal="自動的に編集モードにする"
			'Case "mailable"':retVal="メール送信ダイアログ"
			Case "XPageAltClient","xpagealtclient"':retVal="代わりに XPages を表示"
				result = Me.GetItemNode("$XPageAltClient", elemNode)
				If result = FUNCTIONFAILURE Then
					Error USERERR, Error
				End If
				
				If elemNode Is Nothing Then
					retVal = ""
				Else
					Set nodeList = elemNode.GetElementsByTagName("text")
					Set elemNode = Me.GetFirstNode(nodeList)
					retVal = elemNode.FirstChild.NodeValue
				End If
			'Case "treatashtml"':retVal="コンテントタイプ"
			'Case "MimeCharSet","mimecharset"':retVal="文字セット"
			'Case "htmlallfields"':retVal = "全てのフィールドに HTML を生成する"
			'Case "activelinkcolor"':retVal = "アクティブリンク"
			'Case "visitedlinkcolor"':retVal = "既読リンク"
			'Case "unvisitedlinkcolor"':retVal = "未読リンク"
			'Case "metadataname"':retVal="デフォルトデータコネクション"
			'Case "resourcename"':retVal="デフォルトメタデータオブジェクト"
				
			'**起動********
	
			Case "autolunch","AUTOLAUNCH"':retVal="自動起動"
				result = Me.GetItemNode("$AUTOLAUNCH", elemNode)
				If result = FUNCTIONFAILURE Then
					Error USERERR, Error
				End If
				
				If elemNode Is Nothing Then
					retVal = ""
				Else
					Set nodeList = elemNode.GetElementsByTagName("rawitemdata")
					Set elemNode = Me.GetFirstNode(nodeList)
					If Not elemNode Is Nothing Then
						retVal = elemNode.FirstChild.NodeValue
					End If
				End If
			Case "FrameInfo","frameinfo"':retVal="自動フレーム"
				result = Me.GetItemNode("$FrameInfo", elemNode)
				If result = FUNCTIONFAILURE Then
					Error USERERR, Error
				End If
				
				If elemNode Is Nothing Then
					retVal = ""
				Else
					Set nodeList = elemNode.GetElementsByTagName("textlist")
					If nodeList.NumberOfEntries &lt;&gt; 0 Then
						Set elemNode = Me.GetFirstNode(nodeList)
						Set nodeList = elemNode.GetElementsByTagName("text")
					Else
						Set nodeList = elemNode.GetElementsByTagName("text")
					End If
					
					Set domNode = Me.GetFirstNode(nodeList)
					
					If Not domNode Is Nothing Then
						ReDim tmpAry(0) As Variant
						tmpAry(0) = domNode.FirstChild.NodeValue
						
						Set domNode = Me.GetNextSibling(domNode)
						Do Until domNode Is Nothing
							tmpAry = ArrayAppend(tmpAry, domNode.FirstChild.NodeValue)
							Set domNode = Me.GetNextSibling(domNode)
						Loop
						
						retVal = Join(tmpAry, ",")
					End If
				End If
			'**フォームの背景********
			'Case "bgcolor":retVal="色"
			Case "imageref"':retVal="図形またはリソース"
				Set elemNode = Me.BackgroundNode
				If elemNode Is Nothing Then
					retVal = ""
				Else
					Set nodeList = elemNode.GetElementsByTagName("imageref")
					Set elemNode = Me.GetFirstNode(nodeList)
					If Not elemNode Is Nothing Then
						retVal = elemNode.GetAttribute("name")
					End If
				End If
				
			'**ヘッダー********
				
			'**印刷********
			'Case "Header","header":retVal="ヘッダー"
			'Case "Footer","footer":retVal="フッター"
				
			'**セキュリティ********
			'Case "Readers","readers":retVal="フォームで作成した文書のデフォルトのアクセス権"
			'Case "FormUsers","formusers":retVal="フォームで文書を作成できるユーザー"
			'Case "KeepPrivate","keepprivate":retVal="印刷/転送/クリップボードへのコピーを不可"
			'Case "publicaccess":retVal="パブリックアクセスユーザーの使用を許可"
				
			'その他
			'Case "designerversion":retVal="デザイナーバージョン"
				
		Case Else
			Set elemNode = Me.FormNode
			retVal = elemNode.Getattribute(strName)
		End Select
		
		value = retVal
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		GetProperty = FUNCTIONFAILURE
		Exit Function
	End Function
	
	'@return プロパティ値
	Function GetPropertyText(strName As String) As String
		On Error GoTo ErrorHandle
		
		Dim elemNode As NotesDOMElementNode
		Dim strValue As Variant
		
		Select Case strName
			Case Else
				Set elemNode = Me.FormNode
				strValue = elemNode.Getattribute(strName)
		End Select
		
		GetPropertyText = strValue
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Function
	End Function
	
	Function ChangePropertyLabel(strName As String) As String
		
		Dim retVal As String
		
		Select Case strName
			'**フォーム情報**********
			Case "name":retVal="設計名"
			Case "alias":retVal="別名"
			Case "type":retVal="種類"
			Case "nocompose":retVal="メニューに含む"
			Case "otherdialog":retVal="[作成] - [その他] ダイアログ"
			Case "noquery":retVal="検索ビルダーに含む"
			Case "versions":retVal="バージョン"
			Case "manualversion":retVal="手動 - ファイル - 新規バージョン"
			Case "default":retVal="デフォルトのデータベースフォーム"
			Case "storeform":retVal="フォームを文書に格納"
			Case "nofieldexchange":retVal="データ交換機能を無効にする"
			Case "recalc":retVal="フィールドを自動更新"
			Case "anonymous":retVal="Anonymous のフォーム"
			Case "noinitialfocus":retVal="デフォルトのフォーカスなし"
			Case "nofocusonf6":retVal="F6 でフォーカスしない"
			Case "signdocuments":retVal="このフォームを使用する文書に署名する"
			Case "renderpassthrough":retVal = "IBM Notes パススルー HTML を解釈する"
			Case "nofieldindex":retVal = "インデックスにフィールドを追加しない"
			Case "allowautosave":retVal = "自動保存を許可する"
			Case "conflictaction":retVal="競合時の処理"
				
			'**デフォルト********
			Case "inherit":retVal="式で選択文書から値を引き継ぐ"
			Case "inheritdoc":retVal="選択文書全体をリッチテキストフィールドに引き継ぐ"
			Case "inheritdocfield":retVal="選択文書全体をリッチテキストフィールドに引き継ぐ"
			Case "contextpane":retVal="コンテキストペインを表示"
			Case "editonopen":retVal="自動的に編集モードにする"
			Case "mailable":retVal="メール送信ダイアログ"
			Case "XPageAltClient","xpagealtclient":retVal="代わりに XPages を表示"
			Case "treatashtml":retVal="コンテントタイプ"
			Case "MimeCharSet","mimecharset":retVal="文字セット"
			Case "htmlallfields":retVal = "全てのフィールドに HTML を生成する"
			Case "activelinkcolor":retVal = "アクティブリンク"
			Case "visitedlinkcolor":retVal = "既読リンク"
			Case "unvisitedlinkcolor":retVal = "未読リンク"
			Case "metadataname":retVal="デフォルトデータコネクション"
			Case "resourcename":retVal="デフォルトメタデータオブジェクト"
				
			'**起動********
			Case "autolunch":retVal="自動起動"
			Case "FrameInfo","frameinfo":retVal="自動フレーム"
				
			'**フォームの背景********
			Case "bgcolor":retVal="色"
			Case "imageref":retVal="図形またはリソース"
				
			'**ヘッダー********
			
			'**印刷********
			Case "Header","header":retVal="ヘッダー"
			Case "Footer","footer":retVal="フッター"
				
			'**セキュリティ********
			Case "Readers","readers":retVal="フォームで作成した文書のデフォルトのアクセス権"
			Case "FormUsers","formusers":retVal="フォームで文書を作成できるユーザー"
			Case "KeepPrivate","keepprivate":retVal="印刷/転送/クリップボードへのコピーを不可"
			Case "publicaccess":retVal="パブリックアクセスユーザーの使用を許可"
				
			'その他
			Case "designerversion":retVal="デザイナーバージョン"
			Case Else:retVal=strName
		End Select
		
		ChangePropertyLabel = retVal
		
	End Function
	
	Function ChangePropertyText(strName As String, strValue As String) As String
		On Error GoTo ErrorHandle
		
		Dim retVal As String
		Dim domNode As NotesDOMNode
		Dim nodeList As NotesDOMNodeList
		Dim elemNode As NotesDOMElementNode
		Dim tmpStr As String
		Dim tmpVar As Variant
		Dim result As Integer
		
		Select Case strName
			'**フォーム情報**********
			'Case "name":retVal="設計名"
			'Case "alias":retVal="別名"
			Case "type"':retVal="種類"
				Select Case strValue
					Case "document":retVal = "文書"
					Case "response":retVal = "返答"
					Case "responsetoresponse":retVal = "返答の返答"
				End Select
			Case "nocompose"':retVal="メニューに含む"
				If strValue = "true" Then
					retVal = ""
				Else
					retVal = "[作成]"
				End If
			Case "otherdialog"':retVal="[作成] - [その他] ダイアログ"
				If strValue = "true" Then
					retVal = "[作成] - [その他]ダイアログ"
				Else
					retVal = ""
				End If
			Case "noquery"':retVal="検索ビルダーに含む"
				If strValue = "true" Then
					retVal = ""
				Else
					retVal = "○"
				End If
			Case "versions"':retVal="バージョン"
				Select Case strValue
					Case "none":retVal="なし"
					Case "newresponse":retVal="新規文書を返答文書に"
					Case "oldresponse":retVal="以前の文書を返答文書に"
					Case "newsibling":retVal="新規文書を兄弟文書に"
				End Select
			Case "manualversion"':retVal="手動 - ファイル - 新規バージョン"
				If strValue = "true" Then
					retVal = "手動 - ファイル、新規バージョン"
				Else
					retVal = ""
				End If
			Case "default"':retVal="デフォルトのデータベースフォーム"
				If strValue = "true" Then
					retVal = "○"
				Else
					retVal = ""
				End If
			Case "storeform"':retVal="フォームを文書に格納"
				If strValue = "true" Then
					retVal = "○"
				Else
					retVal = ""
				End If
			Case "nofieldexchange"':retVal="データ交換機能を無効にする"
				If strValue = "true" Then
					retVal = "○"
				Else
					retVal = ""
				End If
			Case "recalc"':retVal="フィールドを自動更新"
				If strValue = "true" Then
					retVal = "○"
				Else
					retVal = ""
				End If
			Case "anonymous"':retVal="Anonymous のフォーム"
				If strValue = "true" Then
					retVal = "○"
				Else
					retVal = ""
				End If
			Case "noinitialfocus"':retVal="デフォルトのフォーカスなし"
				If strValue = "true" Then
					retVal = "○"
				Else
					retVal = ""
				End If
			Case "nofocusonf6"':retVal="F6 でフォーカスしない"
				If strValue = "true" Then
					retVal = "○"
				Else
					retVal = ""
				End If
			Case "signdocuments"':retVal="このフォームを使用する文書に署名する"
				If strValue = "true" Then
					retVal = "○"
				Else
					retVal = ""
				End If
			Case "renderpassthrough"':retVal = "IBM Notes パススルー HTML を解釈する"
				If strValue = "true" Then
					retVal = "○"
				Else
					retVal = ""
				End If
			Case "nofieldindex"':retVal = "インデックスにフィールドを追加しない"
				If strValue = "true" Then
					retVal = "○"
				Else
					retVal = ""
				End If
			Case "allowautosave"':retVal = "自動保存を許可する"
				If strValue = "true" Then
					retVal = "○"
				Else
					retVal = ""
				End If
			Case "conflictaction"':retVal="競合時の処理"
				Select Case strValue
					Case "createconflicts":retVal="競合の作成"
					Case "donotcreateconflicts":retVal="競合を作成しない"
					Case "mergeconflicts":retVal="競合のマージ"
					Case "mergenoconflicts":retVal="マージ/競合なし"
				End Select
				
			'**デフォルト********
			Case "inherit"':retVal="式で選択文書から値を引き継ぐ"
				If strValue = "true" Then
					retVal = "○"
				Else
					retVal = ""
				End If
			Case "inheritdoc"':retVal="選択文書全体をリッチテキストフィールドに引き継ぐ"
				Select Case strValue
					Case "none":retVal=""
					Case "link":retVal="[文書リンク]"
					Case "richtext":retVal="[リッチテキスト]"
					Case "collapsed":retVal="[セクション(省略可)]"
				End Select
			'Case "inheritdocfield"':retVal="選択文書全体をリッチテキストフィールドに引き継ぐ"
			Case "editonopen"':retVal="自動的に編集モードにする"
				If strValue = "true" Then
					retVal = "○"
				Else
					retVal = ""
				End If
			Case "contextpane"':retVal="コンテキストペインを表示"
				Select Case strValue
					Case "hide":retVal=""
					Case "link":retVal="文書リンク"
					Case "parent":retVal="親文書"
				End Select
			Case "mailable"':retVal="メール送信ダイアログ"
				If strValue = "true" Then
					retVal = "○"
				Else
					retVal = ""
				End If
			'Case "XPageAltClient","xpagealtclient"':retVal="代わりに XPages を表示"
			Case "treatashtml":retVal="コンテントタイプ"
				If strValue = "true" Then
					result = Me.GetItemNode("mimetype", domNode)
					If result = FUNCTIONFAILURE Then
						Error USERERR, Error
					End If
					
					If domNode Is Nothing Then
						tmpStr = ""
					Else
						tmpStr = domNode.FirstChild.NodeValue
					End If
					If tmpStr = "" Then
						retVal = "HTML"
					Else
						retVal = "その他"
					End If
				Else
					retVal = "Notes"
				End If
			'Case "MimeCharSet","mimecharset"':retVal="文字セット"
			Case "htmlallfields"':retVal = "全てのフィールドに HTML を生成する"
				If strValue = "true" Then
					retVal = "○"
				Else
					retVal = ""
				End If
			'Case "activelinkcolor"':retVal = "アクティブリンク"
			'Case "visitedlinkcolor"':retVal = "既読リンク"
			'Case "unvisitedlinkcolor"':retVal = "未読リンク"
			'Case "metadataname"':retVal="デフォルトデータコネクション"
			'Case "resourcename"':retVal="デフォルトメタデータオブジェクト"
				
			'**起動********
			'Case "autolunch"':retVal="自動起動"
			'Case "FrameInfo","frameinfo"':retVal="自動フレーム"
			
			'**フォームの背景********
			'Case "bgcolor"':retVal="色"
			'Case "imageref"':retVal="図形またはリソース"
			
			'**ヘッダー********
			
			'**印刷********
			'Case "Header","header"':retVal="ヘッダー"
			'Case "Footer","footer"':retVal="フッター"
			
			'**セキュリティ********
			'Case "Readers","readers"':retVal="フォームで作成した文書のデフォルトのアクセス権"
			'Case "FormUsers","formusers"':retVal="フォームで文書を作成できるユーザー"
			Case "KeepPrivate","keepprivate"':retVal="印刷/転送/クリップボードへのコピーを不可"
				If strValue = "true" Then
					retVal = "○"
				Else
					retVal = ""
				End If
			Case "publicaccess"':retVal="パブリックアクセスユーザーの使用を許可"
				If strValue = "true" Then
					retVal = "○"
				Else
					retVal = ""
				End If
			'その他
			'Case "designerversion":retVal="デザイナーバージョン"
			Case Else:retVal=strValue
		End Select
		
		ChangePropertyText = retVal
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Function
	End Function
	
End Class
Class CNotesDesignDomNode As CObjectable
	
	Property Get DomNode As NotesDOMNode
		Set DomNode = Me.Members("DomNode")
	End Property
	Property Set DomNode As NotesDOMNode
		Set Me.Members("DomNode") = DomNode
	End Property
	
	Function Build(node As NotesDOMElementNode) As Integer
		On Error GoTo errorHandle
		
		Set Me.DomNode = node
		
		Exit Function
ErrorHandle:
		Call SetErrorObject(Err, Error)
		Build = FUNCTIONFAILURE
		Exit Function
	End Function
	
	Property Get AllAttributeNames As Variant
		On Error GoTo errorHandle
		
		Dim domNode As NotesDOMNode
		Dim nodeMap As NotesDOMNamedNodeMap
		Dim attrNode As NotesDOMAttributeNode
		Dim aryVal As Variant
		Dim i As Integer
		Dim nme As Integer
		Dim idx As Integer
		
		If Me.IsAvailable("AllAttributeNames") = False Then
			Set domNode = Me.DomNode
			
			Set nodeMap = domNode.Attributes
			nme = nodeMap.NumberOfEntries '0 &lt; nme
			idx = -1 '0 &lt;= idx
			
			For i = 1 To nme
				idx = idx + 1
				
				ReDim Preserve aryVal(idx) As String
				
				Set attrNode = nodeMap.GetItem(idx)
				
				aryVal(idx) = attrNode.NodeName
			Next
			
			Me.Members("AllAttributeNames") = aryVal
		End If
		
		AllAttributeNames = Me.Members("AllAttributeNames")
		
		Exit Property
ErrorHandle:
		Call SetErrorObject(Err, Error)
		Error USERERR, Error
		Exit Property
	End Property
	
	Function GetChildren(selector As String) As Integer
		On Error GoTo errorHandle
		
		Exit Function
ErrorHandle:
		Call SetErrorObject(Err, Error)
		GetChildren = FUNCTIONFAILURE
		Exit Function
	End Function
	
	Function pGetChildren(node As NotesDOMNode, selector As String) As Integer
		On Error GoTo errorHandle
		
		
		
		Exit Function
ErrorHandle:
		Call SetErrorObject(Err, Error)
		pGetChildren = FUNCTIONFAILURE
		Exit Function
	End Function
	
	'@param
	' strName : (String) attribute name
	' strVal (@return) : (String) node attribute
	Function GetNodeAttr(strName As String, strVal As String) As Integer
		On Error GoTo errorHandle
		
		Dim node As NotesDOMNode
		Dim nodeMap As NotesDOMNamedNodeMap
		Dim attrNode As NotesDOMAttributeNode
		Dim aryNames As Variant
		Dim idx As Variant
		
		Set node = Me.DomNode
		
		aryNames = Me.AllAttributeNames
		idx = ArrayGetIndex(aryNames, strName, 1)
		
		If Not IsNull(idx) Then
			Set nodeMap = node.Attributes
			Set attrNode = nodeMap.GetItem(idx+1)
			strVal = attrNode.NodeValue
		Else
			strVal = ""
		End If
		
		Exit Function
ErrorHandle:
		Call SetErrorObject(Err, Error)
		GetNodeAttr = FUNCTIONFAILURE
		Exit Function
	End Function
	
	'@param
	' aryVal (@return) : (Variant Array) node(s) text
	Function GetNodeText(aryVal As Variant) As Integer
		On Error GoTo errorHandle
		
		Dim node As NotesDOMNode
		Dim result As Integer
		
		Set node = Me.DomNode
		
		result = Me.pGetChildNodeText(node, aryVal)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		Exit Function
ErrorHandle:
		Call SetErrorObject(Err, Error)
		GetNodeText = FUNCTIONFAILURE
		Exit Function
	End Function
	
	Private Function pGetChildNodeText(node As NotesDOMNode, aryVal As Variant) As Integer
		On Error GoTo errorHandle
		
		If node.HasChildNodes = False Then
			Dim idx As Integer
			idx = -1
			If IsEmpty(aryVal) Then
				idx = idx + 1
				ReDim aryVal(idx)
			Else
				idx = UBound(aryVal)+1
				ReDim Preserve aryVal(idx)
			End If
			aryVal(idx) = node.NodeValue
		Else
			Dim nodeList As NotesDOMNodeList
			Dim childNode As NotesDOMNode
			Dim result As Integer
			
			Set childNode = node.FirstChild
			
			Do Until childNode.IsNull = True
				
				result = Me.pGetChildNodeText(childNode, aryVal)
				If result = FUNCTIONFAILURE Then
					Error USERERR, Error
				End If
				
				Set childNode = childNode.NextSibling
			Loop
		End If
		
		Exit Function
ErrorHandle:
		Call SetErrorObject(Err, Error)
		pGetChildNodeText = FUNCTIONFAILURE
		Exit Function
	End Function
	
End Class
Class CNotesXPath As CObjectable
	
	Private Function pInitMembers() As Integer
		Me.TagName = ""
		Dim lstAttr List As Single
		Me.Attrs = lstAttr
		Set Me.ChildPath = Nothing
	End Function
	
	Function Build(strPath As String) As Integer
		On Error GoTo ErrorHandle
		
		Call Me.pInitMembers()
		
		Me.XPath = strPath
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Build = FUNCTIONFAILURE
		Exit Function
	End Function
	
	%REM
		{
			xPath: (String)
			tagName: (String),
			attrs: {
				name: (String),
				value: (String)
			}
		}
	%END REM
	Function Parse(query As String) As Integer
		On Error GoTo errorHandle
		
		Dim c As String
		Dim buffer As String
		Dim strSub As String
		Dim objCP As CNotesXPath
		Dim lstAttr As Variant
		Dim aryPath As Variant
		Dim attrName As String
		Dim attrValue As String
		
		
		Dim i As Integer
		Dim max As Integer
		
		Dim p As Integer
		
		Dim result As Integer
		
		max = Len(query)
		
		For i = 1 To max
			c = Mid(query, i, 1)
			If StrCompare(c, "/", 0) = 0 Then 'deep
				Me.TagName = buffer
				buffer = ""
				
				i = max ' exit for
				
				Set objCP = New CNotesXPath
				
				strSub = Mid(query, 1)
				
				result = objCP.Build(strSub)
				If result = FUNCTIONFAILURE Then
					Error USERERR, Error
				End If
				
				result = objCP.Parse(strSub)
				If result = FUNCTIONFAILURE Then
					Error USERERR, Error
				End If
				
			ElseIf StrCompare(c, "[", 0) = 0 Then
				'p = InStr(-1, query, "]")
				'strSub = Mid(query, i, p)
				strSub = StrLeftBack(Mid(query, i), "]")
				
				p = i + Len(strSub)
				
				result = Me.Parse(strSub)
				If result = FUNCTIONFAILURE Then
					Error USERERR, Error
				End If
				
				i = p
				
			ElseIf StrCompare(c, "@", 0) = 0 Then
				p = InStr(query, "=")
				attrName = Mid(query, i, p)
				attrValue = Mid(query, p+1)
				
				lstAttr = Me.Attrs
				
				lstAttr( attrName ) = attrValue
				
			Else
				buffer = buffer &amp; c
			End If
		Next
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Parse = FUNCTIONFAILURE
		Exit Function
	End Function
	
	Property Get XPath As String
		XPath = Me.Members("XPath")
	End Property
	Property Set XPath As String
		Me.Members("XPath") = XPath
	End Property
	
	Property Get TagName As String
		TagName = Me.Members("TagName")
	End Property
	Property Set TagName As String
		Me.Members("TagName") = TagName
	End Property
	
	Property Get Attrs As Variant
		Attrs = Me.Members("Attrs")
	End Property
	Property Set Attrs As Variant
		Me.Members("Attrs") = Attrs
	End Property
	
	Property Get ChildPath As CNotesXPath
		Set ChildPath = Me.Members("ChildPath")
	End Property
	Property Set ChildPath As CNotesXPath
		Set Me.Members("ChildPath") = ChildPath
	End Property
	
End Class
</lotusscript></code><code event='initialize'><lotusscript>Sub Initialize
	Call SetProcess("*SL - NotesDXLLIb")
End Sub
</lotusscript></code></scriptlibrary>

<agentdata>
<noteinfo noteid='341e' unid='19D55201435D1A5D49257EAC001FD0F5' sequence='1'>
<created><datetime>20150825T144731,09+09</datetime></created>
<modified><datetime>20150825T144731,10+09</datetime></modified>
<revised><datetime>20150825T144731,09+09</datetime></revised>
<lastaccessed><datetime>20150825T144731,10+09</datetime></lastaccessed>
<addedtofile><datetime>20150825T144731,10+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=System Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='342a' unid='5465DDBFAD84BDE449257EAC0020180E' sequence='1'>
<created><datetime>20150825T145033,10+09</datetime></created>
<modified><datetime>20150825T145033,11+09</datetime></modified>
<revised><datetime>20150825T145033,10+09</datetime></revised>
<lastaccessed><datetime>20150825T145033,11+09</datetime></lastaccessed>
<addedtofile><datetime>20150825T145033,11+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=System Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='347e' unid='440DA881725A52CE49257EAC00252406' sequence='1'>
<created><datetime>20150825T154540,54+09</datetime></created>
<modified><datetime>20150825T154540,55+09</datetime></modified>
<revised><datetime>20150825T154540,54+09</datetime></revised>
<lastaccessed><datetime>20150825T154540,55+09</datetime></lastaccessed>
<addedtofile><datetime>20150825T154540,55+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=System Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='348a' unid='4C01C0512E361D5B49257EAC00263C63' sequence='1'>
<created><datetime>20150825T155738,27+09</datetime></created>
<modified><datetime>20150825T155738,28+09</datetime></modified>
<revised><datetime>20150825T155738,27+09</datetime></revised>
<lastaccessed><datetime>20150825T155738,28+09</datetime></lastaccessed>
<addedtofile><datetime>20150825T155738,28+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=System Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='349e' unid='89882CB3B4AFC3F749257EAC0026917D' sequence='1'>
<created><datetime>20150825T160116,13+09</datetime></created>
<modified><datetime>20150825T160116,15+09</datetime></modified>
<revised><datetime>20150825T160116,14+09</datetime></revised>
<lastaccessed><datetime>20150825T160116,15+09</datetime></lastaccessed>
<addedtofile><datetime>20150825T160116,15+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=System Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='34aa' unid='A1C1F31C37F9BEAC49257EAC0026C9C3' sequence='1'>
<created><datetime>20150825T160340,19+09</datetime></created>
<modified><datetime>20150825T160340,20+09</datetime></modified>
<revised><datetime>20150825T160340,19+09</datetime></revised>
<lastaccessed><datetime>20150825T160340,20+09</datetime></lastaccessed>
<addedtofile><datetime>20150825T160340,20+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=System Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='34c2' unid='54FA20D6653C54B849257EAC0028FB6E' sequence='1'>
<created><datetime>20150825T162738,06+09</datetime></created>
<modified><datetime>20150825T162738,07+09</datetime></modified>
<revised><datetime>20150825T162738,06+09</datetime></revised>
<lastaccessed><datetime>20150825T162738,07+09</datetime></lastaccessed>
<addedtofile><datetime>20150825T162738,07+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=System Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='34d2' unid='2AB9FED27720034D49257EAC002BA1CE' sequence='1'>
<created><datetime>20150825T165634,70+09</datetime></created>
<modified><datetime>20150825T165634,72+09</datetime></modified>
<revised><datetime>20150825T165634,71+09</datetime></revised>
<lastaccessed><datetime>20150825T165634,72+09</datetime></lastaccessed>
<addedtofile><datetime>20150825T165634,72+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=System Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='34da' unid='BAB085F8322AC9B349257EAC002BA990' sequence='1'>
<created><datetime>20150825T165654,56+09</datetime></created>
<modified><datetime>20150825T165654,57+09</datetime></modified>
<revised><datetime>20150825T165654,56+09</datetime></revised>
<lastaccessed><datetime>20150825T165654,57+09</datetime></lastaccessed>
<addedtofile><datetime>20150825T165654,57+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=System Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='34ee' unid='EF039DB3A5736E7A49257EAC003098CC' sequence='1'>
<created><datetime>20150825T175048,44+09</datetime></created>
<modified><datetime>20150825T175048,45+09</datetime></modified>
<revised><datetime>20150825T175048,44+09</datetime></revised>
<lastaccessed><datetime>20150825T175048,45+09</datetime></lastaccessed>
<addedtofile><datetime>20150825T175048,45+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=System Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='34fa' unid='923F01586D942F0A49257EAC0030DF59' sequence='1'>
<created><datetime>20150825T175349,05+09</datetime></created>
<modified><datetime>20150825T175349,07+09</datetime></modified>
<revised><datetime>20150825T175349,06+09</datetime></revised>
<lastaccessed><datetime>20150825T175349,07+09</datetime></lastaccessed>
<addedtofile><datetime>20150825T175349,07+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=System Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='3502' unid='825BC63F758D0D6749257EAC0030FE54' sequence='1'>
<created><datetime>20150825T175508,36+09</datetime></created>
<modified><datetime>20150825T175508,37+09</datetime></modified>
<revised><datetime>20150825T175508,36+09</datetime></revised>
<lastaccessed><datetime>20150825T175508,37+09</datetime></lastaccessed>
<addedtofile><datetime>20150825T175508,37+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=System Administrator/O=Comture</name></updatedby></agentdata>

<helpaboutdocument publicaccess='false' designerversion='8.5.3' default='true'
 renderpassthrough='true'>
<noteinfo noteid='3522' unid='DD7EBF36926F8F4649257EAC0034E2F9' sequence='1'>
<created><datetime>20150825T183739,77+09</datetime></created>
<modified><datetime>20150825T183739,80+09</datetime></modified>
<revised><datetime>20150825T183739,79+09</datetime></revised>
<lastaccessed><datetime>20150825T183739,80+09</datetime></lastaccessed>
<addedtofile><datetime>20150825T183739,80+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=System Administrator/O=Comture</name></updatedby>
<body><richtext>
<pardef id='1'/>
<par def='1'/></richtext></body></helpaboutdocument>

<agentdata>
<noteinfo noteid='355e' unid='434273A6B1ADA5F049257EAC00362694' sequence='1'>
<created><datetime>20150825T185128,20+09</datetime></created>
<modified><datetime>20150825T185128,21+09</datetime></modified>
<revised><datetime>20150825T185128,20+09</datetime></revised>
<lastaccessed><datetime>20150825T185128,21+09</datetime></lastaccessed>
<addedtofile><datetime>20150825T185128,21+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=System Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='3566' unid='2887A3635E88D7D249257EAC00365B8D' sequence='1'>
<created><datetime>20150825T185343,81+09</datetime></created>
<modified><datetime>20150825T185343,82+09</datetime></modified>
<revised><datetime>20150825T185343,81+09</datetime></revised>
<lastaccessed><datetime>20150825T185343,82+09</datetime></lastaccessed>
<addedtofile><datetime>20150825T185343,82+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=System Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='356e' unid='E5D5C9E903D0803449257EAC00368439' sequence='1'>
<created><datetime>20150825T185527,93+09</datetime></created>
<modified><datetime>20150825T185527,94+09</datetime></modified>
<revised><datetime>20150825T185527,93+09</datetime></revised>
<lastaccessed><datetime>20150825T185527,94+09</datetime></lastaccessed>
<addedtofile><datetime>20150825T185527,94+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=System Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='35b2' unid='D0E691121137CD2649257EAC00379B09' sequence='1'>
<created><datetime>20150825T190721,69+09</datetime></created>
<modified><datetime>20150825T190721,70+09</datetime></modified>
<revised><datetime>20150825T190721,69+09</datetime></revised>
<lastaccessed><datetime>20150825T190721,70+09</datetime></lastaccessed>
<addedtofile><datetime>20150825T190721,70+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=System Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='364a' unid='99503DC98FAEEDA249257EAD0009CA6F' sequence='1'>
<created><datetime>20150826T104656,47+09</datetime></created>
<modified><datetime>20150826T104656,48+09</datetime></modified>
<revised><datetime>20150826T104656,47+09</datetime></revised>
<lastaccessed><datetime>20150826T104656,48+09</datetime></lastaccessed>
<addedtofile><datetime>20150826T104656,48+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=System Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='3652' unid='1BFEF9349E915BE149257EAD0009D9DB' sequence='1'>
<created><datetime>20150826T104735,95+09</datetime></created>
<modified><datetime>20150826T104735,96+09</datetime></modified>
<revised><datetime>20150826T104735,95+09</datetime></revised>
<lastaccessed><datetime>20150826T104735,96+09</datetime></lastaccessed>
<addedtofile><datetime>20150826T104735,96+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=System Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='365a' unid='09C2F0FD28F4541C49257EAD000A0E61' sequence='1'>
<created><datetime>20150826T104950,41+09</datetime></created>
<modified><datetime>20150826T104950,42+09</datetime></modified>
<revised><datetime>20150826T104950,41+09</datetime></revised>
<lastaccessed><datetime>20150826T104950,42+09</datetime></lastaccessed>
<addedtofile><datetime>20150826T104950,42+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=System Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='3666' unid='3B41635671B2298E49257EAD000ABA43' sequence='1'>
<created><datetime>20150826T105710,43+09</datetime></created>
<modified><datetime>20150826T105710,44+09</datetime></modified>
<revised><datetime>20150826T105710,43+09</datetime></revised>
<lastaccessed><datetime>20150826T105710,44+09</datetime></lastaccessed>
<addedtofile><datetime>20150826T105710,44+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=System Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='3672' unid='B13E09953C3C835E49257EAD000AEF64' sequence='1'>
<created><datetime>20150826T105926,44+09</datetime></created>
<modified><datetime>20150826T105926,45+09</datetime></modified>
<revised><datetime>20150826T105926,44+09</datetime></revised>
<lastaccessed><datetime>20150826T105926,45+09</datetime></lastaccessed>
<addedtofile><datetime>20150826T105926,45+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=System Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='367a' unid='1DB9E1AF7266C55E49257EAD000B0152' sequence='1'>
<created><datetime>20150826T110012,34+09</datetime></created>
<modified><datetime>20150826T110012,35+09</datetime></modified>
<revised><datetime>20150826T110012,34+09</datetime></revised>
<lastaccessed><datetime>20150826T110012,35+09</datetime></lastaccessed>
<addedtofile><datetime>20150826T110012,35+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=System Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='3686' unid='65FE9104A09E749A49257EAD000D2343' sequence='1'>
<created><datetime>20150826T112329,95+09</datetime></created>
<modified><datetime>20150826T112329,97+09</datetime></modified>
<revised><datetime>20150826T112329,96+09</datetime></revised>
<lastaccessed><datetime>20150826T112329,97+09</datetime></lastaccessed>
<addedtofile><datetime>20150826T112329,97+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=System Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='3696' unid='6759841C65051CCB49257EAD000D622B' sequence='1'>
<created><datetime>20150826T112610,99+09</datetime></created>
<modified><datetime>20150826T112611,00+09</datetime></modified>
<revised><datetime>20150826T112610,99+09</datetime></revised>
<lastaccessed><datetime>20150826T112611,00+09</datetime></lastaccessed>
<addedtofile><datetime>20150826T112611,00+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=System Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='36ae' unid='37F2B69568053D7649257EAD000DE5E9' sequence='1'>
<created><datetime>20150826T113148,25+09</datetime></created>
<modified><datetime>20150826T113148,26+09</datetime></modified>
<revised><datetime>20150826T113148,25+09</datetime></revised>
<lastaccessed><datetime>20150826T113148,26+09</datetime></lastaccessed>
<addedtofile><datetime>20150826T113148,26+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=System Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='36c2' unid='734FE160FB71421149257EAD000E48B2' sequence='1'>
<created><datetime>20150826T113601,14+09</datetime></created>
<modified><datetime>20150826T113601,15+09</datetime></modified>
<revised><datetime>20150826T113601,14+09</datetime></revised>
<lastaccessed><datetime>20150826T113601,15+09</datetime></lastaccessed>
<addedtofile><datetime>20150826T113601,15+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=System Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='36f2' unid='AB2C979440A7440749257EAD0017994D' sequence='1'>
<created><datetime>20150826T131745,73+09</datetime></created>
<modified><datetime>20150826T131745,75+09</datetime></modified>
<revised><datetime>20150826T131745,74+09</datetime></revised>
<lastaccessed><datetime>20150826T131745,75+09</datetime></lastaccessed>
<addedtofile><datetime>20150826T131745,75+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=System Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='36fe' unid='250F18844735CC4D49257EAD0017A4F2' sequence='1'>
<created><datetime>20150826T131815,54+09</datetime></created>
<modified><datetime>20150826T131815,55+09</datetime></modified>
<revised><datetime>20150826T131815,54+09</datetime></revised>
<lastaccessed><datetime>20150826T131815,55+09</datetime></lastaccessed>
<addedtofile><datetime>20150826T131815,55+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=System Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='370e' unid='83DE95DC6478EF3F49257EAD0017CF47' sequence='1'>
<created><datetime>20150826T132003,91+09</datetime></created>
<modified><datetime>20150826T132003,92+09</datetime></modified>
<revised><datetime>20150826T132003,91+09</datetime></revised>
<lastaccessed><datetime>20150826T132003,92+09</datetime></lastaccessed>
<addedtofile><datetime>20150826T132003,92+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=System Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='3732' unid='BD9DDD909E8D86F349257EAE001E7A80' sequence='1'>
<created><datetime>20150827T143254,40+09</datetime></created>
<modified><datetime>20150827T143254,41+09</datetime></modified>
<revised><datetime>20150827T143254,40+09</datetime></revised>
<lastaccessed><datetime>20150827T143254,41+09</datetime></lastaccessed>
<addedtofile><datetime>20150827T143254,41+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=System Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='373a' unid='89F9FC31448B14D849257EAE0020B6B5' sequence='1'>
<created><datetime>20150827T145719,25+09</datetime></created>
<modified><datetime>20150827T145719,26+09</datetime></modified>
<revised><datetime>20150827T145719,25+09</datetime></revised>
<lastaccessed><datetime>20150827T145719,26+09</datetime></lastaccessed>
<addedtofile><datetime>20150827T145719,26+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=System Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='375e' unid='8ECA22057F5DE15F49257EB200071D43' sequence='1'>
<created><datetime>20150831T101742,43+09</datetime></created>
<modified><datetime>20150831T101742,44+09</datetime></modified>
<revised><datetime>20150831T101742,43+09</datetime></revised>
<lastaccessed><datetime>20150831T101742,44+09</datetime></lastaccessed>
<addedtofile><datetime>20150831T101742,44+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=System Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='3766' unid='1C865DDD4692C52849257EB2000746C9' sequence='1'>
<created><datetime>20150831T101928,73+09</datetime></created>
<modified><datetime>20150831T101928,74+09</datetime></modified>
<revised><datetime>20150831T101928,73+09</datetime></revised>
<lastaccessed><datetime>20150831T101928,74+09</datetime></lastaccessed>
<addedtofile><datetime>20150831T101928,74+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=System Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='376a' unid='5782A1AC38DABE8649257EB900070D4E' sequence='1'>
<created><datetime>20150907T101701,58+09</datetime></created>
<modified><datetime>20150907T101701,59+09</datetime></modified>
<revised><datetime>20150907T101701,58+09</datetime></revised>
<lastaccessed><datetime>20150907T101701,59+09</datetime></lastaccessed>
<addedtofile><datetime>20150907T101701,59+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=System Administrator/O=Comture</name></updatedby></agentdata>

<agent name='設計をコピー' hide='v3' publicaccess='false' designerversion='8.5.3'
 restrictions='unrestricted'>
<noteinfo noteid='3772' unid='9DFD640ED4399F0349257EBA0027AA43' sequence='49'>
<created><datetime>20150908T161314,91+09</datetime></created>
<modified><datetime>20181031T100052,34+09</datetime></modified>
<revised><datetime>20181031T100052,33+09</datetime></revised>
<lastaccessed><datetime>20181031T100052,34+09</datetime></lastaccessed>
<addedtofile><datetime>20150908T161314,94+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby>
<wassignedby><name>CN=Administrator/O=Comture</name></wassignedby>
<designchange><datetime>20181031T100052,31+09</datetime></designchange>
<trigger type='actionsmenu'/>
<documentset type='runonce'/><code event='options'><lotusscript>Option Public
Option Declare
Use "NotesUICommonLib"

</lotusscript></code><code event='initialize'><lotusscript>Sub Initialize
	Call SetProcess("設計をコピー")
	Call Main()
End Sub

</lotusscript></code><code event='Main'><lotusscript>Sub Main()
	On Error GoTo ErrorHandle
	
	Dim workSpace As New NotesUIWorkspace
	Dim session As New NotesSession
	Dim curDB As NotesDatabase
	Dim dlgDoc As NotesDocument
	
	Set curDB = session.Currentdatabase
	Set dlgDoc = curDB.Createdocument()
	
	If False = workSpace.Dialogbox("SubSelectTwoDatabaseDlg", true, true, false, false, false, false, "データベースの選択", dlgDoc, false, false, false) Then
		Exit Sub
	End If
	
	Dim db1 As NotesDatabase, db2 As NotesDatabase
	
	Set db1 = New NotesDatabase(dlgDoc.DbServer1(0), dlgDoc.DbFilePath1(0))
	Set db2 = New NotesDatabase(dlgDoc.DbServer2(0), dlgDoc.DbFilePath2(0))
	
	Dim aryKindList() As String
	Dim varSelectKind As Variant
	
	ReDim aryKindList(15)
	aryKindList(0) = "全て"
	aryKindList(1) = "フォーム"
	aryKindList(2) = "ビュー"
	aryKindList(3) = "フォルダ"
	aryKindList(4) = "フレームセット"
	aryKindList(5) = "ページ"
	aryKindList(6) = "サブフォーム"
	aryKindList(7) = "共有フィールド"
	aryKindList(8) = "共有列[未対応]"
	aryKindList(9) = "アウトライン"
	aryKindList(10) = "エージェント[全て]"
	aryKindList(11) = "エージェント[スケジュールのみ]"
	aryKindList(12) = "エージェント[スケジュール以外]"
	aryKindList(13) = "共有アクション"
	aryKindList(14) = "スクリプトライブラリ"
	aryKindList(15) = "データベーススクリプト"
	
	varSelectKind = workSpace.Prompt(PROMPT_OKCANCELLIST , "設計のコピー", "コピーする設計の種類を選択してください", "全て", aryKindList)
	If IsEmpty(varSelectKind) Then
		Exit Sub
	End If
	
	Dim notes As NotesNoteCollection
	Dim note As NotesDocument
	Dim noteID As String
	
	Dim aryNameList As Variant
	Dim aryIDList As Variant
	Dim i As Integer
	Dim idx As Variant
	
	Set notes = db1.CreateNoteCollection(False)
	
	Select Case varSelectKind
		Case "全て": notes.SelectAllDesignElements(True)
		Case "フォーム":notes.SelectForms = True
		Case "ビュー":notes.SelectViews = True
		Case "フォルダ":notes.SelectFolders = True
		Case "フレームセット":notes.SelectFrameSets = True
		Case "ページ":notes.SelectPages = True
		Case "サブフォーム":notes.SelectSubForms = True
		Case "共有フィールド":notes.SelectSharedFields = True
			'Case "共有列":notes.SelectForms = True
		Case "アウトライン":notes.SelectOutlines = True
		Case "エージェント[全て]":notes.SelectAgents = True
		Case "エージェント[スケジュールのみ]"
			notes.SelectAgents = True
			notes.SelectionFormula = |$AssistTrigger="1"|
		Case "エージェント[スケジュール以外]"
			notes.SelectAgents = True
			notes.SelectionFormula = |$AssistTrigger!="1"|
		Case "共有アクション":notes.SelectActions = True
		Case "スクリプトライブラリ":notes.SelectScriptLibraries = True
		Case "データベーススクリプト":notes.SelectDatabaseScript = True
	End Select
	
	Call notes.BuildCollection()
	
	If notes.Count = 0 Then
		Call Messagebox_Alert("設計要素がありません", "")
		Exit Sub
	End If
	
	ReDim aryNameList(0) As String
	ReDim aryIDList(0) As String
	noteID = notes.Getfirstnoteid()
	
	For i = 0 To notes.Count-1
		Set note = db1.Getdocumentbyid(noteID)
		
		ReDim Preserve aryNameList(i) As String
		ReDim Preserve aryIDList(i) As String
		
		aryNameList(i) = Join(Evaluate({@Implode($Title;"|")}, note),"")
		If (aryNameList(i) = "") Then
			aryNameList(i) = "(無題)"
		End If
		aryNameList(i) = aryNameList(i) &amp; "[" &amp; noteID &amp; "]"
		aryIDList(i) = noteID
		
		noteID = notes.Getnextnoteid(noteID)
	Next
	
	Dim varSelect As Variant
	
	varSelect = workSpace.Prompt(PROMPT_OKCANCELLISTMULT, "設計のコピー", "コピーする設計を選択", "", aryNameList)
	If IsEmpty(varSelect) Then
		Exit Sub
	ElseIf 7 = Messagebox_YesNo((UBound(varSelect)+1) &amp; "個の" &amp; varSelectKind &amp; "設計をコピーします。", "") Then
		Exit Sub
	End If
	
	i = 0
	
	ForAll v In varSelect
		i = i+1
		Print "[" &amp; i &amp; "回目]設計をコピーします・・・" &amp; CStr(v)
		idx = ArrayGetIndex(aryNameList, CStr(v))
		noteID = aryIDList(idx)
		Set note = db1.Getdocumentbyid(noteID)
		Call note.Copytodatabase(db2)
		Print "[" &amp; i &amp; "回目]設計をコピーしました・・・" &amp; CStr(v)
	End ForAll
	
	Exit Sub
ErrorHandle:
	Call SetErrorObject(Err, Error)
	Call Messagebox_Error(GetErrorMessage(), "")
	Exit Sub
End Sub</lotusscript></code>
<rundata processeddocs='0' exitcode='0' agentdata='5520B6F51FC214B749257EBA003280F7'>
<agentmodified><datetime>20150908T181129,16+09</datetime></agentmodified>
<agentrun><datetime>20161101T141203,90+09</datetime></agentrun>
<runlog>エージェント 設計をコピー の 2016/11/01 14:11:41 での実行が開始しました。
LotusScript を実行しました
エージェント 設計をコピー の実行が終了しました。(2016/11/01 14:12:03)
</runlog></rundata></agent>

<subform name='(データベース選択DLG[2個])' alias='SubSelectTwoDatabaseDlg' designerversion='8.5.3'
 renderpassthrough='true'>
<noteinfo noteid='377a' unid='B3F16DF57CE9FC2949257EBA00280158' sequence='16'>
<created><datetime>20150908T161657,84+09</datetime></created>
<modified><datetime>20181031T100053,49+09</datetime></modified>
<revised><datetime>20181031T100053,48+09</datetime></revised>
<lastaccessed><datetime>20181031T100053,49+09</datetime></lastaccessed>
<addedtofile><datetime>20150908T161658,03+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby>
<wassignedby><name>CN=Administrator/O=Comture</name></wassignedby>
<globals><code event='options'><lotusscript>Option Public
Option Declare
Use "NotesUICommonLib"
</lotusscript></code><code event='initialize'><lotusscript>Sub Initialize
	Call SetProcess("*SF - (Globals)SubSelectTwoDatabaseDlg")
End Sub
</lotusscript></code><code event='OpenSelectDatabaseDlg'><lotusscript>Function OpenSelectDatabaseDlg(curDoc As NotesDocument, dbServerFld As String, dbFilePathFld As String) As Boolean
	On Error Goto ErrorHandle
	
	Dim workSpace As New NotesUIWorkspace
	Dim varSelect As Variant
	Dim db As NotesDatabase
	
	Do
		varSelect = workSpace.Prompt(13, "", "")
		If Isempty(varSelect) Then
			Exit Function
		End If
		Set db = New NotesDatabase(varSelect(0), varSelect(1))
		If db.IsOpen = True Then
			Exit Do
		End If
		Call Messagebox_Alert("データベースを開けません", "")
	Loop
	
	Call curDoc.ReplaceItemValue(dbServerFld, varSelect(0))
	Call curDoc.ReplaceItemValue(dbFilePathFld, varSelect(1))
	
	OpenSelectDatabaseDlg = True
	
	Exit Function
ErrorHandle:
	Call SetErrorObject(Err, Error)
	Exit Function
End Function</lotusscript></code></globals>
<body><richtext>
<pardef id='1'/>
<par def='1'/><compositedata type='183' prevtype='129' nexttype='131' afterparcount='1'>
txygBXkhaQovAAAASAAAAAAAAAAAAAAAAAAAAA==
</compositedata>
<par def='1'/><compositedata type='186' prevtype='129' nexttype='65410' afterparcount='1'>
uiroBZAA6SAhAQEAAAoBAAEA////AAkAAAAAAAAAAAAAAAAAAAAAAAAA
</compositedata>
<pardef id='2'/>
<par def='2'><field type='text' kind='computedfordisplay' name='Dsp_Prompt'><code
 event='defaultvalue'><formula>@If(Prompt="";"データベースを選択";Prompt)</formula></code></field><compositedata
 type='98' prevtype='65418' nexttype='222' afterparcount='7' containertype='65418'
 aftercontainercount='1' afterbegincount='3'>
Yg4BAIQAAAAAAAAAAAA=
</compositedata></par><compositedata
 type='184' prevtype='129' nexttype='131' afterparcount='1'>
uCroBbABMSG1AAEAAAoBAAUA////AAAAABAAAAAAAAAAAAAAAAAAAAAA
</compositedata>
<par def='2'>――――――――――――――――――――――――――――――――――――――――――</par><compositedata
 type='186' prevtype='129' nexttype='131' afterparcount='1'>
uioYDIgCgQchAQEAAAoBAAEA////AAEAAAAAAAAAAAAAAAAAAAAAAAAA
</compositedata>
<par def='2'><field type='text' kind='editable' name='DbServer1' taborder='1'/><compositedata
 type='98' prevtype='65418' nexttype='222' afterparcount='6' containertype='65418'
 aftercontainercount='1' afterbegincount='3'>
Yg4BAIQAAAAAAAAAAAA=
</compositedata></par><compositedata
 type='186' prevtype='129' nexttype='131' afterparcount='1'>
uioYDHgGgQchAQEAAAoBAAEA////AAEAAAAAAAAAAAAAAAAAAAAAAAAA
</compositedata>
<par def='2'><field type='text' kind='editable' name='DbServer2' taborder='3'/><compositedata
 type='98' prevtype='65418' nexttype='222' afterparcount='6' containertype='65418'
 aftercontainercount='1' afterbegincount='3'>
Yg4BAIQAAAAAAAAAAAA=
</compositedata></par><compositedata
 type='186' prevtype='129' nexttype='131' afterparcount='1'>
uiowBigIGR4hAQEAAAoBAAEA////AAEAAAAAAAAAAAAAAAAAAAAAAAAA
</compositedata>
<par def='2'><field type='text' kind='editable' name='DbFilePath2' taborder='4'/><compositedata
 type='98' prevtype='65418' nexttype='222' afterparcount='6' containertype='65418'
 aftercontainercount='1' afterbegincount='3'>
Yg4BAIQAAAAAAAAAAAA=
</compositedata></par><compositedata
 type='186' prevtype='129' nexttype='131' afterparcount='1'>
uiowBjgEGR4hAQEAAAoBAAEA////AAEAAAAAAAAAAAAAAAAAAAAAAAAA
</compositedata>
<par def='2'><field type='text' kind='editable' name='DbFilePath1' taborder='2'/><compositedata
 type='98' prevtype='65418' nexttype='222' afterparcount='6' containertype='65418'
 aftercontainercount='1' afterbegincount='3'>
Yg4BAIQAAAAAAAAAAAA=
</compositedata></par><compositedata
 type='184' prevtype='129' nexttype='131' afterparcount='1'>
uCroBaAFMSG1AAEAAAoBAAUA////AAAAABAAAAAAAAAAAAAAAAAAAAAA
</compositedata>
<par def='2'>――――――――――――――――――――――――――――――――――――――――――</par><compositedata
 type='194' prevtype='129' nexttype='131' afterparcount='1'>
wiqQJDgESwHiAAEAAAoBAAEA////AAAAAAAAAAAAAAAAAAAAAAAAAAAA
</compositedata>
<par def='2'><button width='2in' widthtype='maximum' maxlines='0' wraptext='true'
 bgcolor='system'><code event='click'><lotusscript>Sub Click(Source As Button)
	On Error Goto ErrorHandle
	
	Dim workSpace As New NotesUIWorkspace
	Dim curUIDoc As NotesUIDocument
	Dim curDoc As NotesDocument
	
	Set curUIDoc = workSpace.CurrentDocument
	Set curDoc = curUIDoc.Document
	
	If OpenSelectDatabaseDlg(curDoc, "DbServer1", "DbFilePath1") Then
		
	End If
	
	Exit Sub
ErrorHandle:
	Call SetErrorObject(Err, Error)
	Call Messagebox_Error(GetErrorMessage(), "")
End Sub</lotusscript></code></button></par><compositedata type='184' prevtype='129'
 nexttype='131' afterparcount='1'>
uCowBngGoQUhAQEAAAoBAAUA////AAAAAJAAAAAAAAAAAAAAAAAAAAAA
</compositedata>
<par def='2'>データベース２：</par><compositedata type='184' prevtype='129' nexttype='131'
 afterparcount='1'>
uCowBogCoQUhAQEAAAoBAAUA////AAAAAJAAAAAAAAAAAAAAAAAAAAAA
</compositedata>
<par def='2'>データベース１：</par><compositedata type='194' prevtype='129' nexttype='131'
 afterparcount='1'>
wiqQJCgISwHiAAEAAAoBAAEA////AAAAAAAAAAAAAAAAAAAAAAAAAAAA
</compositedata>
<par def='2'><button width='2in' widthtype='maximum' maxlines='0' wraptext='true'
 bgcolor='system'><code event='click'><lotusscript>Sub Click(Source As Button)
	On Error Goto ErrorHandle
	
	Dim workSpace As New NotesUIWorkspace
	Dim curUIDoc As NotesUIDocument
	Dim curDoc As NotesDocument
	
	Set curUIDoc = workSpace.CurrentDocument
	Set curDoc = curUIDoc.Document
	
	If OpenSelectDatabaseDlg(curDoc, "DbServer2", "DbFilePath2") Then
		
	End If
	
	Exit Sub
ErrorHandle:
	Call SetErrorObject(Err, Error)
	Call Messagebox_Error(GetErrorMessage(), "")
End Sub</lotusscript></code></button><compositedata type='185' prevtype='222'
 nexttype='129' afterparcount='12'>
uRIAAAAAAAAAAAAAAAAAAAAA
</compositedata></par>
<par def='1'/></richtext></body>
<item name='$$ScriptName' summary='false' sign='true'><text>SubSelectTwoDatabaseDlg</text></item></subform>

<agentdata>
<noteinfo noteid='378a' unid='717BD88F81F5B93049257EBA002ABF46' sequence='1'>
<created><datetime>20150908T164654,78+09</datetime></created>
<modified><datetime>20150908T164654,80+09</datetime></modified>
<revised><datetime>20150908T164654,79+09</datetime></revised>
<lastaccessed><datetime>20150908T164654,80+09</datetime></lastaccessed>
<addedtofile><datetime>20150908T164654,80+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=System Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='37be' unid='1EE9F302FC933E9749257EBA002EF964' sequence='1'>
<created><datetime>20150908T173305,00+09</datetime></created>
<modified><datetime>20150908T173305,01+09</datetime></modified>
<revised><datetime>20150908T173305,00+09</datetime></revised>
<lastaccessed><datetime>20150908T173305,01+09</datetime></lastaccessed>
<addedtofile><datetime>20150908T173305,01+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=System Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='37ca' unid='779EC23D1C52700049257EBA002F1A63' sequence='1'>
<created><datetime>20150908T173429,47+09</datetime></created>
<modified><datetime>20150908T173429,48+09</datetime></modified>
<revised><datetime>20150908T173429,47+09</datetime></revised>
<lastaccessed><datetime>20150908T173429,48+09</datetime></lastaccessed>
<addedtofile><datetime>20150908T173429,48+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=System Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='37d2' unid='7FB38A8EC31B87FA49257EBA002F3031' sequence='1'>
<created><datetime>20150908T173525,29+09</datetime></created>
<modified><datetime>20150908T173525,31+09</datetime></modified>
<revised><datetime>20150908T173525,30+09</datetime></revised>
<lastaccessed><datetime>20150908T173525,31+09</datetime></lastaccessed>
<addedtofile><datetime>20150908T173525,31+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=System Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='37e6' unid='5520B6F51FC214B749257EBA003280F7' sequence='1'>
<created><datetime>20150908T181138,15+09</datetime></created>
<modified><datetime>20150908T181138,16+09</datetime></modified>
<revised><datetime>20150908T181138,15+09</datetime></revised>
<lastaccessed><datetime>20150908T181138,16+09</datetime></lastaccessed>
<addedtofile><datetime>20150908T181138,16+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=System Administrator/O=Comture</name></updatedby></agentdata>

<form name='dir test' publicaccess='false' designerversion='8.5.3' renderpassthrough='true'>
<noteinfo noteid='3806' unid='DDC193DAB99BC58F49257EFF002A8423' sequence='11'>
<created><datetime>20151116T164423,39+09</datetime></created>
<modified><datetime>20181031T100054,02+09</datetime></modified>
<revised><datetime>20181031T100054,01+09</datetime></revised>
<lastaccessed><datetime>20181031T100054,02+09</datetime></lastaccessed>
<addedtofile><datetime>20151116T164423,60+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby>
<wassignedby><name>CN=Administrator/O=Comture</name></wassignedby>
<body><richtext>
<pardef id='1'/>
<par def='1'><field type='text' kind='editable' name='DirPath'/><compositedata
 type='98' prevtype='65418' nexttype='222' afterparcount='7' containertype='65418'
 aftercontainercount='1' afterbegincount='3'>
Yg4BAIQAAAAAAAAAAAA=
</compositedata></par>
<par def='1'><button width='2in' widthtype='maximum' maxlines='0' wraptext='true'
 bgcolor='system'><code event='click'><lotusscript>Sub Click(Source As Button)
	
	Dim ws As New NotesUIWorkspace
	Dim curUIDoc As NotesUIDocument
	
	Set curUIDoc = ws.CurrentDocument
	
	Dim path As String
	Dim tmpPath As String
	Dim item As NotesItem
	
	path = curUIDoc.FieldGetText("DirPath")
	Set item = curUIDoc.Document.ReplaceItemValue("Dsp_DirPath", "")
	
	tmpPath = Dir(path, 16)
	
	Do Until tmpPath = ""
		
		Call item.AppendToTextList(tmpPath)
		
		
		tmpPath = Dir()
	Loop
	
	
End Sub</lotusscript></code></button></par>
<par def='1'><horizrule height='0.0729in' width='100%' use3dshading='true'/></par>
<par def='1'><field type='text' allowmultivalues='true' kind='computedfordisplay'
 name='Dsp_DirPath' listinputseparators='newline' listdisplayseparator='newline'><code
 event='defaultvalue'><formula>@ThisValue</formula></code></field><compositedata
 type='98' prevtype='65418' nexttype='222' afterparcount='6' containertype='65418'
 aftercontainercount='1' afterbegincount='3'>
Yg4BAIQAAAAAAAAAAAA=
</compositedata></par>
<par def='1'/>
<pardef id='2' hide='notes web mobile'/>
<par def='2'><run><font color='gray'/></run><run><font color='gray'/><field
 type='text' kind='computedfordisplay' name='SaveOptions'><code event='defaultvalue'><formula
>0</formula></code></field></run><compositedata type='98' prevtype='65418'
 nexttype='222' afterparcount='10' containertype='65418' aftercontainercount='1'
 afterbegincount='3'>
Yg4BAIQAAAAAAAAAAAA=
</compositedata><run><font color='gray'/></run></par></richtext></body>
<item name='$$ScriptName' summary='false' sign='true'><text>dir test</text></item></form>

<agentdata>
<noteinfo noteid='380a' unid='BBD4E09F14E2316049257EFF002E420A' sequence='1'>
<created><datetime>20151116T172515,62+09</datetime></created>
<modified><datetime>20151116T172515,63+09</datetime></modified>
<revised><datetime>20151116T172515,62+09</datetime></revised>
<lastaccessed><datetime>20151116T172515,63+09</datetime></lastaccessed>
<addedtofile><datetime>20151116T172515,63+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=System Administrator/O=Comture</name></updatedby></agentdata>

<agent name='SaveOptions削除' hide='v3' publicaccess='false' designerversion='8.5.3'>
<noteinfo noteid='383e' unid='2FF8D29758DAF5ED492580190030F2A5' sequence='2'>
<created><datetime>20160824T175438,45+09</datetime></created>
<modified><datetime>20160824T175455,92+09</datetime></modified>
<revised><datetime>20160824T175455,91+09</datetime></revised>
<lastaccessed><datetime>20160824T175455,92+09</datetime></lastaccessed>
<addedtofile><datetime>20160824T175438,53+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=System Administrator/O=Comture</name></updatedby>
<designchange><datetime>20160824T175455,90+09</datetime></designchange>
<trigger type='actionsmenu'/>
<documentset type='selected'/><code event='action'><formula>FIELD SaveOptions := @DeleteField;
SELECT @All</formula></code>
<rundata processeddocs='1' exitcode='0'>
<agentmodified><datetime>20160824T175455,92+09</datetime></agentmodified>
<agentrun><datetime>20160824T175511,29+09</datetime></agentrun>
<runlog>エージェント SaveOptions削除 の 2016/08/24 17:55:11 での実行が開始しました。
選択文書で実行します。 合計 1
1 文書が検索条件に一致しました。
1 文書は式に基づいて修正されました。
エージェント SaveOptions削除 の実行が終了しました。(2016/08/24 17:55:11)
</runlog></rundata></agent>

<agent name='ID再認証' hide='v3' publicaccess='false' designerversion='8.5.3'
 restrictions='fulladminunrestricted'>
<noteinfo noteid='427a' unid='D06DD91422C337064925823D00084EE2' sequence='63'>
<created><datetime>20180223T103044,82+09</datetime></created>
<modified><datetime>20181031T100052,97+09</datetime></modified>
<revised><datetime>20181031T100052,96+09</datetime></revised>
<lastaccessed><datetime>20181031T100052,97+09</datetime></lastaccessed>
<addedtofile><datetime>20180223T103044,96+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby>
<wassignedby><name>CN=Administrator/O=Comture</name></wassignedby>
<designchange><datetime>20181031T100052,95+09</datetime></designchange>
<trigger type='actionsmenu'/>
<documentset type='runonce'/><code event='options'><lotusscript>Option Public
Option Declare
Use "NotesUICommonLib"

</lotusscript></code><code event='initialize'><lotusscript>Sub Initialize
	Call Main()
End Sub

</lotusscript></code><code event='Main'><lotusscript>Sub Main()
	
	Dim ws As New NotesUIWorkspace
	Dim session As New NotesSession
	Dim curDB As NotesDatabase
	Dim dlgDoc As NotesDocument
	Dim selectVal As Variant
	
	Dim dbServer As String
	Dim dbFilePath As String
	Dim certIDFilePath As String
	Dim certIdPassword As String
	Dim userIDFiles As Variant
	
	Dim reg As NotesRegistration
	
	Set curDB = session.Currentdatabase
	Set dlgDoc = curDB.Createdocument()
	
	Do
		selectVal = ws.Dialogbox("Recertify", True, True, False, False, False, False, "ID再認証", dlgDoc, True, False)
		If selectVal = False Then
			Exit Sub
		End If
		
		dbServer = dlgDoc.Getitemvalue("DbServer")(0)
		dbFilePath = dlgDoc.Getitemvalue("DbFilePath")(0)
		certIDFilePath = dlgDoc.Getitemvalue("CertIDFilePath")(0)
		certIdPassword = dlgDoc.Getitemvalue("CertIDPassword")(0)
		UserIDFiles = dlgDoc.Getitemvalue("UserIDFiles")
		
		If Trim$(dbServer) = "" Or Trim$(dbFilePath) = "" Then
			Call Messagebox_Alert("Domino Directoryを入力してください。", "")
		ElseIf Trim(certIDFilePath) = "" Then
			Call Messagebox_Alert("認証者IDを入力してください。", "")
		ElseIf Trim(userIDFiles(0)) = "" Then
			Call Messagebox_Alert("ユーザーIDを入力してください。", "")
		Else
			Exit Do
		End If
		
	Loop
	
	Set reg = New NotesRegistration
	
	reg.RegistrationServer = dbServer
	reg.CertifierIDFile = certIDFilePath
	reg.Updateaddressbook = False
	
	ForAll s In UserIDFiles
		Call reg.Recertify(s, certIdPassword)
	End ForAll
	
End Sub</lotusscript></code>
<rundata processeddocs='0' exitcode='0' agentdata='E10B6AD488AB044B4925823D0016DFE8'>
<agentmodified><datetime>20181031T100052,97+09</datetime></agentmodified>
<agentrun><datetime>20190823T134909,91+09</datetime></agentrun>
<runlog>エージェント ID再認証 の 2019/08/23 13:48:14 での実行が開始しました。
LotusScript を実行しました
エージェント ID再認証 の実行が終了しました。(2019/08/23 13:49:09)
</runlog></rundata></agent>

<agentdata>
<noteinfo noteid='4292' unid='0A6D0A8DB0E7D0B74925823D00092336' sequence='1'>
<created><datetime>20180223T103948,38+09</datetime></created>
<modified><datetime>20180223T103948,39+09</datetime></modified>
<revised><datetime>20180223T103948,38+09</datetime></revised>
<lastaccessed><datetime>20180223T103948,39+09</datetime></lastaccessed>
<addedtofile><datetime>20180223T103948,39+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator NRK/O=nrkadmin</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='42a2' unid='37AA5B19ECE6BA6C4925823D0009DEC0' sequence='1'>
<created><datetime>20180223T104748,48+09</datetime></created>
<modified><datetime>20180223T104748,49+09</datetime></modified>
<revised><datetime>20180223T104748,48+09</datetime></revised>
<lastaccessed><datetime>20180223T104748,49+09</datetime></lastaccessed>
<addedtofile><datetime>20180223T104748,49+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator NRK/O=nrkadmin</name></updatedby></agentdata>

<subform name='(ID再認証)' alias='Recertify' designerversion='8.5.3' renderpassthrough='true'>
<noteinfo noteid='42a6' unid='59CCAFC55BE7F4474925823D000B3BEB' sequence='53'>
<created><datetime>20180223T110242,35+09</datetime></created>
<modified><datetime>20181031T100053,86+09</datetime></modified>
<revised><datetime>20181031T100053,85+09</datetime></revised>
<lastaccessed><datetime>20181031T100053,86+09</datetime></lastaccessed>
<addedtofile><datetime>20180223T110242,45+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby>
<wassignedby><name>CN=Administrator/O=Comture</name></wassignedby>
<globals><code event='options'><lotusscript>Option Public
Option Declare
Use "NotesUICommonLib"
</lotusscript></code></globals>
<body><richtext>
<pardef id='1' hide='notes web mobile'/>
<par def='1'/>
<table widthtype='fixedleft' refwidth='5.9056in'><tablecolumn width='5.9056in'/>
<tablerow>
<tablecell borderwidth='0px'>
<pardef id='3' hide='notes web mobile' keepwithnext='true' keeptogether='true'/>
<par def='3'/>
<table widthtype='fitmargins' leftmargin='0' rowspacing='0.0396in' columnspacing='0.0396in'
 refwidth='5.8951in'><tablecolumn width='1.2813in'/><tablecolumn width='100%'/>
<tablerow>
<tablecell bgcolor='system'>
<pardef id='5' keepwithnext='true' keeptogether='true'/>
<par def='5'><actionhotspot hotspotstyle='none'><run><font style='underline'
 color='blue'/>Dominoディレクトリ</run><code event='click'><lotusscript>Sub Click(Source As Button)
	On Error Goto ErrorHandle
	
	Dim ws As New NotesUIWorkspace
	Dim curUIDoc As NotesUIDocument
	Dim curDoc As NotesDocument
	
	Set curUIDoc = ws.CurrentDocument
	Set curDoc = curUIDoc.Document
	
	Dim dbInfo As Variant
	
	dbInfo = ws.Prompt(13, "", "")
	If Isempty(dbInfo) Then
		Exit Sub
	End If
	
	curDoc.DbServer = dbInfo(0)
	curDoc.DbFilePath = dbInfo(1)
	
	
	Exit Sub
ErrorHandle:
	Call SetErrorObject(Err, Error)
	Call Messagebox_Error(GetErrorMessage(), "")
	Exit Sub
End Sub</lotusscript></code></actionhotspot></par></tablecell>
<tablecell>
<pardef id='6' hide='notes web mobile' keepwithnext='true' keeptogether='true'/>
<par def='6'/>
<table widthtype='fitmargins' leftmargin='0' rowspacing='0.0194in' columnspacing='0.0194in'
 refwidth='4.4347in'><tablecolumn width='0.5208in'/><tablecolumn width='100%'/>
<tablerow>
<tablecell bgcolor='system'>
<pardef id='8' align='right' keepwithnext='true' keeptogether='true'/>
<par def='8'>パス：</par></tablecell>
<tablecell>
<pardef id='9' keepwithnext='true' keeptogether='true'/>
<par def='9'><field type='names' kind='editable' name='DbServer'/></par></tablecell></tablerow>
<tablerow>
<tablecell bgcolor='system'>
<par def='8'>ファイル：</par></tablecell>
<tablecell>
<par def='9'><field type='text' kind='editable' name='DbFilePath'/><compositedata
 type='98' prevtype='65418' nexttype='222' afterparcount='6' containertype='65418'
 aftercontainercount='1' afterbegincount='3'>
Yg4BAIQAAAAAAAAAAAA=
</compositedata></par></tablecell></tablerow></table></tablecell></tablerow>
<tablerow>
<tablecell bgcolor='system'>
<par def='5'><actionhotspot hotspotstyle='none'><run><font style='underline'
 color='blue'/>認証者ID(Cert ID)</run><code event='click'><lotusscript>Sub Click(Source As Button)
	On Error Goto ErrorHandle
	
	Dim ws As New NotesUIWorkspace
	Dim curUIDoc As NotesUIDocument
	Dim curDoc As NotesDocument
	Dim selectVal As Variant
	
	Set curUIDoc = ws.CurrentDocument
	Set curDoc = curUIDoc.Document
	
	'認証者ID
	selectVal = ws.Openfiledialog(False, "認証者IDファイル選択", "IDファイル|*.id", "", "cert.id")
	If Isempty(selectVal) Then
		Exit Sub
	End If
	
	curDoc.CertIDFilePath = selectVal
	
	Exit Sub
ErrorHandle:
	Call SetErrorObject(Err, Error)
	Call Messagebox_Error(GetErrorMessage(), "")
	Exit Sub
End Sub</lotusscript></code></actionhotspot></par>
<par def='5'>※フルパス</par></tablecell>
<tablecell>
<par def='6'/>
<table widthtype='fitmargins' leftmargin='0' rowspacing='0.0194in' columnspacing='0.0194in'
 refwidth='4.4347in'><tablecolumn width='0.6875in'/><tablecolumn width='100%'/>
<tablerow>
<tablecell bgcolor='system'>
<pardef id='10' align='right' keepwithnext='true' keeptogether='true'/>
<par def='10'>パス：</par></tablecell>
<tablecell>
<pardef id='11' keepwithnext='true' keeptogether='true'/>
<par def='11'><field type='text' kind='editable' name='CertIDFilePath'/><compositedata
 type='98' prevtype='65418' nexttype='222' afterparcount='7' containertype='65418'
 aftercontainercount='1' afterbegincount='3'>
Yg4BAIQAAAAAAAAAAAA=
</compositedata></par></tablecell></tablerow>
<tablerow>
<tablecell bgcolor='system'>
<par def='10'>パスワード：</par></tablecell>
<tablecell>
<par def='11'><field type='text' kind='editable' name='CertIDPassword'/><compositedata
 type='98' prevtype='65418' nexttype='222' afterparcount='6' containertype='65418'
 aftercontainercount='1' afterbegincount='3'>
Yg4BAIQAAAAAAAAAAAA=
</compositedata></par></tablecell></tablerow></table></tablecell></tablerow>
<tablerow>
<tablecell bgcolor='system'>
<par def='5'><actionhotspot hotspotstyle='none'><run><font style='underline'
 color='blue'/>再認証するユーザーID</run><code event='click'><lotusscript>Sub Click(Source As Button)
	On Error Goto ErrorHandle
	
	Dim ws As New NotesUIWorkspace
	Dim curUIDoc As NotesUIDocument
	Dim curDoc As NotesDocument
	Dim selectVal As Variant
	
	Set curUIDoc = ws.CurrentDocument
	Set curDoc = curUIDoc.Document
	
	selectVal = Evaluate({@LeftBack(UserIDFiles;"\\")}, curDoc)
	
	'ユーザーID
	selectVal = ws.Openfiledialog(True, "IDファイル選択", "IDファイル|*.id", selectVal(0), "")
	If Isempty(selectVal) Then
		Exit Sub
	End If
	
	curDoc.UserIDFiles = selectVal
	Call curUIDoc.Refresh()
	
	Exit Sub
ErrorHandle:
	Call SetErrorObject(Err, Error)
	Call Messagebox_Error(GetErrorMessage(), "")
	Exit Sub
End Sub</lotusscript></code></actionhotspot>※フルパス</par>
<par def='5'>※複数可</par>
<par def='5'>※ID毎にPasswordの入力が必要</par></tablecell>
<tablecell>
<par def='6'><run><font color='gray'/></run><run><font color='gray'/><field
 type='text' allowmultivalues='true' kind='editable' name='UserIDFiles' listinputseparators='newline'
 listdisplayseparator='newline'/></run><compositedata type='98' prevtype='65418'
 nexttype='222' afterparcount='10' containertype='65418' aftercontainercount='1'
 afterbegincount='4'>
Yg4BAIQAAAAAAAAAAAA=
</compositedata></par>
<table widthtype='fitmargins' leftmargin='0' rowspacing='0.0194in' columnspacing='0.0194in'
 refwidth='4.4347in'><tablecolumn width='0.5208in'/><tablecolumn width='100%'/>
<tablerow>
<tablecell bgcolor='system'>
<par def='8'>パス：</par></tablecell>
<tablecell>
<par def='9'><field showdelimiters='false' type='text' kind='computedfordisplay'
 name='Dsp_UserIdPath'><code event='defaultvalue'><formula>@Unique(@LeftBack(UserIDFiles;"\\"))</formula></code></field><compositedata
 type='98' prevtype='65418' nexttype='222' afterparcount='7' containertype='65418'
 aftercontainercount='1' afterbegincount='4'>
Yg4BAIQAAAAAAAAAAAA=
</compositedata></par></tablecell></tablerow>
<tablerow>
<tablecell bgcolor='system'>
<par def='8'>ファイル：</par></tablecell>
<tablecell>
<par def='9'><field usenotesstyle='false' height='1.1813in' width='1.9688in'
 multiline='true' borderstyle='none' lookupeachchar='false' lookupaddressonrefresh='false'
 type='keyword' allowmultivalues='true' kind='editable' name='Dsp_UserIDFiles'
 listinputseparators='comma' listdisplayseparator='comma'><keywords helperbutton='false'
 recalcchoices='true' columns='1' ui='listbox'><formula>@RightBack(UserIDFiles;"\\")</formula></keywords><code
 event='defaultvalue'><formula>""</formula></code></field></par>
<par def='9'><computedtext><code event='value'><formula>@Text(@Elements(UserIDFiles))+" 個 選択中"</formula></code></computedtext></par></tablecell></tablerow></table></tablecell></tablerow>
<tablerow>
<tablecell bgcolor='system'>
<par def='5'>有効期限</par>
<par def='5'>※デフォルト２年</par></tablecell>
<tablecell>
<pardef id='7' keepwithnext='true' keeptogether='true'/>
<par def='7'><field usenotesstyle='false' height='0.2500in' width='1in' multiline='true'
 borderstyle='single' type='datetime' kind='editable' name='Expiration'><datetimeformat
 show='date' date='yearmonthday' fourdigityearfor21stcentury='true' zone='never'
 dateformat='yearmonthdayweekday' dayformat='twodigitday' monthformat='twodigitmonth'
 yearformat='fourdigityear' weekdayformat='shortname' dateseparator1='/' dateseparator2='/'
 dateseparator3=' ' timeseparator=':' timeformat24='true' preference='usersetting'/><code
 event='defaultvalue'><formula>@Adjust(@Today;2;0;0;0;0;0)</formula></code></field></par></tablecell></tablerow></table></tablecell></tablerow></table>
<par def='1'/></richtext></body>
<item name='$$ScriptName' summary='false' sign='true'><text>Recertify</text></item></subform>

<agentdata>
<noteinfo noteid='42ba' unid='C9FB052381CCAA604925823D000C263D' sequence='1'>
<created><datetime>20180223T111242,21+09</datetime></created>
<modified><datetime>20180223T111242,22+09</datetime></modified>
<revised><datetime>20180223T111242,21+09</datetime></revised>
<lastaccessed><datetime>20180223T111242,22+09</datetime></lastaccessed>
<addedtofile><datetime>20180223T111242,22+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator NRK/O=nrkadmin</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='42c6' unid='953558F00A1D6A704925823D000C35C6' sequence='1'>
<created><datetime>20180223T111321,98+09</datetime></created>
<modified><datetime>20180223T111321,99+09</datetime></modified>
<revised><datetime>20180223T111321,98+09</datetime></revised>
<lastaccessed><datetime>20180223T111321,99+09</datetime></lastaccessed>
<addedtofile><datetime>20180223T111321,99+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator NRK/O=nrkadmin</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='42ce' unid='65AF2DC455EC96534925823D000C4E9C' sequence='1'>
<created><datetime>20180223T111425,56+09</datetime></created>
<modified><datetime>20180223T111425,57+09</datetime></modified>
<revised><datetime>20180223T111425,56+09</datetime></revised>
<lastaccessed><datetime>20180223T111425,57+09</datetime></lastaccessed>
<addedtofile><datetime>20180223T111425,57+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator NRK/O=nrkadmin</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='430a' unid='8C9742D5D0CD548B4925823D00162ED6' sequence='1'>
<created><datetime>20180223T130217,82+09</datetime></created>
<modified><datetime>20180223T130217,83+09</datetime></modified>
<revised><datetime>20180223T130217,82+09</datetime></revised>
<lastaccessed><datetime>20180223T130217,83+09</datetime></lastaccessed>
<addedtofile><datetime>20180223T130217,83+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator NRK/O=nrkadmin</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='4312' unid='E10B6AD488AB044B4925823D0016DFE8' sequence='1'>
<created><datetime>20180223T130951,12+09</datetime></created>
<modified><datetime>20180223T130951,14+09</datetime></modified>
<revised><datetime>20180223T130951,13+09</datetime></revised>
<lastaccessed><datetime>20180223T130951,14+09</datetime></lastaccessed>
<addedtofile><datetime>20180223T130951,14+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator NRK/O=nrkadmin</name></updatedby></agentdata>

<form name='(05.ID切り替え)' alias='IdChangeDoc' publicaccess='false' designerversion='8.5.3'
 renderpassthrough='true'>
<noteinfo noteid='432a' unid='4C2737425C587F4B492582EC000DBAB1' sequence='8'>
<created><datetime>20180817T112957,61+09</datetime></created>
<modified><datetime>20181031T100053,84+09</datetime></modified>
<revised><datetime>20181031T100053,83+09</datetime></revised>
<lastaccessed><datetime>20181031T100053,84+09</datetime></lastaccessed>
<addedtofile><datetime>20180817T112957,75+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby>
<wassignedby><name>CN=Administrator/O=Comture</name></wassignedby>
<actionbar bgcolor='#f0f0f0' bordercolor='black'>
<actionbuttonstyle bgcolor='#f0f0f0'/><font color='system'/><border style='solid'
 width='0px 0px 1px'/>
<sharedactionref id='3'>
<action title='閉じる(_X)' icon='112'><code event='click'><formula>FIELD SaveOptions:="0";
@Command([FileCloseWindow])</formula></code><code event='label'><formula>"閉じる"</formula></code></action></sharedactionref>
<sharedactionref id='2'>
<action title='編集(_E)' icon='29' hide='edit previewedit'><code event='click'><formula
>@If(@IsError(@Command([EditDocument]));"";"")</formula></code><code event='label'><formula
>"編集"</formula></code></action></sharedactionref>
<sharedactionref id='1'>
<action title='保存(_S)' icon='42' hide='preview read'><code event='click'><formula
>@Command([FileSave])</formula></code><code event='label'><formula>"保存"</formula></code></action></sharedactionref></actionbar>
<body><richtext>
<pardef id='1'/>
<par def='1'/>
<par def='1'><field type='text' kind='editable' name='UserName'/><compositedata
 type='98' prevtype='65418' nexttype='222' afterparcount='6' containertype='65418'
 aftercontainercount='1' afterbegincount='3'>
Yg4BAIQAAAAAAAAAAAA=
</compositedata></par>
<par def='1'><field type='text' kind='editable' name='UserNameJ'/><compositedata
 type='98' prevtype='65418' nexttype='222' afterparcount='6' containertype='65418'
 aftercontainercount='1' afterbegincount='3'>
Yg4BAIQAAAAAAAAAAAA=
</compositedata></par>
<par def='1'><field type='text' kind='editable' name='FilePath'/><compositedata
 type='98' prevtype='65418' nexttype='222' afterparcount='6' containertype='65418'
 aftercontainercount='1' afterbegincount='3'>
Yg4BAIQAAAAAAAAAAAA=
</compositedata><button width='2in'
 widthtype='maximum' maxlines='0' wraptext='true' bgcolor='system'><code event='click'><lotusscript
>Sub Click(Source As Button)
	
	Dim workspace As New NotesUIWorkspace
	Dim curUIDoc As NotesUIDocument
	Dim curDoc As NotesDocument
	
	Set curUIDoc = workSpace.CurrentDocument
	
	If curUIDoc.EditMode = False Then
		curUIDoc.EditMode = True
		If curUIDoc.EditMode = False Then
			Exit Sub
		End If
	End If
	
	Set curDoc = curUIDoc.Document
	
	
	
	
	
End Sub</lotusscript></code></button></par>
<par def='1'><field type='text' kind='editable' name='Password'/><compositedata
 type='98' prevtype='65418' nexttype='222' afterparcount='6' containertype='65418'
 aftercontainercount='1' afterbegincount='3'>
Yg4BAIQAAAAAAAAAAAA=
</compositedata></par></richtext></body>
<item name='$$ScriptName' summary='false' sign='true'><text>IdChangeDoc</text></item></form>

<view name='04.ID切り替え' alias='IDChangeUI' showinmenu='false' noreplace='true'
 publicaccess='false' designerversion='8.5.3' unreadmarks='none' onopengoto='top'
 onrefresh='displayindicator' headers='simple' opencollapsed='false' showresponsehierarchy='true'
 showmargin='true' shrinkrows='false' extendlastcolumn='false' showhierarchies='false'
 unreadcolor='black' rowlinecount='1' headerlinecount='1' rowspacing='1.25'
 bgcolor='white' altrowcolor='#efefef' totalscolor='black' headerbgcolor='white'
 boldunreadrows='false' evaluateactions='true' allownewdocuments='false' allowcustomizations='true'
 hidemarginborder='false' marginwidth='0px' marginbgcolor='white' uniquekeys='false'>
<noteinfo noteid='432e' unid='FF4BBC92B4ABFCB0492582EC000DDF0B' sequence='73'>
<created><datetime>20180817T113130,67+09</datetime></created>
<modified><datetime>20190301T154057,86+09</datetime></modified>
<revised><datetime>20190301T154057,85+09</datetime></revised>
<lastaccessed><datetime>20190301T154057,86+09</datetime></lastaccessed>
<addedtofile><datetime>20180817T113130,71+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator NRK/O=nrkadmin</name></updatedby><code event='selection'><formula
>SELECT Form="IDChangeDoc"</formula></code><code event='queryopendocument'><lotusscript
>Sub Queryopendocument(Source As Notesuiview, Continue As Variant)
	
	Dim session As New NotesSession
	Dim docCol As NotesDocumentCollection
	Dim idDoc As NotesDocument
	Dim reg As New NotesRegistration
	
	Dim filePath As String
	Dim password As String
	
	If session.GetEnvironmentString("DBTOOL_DO_ID_CHANGE", False) = "" Then
		Exit Sub
	End If
	
	Continue = False
	Set docCol = Source.Documents
	Set idDoc = docCol.GetFirstDocument()
	
	filePath = idDoc.FilePath(0)
	password = idDoc.Password(0)
	
	Call reg.SwitchToID(filePath, password)
	
	Dim objName As New NotesName(session.UserName)
	
	Print Now() &amp; " - " &amp; objName.Abbreviated &amp; " に id を切り替えました。 "
	
End Sub</lotusscript></code>
<actionbar bgcolor='#f0f0f0' bordercolor='black'>
<actionbuttonstyle bgcolor='#f0f0f0'/><font color='system'/><border style='solid'
 width='0px 0px 1px'/>
<sharedactionref id='3'>
<action title='閉じる(_X)' icon='112'><code event='click'><formula>FIELD SaveOptions:="0";
@Command([FileCloseWindow])</formula></code><code event='label'><formula>"閉じる"</formula></code></action></sharedactionref>
<action title='IDファイル登録'><code event='options'><lotusscript>Option Declare
Use "NotesUICommonLib"
</lotusscript></code><code event='click'><lotusscript>Sub Click(Source As Button)
	On Error Goto ErrorHandle
	
	Dim workSpace As New NotesUIWorkspace
	Dim session As New NotesSession
	Dim curDB As NotesDatabase
	Dim idDoc As NotesDocument
	
	Dim files As Variant
	
	Set curDB = session.CurrentDatabase
	Set idDoc = curDB.UnprocessedDocuments.GetFirstDocument()
	
	If Not idDoc Is Nothing Then
		files = Evaluate({tmp:=FilePath; list:=@Explode(tmp;"\\"); cnt:=@Elements(list); @Implode(@Subset(list; cnt-1);"\\")}, idDoc)
	Else
		files = Split("", ",")
	End If
	
	files = workSpace.OpenFileDialog(True, "IDファイルの選択(複数可)", "IDファイル|*.id", files(0), "")
	
	If Isempty(files) Then
		Exit Sub
	End If
	
	Dim reg As New NotesRegistration
	
	Forall f In files
		
		Call reg.SwitchToID(f,"password")
		
		Set session = New NotesSession
		
		Set idDoc = curDB.CreateDocument
		
		idDoc.Form = "IDChangeDoc"
		
		idDoc.UserName = session.UserName
		idDoc.Password = "password"
		idDoc.FilePath = f
		
		
		Call idDoc.Save(True, True)
		
	End Forall
	
	Call workSpace.ViewRefresh()
	
	Exit Sub
ErrorHandle:
	Call SetErrorObject(Err, Error)
	Call Messagebox_Error(GetErrorMessage(), "")
	Exit Sub
End Sub</lotusscript></code></action>
<action title='|'/>
<action title='漢字名取得'><code event='click'><lotusscript>Sub Click(Source As Button)
	
	Dim workSpace As New NotesUIWorkspace
	Dim session As New NotesSession
	Dim curDB As NotesDatabase
	Dim dlgDoc As NotesDocument
	Dim result As Boolean
	
	Set curDB = session.CurrentDatabase
	Set dlgDoc = curDB.CreateDocument
	
	result = workSpace.DialogBox("SubGetAltName", True, True, False, False, False, False, "アドレス帳の選択", dlgDoc, True, False)
	If result = False Then
		Exit Sub
	End If
	
	Dim unpro As NotesDocumentCollection
	Dim idDoc As NotesDocument
	Dim FORMULA_BASE As String
	Dim formula As String
	Dim calc As Variant
	
	Set unpro = curDB.UnprocessedDocuments
	
	FORMULA_BASE = dlgDoc.Formula(0)
	
	If FORMULA_BASE = "" Then
		Msgbox "式が不正です"
		Exit Sub
	End If
	
	Set idDoc = unpro.GetFirstDocument()
	
	Do Until idDoc Is Nothing
		
		formula = FORMULA_BASE
		formula = Replace(formula, "@DbServer", {"} &amp; dlgDoc.DbServer(0) &amp; {"})
		formula = Replace(formula, "@DbFilePath", {"} &amp; Replace(dlgDoc.DbFilePath(0), "\", "\\") &amp; {"})
		formula = Replace(formula, "@UserName", {"} &amp; idDoc.UserName(0) &amp; {"})
		
		Print formula
		
		calc = Evaluate( formula, idDoc )
		
		idDoc.UserNameJ = calc
		
		Call idDoc.Save(True, True)
		
		Set idDoc = unpro.GetNextDocument(idDoc)
	Loop
	
	
	
End Sub</lotusscript></code></action>
<action title='パスワード変更'><code event='click'><lotusscript>Sub Click(Source As Button)
	
	Dim workSpace As New NotesUIWorkspace
	Dim pass As Variant
	
	pass = workSpace.Prompt(PROMPT_PASSWORD, "新規パスワードの入力", "パスワードを入力してください", "")
	
	If Isempty(pass) Then
		Exit Sub
	End If
	
	Dim session As New NotesSession
	Dim curDB As NotesDatabase
	Dim unpro As NotesDocumentCollection
	Dim idDoc As NotesDocument
	
	Set curDB = session.CurrentDatabase
	Set unpro = curDB.UnprocessedDocuments
	
	Call unpro.StampAll("password", pass)
	
	Call workSpace.ViewRefresh()
	Call workSpace.CurrentView.DeselectAll()
	
End Sub</lotusscript></code></action>
<action title='ID切り替え' displaytype='checkbox'><code event='click'><formula
>envname:="DBTOOL_DO_ID_CHANGE";
val := @Environment( envname );
@If(val="1"; @Environment( envname; "" ); @Environment( envname; "1" ));
@Command([ViewRefreshFields])</formula></code><code event='displayvalue'><formula
>@Environment("DBTOOL_DO_ID_CHANGE")="1"</formula></code><code event='label'><formula
>@If(@Environment("DBTOOL_DO_ID_CHANGE")="";"文書を開く"; "IDを切り替える")</formula></code></action></actionbar>
<column sort='ascending' hidedetailrows='false' itemname='$1' width='1' resizable='true'
 separatemultiplevalues='true' sortnoaccent='true' sortnocase='true' showaslinks='false'
 categorized='true' twisties='true'><font color='teal' style='bold'/><columnheader
 title='Path'><font size='9pt' style='bold'/></columnheader><code event='value'><formula
>tmp:=FilePath;
list:=@Explode(tmp;"\\");
cnt:=@Elements(list);
@Implode(@Subset(list; cnt-1);"/")</formula></code><twistieimage><imageref
 database='0000000000000000' name='PlusMinus.gif'/></twistieimage></column>
<column sort='ascending' hidedetailrows='false' itemname='$4' width='20' resizable='true'
 separatemultiplevalues='false' sortnoaccent='false' sortnocase='true' showaslinks='false'><columnheader
 title='Name'><font size='9pt' style='bold'/></columnheader><code event='value'><formula
>@Name([Abbreviate];UserName)</formula></code></column>
<column hidedetailrows='false' itemname='UserNameJ' width='15' resizable='true'
 separatemultiplevalues='false' sortnoaccent='false' sortnocase='true' showaslinks='false'><columnheader
 title='NameJ'><font size='9pt' style='bold'/></columnheader></column>
<column hidedetailrows='false' itemname='Password' width='15' resizable='true'
 separatemultiplevalues='false' sortnoaccent='false' sortnocase='true' showaslinks='false'><columnheader
 title='Password'><font size='9pt' style='bold'/></columnheader></column>
<column hidedetailrows='false' itemname='$2' width='10' resizable='true' separatemultiplevalues='false'
 sortnoaccent='false' sortnocase='true' showaslinks='false'><columnheader
 title='File'><font size='9pt' style='bold'/></columnheader><code event='value'><formula
>@Subset(@Explode(FilePath;"\\"); -1)</formula></code></column></view>

<subform name='(漢字名取得)' alias='SubGetAltName' designerversion='8.5.3' renderpassthrough='true'>
<noteinfo noteid='433a' unid='D1F33669B5E98D45492582EC001B4F6F' sequence='15'>
<created><datetime>20180817T135818,07+09</datetime></created>
<modified><datetime>20181031T100053,68+09</datetime></modified>
<revised><datetime>20181031T100053,67+09</datetime></revised>
<lastaccessed><datetime>20181031T100053,68+09</datetime></lastaccessed>
<addedtofile><datetime>20180817T135818,21+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby>
<wassignedby><name>CN=Administrator/O=Comture</name></wassignedby>
<globals><code event='options'><lotusscript>Option Public
Option Declare
Use "NotesUICommonLib"
</lotusscript></code></globals>
<body><richtext>
<pardef id='1'/>
<par def='1'/>
<table widthtype='fixedleft' rowspacing='0.0396in' columnspacing='0.3542in'
 refwidth='4.6451in'><tablecolumn width='3.9368in'/>
<tablerow>
<tablecell>
<pardef id='2' align='right' hide='read print preview' keepwithnext='true'
 keeptogether='true'/>
<par def='2'><button characters='22' widthtype='fixedcharacter' wraptext='true'
 bgcolor='system'><font size='8pt'/>データベースの選択<code event='options'><lotusscript
>Option Declare

</lotusscript></code><code event='click'><lotusscript>Sub Click(Source As Button)
	On Error Goto ErrorHandle
	
	Dim workSpace As New NotesUIWorkSpace
	Dim curUIDoc As NotesUIDocument
	Dim curDoc As NotesDocument
	Dim curDB As NotesDatabase
	Dim server As String
	
	Dim catalogDB As NotesDatabase
	
	Dim docCol As NotesDocumentCollection
	Dim selDoc As NotesDocument
	
	Dim session As New NotesSession
	Dim db As New NotesDatabase("", "")
	Dim retVal As Variant
	
	Set curUIDoc = workSpace.CurrentDocument
	Set curDoc = curUIDoc.Document
	Set curDB = curDoc.ParentDatabase
	
	server = curDoc.GetItemValue("DbServer")(0)
	If server = "" Then server = curDB.Server
	
	Set catalogDB = New NotesDatabase("", "")
	
	'R5以下
	If session.NotesBuildVersion &lt;= 166 Then
		
		If catalogDB.Open(server, "catalog.nsf") = True Then
			Set docCol = workSpace.PickListCollection(PICKLIST_CUSTOM, False, server, "catalog.nsf", "ByTitle", "データベースの選択", "データベースを選択してください。")
			If docCol.Count = 0 Then
				Exit Sub
			End If
			
			Set selDoc = docCol.GetFirstDocument()
			
			If db.Open(server,selDoc.GetItemValue("Pathname")(0)) = False Then
				Call Messagebox_Error(selDoc.GetItemValue("Title")(0) &amp; "が開けません。", "")
				Exit Sub
			End If
			
		Else
			retVal = workSpace.OpenFileDialog(False, "ファイルの選択", "Notes Database|*.nsf|Notes Template|*.ntf", "", "")
			If Isempty(retVal) = True Then
				Exit Sub
			End If
			
			If db.Open("", retVal(0)) = False Then
				Call Messagebox_Error(retVal(0) &amp; "が開けません。", "")
				Exit Sub
			End If
			
		End If
		
	'R6以上
	Else
		
		retVal = workSpace.Prompt(13, "", "")
		If Isempty(retVal) = True Then
			Exit Sub
		End If
		
		If db.Open(retVal(0), retVal(1)) = False Then
			Call Messagebox_Error(retVal(2) &amp; "が開けません。", "")
			Exit Sub
		End If
		
	End If
	
	Call curDoc.ReplaceItemValue("DbServer", db.Server)
	Call curDoc.ReplaceItemValue("DbTitle", db.Title)
	Call curDoc.ReplaceItemValue("DbFilePath", db.FilePath)
	Call curDoc.ReplaceItemValue("DbReplicaID", db.ReplicaID)
	
	Exit Sub
ErrorHandle:
	Call SetErrorObject(Err, Error)
	Call Messagebox_Error(GetErrorMessage(), "")
	Exit Sub
End Sub</lotusscript></code></button></par>
<table widthtype='fitmargins' leftmargin='0' rowspacing='0.0396in' columnspacing='0.0396in'
 refwidth='3.9160in'><tablecolumn width='0.5833in' sizetofit='true'/><tablecolumn
 width='100%'/>
<tablerow>
<tablecell bgcolor='system'>
<pardef id='4' keepwithnext='true' keeptogether='true'/>
<par def='4'>サーバー</par></tablecell>
<tablecell>
<pardef id='5' keepwithnext='true' keeptogether='true'/>
<par def='5'><field type='text' kind='editable' name='DbServer'/><compositedata
 type='98' prevtype='65418' nexttype='222' afterparcount='7' containertype='65418'
 aftercontainercount='1' afterbegincount='3'>
Yg4BAIQAAAAAAAAAAAA=
</compositedata></par></tablecell></tablerow>
<tablerow>
<tablecell bgcolor='system'>
<par def='4'>ファイル名</par></tablecell>
<tablecell>
<par def='5'><field type='text' kind='editable' name='DbFilePath'/><compositedata
 type='98' prevtype='65418' nexttype='222' afterparcount='6' containertype='65418'
 aftercontainercount='1' afterbegincount='3'>
Yg4BAIQAAAAAAAAAAAA=
</compositedata></par></tablecell></tablerow>
<tablerow>
<tablecell bgcolor='system'>
<par def='4'>DB名</par></tablecell>
<tablecell>
<par def='5'><field type='text' kind='editable' name='DbTitle'/><compositedata
 type='98' prevtype='65418' nexttype='222' afterparcount='6' containertype='65418'
 aftercontainercount='1' afterbegincount='3'>
Yg4BAIQAAAAAAAAAAAA=
</compositedata></par></tablecell></tablerow></table>
<pardef id='3' keepwithnext='true' keeptogether='true'/>
<par def='3'>検索式：</par>
<par def='3'><field usenotesstyle='false' height='1.9688in' width='100%' multiline='true'
 borderstyle='single' type='text' kind='editable' name='Formula'><code event='defaultvalue'><formula
>"@DbLookup(\"\"; @DbServer:@DbFilePath; \"($Users)\"; @Name([ABBREVIATE]; @UserName); \"AltFullName\"; [FAILSILENT])"</formula></code></field></par></tablecell></tablerow></table>
<par def='1'/></richtext></body>
<item name='$$ScriptName' summary='false' sign='true'><text>SubGetAltName</text></item></subform>

<scriptlibrary name='ActionPageLib' hide='v3 v4strict' designerversion='8.5.3'>
<noteinfo noteid='435a' unid='44F1BBA24B472D5A49258307001DA750' sequence='125'>
<created><datetime>20180913T142353,76+09</datetime></created>
<modified><datetime>20181031T100051,41+09</datetime></modified>
<revised><datetime>20181031T100051,40+09</datetime></revised>
<lastaccessed><datetime>20181031T100051,41+09</datetime></lastaccessed>
<addedtofile><datetime>20180913T142353,80+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby>
<wassignedby><name>CN=Administrator/O=Comture</name></wassignedby><code event='options'><lotusscript
>Option Public
Option Declare
Use "NotesUICommonLib"
Use "ToolsLib"

</lotusscript></code><code event='declarations'><lotusscript>Private unid As String


</lotusscript></code><code event='initialize'><lotusscript>Sub Initialize
	Call SetProcess("*SL - ActionPageLib")
	Dim session As New NotesSession
	unid = session.GetEnvironmentString("Rep_Val_UNID")
End Sub

</lotusscript></code><code event='RemoveFields_Click'><lotusscript>Sub RemoveFields_Click(Source As Button)
	
	Dim unid As String
	unid = GetEnvilonmentUNID() '-&gt;[(Grobals)-(Declarations)]
	
	Dim workSpace As New NotesUIWorkspace
	Dim curUIDoc As NotesUIDocument
	Dim curPage As NotesDocument
	Dim curDB As NotesDatabase
	'***********************
	' アクションページ取得処理
	'***********************
	Set curUIDoc = workSpace.CurrentDocument
	Set curPage = curUIDoc.Document
	Set curDB = curPage.ParentDatabase
	
	Dim doc As NotesDocument
	Dim server As String
	Dim filePath As String
	Dim viewName As String
	
	'******************************************
	' 環境変数に設定してあったユニバーサルIDから、
	' データベース情報文書を取得する
	'******************************************
	Set doc = curDB.GetDocumentByUNID(unid)
	
	Dim pdoc As NotesDocument
	Set pdoc = curDB.GetDocumentByUNID(doc.ParentDocumentUNID)
	
	' サーバー
'	server = doc.GetItemValue("DbServer")(0)
	server = pdoc.GetItemValue("DbServer")(0)
	If server = "" Then server = curDB.Server
	' 取得したデータベース情報文書から、
	' 開きたいデータベースのファイルパスとビュー名を取得
'	filePath = doc.GetItemValue("DbFilePath")(0)
'	viewName = doc.GetItemValue("ViewAlias")(0)
	filePath = pdoc.GetItemValue("DbFilePath")(0)
	viewName = pdoc.GetItemValue("ViewAlias")(0)
	
	' ワークスペースに開く（新規インスタンスではないので、見た目的には変わりなし）
	Call WorkSpace.OpenDatabase(server, filePath, viewName, , False, False)
	
	Dim curUiView As NotesUIView
	Dim selectCol As NotesDocumentCollection
	Dim selectDoc As NotesDocument
	
	' ワークスペースに開いたビューから選択文書を取得
	Set curUiView = WorkSpace.CurrentView
	Set selectCol = curUiView.Documents
	
	' ****************
	' 実際の値変換処理
	'*****************
	Dim item As NotesItem
	Dim allItems As Variant
	Dim values() As String
	Dim listVal As Variant
	Dim empVal As Variant
	Dim index As Long
	Dim retVal As Variant
	Dim Field As String
	Dim dType As String
	Dim repData As Variant
	
	If selectCol.Count = 0 Then
		MsgBox "文書を選択してください。", 0+64, ""
		Exit Sub
	ElseIf Not(selectCol.Count = 1) Then
		MsgBox "１文書のみ選択してください。", 0+64, ""
		Exit Sub
	Else
		
		Set selectDoc = selectCol.GetFirstDocument()
		
		allItems = selectDoc.Items
		index = 0
		ReDim Preserve values(0 To index)
		
		ForAll i In allItems
			Set item = i
			
			values(index) = item.Name
			index = index + 1
			ReDim Preserve values(0 To index)
			
		End ForAll
		
		listVal = FullTrim(values)
		
		Call Sort(listVal, True)
		
		Do
			retVal = workSpace.Prompt(PROMPT_OKCANCELEDITCOMBO,"削除フィールド選択","削除するフィールド名を選択してください。",Field,listVal)
			If IsEmpty(retVal) Then
				Exit Sub
			End If
			
			Field = CStr(retVal)
			If Field = "" Then
				MsgBox "フィールドを選択するか、入力してください。", 0+64, ""
			Else
				
				Set item = selectDoc.GetFirstItem(Field)
				If item Is Nothing Then
					MsgBox "文書にフィールド「 " &amp; Field &amp; " 」がありません。", 0+64, ""
				Else
					Exit Do
				End If
			End If
		Loop
		
		Set selectDoc = selectCol.GetFirstDocument()
		Call selectDoc.RemoveItem(Field)
		Call selectDoc.Save(True, True)
		
		MsgBox "フィールド「" &amp; Field &amp; "」を削除しました。",0+64, ""
		
	End If
	
End Sub

</lotusscript></code><code event='SetValuesMulti_Click'><lotusscript>Sub SetValuesMulti_Click(Source As Button)
	
	Dim unid As String
	unid = GetEnvilonmentUNID() '-&gt;[(Grobals)-(Declarations)]
	
	Dim workSpace As New NotesUIWorkspace
	Dim curUIDoc As NotesUIDocument
	Dim curPage As NotesDocument
	Dim curDB As NotesDatabase
	'***********************
	' アクションページ取得処理
	'***********************
	Set curUIDoc = workSpace.CurrentDocument
	Set curPage = curUIDoc.Document
	Set curDB = curPage.ParentDatabase
	
	Dim doc As NotesDocument
	Dim server As String
	Dim filePath As String
	Dim viewName As String
	
	'******************************************
	' 環境変数に設定してあったユニバーサルIDから、
	' データベース情報文書を取得する
	'******************************************
	Set doc = curDB.GetDocumentByUNID(unid)
	
	Dim pdoc As NotesDocument
	Set pdoc = curDB.GetDocumentByUNID(doc.ParentDocumentUNID)
	
	' サーバーは現在のサーバー
	'server = doc.GetItemValue("DbServer")(0)
	server = pdoc.GetItemValue("DbServer")(0)
	If server = "" Then server = curDB.Server
	' 取得したデータベース情報文書から、
	' 開きたいデータベースのファイルパスとビュー名を取得
	'filePath = doc.GetItemValue("DbFilePath")(0)
	filePath = pdoc.GetItemValue("DbFilePath")(0)
	
	viewName = doc.GetItemValue("ViewAlias")(0)
	
	Dim uiDB As NotesUIDatabase
	Set uiDB = workSpace.CurrentDatabase
	
	' ワークスペースに開く（新規インスタンスではないので、見た目的には変わりなし）
	Call WorkSpace.OpenDatabase(server, filePath, viewName, , False, False)
	
	Dim curUiView As NotesUIView
	Dim selectCol As NotesDocumentCollection
	Dim selectDoc As NotesDocument
	
	' ワークスペースに開いたビューから選択文書を取得
	Set curUiView = WorkSpace.CurrentView
	Set selectCol = curUiView.Documents
	
	' ****************
	' 実際の値変換処理
	'*****************
	Dim dlogDoc As NotesDocument
	Dim subItem As NotesItem
	Dim dType As String ' データの型
	Dim separator As String ' 複数値のセパレータ
	Dim fieldName As String ' 入力するフィールド
	Dim strData As String ' 入力するデータ
	Dim tmpData As Variant
	Dim index As Long
	Dim lastIndex As Long
	Dim retVal As Variant
	
	Dim item As NotesItem
	Dim allItems As Variant
	Dim listVal As Variant
	Dim Field As String
	
	If selectCol.Count = 0 Then
		MsgBox "文書を選択してください。", 0+64, ""
		Exit Sub
%REM
	Elseif Not(selectCol.Count = 1) Then
		Msgbox "１文書のみ選択してください。", 0+64, ""
		Exit Sub
%ENDREM
	Else
		
		Set selectDoc = selectCol.GetFirstDocument()
		Set dlogDoc = curDB.CreateDocument
		
		Set subItem = dlogDoc.ReplaceItemValue("FieldNames", "")
		
		allItems = selectDoc.Items
		index = 0
		ReDim Preserve values(0 To index)
		
		ForAll i In allItems
			Set item = i
			
			ReDim Preserve values(0 To index)
			values(index) = item.Name
			index = index + 1
			
		End ForAll
		
		listVal = FullTrim(values)
		Call Sort(listVal, True)
		subItem.Values = listVal
		
		' ワークスペースに開く（ビューの選択文書を取得するときに、別データベースを開いてしまっている為、致し方なく）
		Call WorkSpace.OpenDatabase(curDB.Server, curDB.FilePath, "InputDataUI", , False, False)
		
' ダイアログボックス表示タグ
DialogTag:
		Do
			
			'ダイアログの表示
			retVal = workSpace.DialogBox("subDataInput",True,True,False,False,False,False,"データ入力", dlogDoc)
			'キャンセルの場合処理終了
			If retVal = False Then
				' フレームセットを開きなおして処理終了
				Call workSpace.OpenFrameSet("RepValFrame")
				Exit Sub
			End If
			
			Field = dlogDoc.GetItemValue("SelectField")(0)
			If Field = "" Then
				Call Messagebox_Info("フィールドを選択するか、入力してください。","")
				GoTo DialogTag
			End If
			
			Set item = selectDoc.GetFirstItem(Field)
			If item Is Nothing Then
				If 7 = Messagebox_YesNo("文書にフィールド「 " &amp; Field &amp; " 」がありません。" &amp; Chr(13) &amp; Chr(10) &amp;_
				"新しくフィールドを作成しますか？", "") Then
					GoTo DialogTag
				End If
			End If
			
			'separator = dlogDoc.GetItemValue("Separator")(0) ' 複数値のセパレータ
			separator = dlogDoc.GetItemValue("SelectSeparator")(0)
			separator = GetSeparator(separator)
			strData = dlogDoc.GetItemValue("TextData")(0) ' 入力データ
			
			'**************************
			' 複数値の場合、先に値を分割
			'**************************
			If separator = "" Then ' セパレータなし（複数値ではない）場合
				'tmpData = ChangeElementData(strData, separator) ' 区切り文字で分割
				Dim tmpStr(0 To 0) As String
				tmpStr(0) = strData
				tmpData = tmpStr
			ElseIf 0 &lt; InStr(1, strData, separator, 0) Then
				'tmpData = ChangeElementData(strData, separator) ' 区切り文字で分割
				tmpData = ExplodeElementData(strData, separator) ' 区切り文字で分割
			Else
				Call Messagebox_Info("入力データ内にセパレータ文字がありません。","")
				GoTo DialogTag
			End If
			
%REM
テキスト|0
数値（整数）|1
数値（不動少数）|2
日付/時刻|3
日付|4
時刻|5
%END REM
			
			'*************************************
			' 値のチェック処理
			' データタイプによってチェック処理切り替え
			'*************************************
			Dim cData() As Variant
			
			dType = dlogDoc.GetItemValue("DataType")(0) ' データの型
			
			If IsArray(tmpData) Then '配列の場合
				index = LBound(tmpData) '開始Index
				lastIndex = UBound(tmpData) '最終Indexを取得
			Else
				index = 0 '開始Index
				lastIndex = 0 '最終Indexは0固定
			End If
			
			ReDim Preserve cData(0 To index)
			
			Select Case dType
			Case "1" ' 数値（整数）
				
				For index = 0 To lastIndex
					
					ReDim Preserve cData(0 To index) ' 配列の拡張
					
					If IsNumeric(tmpData(index)) Then
						cData(index) = CLng(tmpData(index)) ' データ変換
					Else
						Call Messagebox_Info( CStr(index + 1) &amp; "番目のデータが数値ではありません。", "")
						GoTo DialogTag
					End If
					
				Next
				
			Case "2" ' 数値（不動少数点）
				
				For index = 0 To lastIndex
					
					ReDim Preserve cData(0 To index) ' 配列の拡張
					
					If IsNumeric(tmpData(index)) Then
						cData(index) = CDbl(tmpData(index)) ' データ変換
					Else
						Call Messagebox_Info( CStr(index + 1) &amp; "番目のデータが数値ではありません。", "")
						GoTo DialogTag
					End If
					
				Next
				
			Case "3" ' 日付/時刻
				
				For index = 0 To lastIndex
					
					ReDim Preserve cData(0 To index) ' 配列の拡張
					
					If IsDate(tmpData(index)) Then
						cData(index) = CDat(tmpData(index)) ' データ変換
					Else
						Call Messagebox_Info( CStr(index + 1) &amp; "番目のデータが日付/時刻ではありません。", "")
						GoTo DialogTag
					End If
					
				Next
				
			Case "4" ' 日付
				
				For index = 0 To lastIndex
					
					ReDim Preserve cData(0 To index) ' 配列の拡張
					
					If IsDate(tmpData(index)) Then
						cData(index) = DateValue(tmpData(index)) ' データ変換
					Else
						Call Messagebox_Info( CStr(index + 1) &amp; "番目のデータが日付ではありません。", "")
						GoTo DialogTag
					End If
					
				Next
				
			Case "5" ' 時刻
				
				For index = 0 To lastIndex
					
					ReDim Preserve cData(0 To index) ' 配列の拡張
					
					If IsDate(tmpData(index)) Then
						cData(index) = TimeValue(tmpData(index)) ' データ変換
					Else
						Call Messagebox_Info( CStr(index + 1) &amp; "番目のデータが時刻ではありません。", "")
						GoTo DialogTag
					End If
					
				Next
				
			Case Else
				
				For index = 0 To lastIndex
					
					ReDim Preserve cData(0 To index) ' 配列の拡張
					
					cData(index) = CStr(tmpData(index)) ' データ変換
					
				Next
				
			End Select
			
			If 1 = MsgBox("フィールド：" &amp; Field &amp; Chr(13) &amp; Chr(10) &amp;_
			"データ型：" &amp; GetDataTypeString(dType) &amp; Chr(13) &amp; Chr(10) &amp;_
			"データ値：" &amp; cData(0) &amp; Chr(13) &amp; Chr(10) &amp; Chr(13) &amp; Chr(10) &amp;_
			"上記のデータで置換します。よろしいですか？",1+64, "") Then
				Exit Do
			End If
			
		Loop
		
		' データ格納
		Call selectCol.StampAll(Field, cData)
		
	End If
	' フレームセットを開きなおして処理終了
	Call workSpace.OpenFrameSet("RepValFrame")
	
End Sub

</lotusscript></code><code event='GetDataTypeString'><lotusscript>Function GetDataTypeString(key As String) As String
%REM
テキスト|0
数値（整数）|1
数値（不動少数）|2
日付/時刻|3
日付|4
時刻|5
%ENDREM
	
	Dim retVal As String
	retVal = "テキスト"
	
	Select Case(key)
	Case "1"
		retVal = "数値（整数）"
	Case "2"
		retVal = "数値（浮動小数点）"
	Case "3"
		retVal = "日付/時刻"
	Case "4"
		retVal = "日付"
	Case "5"
		retVal = "時刻"
	End Select
	
	GetDataTypeString = retVal
End Function

</lotusscript></code><code event='RemoveAllChildren'><lotusscript>Sub RemoveAllChildren(docCol As NotesDocumentCollection, counter As Double)
	
	Dim doc As NotesDocument
	Dim children As NotesDocumentCollection
	Dim child As NotesDocument
	Dim nextChild As NotesDocument
	Dim count As Double
	Dim i As Double
	
	Set doc = docCol.GetFirstDocument()
	Do Until doc Is Nothing
		Set children = doc.Responses
		If Not children Is Nothing Then
			Call RemoveAllChildren(children, counter)
		End If
		Set doc = docCol.GetNextDocument(doc)
	Loop
	
	counter = counter + docCol.Count
	Call docCol.RemoveAll(True)
	Print counter &amp; " 文書 削除しました。"
	
End Sub

</lotusscript></code><code event='SetValue_Click'><lotusscript>Sub SetValue_Click(Source As Button)
	
	Dim unid As String
	unid = GetEnvilonmentUNID() '-&gt;[(Grobals)-(Declarations)]
	
	Dim workSpace As New NotesUIWorkspace
	Dim curUIDoc As NotesUIDocument
	Dim curPage As NotesDocument
	Dim curDB As NotesDatabase
	Dim dlgDoc As NotesDocument
	
	'***********************
	' アクションページ取得処理
	'***********************
	Set curUIDoc = workSpace.CurrentDocument
	Set curPage = curUIDoc.Document
	Set curDB = curPage.ParentDatabase
	'ダイアログ文書
	Set dlgDoc = curDB.CreateDocument
	'サブフォーム名を設定
	dlgDoc.Form = "dbtool_DataInputSimple"
	
	Dim doc As NotesDocument
	Dim server As String
	Dim filePath As String
	Dim viewName As String
	
	'******************************************
	' 環境変数に設定してあったユニバーサルIDから、
	' データベース情報文書を取得する
	'******************************************
	Set doc = curDB.GetDocumentByUNID(unid)
	
	Dim pdoc As NotesDocument
	Set pdoc = curDB.GetDocumentByUNID(doc.ParentDocumentUNID)
	
	' サーバーは現在のサーバー
	'server = doc.GetItemValue("DbServer")(0)
	server = pdoc.GetItemValue("DbServer")(0)
	If server = "" Then server = curDB.Server
	' 取得したデータベース情報文書から、
	' 開きたいデータベースのファイルパスとビュー名を取得
	'filePath = doc.GetItemValue("DbFilePath")(0)
	filePath = pdoc.GetItemValue("DbFilePath")(0)
	
	viewName = doc.GetItemValue("ViewAlias")(0)
	
	' ワークスペースに開く（新規インスタンスではないので、見た目的には変わりなし）
	Call WorkSpace.OpenDatabase(server, filePath, viewName, , False, False)
	
	Dim curUiView As NotesUIView
	Dim selectCol As NotesDocumentCollection
	Dim selectDoc As NotesDocument
	
	' ワークスペースに開いたビューから選択文書を取得
	Set curUiView = WorkSpace.CurrentView
	Set selectCol = curUiView.Documents
	
	' ****************
	' 実際の値変換処理
	'*****************
	Dim item As NotesItem
	Dim allItems As Variant
	Dim values() As String
	Dim listVal As Variant
	Dim empVal As Variant
	Dim index As Long
	Dim retVal As Variant
	Dim Field As String
	Dim dType As String
	Dim repData As Variant
	
	If selectCol.Count = 0 Then
		MsgBox "文書を選択してください。", 0+64, ""
		Exit Sub
	ElseIf Not(selectCol.Count = 1) Then
		MsgBox "１文書のみ選択してください。", 0+64, ""
		Exit Sub
	Else
		
		Set selectDoc = selectCol.GetFirstDocument()
		
		Do
			
			allItems = selectDoc.Items
			index = 0
			ReDim Preserve values(0 To index)
			
			ForAll i In allItems
				Set item = i
				
				values(index) = item.Name
				index = index + 1
				ReDim Preserve values(0 To index)
				
			End ForAll
			
			listVal = FullTrim(values)
			
			Call Sort(listVal, True)
			
			Do
				retVal = workSpace.Prompt(PROMPT_OKCANCELEDITCOMBO,"代入先フィールド選択","値を格納するフィールド名を選択してください。",Field,listVal)
				If IsEmpty(retVal) Then
					Exit Sub
				End If
				
				Field = CStr(retVal)
				If Field = "" Then
					MsgBox "フィールドを選択するか、入力してください。", 0+64, ""
				Else
					
					Set item = selectDoc.GetFirstItem(Field)
					If item Is Nothing Then
						'Msgbox "文書にフィールド「 " &amp; field &amp; " 」がありません。", 0+64, ""
						If 6 = MsgBox("文書にフィールド「 " &amp; Field &amp; " 」がありません。" &amp; Chr(13) &amp; Chr(10) &amp;_
						"新しくフィールドを作成しますか？", 4+64+256, "") Then
							Exit Do
						End If
						
					Else
						Exit Do
					End If
				End If
			Loop
			
			Erase values
			listVal = empVal
			
			ReDim values(0 To 6)
			
			values(0) = "テキスト"
			values(1) = "数値（整数）"
			values(2) = "数値（不動少数点）"
			values(3) = "日付/時刻"
			values(4) = "日付"
			values(5) = "時刻"
			
			listVal = FullTrim(values)
			
			Do
				retVal = workSpace.Prompt(PROMPT_OKCANCELLIST,"代入の型選択","値を格納するデータ型を選択します。",dType,listVal)
				If IsEmpty(retVal) Then
					Exit Sub
				End If
				
				dType = CStr(retVal)
				If dType = "" Then
					MsgBox "型を選択してください。",0+64,""
				Else
					Exit Do
				End If
			Loop
			
			repData = selectDoc.GetItemValue(Field)(0)
			
			Do
				
				repData = CStr(repData)
%REM
				retVal = workSpace.Prompt(PROMPT_OKCANCELEDIT,"代入値の入力","値を格納するデータを入力。",repData)
				If Isempty(retVal) Then
					Exit Sub
				End If
%ENDREM
				dlgDoc.InputData = repData
				
				If workSpace.DialogBox(dlgDoc.Form(0), True, True, False, False, False, False, "代入値の入力", dlgDoc, False, False) = False Then
					Exit Sub
				End If
				
				repData = dlgDoc.InputData(0)
				retVal = repData
				
				Select Case dType
				Case values(1)
					If IsNumeric(retVal) Then
						repData = CLng(retVal)
						Exit Do
					Else
						MsgBox "数値を入力してください",0+64, ""
					End If
				Case values(2)
					If IsNumeric(retVal) Then
						repData = CDbl(retVal)
						Exit Do
					Else
						MsgBox "数値を入力してください",0+64, ""
					End If
				Case values(3)
					If IsDate(retVal) Then
						repData = CDat(retVal)
						Exit Do
					Else
						MsgBox "日付を入力してください", 0+64,""
					End If
				Case values(4)
					If IsDate(retVal) Then
						repData = DateValue(retVal)
						Exit Do
					Else
						MsgBox "日付を入力してください", 0+64,""
					End If
				Case values(5)
					If IsDate(retVal) Then
						repData = TimeValue(retVal)
						Exit Do
					Else
						MsgBox "日付を入力してください", 0+64,""
					End If
				Case Else
					repData = CStr(retVal)
					Exit Do
				End Select
				
			Loop
			
			If 1 = MsgBox("フィールド：" &amp; Field &amp; Chr(13) &amp; Chr(10) &amp;_
			"データ型：" &amp; dType &amp; Chr(13) &amp; Chr(10) &amp;_
			"データ値：" &amp; repData &amp; Chr(13) &amp; Chr(10) &amp; Chr(13) &amp; Chr(10) &amp;_
			"上記のデータで置換します。よろしいですか？",1+64, "") Then
				Exit Do
			End If
		Loop
		
		' データ格納
		Call selectCol.StampAll(Field, repData)
		
	End If
	
End Sub

</lotusscript></code><code event='GetSeparator'><lotusscript>Function GetSeparator(key As String) As String
	REM "複数値ではない|0 改行|1 スペース|2 カンマ|3 コロン|4 セミコロン|5 "
	
	Dim retVal As String
	retVal = ""
	
	Select Case(key)
	Case "1"
		retVal = Chr(13) &amp; Chr(10)
	Case "2"
		retVal = " "
	Case "3"
		retVal = ","
	Case "4"
		retVal = ":"
	Case "5"
		retVal = ";"
	End Select
	
	GetSeparator = retVal
	
End Function

</lotusscript></code><code event='SetValues_Click'><lotusscript>Sub SetValues_Click(Source As Button)
	
	Dim unid As String
	unid = GetEnvilonmentUNID() '-&gt;[(Grobals)-(Declarations)]
	
	Dim workSpace As New NotesUIWorkspace
	Dim curUIDoc As NotesUIDocument
	Dim curPage As NotesDocument
	Dim curDB As NotesDatabase
	'***********************
	' アクションページ取得処理
	'***********************
	Set curUIDoc = workSpace.CurrentDocument
	Set curPage = curUIDoc.Document
	Set curDB = curPage.ParentDatabase
	
	Dim doc As NotesDocument
	Dim server As String
	Dim filePath As String
	Dim viewName As String
	
	'******************************************
	' 環境変数に設定してあったユニバーサルIDから、
	' データベース情報文書を取得する
	'******************************************
	Set doc = curDB.GetDocumentByUNID(unid)
	
	Dim pdoc As NotesDocument
	Set pdoc = curDB.GetDocumentByUNID(doc.ParentDocumentUNID)
	
	' サーバーは現在のサーバー
	'server = doc.GetItemValue("DbServer")(0)
	server = pdoc.GetItemValue("DbServer")(0)
	If server = "" Then server = curDB.Server
	' 取得したデータベース情報文書から、
	' 開きたいデータベースのファイルパスとビュー名を取得
	'filePath = doc.GetItemValue("DbFilePath")(0)
	filePath = pdoc.GetItemValue("DbFilePath")(0)
	
	viewName = doc.GetItemValue("ViewAlias")(0)
	
	Dim uiDB As NotesUIDatabase
	Set uiDB = workSpace.CurrentDatabase
	
	' ワークスペースに開く（新規インスタンスではないので、見た目的には変わりなし）
	Call WorkSpace.OpenDatabase(server, filePath, viewName, , False, False)
	
	Dim curUiView As NotesUIView
	Dim selectCol As NotesDocumentCollection
	Dim selectDoc As NotesDocument
	
	' ワークスペースに開いたビューから選択文書を取得
	Set curUiView = WorkSpace.CurrentView
	Set selectCol = curUiView.Documents
	
	' ****************
	' 実際の値変換処理
	'*****************
	Dim dlogDoc As NotesDocument
	Dim subItem As NotesItem
	Dim dType As String ' データの型
	Dim separator As String ' 複数値のセパレータ
	Dim fieldName As String ' 入力するフィールド
	Dim strData As String ' 入力するデータ
	Dim tmpData As Variant
	Dim index As Long
	Dim lastIndex As Long
	Dim retVal As Variant
	
	Dim item As NotesItem
	Dim allItems As Variant
	Dim listVal As Variant
	Dim Field As String
	
	If selectCol.Count = 0 Then
		MsgBox "文書を選択してください。", 0+64, ""
		Exit Sub
	ElseIf Not(selectCol.Count = 1) Then
		MsgBox "１文書のみ選択してください。", 0+64, ""
		Exit Sub
	Else
		
		Set selectDoc = selectCol.GetFirstDocument()
		Set dlogDoc = curDB.CreateDocument
		
		Set subItem = dlogDoc.ReplaceItemValue("FieldNames", "")
		
		allItems = selectDoc.Items
		index = 0
		ReDim Preserve values(0 To index)
		
		ForAll i In allItems
			Set item = i
			
			ReDim Preserve values(0 To index)
			values(index) = item.Name
			index = index + 1
			
		End ForAll
		
		listVal = FullTrim(values)
		Call Sort(listVal, True)
		subItem.Values = listVal
		
		' ワークスペースに開く（ビューの選択文書を取得するときに、別データベースを開いてしまっている為、致し方なく）
		Call WorkSpace.OpenDatabase(curDB.Server, curDB.FilePath, "InputDataUI", , False, False)
		
' ダイアログボックス表示タグ
DialogTag:
		Do
			
			'ダイアログの表示
			retVal = workSpace.DialogBox("subDataInput",True,True,False,False,False,False,"データ入力", dlogDoc)
			'キャンセルの場合処理終了
			If retVal = False Then
				' フレームセットを開きなおして処理終了
				Call workSpace.OpenFrameSet("RepValFrame")
				Exit Sub
			End If
			
			Field = dlogDoc.GetItemValue("SelectField")(0)
			If Field = "" Then
				Call Messagebox_Info("フィールドを選択するか、入力してください。","")
				GoTo DialogTag
			End If
			
			Set item = selectDoc.GetFirstItem(Field)
			If item Is Nothing Then
				If 7 = Messagebox_YesNo("文書にフィールド「 " &amp; Field &amp; " 」がありません。" &amp; Chr(13) &amp; Chr(10) &amp;_
				"新しくフィールドを作成しますか？", "") Then
					GoTo DialogTag
				End If
			End If
			
			'separator = dlogDoc.GetItemValue("Separator")(0) ' 複数値のセパレータ
			separator = dlogDoc.GetItemValue("SelectSeparator")(0)
			separator = GetSeparator(separator)
			strData = dlogDoc.GetItemValue("TextData")(0) ' 入力データ
			
			'**************************
			' 複数値の場合、先に値を分割
			'**************************
			If separator = "" Then ' セパレータなし（複数値ではない）場合
				'tmpData = ChangeElementData(strData, separator) ' 区切り文字で分割
				Dim tmpStr(0 To 0) As String
				tmpStr(0) = strData
				tmpData = tmpStr
			ElseIf 0 &lt; InStr(1, strData, separator, 0) Then
				'tmpData = ChangeElementData(strData, separator) ' 区切り文字で分割
				tmpData = ExplodeElementData(strData, separator) ' 区切り文字で分割
			Else
				Call Messagebox_Info("入力データ内にセパレータ文字がありません。","")
				GoTo DialogTag
			End If
			
%REM
テキスト|0
数値（整数）|1
数値（不動少数）|2
日付/時刻|3
日付|4
時刻|5
%END REM
			
			'*************************************
			' 値のチェック処理
			' データタイプによってチェック処理切り替え
			'*************************************
			Dim cData() As Variant
			
			dType = dlogDoc.GetItemValue("DataType")(0) ' データの型
			
			If IsArray(tmpData) Then '配列の場合
				index = LBound(tmpData) '開始Index
				lastIndex = UBound(tmpData) '最終Indexを取得
			Else
				index = 0 '開始Index
				lastIndex = 0 '最終Indexは0固定
			End If
			
			ReDim Preserve cData(0 To index)
			
			Select Case dType
			Case "1" ' 数値（整数）
				
				For index = 0 To lastIndex
					
					ReDim Preserve cData(0 To index) ' 配列の拡張
					
					If IsNumeric(tmpData(index)) Then
						cData(index) = CLng(tmpData(index)) ' データ変換
					Else
						Call Messagebox_Info( CStr(index + 1) &amp; "番目のデータが数値ではありません。", "")
						GoTo DialogTag
					End If
					
				Next
				
			Case "2" ' 数値（不動少数点）
				
				For index = 0 To lastIndex
					
					ReDim Preserve cData(0 To index) ' 配列の拡張
					
					If IsNumeric(tmpData(index)) Then
						cData(index) = CDbl(tmpData(index)) ' データ変換
					Else
						Call Messagebox_Info( CStr(index + 1) &amp; "番目のデータが数値ではありません。", "")
						GoTo DialogTag
					End If
					
				Next
				
			Case "3" ' 日付/時刻
				
				For index = 0 To lastIndex
					
					ReDim Preserve cData(0 To index) ' 配列の拡張
					
					If IsDate(tmpData(index)) Then
						cData(index) = CDat(tmpData(index)) ' データ変換
					Else
						Call Messagebox_Info( CStr(index + 1) &amp; "番目のデータが日付/時刻ではありません。", "")
						GoTo DialogTag
					End If
					
				Next
				
			Case "4" ' 日付
				
				For index = 0 To lastIndex
					
					ReDim Preserve cData(0 To index) ' 配列の拡張
					
					If IsDate(tmpData(index)) Then
						cData(index) = DateValue(tmpData(index)) ' データ変換
					Else
						Call Messagebox_Info( CStr(index + 1) &amp; "番目のデータが日付ではありません。", "")
						GoTo DialogTag
					End If
					
				Next
				
			Case "5" ' 時刻
				
				For index = 0 To lastIndex
					
					ReDim Preserve cData(0 To index) ' 配列の拡張
					
					If IsDate(tmpData(index)) Then
						cData(index) = TimeValue(tmpData(index)) ' データ変換
					Else
						Call Messagebox_Info( CStr(index + 1) &amp; "番目のデータが時刻ではありません。", "")
						GoTo DialogTag
					End If
					
				Next
				
			Case Else
				
				For index = 0 To lastIndex
					
					ReDim Preserve cData(0 To index) ' 配列の拡張
					
					cData(index) = CStr(tmpData(index)) ' データ変換
					
				Next
				
			End Select
			
			If 1 = MsgBox("フィールド：" &amp; Field &amp; Chr(13) &amp; Chr(10) &amp;_
			"データ型：" &amp; GetDataTypeString(dType) &amp; Chr(13) &amp; Chr(10) &amp;_
			"データ値：" &amp; cData(0) &amp; Chr(13) &amp; Chr(10) &amp; Chr(13) &amp; Chr(10) &amp;_
			"上記のデータで置換します。よろしいですか？",1+64, "") Then
				Exit Do
			End If
			
		Loop
		
		' データ格納
		Call selectCol.StampAll(Field, cData)
		
	End If
	' フレームセットを開きなおして処理終了
	Call workSpace.OpenFrameSet("RepValFrame")
	
End Sub

</lotusscript></code><code event='SetValueMulti_Click'><lotusscript>Sub SetValueMulti_Click(Source As Button)
	
	Dim unid As String
	unid = GetEnvilonmentUNID() '-&gt;[(Grobals)-(Declarations)]
	
	Dim workSpace As New NotesUIWorkspace
	Dim curUIDoc As NotesUIDocument
	Dim curPage As NotesDocument
	Dim curDB As NotesDatabase
	Dim dlgDoc As NotesDocument
	
	'***********************
	' アクションページ取得処理
	'***********************
	Set curUIDoc = workSpace.CurrentDocument
	Set curPage = curUIDoc.Document
	Set curDB = curPage.ParentDatabase
	'ダイアログ文書
	Set dlgDoc = curDB.CreateDocument
	'サブフォーム名を設定
	dlgDoc.Form = "dbtool_DataInputSimple"
	
	Dim doc As NotesDocument
	Dim server As String
	Dim filePath As String
	Dim viewName As String
	
	'******************************************
	' 環境変数に設定してあったユニバーサルIDから、
	' データベース情報文書を取得する
	'******************************************
	Set doc = curDB.GetDocumentByUNID(unid)
	
	Dim pdoc As NotesDocument
	Set pdoc = curDB.GetDocumentByUNID(doc.ParentDocumentUNID)
	
	' サーバーは現在のサーバー
	'server = doc.GetItemValue("DbServer")(0)
	server = pdoc.GetItemValue("DbServer")(0)
	If server = "" Then server = curDB.Server
	' 取得したデータベース情報文書から、
	' 開きたいデータベースのファイルパスとビュー名を取得
	'filePath = doc.GetItemValue("DbFilePath")(0)
	filePath = pdoc.GetItemValue("DbFilePath")(0)
	
	viewName = doc.GetItemValue("ViewAlias")(0)
	
	' ワークスペースに開く（新規インスタンスではないので、見た目的には変わりなし）
	Call WorkSpace.OpenDatabase(server, filePath, viewName, , False, False)
	
	Dim curUiView As NotesUIView
	Dim selectCol As NotesDocumentCollection
	Dim selectDoc As NotesDocument
	
	' ワークスペースに開いたビューから選択文書を取得
	Set curUiView = WorkSpace.CurrentView
	Set selectCol = curUiView.Documents
	
	' ****************
	' 実際の値変換処理
	'*****************
	Dim item As NotesItem
	Dim allItems As Variant
	Dim values() As String
	Dim listVal As Variant
	Dim empVal As Variant
	Dim index As Long
	Dim retVal As Variant
	Dim Field As String
	Dim dType As String
	Dim repData As Variant
	
	If selectCol.Count = 0 Then
		MsgBox "文書を選択してください。", 0+64, ""
		Exit Sub
	Else
		
		Set selectDoc = selectCol.GetFirstDocument()
		
		Do
			
			allItems = selectDoc.Items
			index = 0
			ReDim Preserve values(0 To index)
			
			ForAll i In allItems
				Set item = i
				
				values(index) = item.Name
				index = index + 1
				ReDim Preserve values(0 To index)
				
			End ForAll
			
			listVal = FullTrim(values)
			
			Call Sort(listVal, True)
			
			Do
				retVal = workSpace.Prompt(PROMPT_OKCANCELEDITCOMBO,"代入先フィールド選択","値を格納するフィールド名を選択してください。",Field,listVal)
				If IsEmpty(retVal) Then
					Exit Sub
				End If
				
				Field = CStr(retVal)
				If Field = "" Then
					MsgBox "フィールドを選択するか、入力してください。", 0+64, ""
				Else
					
					Set item = selectDoc.GetFirstItem(Field)
					If item Is Nothing Then
						'Msgbox "文書にフィールド「 " &amp; field &amp; " 」がありません。", 0+64, ""
						If 6 = MsgBox("文書にフィールド「 " &amp; Field &amp; " 」がありません。" &amp; Chr(13) &amp; Chr(10) &amp;_
						"新しくフィールドを作成しますか？", 4+64+256, "") Then
							Exit Do
						End If
						
					Else
						Exit Do
					End If
				End If
			Loop
			
			Erase values
			listVal = empVal
			
			ReDim values(0 To 6)
			
			values(0) = "テキスト"
			values(1) = "数値（整数）"
			values(2) = "数値（不動少数点）"
			values(3) = "日付/時刻"
			values(4) = "日付"
			values(5) = "時刻"
			
			listVal = FullTrim(values)
			
			Do
				retVal = workSpace.Prompt(PROMPT_OKCANCELLIST,"代入の型選択","値を格納するデータ型を選択します。",dType,listVal)
				If IsEmpty(retVal) Then
					Exit Sub
				End If
				
				dType = CStr(retVal)
				If dType = "" Then
					MsgBox "型を選択してください。",0+64,""
				Else
					Exit Do
				End If
			Loop
			
			repData = selectDoc.GetItemValue(Field)(0)
			
			Do
				
				repData = CStr(repData)
%REM
				retVal = workSpace.Prompt(PROMPT_OKCANCELEDIT,"代入値の入力","値を格納するデータを入力。",repData)
				If Isempty(retVal) Then
					Exit Sub
				End If
%ENDREM
				dlgDoc.InputData = repData
				
				If workSpace.DialogBox(dlgDoc.Form(0), True, True, False, False, False, False, "代入値の入力", dlgDoc, False, False) = False Then
					Exit Sub
				End If
				
				repData = dlgDoc.InputData(0)
				retVal = repData
				
				Select Case dType
				Case values(1)
					If IsNumeric(retVal) Then
						repData = CLng(retVal)
						Exit Do
					Else
						MsgBox "数値を入力してください",0+64, ""
					End If
				Case values(2)
					If IsNumeric(retVal) Then
						repData = CDbl(retVal)
						Exit Do
					Else
						MsgBox "数値を入力してください",0+64, ""
					End If
				Case values(3)
					If IsDate(retVal) Then
						repData = CDat(retVal)
						Exit Do
					Else
						MsgBox "日付を入力してください", 0+64,""
					End If
				Case values(4)
					If IsDate(retVal) Then
						repData = DateValue(retVal)
						Exit Do
					Else
						MsgBox "日付を入力してください", 0+64,""
					End If
				Case values(5)
					If IsDate(retVal) Then
						repData = TimeValue(retVal)
						Exit Do
					Else
						MsgBox "日付を入力してください", 0+64,""
					End If
				Case Else
					repData = CStr(retVal)
					Exit Do
				End Select
				
			Loop
			
			If 1 = MsgBox("フィールド：" &amp; Field &amp; Chr(13) &amp; Chr(10) &amp;_
			"データ型：" &amp; dType &amp; Chr(13) &amp; Chr(10) &amp;_
			"データ値：" &amp; repData &amp; Chr(13) &amp; Chr(10) &amp; Chr(13) &amp; Chr(10) &amp;_
			"上記のデータで置換します。よろしいですか？",1+64, "") Then
				Exit Do
			End If
		Loop
		
		' データ格納
		Call selectCol.StampAll(Field, repData)
		
	End If
	
End Sub

</lotusscript></code><code event='RemoveFieldsMulti_Click'><lotusscript>Sub RemoveFieldsMulti_Click(Source As Button)
	
	Dim unid As String
	unid = GetEnvilonmentUNID() '-&gt;[(Grobals)-(Declarations)]
	
	Dim workSpace As New NotesUIWorkspace
	Dim curUIDoc As NotesUIDocument
	Dim curPage As NotesDocument
	Dim curDB As NotesDatabase
	'***********************
	' アクションページ取得処理
	'***********************
	Set curUIDoc = workSpace.CurrentDocument
	Set curPage = curUIDoc.Document
	Set curDB = curPage.ParentDatabase
	
	Dim doc As NotesDocument
	Dim server As String
	Dim filePath As String
	Dim viewName As String
	
	'******************************************
	' 環境変数に設定してあったユニバーサルIDから、
	' データベース情報文書を取得する
	'******************************************
	Set doc = curDB.GetDocumentByUNID(unid)
	
	Dim pdoc As NotesDocument
	Set pdoc = curDB.GetDocumentByUNID(doc.ParentDocumentUNID)
	
	' サーバー
'	server = doc.GetItemValue("DbServer")(0)
	server = pdoc.GetItemValue("DbServer")(0)
	If server = "" Then server = curDB.Server
	' 取得したデータベース情報文書から、
	' 開きたいデータベースのファイルパスとビュー名を取得
'	filePath = doc.GetItemValue("DbFilePath")(0)
'	viewName = doc.GetItemValue("ViewAlias")(0)
	filePath = pdoc.GetItemValue("DbFilePath")(0)
	viewName = pdoc.GetItemValue("ViewAlias")(0)
	
	' ワークスペースに開く（新規インスタンスではないので、見た目的には変わりなし）
	Call WorkSpace.OpenDatabase(server, filePath, viewName, , False, False)
	
	Dim curUiView As NotesUIView
	Dim selectCol As NotesDocumentCollection
	Dim selectDoc As NotesDocument
	
	' ワークスペースに開いたビューから選択文書を取得
	Set curUiView = WorkSpace.CurrentView
	Set selectCol = curUiView.Documents
	
	' ****************
	' 実際の値変換処理
	'*****************
	Dim item As NotesItem
	Dim allItems As Variant
	Dim values() As String
	Dim listVal As Variant
	Dim empVal As Variant
	Dim index As Long
	Dim retVal As Variant
	Dim Field As String
	Dim dType As String
	Dim repData As Variant
	
	If selectCol.Count = 0 Then
		MsgBox "文書を選択してください。", 0+64, ""
		Exit Sub
%REM
	Elseif Not(selectCol.Count = 1) Then
		Msgbox "１文書のみ選択してください。", 0+64, ""
		Exit Sub
%ENDREM
	Else
		
		Set selectDoc = selectCol.GetFirstDocument()
		
		allItems = selectDoc.Items
		index = 0
		ReDim Preserve values(0 To index)
		
		ForAll i In allItems
			Set item = i
			
			values(index) = item.Name
			index = index + 1
			ReDim Preserve values(0 To index)
			
		End ForAll
		
		listVal = FullTrim(values)
		
		Call Sort(listVal, True)
		
		Do
			retVal = workSpace.Prompt(PROMPT_OKCANCELEDITCOMBO,"削除フィールド選択","削除するフィールド名を選択してください。",Field,listVal)
			If IsEmpty(retVal) Then
				Exit Sub
			End If
			
			Field = CStr(retVal)
			If Field = "" Then
				MsgBox "フィールドを選択するか、入力してください。", 0+64, ""
			Else
				
				Set item = selectDoc.GetFirstItem(Field)
				If item Is Nothing Then
					MsgBox "文書にフィールド「 " &amp; Field &amp; " 」がありません。", 0+64, ""
				Else
					Exit Do
				End If
			End If
		Loop
		
		Set selectDoc = selectCol.GetFirstDocument()
		Do Until selectDoc Is Nothing
			Call selectDoc.RemoveItem(Field)
			Call selectDoc.Save(True, True)
			Set selectDoc = selectCol.GetNextDocument(selectDoc)
		Loop
		
		MsgBox "フィールド「" &amp; Field &amp; "」を削除しました。",0+64, ""
		
	End If
	
End Sub

</lotusscript></code><code event='ExportAttachFilesMulti_Click'><lotusscript
>Sub ExportAttachFilesMulti_Click(Source As Button)
	
	Dim unid As String
	unid = GetEnvilonmentUNID() '-&gt;[(Grobals)-(Declarations)]
	
	Dim workSpace As New NotesUIWorkspace
	Dim curUIDoc As NotesUIDocument
	Dim curPage As NotesDocument
	Dim curDB As NotesDatabase
	'***********************
	' アクションページ取得処理
	'***********************
	Set curUIDoc = workSpace.CurrentDocument
	Set curPage = curUIDoc.Document
	Set curDB = curPage.ParentDatabase
	
	Dim doc As NotesDocument
	Dim server As String
	Dim filePath As String
	Dim viewName As String
	
	'******************************************
	' 環境変数に設定してあったユニバーサルIDから、
	' データベース情報文書を取得する
	'******************************************
	Set doc = curDB.GetDocumentByUNID(unid)
	
	Dim pdoc As NotesDocument
	Set pdoc = curDB.GetDocumentByUNID(doc.ParentDocumentUNID)
	
	' サーバー
'	server = doc.GetItemValue("DbServer")(0)
	server = pdoc.GetItemValue("DbServer")(0)
	If server = "" Then server = curDB.Server
	' 取得したデータベース情報文書から、
	' 開きたいデータベースのファイルパスとビュー名を取得
'	filePath = doc.GetItemValue("DbFilePath")(0)
'	viewName = doc.GetItemValue("ViewAlias")(0)
	filePath = pdoc.GetItemValue("DbFilePath")(0)
	viewName = pdoc.GetItemValue("ViewAlias")(0)
	
	' ワークスペースに開く（新規インスタンスではないので、見た目的には変わりなし）
	Call WorkSpace.OpenDatabase(server, filePath, viewName, , False, False)
	
	Dim curUiView As NotesUIView
	Dim selectCol As NotesDocumentCollection
	Dim selectDoc As NotesDocument
	
	' ワークスペースに開いたビューから選択文書を取得
	Set curUiView = WorkSpace.CurrentView
	Set selectCol = curUiView.Documents
	
	' ****************
	' 実際の値変換処理
	'*****************
	Dim values As Variant
	Dim listVal As Variant
	Dim empVal As Variant
	Dim retVal As Variant
	
	If selectCol.Count = 0 Then
		MsgBox "文書を選択してください。", 0+64, ""
		Exit Sub
	Else
		
		Const ALL$ = "*(全て)"
		
		Set selectDoc = selectCol.GetFirstDocument()
		
		values = Evaluate({@AttachmentNames}, selectDoc)
		
		ReDim Preserve values(UBound(values)+1)
		
		values(UBound(values)) = ALL
		
		listVal = FullTrim(values)
		
		Dim fileName As String
		
		Do
			retVal = workSpace.Prompt(PROMPT_OKCANCELEDITCOMBO,"添付ファイル選択","えすくぽーと添付ファイル名を選択してください。",fileName,listVal)
			If IsEmpty(retVal) Then
				Exit Sub
			End If
			
			fileName = CStr(retVal)
			If fileName = "" Then
				MsgBox "添付ファイルを選択するか、入力してください。", 0+64, ""
			Else
				Exit Do
			End If
		Loop
		
		Dim varDir As Variant
		Dim strDir As String
		
		Do
			varDir = workSpace.SaveFileDialog(True, "ディレクトリの選択", "", "", "")
			If IsEmpty(varDir) Then
				Exit Sub
			End If
			
			strDir = varDir(0)
			
			Exit Do
			
		Loop
		
		Dim emb As NotesEmbeddedObject
		Dim tmpFileName As String
		
		Set selectDoc = selectCol.GetFirstDocument()
		Do Until selectDoc Is Nothing
			
			values = Evaluate({@AttachmentNames}, selectDoc)
			
			ForAll v In values
				
				Set emb = selectDoc.GetAttachment(v)
				If emb.Type = EMBED_ATTACHMENT Then
					If fileName = ALL Then
						tmpFileName = selectDoc.NoteID &amp; "_" &amp; emb.Name
					ElseIf fileName Like emb.Name Then
						
						If UCase$(selectDoc.Type(0)) = UCase$("Person") Then
							tmpFileName = selectDoc.ShortName(0) &amp; ".id"
						Else
							tmpFileName = selectDoc.NoteID &amp; "_" &amp; emb.Name
						End If
						
					Else
						tmpFileName = ""
					End If
					
					If tmpFileName &lt;&gt; "" Then
						Call emb.ExtractFile(strDir &amp; "\" &amp; tmpFileName)
					End If
					
				End If
				
			End ForAll
			
			Set selectDoc = selectCol.GetNextDocument(selectDoc)
			
		Loop
		
		MsgBox "エクスポートしました。[" &amp; CStr(strDir) &amp; "]",0+64, ""
		
	End If
	
End Sub

</lotusscript></code><code event='GetEnvilonmentUNID'><lotusscript>Function GetEnvilonmentUNID() As String
	GetEnvilonmentUNID = unid
End Function

</lotusscript></code><code event='RemoveDocuments_Click'><lotusscript>Sub RemoveDocuments_Click(Source As Button)
	
	Dim unid As String
	unid = GetEnvilonmentUNID() '-&gt;[(Grobals)-(Declarations)]
	
	Dim workSpace As New NotesUIWorkspace
	Dim curUIDoc As NotesUIDocument
	Dim curPage As NotesDocument
	Dim curDB As NotesDatabase
	'***********************
	' アクションページ取得処理
	'***********************
	Set curUIDoc = workSpace.CurrentDocument
	Set curPage = curUIDoc.Document
	Set curDB = curPage.ParentDatabase
	
	Dim doc As NotesDocument
	Dim server As String
	Dim filePath As String
	Dim viewName As String
	
	'******************************************
	' 環境変数に設定してあったユニバーサルIDから、
	' データベース情報文書を取得する
	'******************************************
	Set doc = curDB.GetDocumentByUNID(unid)
	
	Dim pdoc As NotesDocument
	Set pdoc = curDB.GetDocumentByUNID(doc.ParentDocumentUNID)
	
	' サーバー
'	server = doc.GetItemValue("DbServer")(0)
	server = pdoc.GetItemValue("DbServer")(0)
	If server = "" Then server = curDB.Server
	' 取得したデータベース情報文書から、
	' 開きたいデータベースのファイルパスとビュー名を取得
'	filePath = doc.GetItemValue("DbFilePath")(0)
'	viewName = doc.GetItemValue("ViewAlias")(0)
	filePath = pdoc.GetItemValue("DbFilePath")(0)
	viewName = pdoc.GetItemValue("ViewAlias")(0)
	
	' ワークスペースに開く（新規インスタンスではないので、見た目的には変わりなし）
	Call WorkSpace.OpenDatabase(server, filePath, viewName, , False, False)
	
	Dim curUiView As NotesUIView
	Dim selectCol As NotesDocumentCollection
	Dim selectDoc As NotesDocument
	
	' ワークスペースに開いたビューから選択文書を取得
	Set curUiView = WorkSpace.CurrentView
	Set selectCol = curUiView.Documents
	
	' ****************
	' 実際の値変換処理
	'*****************
	Dim counter As Double
	
	If selectCol.Count = 0 Then
		MsgBox "文書を選択してください。", 0+64, ""
	ElseIf 6 = MsgBox("選択文書を全て削除します。",4+64+256,"") Then
		'Call selectCol.RemoveAll(True)
		Call curUIView.DeselectAll()
		Call RemoveAllChildren(selectCol, counter)
		Call workSpace.ViewRefresh()
	Else
		Exit Sub
	End If
	
End Sub

</lotusscript></code><code event='ExportCSVFileMulti_Click'><lotusscript>Sub ExportCSVFileMulti_Click()
	On Error GoTo ErrorHandle
	
	Dim unid As String
	unid = GetEnvilonmentUNID() '-&gt;[(Grobals)-(Declarations)]
	
	Dim workSpace As New NotesUIWorkspace
	Dim curUIDoc As NotesUIDocument
	Dim curPage As NotesDocument
	Dim curDB As NotesDatabase
	'***********************
	' アクションページ取得処理
	'***********************
	Set curUIDoc = workSpace.CurrentDocument
	Set curPage = curUIDoc.Document
	Set curDB = curPage.ParentDatabase
	
	Dim doc As NotesDocument
	Dim server As String
	Dim filePath As String
	Dim viewName As String
	
	'******************************************
	' 環境変数に設定してあったユニバーサルIDから、
	' データベース情報文書を取得する
	'******************************************
	Set doc = curDB.GetDocumentByUNID(unid)
	
	Dim pdoc As NotesDocument
	Set pdoc = curDB.GetDocumentByUNID(doc.ParentDocumentUNID)
	
	' サーバー
	'	server = doc.GetItemValue("DbServer")(0)
	server = pdoc.GetItemValue("DbServer")(0)
	If server = "" Then server = curDB.Server
	' 取得したデータベース情報文書から、
	' 開きたいデータベースのファイルパスとビュー名を取得
	'	filePath = doc.GetItemValue("DbFilePath")(0)
	'	viewName = doc.GetItemValue("ViewAlias")(0)
	filePath = pdoc.GetItemValue("DbFilePath")(0)
	viewName = pdoc.GetItemValue("ViewAlias")(0)
	
	' ワークスペースに開く（新規インスタンスではないので、見た目的には変わりなし）
	Call WorkSpace.OpenDatabase(server, filePath, viewName, , False, False)
	
	Dim curUiView As NotesUIView
	Dim selectCol As NotesDocumentCollection
	Dim selectDoc As NotesDocument
	
	' ワークスペースに開いたビューから選択文書を取得
	Set curUiView = WorkSpace.CurrentView
	Set selectCol = curUiView.Documents
	If selectCol.Count = 0 Then
		MsgBox "文書を選択してください。", 0+64, ""
		Exit Sub
	End If
	
	Set selectDoc = selectCol.GetFirstDocument()
	
	' ****************
	' 実際の値変換処理
	'*****************
	Dim items As Variant
	Dim item As NotesItem
	Dim itemNames As Variant
	Dim listVal As Variant
	
	Const ALL$ = "*(全て)"
	
	items = selectDoc.Items
	ReDim itemNames(0)
	
	ForAll i In items
		Set item = i
		
		If itemNames(UBound(itemNames)) &lt;&gt; "" Then
			ReDim Preserve itemNames(UBound(itemNames)+1)
		End If
		
		itemNames(UBound(itemNames)) = item.Name
		
	End ForAll
	
	Call Sort(itemNames, True)
	
	listVal = itemNames
	
	ReDim Preserve listVal(UBound(listVal)+1)
	listVal(UBound(listVal)) = ALL
	
	Dim selectNames As Variant
	Dim retVal As Variant
	
	ReDim selectNames(0)
	
	Do
		retVal = workSpace.Prompt(PROMPT_OKCANCELLISTMULT,"フィールドの選択","フィールド名を選択してください。",selectNames,listVal)
		If IsEmpty(retVal) Then
			Exit Sub
		End If
		
		selectNames = retVal
		If selectNames(LBound(selectNames)) = "" Then
			MsgBox "フィールドを選択するか、入力してください。", 0+64, ""
		Else
			Exit Do
		End If
	Loop
	
	Dim pathName As String
	Dim fileName As String
	
	If selectNames(UBound(selectNames)) = ALL Then
		selectNames = itemNames
		fileName = "allItem.csv"
	Else
		fileName = selectNames(LBound(selectNames)) &amp; "" &amp; ".csv"
	End If
	
	pathName = GetEnviron("HOMEPATH") &amp; "\Desktop"
	
	Do
		retVal = workSpace.SaveFileDialog(False, "CSVファイルの選択", "CSVファイル|*.csv", pathName, fileName)
		If IsEmpty(retVal) Then
			Exit Sub
		End If
		
		pathName = CStr(retVal(0))
		If pathName = "" Then
			MsgBox "ファイル名を選択するか、入力してください。", 0+64, ""
		Else
			Exit Do
		End If
	Loop
	
	Dim stream As NotesStream
	
	Dim formula As String
	Dim calc As Variant
	
	formula = {@Implode(@Text(} &amp; formula &amp; {);",")}
	
	Set stream = curDB.Parent.CreateStream()
	Call stream.Open(pathName)
	Call stream.Truncate()
	stream.Position = 0
	
	'header
	Call stream.WriteText("#" &amp; Join(selectNames, ","), EOL_CRLF)
	
	Set selectDoc = selectCol.GetFirstDocument()
	
	Do Until selectDoc Is Nothing
		
		ForAll i In itemNames
			
			formula = i
			formula = {"\""+@Implode(@Text(} &amp; formula &amp; {);@NewLine)+"\""}
			calc = Evaluate(formula, selectDoc)
			
			Call stream.WriteText(CStr(calc(0)))
			Call stream.Writetext(",")
			
		End ForAll
		
		'data
		Call stream.WriteText("", EOL_CRLF)
		
		Set selectDoc = selectCol.Getnextdocument(selectDoc)
	Loop
	
	Call stream.Close()
	
	
	
	Exit Sub
ErrorHandle:
	
	If Not stream Is Nothing Then
		Call stream.Close()
	End If
	
	Call SetErrorObject(Err, error)
	Call Messagebox_Error(GetErrorMessage(), "")
	Exit sub
End Sub</lotusscript></code></scriptlibrary>

<agent name='(ツール)\(データベースのコピー)' alias='CopyDatabase' hide='v3' publicaccess='false'
 designerversion='8.5.3'>
<noteinfo noteid='4386' unid='D8F15E7E63CDA0E04925830F001BF580' sequence='130'>
<created><datetime>20180921T140523,20+09</datetime></created>
<modified><datetime>20190826T133148,27+09</datetime></modified>
<revised><datetime>20190826T132616,83+09</datetime></revised>
<lastaccessed><datetime>20190826T133148,27+09</datetime></lastaccessed>
<addedtofile><datetime>20180921T140523,60+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=comture</name></updatedby>
<designchange><datetime>20190826T132626,96+09</datetime></designchange>
<trigger type='agentlist'/>
<documentset type='selected'><search type='byformnames'><formchoice name='(01.データベース情報)|DbInfoDoc'/></search></documentset><code
 event='options'><lotusscript>Option Public
Option Declare
Use "DBToolLib"
Use "NotesUICommonLib"

</lotusscript></code><code event='initialize'><lotusscript>Sub Initialize
	Call SetProcess("*AG - CopyDatabase")
	Call Main()
End Sub

</lotusscript></code><code event='Main'><lotusscript>Sub Main()
	On Error Goto ErrorHandle
	
	Dim workSpace As New NotesUIWorkspace
	Dim curUiView As NotesUIView
	Dim curDB As NotesDatabase
	Dim unpro As NotesDocumentCollection
	Dim doc As NotesDocument
	
	Set curUIView = workSpace.CurrentView
	
	If curUIView Is Nothing Then
		Set curDB = workSpace.CurrentDatabase.Database
		Set unpro = curDB.UnprocessedDocuments
	Else
		Set curDB = curUIView.View.Parent
		'Set unpro = curUIView.Documents
		Set unpro = curDB.UnprocessedDocuments
	End If
	
	If unpro.Count = 0 Then
		Exit Sub
	End If
	Set doc = unpro.GetFirstDocument()
	
	Dim dlgdoc As NotesDocument
	Dim retVal As Variant
	Dim server As String
	Dim filePath As String
	
	Dim session As New NotesSession
	Dim baseDB As NotesDatabase
	Dim db As NotesDatabase
	Dim folder As String
	Dim fileName As String
	Dim options As Variant
	
	Set dlgDoc = curDB.CreateDocument()
	dlgDoc.Form = "SelectFileDialog"
	dlgDoc.DbServer = doc.DbServer(0)
	dlgDoc.DbFilePath = StrLeftBack(doc.DbFilePath(0), "\")
	If dlgDoc.DbFilePath(0) = "" Then
		dlgDoc.DbFilePath = "&lt;フォルダを入力&gt;"
	End If
	
	Do
		retVal = workSpace.DialogBox("CopyFileDialog", True, True, False, False, False, False, "フォルダの選択", dlgDoc, True, False, True)
		If Isempty(retVal) Then
			Exit Sub
		Elseif retVal = False Then
			Exit Sub
		End If
		
		server = Trim$(dlgDoc.GetItemValue("DbServer")(0))
		filePath = Trim$(dlgDoc.GetItemValue("DbFilePath")(0))
		options = dlgDoc.GetItemValue("Options")
		
		If filePath &lt;&gt; "" Then
			Exit Do
		End If
		
	Loop
	
	folder = filePath
	fileName = Strrightback(filePath, "\")
	If fileName Like "*.n?f" Then
		folder = Strleftback(filePath, "\")
	End If
	
	Dim baseDbInfo As CDbInfo
	Dim dbInfo As CDbInfo
	Dim result As Integer
	
	Dim replaceFlg As Integer
	
	Do Until doc Is Nothing
		result = GetDbInfo(curDB, doc, baseDbInfo)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		result = baseDBInfo.GetDatabase(baseDB)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		fileName = baseDB.FileName
		
		Select Case dlgDoc.Getitemvalue("Database")(0)
		Case "1" 'nsf化
			fileName = StrLeftBack(fileName, ".") &amp; ".nsf"
		Case "2" 'ntf化
			fileName = StrLeftBack(fileName, ".") &amp; ".ntf"
		End Select
		
Retry:
		Set db = session.GetDatabase(server, folder &amp; "\" &amp; fileName, False)
		
		If db Is Nothing Then
			
			Select Case dlgDoc.GetItemValue("Documents")(0)
				Case "1" '設計と文書
				Set db = baseDB.CreateFromTemplate(server, folder &amp; "\" &amp; fileName, False)
				Case "2" '設計のみ
				Set db = baseDB.CreateCopy(server, folder &amp; "\" &amp; fileName)
			End Select
			
			If dlgDoc.GetItemValue("ACL")(0) = "1" Then 'ACLをコピー
				
			Else
				Dim acl As NotesACL
				Dim aclE As NotesACLEntry
				Dim aclE2 As NotesACLEntry
				
				Set acl = db.Acl
				Set aclE = acl.GetFirstEntry()
				
				Do Until aclE Is Nothing
					Set aclE2 = acl.GetNextEntry(aclE)
					If StrCompare(aclE.Name, "-Default-", 1) &lt;&gt; 0 Then
						Call aclE.Remove()
					End If
					Set aclE = aclE2
				Loop
				
				Set aclE = acl.CreateAclEntry(session.Username, ACLLEVEL_MANAGER )
				aclE.UserType = ACLTYPE_PERSON
				aclE.CanDeleteDocuments = True
				aclE.CanReplicateorCopyDocuments = True
				
				Set aclE = acl.GetEntry("-Default-")
				If Not aclE Is Nothing Then
					aclE.Level = ACLLEVEL_MANAGER
					aclE.UserType = ACLTYPE_UNSPECIFIED
					aclE.CanDeleteDocuments = True
					aclE.CanReplicateorCopyDocuments = True
				End If
				
				Call acl.Save()
				
			End If
			
			result = GetDBInfo( curDB, db, dbInfo )
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
			If dbInfo.DbInfoDoc.Isnewnote = False Then
				Call dbInfo.Update()
			End If
			
			Call dbInfo.Save()
			
			Print db.Server &amp; "!!" &amp; db.Filepath &amp; " に データベース [" &amp; db.Title &amp; "] をコピーしました。"
		Else
			If replaceFlg = 0 Then
				Dim strMessage As String
				
				strMessage = db.Server &amp; "!!" &amp; db.Filepath &amp; " に データベース [" &amp; db.Title &amp; "] が既に在ります。" &amp; Chr(10) &amp; _
				" 上書きしますか？ " &amp; Chr(10) &amp; _
				"[はい] : 上書きする（以降の同名ファイルも全て）" &amp; Chr(10) &amp; _
				"[いいえ] : コピーしない（以降の同名ファイルも全て）" &amp; Chr(10) &amp; _
				"[Cancel] : 処理中断"
				
				Select Case Messagebox_YesNoCancel( strMessage, "" )
				Case 2 'IDCANCEL
					Print "処理を中断しました。"
					GoTo ExitTag
				Case 6 'IDYES
					
					replaceFlg = 1
					
				Case 7 'IDNO
					
					replaceFlg = -1
					
				End Select
			End If
			
			If replaceFlg = 1 Then
				Print db.Server &amp; "!!" &amp; db.Filepath &amp; " に データベース [" &amp; db.Title &amp; "] が既に在る為、削除しました。"
				
				Call db.Remove()
				
				Set db = Nothing
				
				GoTo Retry
			ElseIf replaceFlg = -1 Then
				Print db.Server &amp; "!!" &amp; db.Filepath &amp; " に データベース [" &amp; db.Title &amp; "] が既に在る為、コピーをスキップしました。"
			End If
		End If
NextLoop:
		Set doc = unpro.GetNextDocument(doc)
	Loop
	
ExitTag:
	On Error Resume Next
	If Not curUIView Is Nothing Then Call curUIView.DeselectAll()
	Call workSpace.ViewRefresh()
	
	Exit Sub
ErrorHandle:
	Call SetErrorObject(Err, Error)
	Call Messagebox_Error(GetErrorMessage(), "")
	Goto ExitTag
End Sub</lotusscript></code>
<rundata processeddocs='0' exitcode='0' agentdata='69FD10E36BEF5B3B4925846200187332'>
<agentmodified><datetime>20190826T132616,84+09</datetime></agentmodified>
<agentrun><datetime>20190826T133110,89+09</datetime></agentrun>
<runlog>エージェント (ツール)\(データベースのコピー)|CopyDatabase の 2019/08/26 13:30:53 での実行が開始しました。
選択文書で実行します。 合計 1
1 文書が検索条件に一致しました。
LotusScript を実行しました
エージェント (ツール)\(データベースのコピー)|CopyDatabase の実行が終了しました。(2019/08/26 13:31:10)
</runlog></rundata>
<item name='$POID'><datetime>20190826T132616,83+09</datetime></item></agent>
<sharedcolumn name='DbFileName' alias='DbFileName' noreplace='true' designerversion='8.5.3'>
<noteinfo noteid='43aa' unid='67DCADEEF83366084925830F001DAE54' sequence='7'>
<created><datetime>20180921T142411,72+09</datetime></created>
<modified><datetime>20181031T100054,66+09</datetime></modified>
<revised><datetime>20181031T100054,65+09</datetime></revised>
<lastaccessed><datetime>20181031T100054,66+09</datetime></lastaccessed>
<addedtofile><datetime>20180921T142411,98+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby>
<wassignedby><name>CN=Administrator/O=Comture</name></wassignedby>
<column sort='ascending' hidedetailrows='false' itemname='$0' width='1' resizable='false'
 separatemultiplevalues='false' sortnoaccent='true' sortnocase='true' showaslinks='false'
 hidecolumntitle='true' hidden='true'><columnheader title='DbFileName[Sort]'><font
 size='9pt' style='bold'/></columnheader><code event='value'><formula>@Right(DbFilePath;"\\")</formula></code></column></sharedcolumn>

<subform name='(ファイルのコピーダイアログ)' alias='CopyFileDialog' designerversion='8.5.3'
 renderpassthrough='true'>
<noteinfo noteid='43ae' unid='94B89285BBDBA9A34925830F001FE0B3' sequence='41'>
<created><datetime>20180921T144811,39+09</datetime></created>
<modified><datetime>20181031T100053,62+09</datetime></modified>
<revised><datetime>20181031T100053,61+09</datetime></revised>
<lastaccessed><datetime>20181031T100053,62+09</datetime></lastaccessed>
<addedtofile><datetime>20180921T144811,52+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby>
<wassignedby><name>CN=Administrator/O=Comture</name></wassignedby>
<body><richtext>
<pardef id='1'/>
<par def='1'/>
<table widthtype='fixedleft' columnspacing='0.1965in' refwidth='4.7243in'><tablecolumn
 width='4.3313in'/>
<tablerow>
<tablecell borderwidth='0px' bgcolor='system'>
<pardef id='3' keepwithnext='true' keeptogether='true'/>
<par def='3'><run><font size='1pt'/></run></par>
<table widthtype='fitmargins' leftmargin='0' rowspacing='0.0396in' columnspacing='0.0396in'
 refwidth='4.3208in'><tablecolumn width='0.6042in' sizetofit='true'/><tablecolumn
 width='100%'/>
<tablerow>
<tablecell valign='center' bgcolor='system'>
<pardef id='5' keepwithnext='true' keeptogether='true'/>
<par def='5'>サーバー：</par></tablecell>
<tablecell bgcolor='white'>
<pardef id='6' keepwithnext='true' keeptogether='true'/>
<par def='6'><field showdelimiters='false' lookupeachchar='false' lookupaddressonrefresh='false'
 type='names' kind='editable' name='DbServer'/></par></tablecell></tablerow></table>
<par def='3'><run><font size='1pt'/></run></par>
<table widthtype='fitmargins' leftmargin='0' rowspacing='0.0396in' columnspacing='0.0396in'
 refwidth='4.3208in'><tablecolumn width='100%'/>
<tablerow>
<tablecell valign='center' bgcolor='system'>
<pardef id='7' keepwithnext='true' keeptogether='true'/>
<par def='7'><actionhotspot hotspotstyle='none'><run><font style='underline'
 color='blue'/>ファイルパス：</run><code event='options'><lotusscript>Option Declare
Use "NotesUICommonLib"
</lotusscript></code><code event='click'><lotusscript>Sub Click(Source As Button)
	On Error Goto ErrorHandle
	
	Dim workSpace As New NotesUIWorkSpace
	Dim curUIDoc As NotesUIDocument
	Dim curDoc As NotesDocument
	Dim curDB As NotesDatabase
	Dim server As String
	Dim filePath As String
	
	Dim session As New NotesSession
	
	Dim retVal As Variant
	
	Set curUIDoc = workSpace.CurrentDocument
	Set curDoc = curUIDoc.Document
	Set curDB = curDoc.ParentDatabase
	
	server = curDoc.GetItemValue("DbServer")(0)
	If server = "" Then server = curDB.Server
	
	retVal = workSpace.Prompt(13, "", "")
	If Isempty(retVal) = True Then
		Goto ExitTag
	End If
	
	server = retVal(0)
	filePath = retVal(1)
	
	Call curDoc.ReplaceItemValue("DbServer", server)
	Call curDoc.ReplaceItemValue("DbFilePath", filePath)
	
ExitTag:
	Call curUIDoc.GotoField("DbFilePath")
	
	Exit Sub
ErrorHandle:
	Call SetErrorObject(Err, Error)
	Call Messagebox_Error(GetErrorMessage(), "")
	Exit Sub
End Sub</lotusscript></code></actionhotspot></par>
<par def='7'>※ファイル名は元のファイル名</par></tablecell></tablerow>
<tablerow>
<tablecell bgcolor='white'>
<par def='7'><field defaultfocus='true' showdelimiters='false' usenotesstyle='false'
 height='0.1722in' width='100%' heighttype='proportional' borderstyle='none'
 type='text' kind='editable' name='DbFilePath'/></par></tablecell></tablerow></table>
<par def='3'><run><font size='1pt'/></run></par>
<table widthtype='fitmargins' leftmargin='0' rowspacing='0.0396in' columnspacing='0.0396in'
 refwidth='4.3208in'><tablecolumn width='100%'/>
<tablerow>
<tablecell valign='center' bgcolor='system'>
<par def='7'>オプション：</par></tablecell></tablerow>
<tablerow>
<tablecell bgcolor='white'>
<par def='7'><run><font size='1pt'/></run></par>
<par def='7'><field borderstyle='none' lookupeachchar='false' lookupaddressonrefresh='false'
 type='keyword' kind='editable' name='Documents'><keywords helperbutton='false'
 columns='2' ui='radiobutton'><textlist><text>設計/文書をコピー|1</text><text>設計をコピー|2</text></textlist></keywords><code
 event='defaultvalue'><formula>"1"</formula></code></field></par></tablecell></tablerow>
<tablerow>
<tablecell bgcolor='white'>
<par def='7'><run><font size='1pt'/></run></par>
<par def='7'><field borderstyle='none' lookupeachchar='false' lookupaddressonrefresh='false'
 type='keyword' kind='editable' name='Database'><keywords helperbutton='false'
 columns='2' ui='radiobutton'><textlist><text>データベースにする(nsf)|1</text><text
>テンプレートにする(ntf)|2</text></textlist></keywords><code event='defaultvalue'><formula
>"1"</formula></code></field></par></tablecell></tablerow>
<tablerow>
<tablecell bgcolor='white'>
<par def='7'><run><font size='1pt'/></run></par>
<par def='7'><field borderstyle='none' lookupeachchar='false' lookupaddressonrefresh='false'
 type='keyword' allowmultivalues='true' kind='editable' name='ACL' listinputseparators='comma'
 listdisplayseparator='comma'><keywords helperbutton='false' columns='1' ui='checkbox'><textlist
><text>アクセス制御リストをコピー|1</text></textlist></keywords><code event='defaultvalue'><formula
>"1"</formula></code></field></par></tablecell></tablerow></table>
<par def='3'><run><font size='1pt'/></run></par></tablecell></tablerow></table>
<par def='1'/></richtext></body>
<item name='$$ScriptName' summary='false' sign='true'><text>CopyFileDialog</text></item></subform>

<agentdata>
<noteinfo noteid='43b6' unid='4B6DFCDC70DDEC1F4925830F00205B29' sequence='1'>
<created><datetime>20180921T145324,89+09</datetime></created>
<modified><datetime>20180921T145324,90+09</datetime></modified>
<revised><datetime>20180921T145324,89+09</datetime></revised>
<lastaccessed><datetime>20180921T145324,90+09</datetime></lastaccessed>
<addedtofile><datetime>20180921T145324,90+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='43be' unid='C90AD8261EE8F6D94925830F00206974' sequence='1'>
<created><datetime>20180921T145401,48+09</datetime></created>
<modified><datetime>20180921T145401,49+09</datetime></modified>
<revised><datetime>20180921T145401,48+09</datetime></revised>
<lastaccessed><datetime>20180921T145401,49+09</datetime></lastaccessed>
<addedtofile><datetime>20180921T145401,49+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='43da' unid='8AF6A84B0C1A5F684925830F0024756E' sequence='1'>
<created><datetime>20180921T153813,58+09</datetime></created>
<modified><datetime>20180921T153813,59+09</datetime></modified>
<revised><datetime>20180921T153813,58+09</datetime></revised>
<lastaccessed><datetime>20180921T153813,59+09</datetime></lastaccessed>
<addedtofile><datetime>20180921T153813,59+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='43e6' unid='E653C6238AC2A15C4925830F00251EB0' sequence='1'>
<created><datetime>20180921T154526,88+09</datetime></created>
<modified><datetime>20180921T154526,89+09</datetime></modified>
<revised><datetime>20180921T154526,88+09</datetime></revised>
<lastaccessed><datetime>20180921T154526,89+09</datetime></lastaccessed>
<addedtofile><datetime>20180921T154526,89+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='43f2' unid='C1D1C1B198C9979E4925830F00262519' sequence='1'>
<created><datetime>20180921T155638,65+09</datetime></created>
<modified><datetime>20180921T155638,66+09</datetime></modified>
<revised><datetime>20180921T155638,65+09</datetime></revised>
<lastaccessed><datetime>20180921T155638,66+09</datetime></lastaccessed>
<addedtofile><datetime>20180921T155638,66+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='440e' unid='3572D26A6832AE37492583130002523A' sequence='1'>
<created><datetime>20180925T092521,22+09</datetime></created>
<modified><datetime>20180925T092521,23+09</datetime></modified>
<revised><datetime>20180925T092521,22+09</datetime></revised>
<lastaccessed><datetime>20180925T092521,23+09</datetime></lastaccessed>
<addedtofile><datetime>20180925T092521,23+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='4416' unid='F59BE9DB54E60D044925831300032BF7' sequence='1'>
<created><datetime>20180925T093438,63+09</datetime></created>
<modified><datetime>20180925T093438,64+09</datetime></modified>
<revised><datetime>20180925T093438,63+09</datetime></revised>
<lastaccessed><datetime>20180925T093438,64+09</datetime></lastaccessed>
<addedtofile><datetime>20180925T093438,64+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='4422' unid='D872A0022079516649258313000377F4' sequence='1'>
<created><datetime>20180925T093753,16+09</datetime></created>
<modified><datetime>20180925T093753,17+09</datetime></modified>
<revised><datetime>20180925T093753,16+09</datetime></revised>
<lastaccessed><datetime>20180925T093753,17+09</datetime></lastaccessed>
<addedtofile><datetime>20180925T093753,17+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='442a' unid='778366D7BC11EC6E492583130003B44D' sequence='1'>
<created><datetime>20180925T094027,65+09</datetime></created>
<modified><datetime>20180925T094027,66+09</datetime></modified>
<revised><datetime>20180925T094027,65+09</datetime></revised>
<lastaccessed><datetime>20180925T094027,66+09</datetime></lastaccessed>
<addedtofile><datetime>20180925T094027,66+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='4436' unid='C297C09CA45C2636492583130003EEFD' sequence='1'>
<created><datetime>20180925T094257,89+09</datetime></created>
<modified><datetime>20180925T094257,92+09</datetime></modified>
<revised><datetime>20180925T094257,91+09</datetime></revised>
<lastaccessed><datetime>20180925T094257,92+09</datetime></lastaccessed>
<addedtofile><datetime>20180925T094257,92+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby></agentdata>

<scriptlibrary name='DbToolLib' hide='v3 v4strict' designerversion='8.5.3'>
<noteinfo noteid='4452' unid='AA0ACF01B280EE9C4925831300052934' sequence='264'>
<created><datetime>20180925T095622,28+09</datetime></created>
<modified><datetime>20190826T133148,23+09</datetime></modified>
<revised><datetime>20190826T133025,24+09</datetime></revised>
<lastaccessed><datetime>20190826T133148,23+09</datetime></lastaccessed>
<addedtofile><datetime>20180925T095622,31+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=comture</name></updatedby><code event='options'><lotusscript
>Option Public
Option Declare
Use "ObjectLib"

</lotusscript></code><code event='declarations'><lotusscript>Private g_DBTool As CDBTool

Const FN_DbInfoDoc$ = "DbInfoDoc"
Const FN_VwInfoDoc$ = "ViewInfoDoc"

Class CDbInfo As CObjectable
	
	Function BuildOnDoc( doc As NotesDocument ) As Integer
		On Error GoTo ErrorHandle
		
		Set Me.pCDB = doc.ParentDatabase
		
		Set Me.pDbInfoDB = Nothing
		Set Me.DbInfoDoc = doc
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		BuildOnDoc = FUNCTIONFAILURE
		Exit Function
	End Function
	
	Function BuildOnDB(curDB As NotesDatabase, db As NotesDatabase) As Integer
		On Error GoTo ErrorHandle
		
		Dim result As Integer
		
		Set Me.pCDB = curDB
		Set Me.pDbInfoDB = db
		
		result = Me.pCreateDbInfoDoc(db)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		BuildOnDB = FUNCTIONFAILURE
		Exit Function
	End Function
	
	Function GetDatabase(db As NotesDatabase) As Integer
		On Error GoTo ErrorHandle
		
		Dim doc As NotesDocument
		Dim server As String
		Dim filePath As String
		Dim replicaID As String
		
		Set db = Me.pDbInfoDB
		
		If db Is Nothing Then
			
			Set doc = Me.DbInfoDoc
			
			server = doc.Getitemvalue("DbServer")(0)
			filePath = doc.Getitemvalue("DbFilePath")(0)
			
			Set db = New NotesDatabase( server, filePath )
			
			If Not db Is Nothing Then
				If db.Isopen = False Then
					Set db = Nothing
				End If
			End If
			
			If db Is Nothing Then
				replicaID = doc.Getitemvalue("DbReplicaID")(0)
				
				Set db = New NotesDatabase("", "")
				
				Call db.Openbyreplicaid(server, replicaID)
				
			End If
			
			Set Me.pDbInfoDB = db
		End If
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		GetDatabase = FUNCTIONFAILURE
		Exit Function
	End Function
	
	Function Update() As Integer
		On Error GoTo ErrorHandle
		
		Dim doc As NotesDocument
		Dim db As NotesDatabase
		Dim result As Integer
		
		Set doc = Me.DbInfoDoc
		
		result = Me.GetDatabase(db)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		doc.DbTitle = db.Title
		doc.DbReplicaID = db.ReplicaID
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Update = FunctionFailure
		Exit Function
	End Function
	
	Function Save() As Integer
		On Error GoTo ErrorHandle
		
		Call Me.DbInfoDoc.Save(True, True)
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Save = FunctionFailure
		Exit Function
	End Function
	
	Private Function pCreateDbInfoDoc(db As NotesDatabase) As Integer
		On Error GoTo ErrorHandle
		
		Dim doc As NotesDocument
		Dim objName As NotesName
		
		Set doc = Me.pCDB.CreateDocument()
		Set objName = New NotesName(db.Server)
		
		doc.Form = FN_DbInfoDoc
		doc.DbServer = objName.Abbreviated
		doc.DbFilePath = db.FilePath
		doc.DbTitle = db.Title
		doc.DbReplicaID = db.ReplicaID
		
		Set Me.DbInfoDoc = doc
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		pCreateDbInfoDoc = FUNCTIONFAILURE
		Exit Function
	End Function
	
	Private Property Get pCDB As NotesDatabase
		Set pCDB = Me.Members("pCDB") 
	End Property
	Private Property Set pCDB As NotesDatabase
		Set Me.Members("pCDB") = pCDB
	End Property
	
	Private Property Get pDbInfoDB As NotesDatabase
		Set pDbInfoDB = Me.Members("pDbInfoDB")
	End Property
	Private Property Set pDbInfoDB As NotesDatabase
		Set Me.Members("pDbInfoDB") = pDbInfoDB
	End Property
	
	Property Get DbInfoDoc As NotesDocument
		Set DbInfoDoc = Me.Members("DbInfoDoc")
	End Property
	Property Set DbInfoDoc As NotesDocument
		Set Me.Members("DbInfoDoc") = DbInfoDoc
	End Property
	
End Class
Class CDBTool As CObjectable
	
	Function Build( curDB As NotesDatabase ) As Integer
		On Error GoTo ErrorHandle
		
		Set Me.DB = curDB
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Build = FUNCTIONFAILURE
		Exit Function
	End Function
	
	Function GetDbInfo(param As Variant, dbInfo As CDbInfo) As Integer
		On Error GoTo ErrorHandle
		
		Dim curDB As NotesDatabase
		Dim view As NotesView
		Dim keys As Variant
		
		Dim db As NotesDatabase
		Dim doc As NotesDocument
		Dim result As Integer
		
		Set curDB = Me.DB
		Set dbInfo = Nothing
		
		If param IsA "NotesDatabase" Then
			Set db = param
			Set dbInfo = New CDbInfo
			
			result = Me.GetViewAtFindOfDbInfo(view)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
			ReDim keys(1) As String
			Dim objName As New NotesName(db.Server)
			
			'keys(0) = db.Server
			keys(0) = objName.Abbreviated
			keys(1) = db.FilePath
			
			Set doc = view.Getdocumentbykey(keys, True)
			
			If doc Is Nothing Then
				result = dbInfo.BuildOnDB(curDB, db)
				If result = FUNCTIONFAILURE Then
					Error USERERR, Error
				End If
			Else
				result = dbInfo.BuildOnDoc( doc )
				If result = FUNCTIONFAILURE Then
					Error USERERR, Error
				End If
			End If
			
		ElseIf param IsA "NotesDocument" Then
			Set doc = param
			Set dbInfo = New CDbInfo
			
			result = dbInfo.BuildOnDoc( doc )
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
		End If
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		GetDbInfo = FUNCTIONFAILURE
		Exit Function
	End Function
	
	Function GetVwInfo(param As Variant, vwInfo As CVWInfo) As Integer
		On Error GoTo ErrorHandle
		
		Dim view As NotesView
		Dim db As NotesDatabase
		Dim doc As NotesDocument
		Dim dbInfoDoc As NotesDocument
		Dim curDB As NotesDatabase
		
		Dim dbInfo As CDbInfo
		
		Dim result As Integer
		
		Set vwInfo = Nothing
		
		If param IsA "NotesView" Then
			Set view = param
			Set db = view.Parent
			
			result = Me.GetDbInfo(db, dbInfo)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
			Set vwInfo = New CVWInfo
			
			result = vwInfo.BuildOnVW(dbInfo, view)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
		ElseIf param IsA "NotesDocument" Then
			Set doc = param
			Set dbInfoDoc = curDB.Getdocumentbyunid(doc.ParentDocumentUNID)
			
			result = Me.GetDbInfo(dbInfoDoc, dbInfo)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
			result = vwInfo.BuildOnDoc(dbInfo, doc)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
		End If
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		GetVwInfo = FUNCTIONFAILURE
		Exit Function
	End Function
	
	Function GetViewAtFindOfDbInfo(view As NotesView) As Integer
		Dim curDB As NotesDatabase
		
		Set curDB = Me.DB
		Set view = curDB.Getview("FindFilePath")
	End Function
	
	Property Get DB As NotesDatabase
		Set DB = Me.Members("DB") 
	End Property
	
	Property Set DB As NotesDatabase
		Set Me.Members("DB") = DB
	End Property
	
End Class
Class CVWInfo As CObjectable
	
	Function BuildOnVW(dbInfo As CDbInfo, view As NotesView) As Integer
		On Error GoTo ErrorHandle
		
		Dim result As Integer
		
		Set Me.DbInfo = dbInfo
		Set Me.VWInfoDoc = Nothing
		
		result = Me.pCreateVWInfoDoc(view)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		BuildOnVW = FUNCTIONFAILURE
		Exit Function
	End Function
	
	Function BuildOnDoc(dbInfo As CDbInfo, doc As NotesDocument) As Integer
		On Error GoTo ErrorHandle
		
		Dim result As Integer
		
		Set Me.DbInfo = dbInfo
		Set Me.VWInfoDoc = doc
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		BuildOnDoc = FUNCTIONFAILURE
		Exit Function
	End Function
	
	Function Save() As Integer
		On Error GoTo ErrorHandle
		
		Call Me.VWInfoDoc.Save(True, True)
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Save = FUNCTIONFAILURE
		Exit Function
	End Function
	
	Property Get DbInfo As CDbInfo
		Set DbInfo = Me.Members("DbInfo")
	End Property
	Property Set DbInfo As CDbInfo
		Set Me.Members("DbInfo") = DbInfo
	End Property
	
	Property Get VWInfoDoc As NotesDocument
		Set VWInfoDoc = Me.Members("VWInfoDoc")
	End Property
	Property Set VWInfoDoc As NotesDocument
		Set Me.Members("VWInfoDoc") = VWInfoDoc
	End Property
	
	'--private
	
	Private Function pCreateVWInfoDoc(view As NotesView) As Integer
		On Error GoTo ErrorHandle
		
		Dim curDB As NotesDatabase
		Dim dbInfo As CDbInfo
		Dim dbInfoDoc As NotesDocument
		Dim doc As NotesDocument
		
		Set dbInfo = Me.DbInfo
		Set dbInfoDoc = dbInfo.DbInfoDoc
		Set curDB = dbInfoDoc.ParentDatabase
		
		Set doc = curDB.CreateDocument()
		
		doc.Form = FN_VwInfoDoc
		
		doc.ViewName = view.Name
		doc.ViewAlias = view.Aliases
		If doc.ViewAlias(0) = "" Then
			doc.ViewAlias = doc.ViewName
		End If
		doc.ViewUNID = view.UniversalID
		
		Call doc.Makeresponse(dbInfoDoc)
		Call doc.ComputeWithForm(True, True)
		
		Set Me.VWInfoDoc = doc
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		pCreateVWInfoDoc = FUNCTIONFAILURE
		Exit Function
	End Function
	
End Class
</lotusscript></code><code event='initialize'><lotusscript>Sub Initialize
	Call SetProcess("*SL - DbToolLib")
End Sub

</lotusscript></code><code event='GetDbInfo'><lotusscript>Function GetDbInfo(curDB As NotesDatabase, param As Variant, dbInfo As CDbInfo) As Integer
	On Error GoTo ErrorHandle
	
	Dim DBTool As CDBTool
	Dim result As Integer
	
	Set dbInfo = Nothing
	
	result = GetDbTool(curDB, False, DBTool)
	If result = FUNCTIONFAILURE Then
		Error USERERR, Error
	End If
	
	result = DBTool.GetDbInfo(param, dbInfo)
	If result = FUNCTIONFAILURE Then
		Error USERERR, Error
	End If
	
	Exit Function
ErrorHandle:
	Call SetErrorObject(Err, Error)
	GetDbInfo = FUNCTIONFAILURE
	Exit Function
End Function

</lotusscript></code><code event='GetVwInfo'><lotusscript>Function GetVwInfo(curDB As NotesDatabase, param As Variant, vwInfo As CVwInfo) As Integer
	On Error GoTo ErrorHandle
	
	Dim DBTool As CDBTool
	Dim result As Integer
	
	Set vwInfo = Nothing
	
	result = GetDbTool(curDB, False, DBTool)
	If result = FUNCTIONFAILURE Then
		Error USERERR, Error
	End If
	
	result = DBTool.GetVwInfo(param, vwInfo)
	If result = FUNCTIONFAILURE Then
		Error USERERR, Error
	End If
	
	Exit Function
ErrorHandle:
	Call SetErrorObject(Err, Error)
	GetVwInfo = FUNCTIONFAILURE
	Exit Function
End Function

</lotusscript></code><code event='GetDbTool'><lotusscript>Function GetDbTool(curDB As NotesDatabase, f As Boolean, DBTool As CDBTool) As Integer
	On Error GoTo ErrorHandle
	
	Dim result As Integer
	
	If f = True Then
		Set g_DBTool = Nothing
	End If
	
	If g_DBTool Is Nothing Then
		Set DBTool = New CDBTool
		
		result = DBTool.Build(curDB)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		Set g_DBTool = DBTool
	Else
		Set DBTool = g_DBTool
	End If
	
	Exit Function
ErrorHandle:
	Call SetErrorObject(Err, Error)
	GetDbTool = FUNCTIONFAILURE
	Exit Function
End Function


</lotusscript></code>
<item name='$POID'><datetime>20190826T133025,24+09</datetime></item></scriptlibrary>

<scriptlibrary name='ObjectLib' hide='v3 v4strict'>
<noteinfo noteid='4456' unid='5CBE4D5118492CE94925831300056D41' sequence='1031'>
<created><datetime>20180925T095916,49+09</datetime></created>
<modified><datetime>20181031T100050,96+09</datetime></modified>
<revised><datetime>20181031T100050,95+09</datetime></revised>
<lastaccessed><datetime>20181031T100050,96+09</datetime></lastaccessed>
<addedtofile><datetime>20180925T095916,52+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Kyoko Kashiwada/O=CIS/C=JP</name><name>CN=Kyouko Kashiwada/O=PDSU/C=JP</name><name
>Kashiwada</name><name>CN=Kyouko Kashiwada/O=PDSU/C=JP</name><name>CN=Andante/O=Solo/C=JP</name><name
>CN=Gold/O=PDSU/C=JP</name><name>CN=Atsushi Doi/O=PDSU/C=JP</name><name>CN=Kyouko Kashiwada/O=PDSU/C=JP</name><name
>CNAP PRODUCTS</name><name>CN=Gold/O=PDSU/C=JP</name><name>CNAP PRODUCTS</name><name
>CN=Admin Notes/O=CISPD</name><name>CN=Admin Notes/O=PDSU/C=JP</name><name
>CNAP PRODUCTS</name><name>CN=notes-server07/O=r5srv</name><name>CN=admin/O=r5srv</name><name
>CNAP PRODUCTS</name><name>CN=wfpro/O=nap</name><name>CN=admin/O=nap</name><name
>CN=wfpro/O=nap</name><name>CNAP PRODUCTS</name><name>CN=CNAP2002/O=WFTEST</name><name
>CN=admin test/O=WFTEST</name><name>CN=CNAP2002/O=WFTEST</name><name>CNAP PRODUCTS</name><name
>CN=Admin Nodes/O=Orchestra</name><name>CNAP PRODUCTS</name><name>CN=Administrator NOTES/O=CISDEV</name><name
>CNAP PRODUCTS</name><name>CN=Administrator NOTES/O=CISDEV</name><name>CN=WFcanon/O=CISDEV</name><name
>CNAP PRODUCTS</name><name>CN=Administrator NOTES/O=CISDEV</name><name>CNAP PRODUCTS</name><name
>CN=Administrator NOTES/O=CISDEV</name><name>CNAP PRODUCTS</name><name>CN=PB-SuportSrv/O=COMPB</name><name
>CN=admin/O=COMPB</name><name>CN=PB-SuportSrv/O=COMPB</name><name>CN=admin/O=COMPB</name><name
>CN=yuji ohtsuka/O=COMPB</name><name>CNAP PRODUCTS</name><name>CN=admin/O=COMPB</name><name
>CN=kinji yokokawa/O=COMPB</name><name>CNAP PRODUCTS</name><name>CN=kinji yokokawa/O=COMPB</name><name
>CNAP PRODUCTS</name><name>CN=admin/O=COMPB</name><name>CNAP PRODUCTS</name><name
>CN=CD0048/O=COMPB</name><name>CN=Kinji Yokokawa/O=comture</name><name>CN=Notes Admin/O=COMPB</name><name
>CN=CD0048/O=COMPB</name><name>Notes</name><name>CN=Admin702/O=GWS</name><name
>CN=CD0048/O=COMPB</name><name>Notes</name><name>CN=Admin702/O=GWS</name><name
>CN=Tarou Satou/O=COMPB</name><name>CN=Notes Admin/O=COMPB</name><name>CN=CD0048/O=COMPB</name><name
>Notes</name><name>CN=System Admin/O=Product</name><name>CN=CD0048/O=COMPB</name><name
>Notes</name><name>CN=System Admin/O=Product</name><name>CNAP PRODUCTS</name><name
>CN=System Admin/O=Product</name><name>CNAP PRODUCTS</name><name>CN=System Admin/O=Product</name><name
>CN=kinji yokokawa/O=COMPB</name><name>CNAP PRODUCTS</name><name>CN=Admin Domino/O=COMTURE-PB</name><name
>CNAP PRODUCTS</name><name>CN=PSL85/O=Comture</name><name>CN=System Administrator/O=Comture</name><name
>CNAP PRODUCTS</name><name>CN=PSL85/O=Comture</name><name>CN=System Administrator/O=Comture</name><name
>CN=PSL655/O=Comture</name><name>CN=PSL85/O=Comture</name><name>CN=System Administrator/O=Comture</name><name
>CNAP PRODUCTS</name><name>CN=System Administrator/O=Comture</name><name>CNAP PRODUCTS</name><name
>CN=System Administrator/O=Comture</name><name>CNAP PRODUCTS</name><name>CN=PSL90/O=Comture</name><name
>CN=System Administrator/O=Comture</name><name>CNAP PRODUCTS</name><name>CN=PSL90/O=Comture</name><name
>CN=System Administrator/O=Comture</name><name>CN=PSL901/O=Comture</name><name
>CNAP PRODUCTS</name><name>CN=PSL901/O=Comture</name><name>CN=System Administrator/O=Comture</name><name
>CN=PSL901/O=Comture</name><name>CN=System Administrator/O=Comture</name><name
>CN=PSL901/O=Comture</name><name>CN=System Administrator/O=Comture</name><name
>CNAP PRODUCTS</name><name>CN=CSS901/O=Comture</name><name>CN=Administrator/O=Comture</name><name
>CN=CSS901/O=Comture</name><name>CN=Administrator/O=Comture</name><name>CN=CSS901/O=Comture</name><name
>CN=Administrator/O=Comture</name><name>CN=CSS901/O=Comture</name><name>CN=Administrator/O=Comture</name><name
>CN=CSS901/O=Comture</name><name>CN=Administrator/O=Comture</name></updatedby>
<wassignedby><name>CN=Administrator/O=Comture</name></wassignedby><code event='options'><lotusscript
>Option Explicit
Option Public
Use "ErrorLib"

</lotusscript></code><code event='declarations'><lotusscript>'ObjectLib: 



'
' クラス
' 
' すべてのオブジェクトはこのクラスのインスタンスに所有される
'
Class CObject
End Class
'v380 UP005 add
Class CObjectable As CObject
	Private lstMembers List As Variant 'v380 UP002 add
	
	'--- メンバ変数用プロパティ ---
	Function IsAvailable(tag As String) As Boolean
		IsAvailable = IsElement( Me.lstMembers( tag ) )
	End Function
	
	Sub EraseMember( tag As String )
		If Me.IsAvailable(Tag) Then Erase Me.lstMembers( tag )
	End Sub
	
	Property Get Members(tag As String) As Variant
		
		If Me.IsAvailable( tag ) Then
			
			If IsObject( Me.lstMembers( tag ) ) Then
				Set Members = Me.lstMembers( tag )
			Else
				Members = Me.lstMembers( tag )
			End If
			
		End If
		
	End Property
	
	Property Set Members( tag As String ) As Variant
		If IsObject( Members ) Then
			Set Me.lstMembers( tag ) = Members
		Else
			Me.lstMembers( tag ) = Members
		End If
	End Property
	
	'v380 UP007 add start --
	'オブジェクトをクローンする
	'@param
	' deep : True : ディープ、False : シャロー
	Function Clone(deep As Boolean, c As CObjectable) As Integer
		On Error GoTo errorHandle
		
		Dim tagName As String
		
		ForAll m In Me.lstMembers
			tagName = ListTag(m)
			
			If IsObject(m) Then
				
				Set c.Members( tagName ) = m
				
			Else
				c.Members( tagName ) = m
			End If
			
		End ForAll
		
		Exit Function
ErrorHandle:
		Call SetErrorObject(Err, Error)
		Clone = FUNCTIONFAILURE
		Exit Function
	End Function
	'v380 UP007 add end --
	
	'@param
	'lngHashCode (@return) : hash code
	Function HachCode(lngHashCode As Long) As Integer
		On Error GoTo ErrorHandle
		
		Dim result As Integer
		Dim strClassName As String
		Dim lngHash As Long
		Dim intLen As Integer
		Dim i As Integer
		Dim c As String
		
		strClassName = TypeName(Me)
		intLen = Len(strClassName)
		
		If 0 &lt; intLen Then
			
			For i = 1 To intLen
				
				c = Mid$(strClassName, i, 1)
				
				lngHash = 31 * lngHash + Uni(c)
				
			Next
			
		End If
		
		lngHashCode = lngHash
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		HachCode = FUNCTIONFAILURE
		Exit Function
	End Function
	
End Class
'v380 UP005 add
Class CCollectionable As CObjectable
	
	'--public members
	'コレクション内の全要素
	Property Get Elements As Variant
		Elements = Me.Members("elements")
	End Property
	Property Set Elements As Variant
		Me.Members("elements") = Elements
	End Property
	
	'--private menbers
	'参照ポインタ
	Private Property Get pIndex As Long
		pIndex = Me.Members("index")
	End Property
	Private Property Set pIndex As Long
		Me.Members("index") = pIndex
	End Property
	
	'コンストラクタ
	Sub New
		Call Me.pInit_CListCollection()
	End Sub
	
	'@param
	' iterator(@return) : (CIterator) an iterator
	Function GetIterator(iterator As CIterator) As Integer
		On Error GoTo ErrorHandle
		
		Dim result As Integer
		Dim ite As New CIteratorable
		
		result = ite.Build(Me)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		Set iterator = ite
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		GetIterator = FUNCTIONFAILURE
		Exit Function
	End Function
	
	'初めの要素を取得する
	'@param
	' elem (戻り値) : 要素
	Function GetFirst(elem As Variant) As Integer
		On Error GoTo ErrorHandle
		
		Dim idx As Long
		
		idx = Me.pIndex
		idx = 0
		Me.pIndex = idx
		
		If Me.GetNth(idx, elem) = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		GetFirst = FUNCTIONFAILURE
		Exit Function
	End Function
	
	'次の要素を取得する
	'@param
	' elem (戻り値) : 要素
	Function GetNext(elem As Variant) As Integer
		On Error GoTo ErrorHandle
		
		Dim idx As Long
		
		idx = Me.pIndex
		idx = idx + 1
		Me.pIndex = idx
		
		If Me.GetNth(idx, elem) = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		GetNext = FUNCTIONFAILURE
		Exit Function
	End Function
	
	'最後の要素を取得する
	'@param
	' elem (戻り値) : 要素
	Function GetLast(elem As Variant) As Integer
		On Error GoTo ErrorHandle
		
		Dim idx As Long
		
		idx = Me.pIndex
		idx = Me.Length - 1
		Me.pIndex = idx
		
		If Me.GetNth(idx, elem) = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		GetLast = FUNCTIONFAILURE
		Exit Function
	End Function
	
	'前の要素を取得する
	'@param
	' elem (戻り値) : 要素
	Function GetPrev(elem As Variant) As Integer
		On Error GoTo ErrorHandle
		
		Dim idx As Long
		
		idx = Me.pIndex
		idx = idx - 1
		Me.pIndex = idx
		
		If Me.GetNth(idx, elem) = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		GetPrev = FUNCTIONFAILURE
		Exit Function
	End Function
	
	'指定Indexの要素を取得する
	'@param
	' idx : index
	' elem (戻り値) : 要素
	Function GetNth(idx As Long, elem As Variant) As Integer
		On Error GoTo ErrorHandle
		
		'初期化
		Dim empty As Variant
		Dim elems As Variant
		
		If Me.Length &gt; idx Then
			
			elems = Me.Elements
			
			If IsObject(elem) Then
				If IsEmpty(elems(idx)) Then
					Set elem = Nothing
				Else
					Set elem = elems( idx )
				End If
			Else
				elem = elems( idx )
			End If
			
		Else
			If IsObject(elem) Then
				Set elem = Nothing
			Else
				elem = empty
			End If
		End If
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		GetNth = FUNCTIONFAILURE
		Exit Function
	End Function
	
	'指定要素のIndexを取得する
	'@param
	' elem : 要素
	' idx (戻り値) : index
	'@return 指定要素のIndex(ない場合は -1 )
	Function GetIdx(elem As Variant, idx As Long) As Integer
		On Error GoTo ErrorHandle
		
		Dim elems As Variant
		Dim i As Integer
		Dim max As Integer
		Dim result As Integer
		
		idx = -1
		max = Me.Length-1
		
		If idx = max Then
			Exit Function
		End If
		
		result = Me.pInitElements(elems)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		If IsObject(elem) Then
			For i = 0 To max
				
				If elems(i) Is elem Then
					idx = i
					Exit For
				End If
				
			Next
		Else
			For i = 0 To max
				
				If elems(i) = elem Then
					idx = i
					Exit For
				End If
				
			Next
		End If
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		GetIdx = FUNCTIONFAILURE
		Exit Function
	End Function
	
	'要素を末尾に追加する
	'@param
	' elem : 要素
	Function Add(elem As Variant) As Integer
		On Error GoTo ErrorHandle
		
		Dim idx As Long
		
		idx = Me.Length
		
		If Me.SetNth(idx, elem) = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Add = FUNCTIONFAILURE
		Exit Function
	End Function
	
	'要素を末尾に追加する
	'@param
	' elems : 要素(CCollectionable | Variant Array | Variant)
	Function AddAll(elems As Variant) As Integer
		On Error GoTo ErrorHandle
		
		Dim result As Integer
		
		If elems IsA "CCollectionable" Then
			
			Dim col As CCollectionable
			Dim elem As Variant
			Dim i As Long
			
			Set col = elems
			
			For i = 0 To col.Length - 1
				result = col.GetNth(i, elem)
				If result = FUNCTIONFAILURE Then
					Error USERERR, Error
				End If
				
				result = Me.Add(elem)
				If result = FUNCTIONFAILURE Then
					Error USERERR, Error
				End If
			Next
			
		ElseIf IsArray(elems) Then
			ForAll e In elems
				result = Me.Add(e)
				If result = FUNCTIONFAILURE Then
					Error USERERR, Error
				End If
			End ForAll
		Else
			result = Me.Add(elems)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
		End If 
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		AddAll = FUNCTIONFAILURE
		Exit Function
	End Function
	
	'指定要素の前に要素を追加する(要素がない場合は、末尾に追加)
	'@param
	' beforeElem : 指定要素
	' elem : 追加する要素
	Function InsBef(beforeElem As Variant, elem As Variant) As Integer
		On Error GoTo ErrorHandle
		
		Dim idx As Long
		Dim result As Integer
		
		result = Me.GetIdx(beforeElem, idx)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		If idx = -1 Then
			result = Me.Add(elem)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
		Else
			result = Me.InsNth(idx, elem)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
		End If
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		InsBef = FUNCTIONFAILURE
		Exit Function
	End Function
	
	'指定要素の前に要素を追加する(要素がない場合は、末尾に追加)
	'@param
	' afterElem : 指定要素
	' elem : 追加する要素
	Function InsAft(afterElem As Variant, elem As Variant) As Integer
		On Error GoTo ErrorHandle
		
		Dim idx As Long
		Dim result As Integer
		
		result = Me.GetIdx(afterElem, idx)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		If idx = -1 Then
			result = Me.Add(elem)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
		Else
			result = Me.InsNth(idx+1, elem)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
		End If
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		InsAft = FUNCTIONFAILURE
		Exit Function
	End Function
	
	'指定Indexに要素を挿入する
	'@param
	' idx : index
	' elem : 要素
	Function InsNth(idx As Long, elem As Variant) As Integer
		On Error GoTo ErrorHandle
		
		Dim elems As Variant
		Dim max As Integer
		Dim i As Integer
		Dim result As Integer
		
		If Me.Length &lt; idx Then
			result = Me.Add(elem)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
		Else
			result = Me.pInitElements(elems)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
			ReDim Preserve elems( Me.Length )
			
			max = Me.Length
			
			For i = idx To max-1
				
				Call Me.pSwapAt(elems, i, i+1)
				
			Next
			
			result = Me.SetNth(idx, elem)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
		End If
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		InsNth = FUNCTIONFAILURE
		Exit Function
	End Function
	
	'指定Indexに要素を設定する
	'@param
	' idx : index
	' elem : 要素
	Function SetNth(idx As Long, elem As Variant) As Integer
		On Error GoTo ErrorHandle
		
		Dim elems As Variant
		
		If Me.pInitElements(elems) = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		ReDim Preserve elems( idx )
		
		If IsObject(elem) Then
			Set elems( idx ) = elem
		Else
			elems( idx ) = elem
		End If
		
		Me.Elements = elems
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		SetNth = FUNCTIONFAILURE
		Exit Function
	End Function
	
	'指定Indexの要素を削除する
	'※空き領域となる
	'@param
	' idx : index
	Function DelNth(idx As Long) As Integer
		On Error GoTo ErrorHandle
		
		Dim empty As Variant
		Dim elements As Variant
		
		If Me.Length &gt; idx Then
			
			elements = Me.Elements
			
			elements(idx) = empty
			
			Me.Elements = elements 
			
		End If
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		DelNth = FUNCTIONFAILURE
		Exit Function
	End Function
	
	'空き領域を解放する
	'※要素を削除後、明示的にCallする
	Function Pack() As Integer
		On Error GoTo ErrorHandle
		
		Dim result As Integer
		
		If Me.pPack(0) = FUNCTIONFAILURE Then
			Exit Function
		End If
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Pack = FUNCTIONFAILURE
		Exit Function
	End Function
	
	'@proc
	' add fitst element.
	'@param
	' elem : element to add.
	Function UnShift(elem As Variant) As Integer
		On Error GoTo ErrorHandle
		
		Dim result As Integer
		Dim idx As Long
		
		idx = 0
		
		result = Me.InsNth(idx, elem)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		UnShift = FUNCTIONFAILURE
		Exit Function
	End Function
	
	'@proc
	' delete the first element.
	'@param
	' elem (@return): deleted element.
	Function Shift(elem As Variant) As Integer
		On Error GoTo ErrorHandle
		
		Dim result As Integer
		Dim idx As Long
		
		idx = 0
		
		result = Me.GetNth(idx, elem)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		result = Me.DelNth(idx)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		result = Me.pPack(idx)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Shift = FUNCTIONFAILURE
		Exit Function
	End Function
	
	'@proc
	' add last element.
	'@param
	' elem : element to add.
	Function Push(elem As Variant) As Integer
		On Error GoTo ErrorHandle
		
		Dim result As Integer
		
		result = Me.Add(elem)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Push = FUNCTIONFAILURE
		Exit Function
	End Function
	
	'@proc
	' delete the last element.
	'@param
	' elem (@return): deleted element.
	Function Pop(elem As Variant) As Integer
		On Error GoTo ErrorHandle
		
		Dim result As Integer
		Dim idx As Long
		
		idx = Me.Length -1
		
		result = Me.GetNth(idx, elem)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		If 0 &lt;= idx Then
			result = Me.DelNth(idx)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
			result = Me.pPack(idx)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
		End If
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Pop = FUNCTIONFAILURE
		Exit Function
	End Function
	
	Function Clear() As Integer
		On Error GoTo ErrorHandle
		
		Dim empty As Variant
		Me.Elements = empty
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Clear = FUNCTIONFAILURE
		Exit Function
	End Function
	
	Function Reverse() As Integer
		On Error GoTo ErrorHandle
		
		Dim result As Integer
		Dim i As Integer
		Dim ub As Integer
		Dim p As Integer
		
		ub = Me.Length - 1
		
		If ub &lt; 1 Then
			GoTo ExitTag
		End If
		
		Dim elems As Variant
		
		elems = Me.Elements
		p = CInt(ub/2)
		
		For i = 0 To p
			
			Call Me.pSwapAt(elems, i, ub-i)
			
		Next
		
ExitTag:
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Reverse = FUNCTIONFAILURE
		Exit Function
	End Function
	
	'@param comp : (CComparator)
	Function Sort(comp As CComparator) As Integer
		On Error GoTo ErrorHandle
		
		Dim result As Integer
		Dim s As New CSortable
		Dim c As CComparator
		
		If comp Is Nothing Then
			Set c = New CComparatable
		Else
			Set c = comp
		End If
		
		result = s.Sort(Me, c)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Sort = FUNCTIONFAILURE
		Exit Function
	End Function
	
	Property Get Length As Long
		Dim elements As Variant
		
		elements = Me.Elements
		
		If IsEmpty(elements) Then
			Length = 0
		Else
			Length = UBound(elements)+1
		End If
		
	End Property
	
	'-- private
	Function pPack(idx As Long) As Integer
		On Error GoTo ErrorHandle
		
		Dim e1 As Variant
		Dim e2 As Variant
		
		Dim idx1 As Long
		Dim idx2 As Long
		Dim max As Long
		Dim newMax As Integer
		
		If idx &lt; 0 Then
			idx = 0
		End If
		
		'最大Index
		max = Me.Length - 1
		'最後の要素があるIndex
		newMax = -1
		
		For idx1 = idx To max
			
			'要素を取得
			If Me.GetNth(idx1, e1) = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
			'要素がない場合
			If IsEmpty( e1 ) Then
				
				'次以降にある要素を取得
				For idx2 = (idx1 + 1) To max
					
					'要素を取得
					If Me.GetNth(idx2, e2) = FUNCTIONFAILURE Then
						Error USERERR, Error
					End If
					
					'要素がある場合
					If Not IsEmpty( e2 ) Then
						
						'移動する
						If Me.SetNth(idx1, e2) = FUNCTIONFAILURE Then
							Error USERERR, Error
						End If
						
						'削除する
						If Me.DelNth(idx2) = FUNCTIONFAILURE Then
							Error USERERR, Error
						End If
						
						'最後の要素があるIndex
						newMax = idx1
						
					End If
					
				Next
				
				'次のループ開始Index
				idx1 = idx2
				
			Else
				'最後の要素があるIndex
				newMax = idx1
				
			End If
		Next
		
		Dim elements As Variant
		Dim empty As Variant
		
		elements = Me.Elements
		
		'要素が全て空の場合
		If newMax = -1 Then
			elements = empty
		Else
			ReDim Preserve elements(newMax)
		End If
		
		Me.Elements = elements
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		pPack = FUNCTIONFAILURE
		Exit Function
	End Function
	
	'指定配列の指定した位置の要素を入れ替える
	'@param
	' elems : 配列
	' fromIdx : 入れ替える配列要素index
	' toIdx : 入れ替える配列要素index
	Private Sub pSwapAt(elems As Variant, fromIdx As Integer, toIdx As Integer)
		On Error GoTo ErrorHandle
		
		Dim tmpVal As Variant
		Dim empty As Variant
		
		If IsObject(elems(fromIdx)) Then
			Set tmpVal = elems(fromIdx)
			Set elems(fromIdx) = elems(toIdx)
			Set elems(toIdx) = tmpVal
		Else
			tmpVal = elems(fromIdx)
			elems(fromIdx) = elems(toIdx)
			elems(toIdx) = tmpVal
		End If
		
		tmpVal = empty
		
		Exit Sub
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Sub
	End Sub
	
	'初期化処理
	Private Sub pInit_CListCollection()
		Dim empty As Variant
		Me.Elements = empty
		Me.pIndex = -1
	End Sub
	
	'内部配列を初期化する
	Private Function pInitElements(elems As Variant) As Integer
		On Error GoTo ErrorHandle
		
		If IsEmpty(Me.Elements) Then
			Dim emptyArray() As Variant
			ReDim emptyArray(0)
			Me.Elements = emptyArray
		End If
		
		elems = Me.Elements
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		pInitElements = FUNCTIONFAILURE
		Exit Function
	End Function
	
End Class
Class CListCollection As CCollectionable
	
	Sub New()
		Call Me.pInit_CListCollection()
	End Sub
	
	Private Sub pInit_CListCollection()
		Set Me.pNames = New CCollectionable
	End Sub
	
	'@param
	' strName : (String) list name.
	' elem (@return): (Variant) list elem(s).
	Function GetBy(varKey As Variant, elem As Variant) As Integer
		On Error GoTo ErrorHandle
		
		Dim strName As String
		Dim idx As Long
		Dim result As Integer
		
		result = Me.pGetName(varKey, strName)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		result = Me.GetNameIdx(strName, idx)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		If idx = -1 Then
			If IsObject(elem) Then
				Set elem = Nothing
			Else
				Dim empty As Variant
				elem = empty
			End If
		Else
			result = Me.GetNth(idx, elem)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
		End If
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		GetBy = FUNCTIONFAILURE
		Exit Function
	End Function
	
	'@param
	' idx: (Integer) index
	' strName (@return): (String) list name.
	Function GetIdxName(idx As Long, strName As String) As Integer
		On Error GoTo ErrorHandle
		
		Dim cNames As CCollectionable
		Dim result As Integer
		
		strName = ""
		
		Set cNames = Me.pNames
		
		result = cNames.GetNth(idx, strName)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		GetIdxName = FUNCTIONFAILURE
		Exit Function
	End Function
	
	'@param
	' strName : (String) list name.
	' idx (@return): (Integer)
	Function GetNameIdx(varKey As Variant, idx As Long) As Integer
		On Error GoTo ErrorHandle
		
		Dim result As Integer
		Dim cNames As CCollectionable
		Dim strName As String
		
		result = Me.pGetName(varKey, strName)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		idx = -1
		
		Set cNames = Me.pNames
		
		result = cNames.GetIdx(strName, idx)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		GetNameIdx = FUNCTIONFAILURE
		Exit Function
	End Function
	
	'@param
	' strName : (String) list name.
	' elem : (Variant) list elem(s).
	Function SetBy(varKey As Variant, elem As Variant) As Integer
		On Error GoTo ErrorHandle
		
		Dim result As Integer
		Dim cNames As CCollectionable
		Dim strName As String
		Dim idx As Long
		
		result = Me.pGetName(varKey, strName)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		Set cNames = Me.pNames
		
		result = cNames.GetIdx(strName, Idx)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		If idx = -1 Then
			result = cNames.Add(strName)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
			result = Me.Add(elem)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
		Else
			result = cNames.SetNth(idx, strName)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
			result = Me.SetNth(idx, elem)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
		End If
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		SetBy = FUNCTIONFAILURE
		Exit Function
	End Function
	
	Function SetByList(lstElement List As Variant) As Integer
		On Error GoTo ErrorHandle
		
		Dim result As Integer
		
		ForAll e In lstElement
			result = Me.GetBy(ListTag(e), e)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
		End ForAll
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		SetByList = FUNCTIONFAILURE
		Exit Function
	End Function
	
	'@proc
	'@return : (String Array) list
	Property Get NameElements As Variant
		On Error GoTo ErrorHandle
		
		Dim cNames As CCollectionable
		
		Set cNames = Me.pNames
		
		NameElements = cNames.Elements
		
		Exit Property
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Property
	End Property
	
	'--private
	
	'@return : (CCollectionable)
	Private Property Get pNames As CCollectionable
		Set pNames = Me.Members("pNames")
	End Property
	'@return : (CCollectionable)
	Private Property Set pNames As CCollectionable
		Set Me.Members("pNames") = pNames
	End Property
	
	Private Function pGetName(varKey As Variant, strName As String) As Integer
		On Error GoTo ErrorHandle
		
		Dim result As Integer
		Dim obj As CObjectable
		Dim lngHash As Long
		
		If varKey IsA "CObjectable" Then
			Set obj = varKey
			result = obj.HachCode(lngHash)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
			strName = CStr(lngHash)
		Else
			strName = CStr(varKey)
		End If
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		pGetName = FUNCTIONFAILURE
		Exit Function
	End Function
	
End Class
Class CStringable As CObjectable
	
	Sub New()
		Call pInit_CString()
	End Sub
	
	Function Build(strData As String) As Integer
		On Error GoTo ErrorHandle
		
		Me.StringData = strData
		
		Me.pHash = 0
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Build = FUNCTIONFAILURE
		Exit Function
	End Function
	
	Function CharAt(idx As Integer, strChar As String) As Integer
		On Error GoTo ErrorHandle
		
		Dim strData As String
		
		strData = Me.StringData
		
		strChar = Mid(strData, idx+1, 1)
		
		Exit Function
ErrorHandle:
		Call SetErrorObject(Err, Error)
		CharAt = FUNCTIONFAILURE
		Exit Function
	End Function
	
	Function IndexOf(strChar As String, idx As Integer) As Integer
		On Error GoTo ErrorHandle
		
		Dim strData As String
		
		strData = Me.StringData
		
		idx = InStr(strData, strChar)
		
		idx = idx - 1
		
		Exit Function
ErrorHandle:
		Call SetErrorObject(Err, Error)
		IndexOf = FUNCTIONFAILURE
		Exit Function
	End Function
	
	'@param beginIdx : (Integer) begin index
	'@param endIdx : (Integer) end index (If it is less than 0, the last Index)
	'@param strSub (@return) : (String) sub string
	Function SubString(beginIdx As Integer, endIdx As Integer, strSub As String) As Integer
		On Error GoTo ErrorHandle
		
		Dim strData As String
		
		strData = Me.StringData
		
		If endIdx &lt; 0 Then
			strSub = Mid(strData, (beginIdx + 1), ((Len(strData)-1)-beginIdx+1))
		Else
			strSub = Mid(strData, (beginIdx + 1), (endIdx-beginIdx+1))
		End If
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		SubString = FUNCTIONFAILURE
		Exit Function
	End Function
	
	Function ToCharArray(aryChars As Variant) As Integer
		On Error GoTo ErrorHandle
		
		Dim result As Integer
		Dim idx As Integer
		Dim max As Integer
		Dim c As String
		Dim i As Integer
		
		max = Me.StringLength - 1
		
		ReDim aryChars(0 To max)
		
		For i = 0 To max
			result = Me.CharAt(i, c)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
			aryChars(i) = c
			
		Next
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		ToCharArray = FUNCTIONFAILURE
		Exit Function
	End Function
	
	'@param
	'lngHashCode (@return) : hash code
	Function HashCode(lngHashCode As Long) As Integer
		On Error GoTo ErrorHandle
		
		Dim result As Integer
		Dim lngHash As Integer
		Dim intLen As Integer
		Dim i As Integer
		Dim c As String
		
		lngHash = Me.pHash
		intLen = Me.StringLength
		
		If lngHash = 0 And 0 &lt; intLen Then
			
			For i = 0 To intLen - 1
				
				result = Me.CharAt(i, c)
				If result = FUNCTIONFAILURE Then
					Error USERERR, Error
				End If
				
				lngHash = 31 * lngHash + Uni(c)
				
			Next
			
			Me.pHash = lngHash
			
		End If
		
		lngHashCode = lngHash
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		HashCode = FUNCTIONFAILURE
		Exit Function
	End Function
	
	'@param
	' obj : (CObjectable) CStringable
	' bolResult (@return): result
	Function Equals(obj As CObjectable, bolResult As Boolean) As Integer
		On Error GoTo ErrorHandle
		
		Dim result As Integer
		Dim lngHash As Long
		Dim lngObjHash As Long
		
		result = Me.HachCode(lngHash)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		result = obj.HachCode(lngObjHash)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		bolResult = (lngHash = lngObjHash)
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Equals = FUNCTIONFAILURE
		Exit Function
	End Function
	
	Property Get StringLength As Integer
		StringLength = Len(Me.StringData)
	End Property
	
	Property Get StringData As String
		StringData = Me.Members("StringData")
	End Property
	Property Set StringData As String
		Me.Members("StringData") = StringData
	End Property
	
	'--private
	Private Sub pInit_CString()
		Me.StringData = ""
		
		Me.pHash = 0
	End Sub
	
	Private Property Get pHash As Long
		pHash = Me.Members("pHash")
	End Property
	Private Property Set pHash As Long
		Me.Members("pHash") = pHash
	End Property
	
End Class
Class CIterator As CObjectable
	
	'@return (Boolean)
	Property Get HasNext As Boolean
		HasNext = False
	End Property
	
	'@param elem (@return): (Variant) an element
	Function GetNext(elem As Variant) As Integer
	End Function
	
End Class
Class CIteratorable As CIterator
	
	'@param elems : (Variant Array | CCollectionable)
	Function Build(elems As Variant) As Integer
		On Error GoTo errorHandle
		
		If elems IsA "CCollectionable" Then
			Dim col As CCollectionable
			Set col = elems
			Set Me.pCollection = col
			Me.pUbound = (col.Length - 1)
			Me.pIdx = -1
		ElseIf IsArray(elems) Then
			Me.pElements = elems
			Me.pUbound = UBound(elems)
			Me.pIdx = LBound(elems) - 1
		Else
			Dim ary As Variant
			ReDim ary(0)
			
			If IsObject(elems) Then
				Set ary(0) = elems
			Else
				ary(0) = elems
			End If
			
			Me.pElements = ary
			Me.pUbound = UBound(ary)
			Me.pIdx = LBound(ary) - 1
		End If
		
		Exit Function
ErrorHandle:
		Call SetErrorObject(Err, Error)
		Build = FUNCTIONFAILURE
		Exit Function
	End Function
	
	'@return (Boolean)
	Property Get HasNext As Boolean
		HasNext = (Me.pIdx &lt; Me.pUbound)
	End Property
	
	'@param elem (@return): (Variant) an element
	Function GetNext(elem As Variant) As Integer
		On Error GoTo ErrorHandle
		
		Dim result As Integer
		Dim col As CCollectionable
		Dim elems As Variant
		Dim idx As Long
		
		Set col = Me.pCollection
		
		idx = Me.pIdx
		idx = idx + 1
		Me.pIdx = idx
		
		If col Is Nothing Then
			elems = Me.pElements
			
			If IsObject(elems(idx)) Then
				Set elem = elems(idx)
			Else
				elem = elems(idx)
			End If
		Else
			result = col.GetNth(idx, elem)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
		End If
		
		Exit Function
ErrorHandle:
		Call SetErrorObject(Err, Error)
		GetNext = FUNCTIONFAILURE
		Exit Function
	End Function
	
	'--private
	Private Sub pInit_CIteratoralbe()
		Dim empty As Variant
		Set Me.pCollection = Nothing
		Me.pElements = empty
		Me.pUbound = 0
		Me.pIdx = -1
	End Sub
	
	Private Property Get pCollection As CCollectionable
		Set pCollection = Me.Members("pCollection")
	End Property
	Private Property Set pCollection As CCollectionable
		Set Me.Members("pCollection") = pCollection
	End Property
	
	Private Property Get pElements As Variant
		pElements = Me.Members("pElements")
	End Property
	Private Property Set pElements As Variant
		Me.Members("pElements") = pElements
	End Property
	
	Private Property Get pIdx As Integer
		pIdx = Me.Members("pIdx")
	End Property
	Private Property Set pIdx As Integer
		Me.Members("pIdx") = pIdx
	End Property
	
	Private Property Get pUbound As Integer
		pUbound = Me.Members("pUbound")
	End Property
	Private Property Set pUbound As Integer
		Me.Members("pUbound") = pUbound
	End Property
	
End Class
Class CComparator As CObjectable
	
	'@param r (@return) : (Integer)
	'(a &gt; b) = -1 (r &gt; 0)
	'(a &lt; b) =  1 (r &lt; 0)
	'(a = b) =  0 (r = 0)
	Function Comp(a As Variant, b As Variant, r As Integer) As Integer
		r = 0
		Comp = FUNCTIONSUCCESS
	End Function
	
End Class
Class CSortable As CObjectable
	
	'@param elems : (CCollectionable | Variant Array) Sort collection | array
	'@param comp : (CComparator) Comparator object
	Function Sort(elems As Variant, comp As CComparator) As Integer
		On Error GoTo ErrorHandle
		
		Dim result As Integer
		Dim intLen As Integer
		
		result = Me.pGetLength(elems, intLen)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		result = Me.pQuickSort(elems, comp, 0, intLen-1, True)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Sort = FUNCTIONFAILURE
		Exit Function
	End Function
	
	'--private
	'@param elems : (Variant)
	'@param intLen (@return) : (Integer) (0 &lt;= n)
	Private Function pGetLength(elems As Variant, intLen As Integer) As Integer
		On Error GoTo ErrorHandle
		
		Dim col As CCollectionable
		Dim result As Integer
		
		If elems IsA "CCollectionable" Then
			Set col = elems
			intLen = col.Length
		ElseIf IsArray(elems) Then
			intLen = UBound(elems) + 1
		Else
			intLen = 1
		End If
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		pGetLength = FUNCTIONFAILURE
		Exit Function
	End Function
	
	'@param elems : (Variant)
	'@param idx : (Integer)
	'@param elem (@return) : (Variant)
	Private Function pGetNth(elems As Variant, idx As Long, elem As Variant) As Integer
		On Error GoTo ErrorHandle
		
		Dim col As CCollectionable
		Dim result As Integer
		
		If elems IsA "CCollectionable" Then
			Set col = elems
			result = col.GetNth(idx, elem)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
		ElseIf IsObject(elems(idx)) Then
			Set elem = elems(idx)
		Else
			elem = elems(idx)
		End If
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		pGetNth = FUNCTIONFAILURE
		Exit Function
	End Function
	
	'@param elems : (CCollectionable | Variant Array) Sort elements
	'@param comp : (CComparator) Comparator object
	'@param fstIdx : (Integer) first index of elements(After the recursive call, the first Index of the pseudo-divided array)
	'@param lastIndex : (Integer) last index of elements(After the recursive call, the last Index of the pseudo-divided array)
	'@param flag : True or False
	'		True : Sort in ascending order
	'		False : Sort in descending order
	Private Function pQuickSort(elems As Variant, comp As CComparator,_
		firstIdx As Long, lastIdx As Long, flag As Boolean) As Integer
		On Error GoTo ErrorHandle
		
		Dim result As Integer
		Dim compResult As Integer
		Dim lngLen As Long 'elements length
		Dim centIdx As Long 'Central index of the elements
		Dim centVal As Variant 'Value located in the center of the elements
		Dim compVal As Variant 'Comparison value
		Dim lCnt As Long 'Loop counter variable for left search
		Dim rCnt As Long 'Loop counter variable for rignt search
		Dim lIdx As Long 'Variable that holds Index result of left search
		Dim rIdx As Long 'Variable that holds Index result of right search
		
		lngLen = lastIdx - firstIdx + 1 'Number of elements of collection(1 &lt;= n)
		
		'1. Continue if is greater than 1 length
		If 1 &lt; lngLen Then
			
			centIdx = firstIdx + (lngLen / 2) 'Index of elements in the array center
			
			'2. Holding the value located at the center of the array as the median
			result = Me.pGetNth(elems, centIdx, centVal)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
			Do While True 'Loop to explore the array
				
				'3. From the left side of the array,
				' a. Sort in ascending order : Explore the median value greater than or equal to (left search)
				' b. Sort in descending order : Explore the center value or less of the value (left search)
				For lCnt = firstIdx + lCnt To lastIdx
					result = Me.pGetNth(elems, lCnt, compVal)
					If result = FUNCTIONFAILURE Then
						Error USERERR, Error
					End If
					
					result = comp.comp(centVal, compVal, compResult)
					If result = FUNCTIONFAILURE Then
						Error USERERR, Error
					End If
					
					If flag = True Then
						'a : centVal &lt; compVal
						If 0 &lt; compResult Then
							lIdx = lCnt 'Hold the Index of array
							Exit For 'Once you find it you do not have to search any further.
						End If
					Else
						'b : centVal &gt; compVal
						If compResult &gt; 0 Then
							lIdx = lCnt 'Hold the Index of array
							Exit For 'Once you find it you do not have to search any further.
						End If
					End If
					
					
				Next
				
				'4. From the right side of the array,
				' a. Sort in ascending order : Explore the center value or less of the value (right search)
				' b. Sort in descending order : Explore the median value greater than or equal to (right search)
				For rCnt = lastIdx - rCnt To firstIdx Step -1
					result = Me.pGetNth(elems, rCnt, compVal)
					If result = FUNCTIONFAILURE Then
						Error USERERR, Error
					End If
					
					result = comp.comp(centVal, compVal, compResult)
					If result = FUNCTIONFAILURE Then
						Error USERERR, Error
					End If
					
					If flag = True Then
						'a : centVal &gt; compVal
						If compResult &lt; 0 Then
							rIdx = rCnt 'Hold the Index of array
							Exit For 'Once you find it you do not have to search any further.
						End If
					Else
						'b : centVal &lt; compVal
						If 0 &lt; compResult Then
							rIdx = rCnt 'Hold the Index of array
							Exit For 'Once you find it you do not have to search any further.
						End If
					End If
				Next
				
				'5. If the right search result Index is larger than the left search result Index, the result value of the left search and the array value of the right search result Index are exchanged
				'（In other words, if the value «more than the median value» is «left side» from «median value or less», «change the value»）
				'(Or, «below the median value» is, if the «right» than «the median value greater than or equal to», «replace the value»)
				If lIdx &lt; rIdx Then
					'--Replacing arrays----------------
					result = Me.pSwapAt(elems, lIdx, rIdx)
					If result = FUNCTIONFAILURE Then
						Error USERERR, Error
					End If
					'--------------------------------
					lCnt = lCnt + 1 - firstIdx 'The next left search starts with the index next to the Index where the value was found.
					rCnt = lastIdx - rCnt + 1 'The next right search begins with the Index one before the Index where the value was found.
				Else
					Exit Do 'When the replacement of the array has not occurred, the search is terminated
				End If
				
			Loop
			
			'6. Divide the array by the median index found in the last left search.
			result = Me.pQuickSort(elems, comp, firstIdx, lIdx-1, flag)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
			result = Me.pQuickSort(elems, comp, lIdx, lastIdx, flag)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
		End If
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		pQuickSort = FUNCTIONFAILURE
		Exit Function
	End Function
	
	'Swap element A and element B
	'@param col : (CCollectionable)
	'@param aIdx : (Integer) index of element A
	'@param bIdx : (Integer) index of element B
	Private Function pSwapAt(elems As Variant, aIdx As Long, bIdx As Long) As Integer
		On Error GoTo ErrorHandle
		
		Dim result As Integer
		Dim a As Variant
		Dim b As Variant
		
		'get a
		result = Me.pGetNth(elems, aIdx, a)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		'get b
		result = Me.pGetNth(elems, bIdx, b)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		'set b
		result = Me.pGetNth(elems, aIdx, b)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		'set a
		result = Me.pGetNth(elems, bIdx, a)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		pSwapAt = FUNCTIONFAILURE
		Exit Function
	End Function
	
End Class
Class CComparatable As CComparator
	
	'@param r (@return) : (Integer)
	'(a &gt; b) = -1 (r &gt; 0)
	'(a &lt; b) =  1 (r &lt; 0)
	'(a = b) =  0 (r = 0)
	Function Comp(a As Variant, b As Variant, r As Integer) As Integer
		On Error GoTo ErrorHandle
		
		Dim result As Integer
		
		If a IsA "CObjectable" Then
			Dim oA As CObjectable
			Dim oB As CObjectable
			Dim oAH As Long
			Dim oBH As Long
			
			Set oA = a
			Set oB = b
			
			
			result = oA.HachCode(oAH)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
			result = oB.HachCode(oBH)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
			If oAH &lt; OBH Then
				r = 1
			ElseIf oAH &gt; OBH Then
				r = -1
			Else
				r = 0
			End If
		Else
			If a &lt; b Then
				r = 1
			ElseIf a &gt; b Then
				r = -1
			Else
				r = 0
			End If
		End If
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Comp = FUNCTIONFAILURE
		Exit Function
	End Function
	
End Class
</lotusscript></code><code event='initialize'><lotusscript>Sub Initialize
	Call SetProcess("*SL - ObjectLib")
End Sub
















</lotusscript></code>
<item name='$POID'><datetime>20180725T111527,37+09</datetime></item></scriptlibrary>

<agentdata>
<noteinfo noteid='447a' unid='7EB23B93FAEB7366492583130017BD96' sequence='1'>
<created><datetime>20180925T131918,62+09</datetime></created>
<modified><datetime>20180925T131918,63+09</datetime></modified>
<revised><datetime>20180925T131918,62+09</datetime></revised>
<lastaccessed><datetime>20180925T131918,63+09</datetime></lastaccessed>
<addedtofile><datetime>20180925T131918,63+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby></agentdata>

<agent name='(ツール)\(データベースの削除)' alias='RemoveDatabase' hide='v3' publicaccess='false'
 designerversion='8.5.3'>
<noteinfo noteid='448a' unid='674BDA9B6EF6FCCA49258313001B90DC' sequence='25'>
<created><datetime>20180925T140105,56+09</datetime></created>
<modified><datetime>20181031T100052,44+09</datetime></modified>
<revised><datetime>20181031T100052,43+09</datetime></revised>
<lastaccessed><datetime>20181031T100052,44+09</datetime></lastaccessed>
<addedtofile><datetime>20180925T140105,65+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby>
<wassignedby><name>CN=Administrator/O=Comture</name></wassignedby>
<designchange><datetime>20181031T100052,43+09</datetime></designchange>
<trigger type='agentlist'/>
<documentset type='selected'><search type='byformnames'><formchoice name='(01.データベース情報)|DbInfoDoc'/></search></documentset><code
 event='options'><lotusscript>Option Public
Option Declare
Use "DBToolLib"
Use "NotesUICommonLib"

</lotusscript></code><code event='initialize'><lotusscript>Sub Initialize
	Call SetProcess("*AG - CopyDatabase")
	Call Main()
End Sub

</lotusscript></code><code event='Main'><lotusscript>Sub Main()
	On Error Goto ErrorHandle
	
	Dim workSpace As New NotesUIWorkspace
	Dim curUiView As NotesUIView
	Dim curDB As NotesDatabase
	Dim unpro As NotesDocumentCollection
	Dim doc As NotesDocument
	
	Set curUIView = workSpace.CurrentView
	
	If curUIView Is Nothing Then
		Set curDB = workSpace.CurrentDatabase.Database
		Set unpro = curDB.UnprocessedDocuments
	Else
		Set curDB = curUIView.View.Parent
		'Set unpro = curUIView.Documents
		Set unpro = curDB.UnprocessedDocuments
	End If
	
	If unpro.Count = 0 Then
		Exit Sub
	End If
	
	If 7 = Messagebox_YesNo("選択したデータベース ( " &amp; unpro.Count &amp; " 文書 ) を物理削除します。よろしいですか？" &amp;_
	Chr(10) &amp; "※この操作は元には戻せません。", "") Then
		Exit Sub
	End If
	
	Set doc = unpro.GetFirstDocument()
	
	Dim dbInfo As CDbInfo
	Dim db As NotesDatabase
	Dim doc2 As NotesDocument
	Dim counter As Double
	Dim msg As String
	Dim result As Integer
	
	Do Until doc Is Nothing
		Set doc2 = unpro.GetNextDocument(doc)
		
		result = GetDbInfo(curDB, doc, dbInfo)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		result = dbInfo.GetDatabase(db)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		msg = "" &amp; doc.DbTitle(0) &amp; " [" &amp; doc.DbServer(0) &amp; "!!" &amp; doc.DbFilePath(0) &amp; "] を削除しました"
		
		If Not db Is Nothing Then
			Call db.Remove()
		End If
		
		Call RemoveAllChildren(doc.Responses, counter)
		
		Call doc.Remove(True)
		
		Print msg
NextLoop:
		Set doc = doc2
	Loop
	
ExitTag:
	On Error Resume Next
	If Not curUIView Is Nothing Then Call curUIView.DeselectAll()
	Call workSpace.ViewRefresh()
	
	Exit Sub
ErrorHandle:
	Call SetErrorObject(Err, Error)
	Call Messagebox_Error(GetErrorMessage(), "")
	Goto ExitTag
End Sub

</lotusscript></code><code event='RemoveAllChildren'><lotusscript>Sub RemoveAllChildren(docCol As NotesDocumentCollection, counter As Double)
	
	Dim doc As NotesDocument
	Dim children As NotesDocumentCollection
	Dim child As NotesDocument
	Dim nextChild As NotesDocument
	Dim count As Double
	Dim i As Double
	
	Set doc = docCol.GetFirstDocument()
	Do Until doc Is Nothing
		Set children = doc.Responses
		If Not children Is Nothing Then
			Call RemoveAllChildren(children, counter)
		End If
		Set doc = docCol.GetNextDocument(doc)
	Loop
	
	counter = counter + docCol.Count
	Call docCol.RemoveAll(True)
	Print counter &amp; " 文書 削除しました。"
	
End Sub</lotusscript></code>
<rundata processeddocs='0' exitcode='0' agentdata='038BEB78602675F44925831900179401'>
<agentmodified><datetime>20181031T100052,44+09</datetime></agentmodified>
<agentrun><datetime>20190301T131000,44+09</datetime></agentrun>
<runlog>エージェント (ツール)\(データベースの削除)|RemoveDatabase の 2019/03/01 13:09:56 での実行が開始しました。
選択文書で実行します。 合計 11
11 文書が検索条件に一致しました。
LotusScript を実行しました
エージェント (ツール)\(データベースの削除)|RemoveDatabase の実行が終了しました。(2019/03/01 13:10:00)
</runlog></rundata>
<item name='$POID'><datetime>20140930T200605,02+09</datetime></item></agent>

<agentdata>
<noteinfo noteid='449e' unid='A984EA904D38140B49258313001E1F5F' sequence='1'>
<created><datetime>20180925T142901,11+09</datetime></created>
<modified><datetime>20180925T142901,12+09</datetime></modified>
<revised><datetime>20180925T142901,11+09</datetime></revised>
<lastaccessed><datetime>20180925T142901,12+09</datetime></lastaccessed>
<addedtofile><datetime>20180925T142901,12+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='44aa' unid='44F21EC438990DDF49258313001E361A' sequence='1'>
<created><datetime>20180925T142959,30+09</datetime></created>
<modified><datetime>20180925T142959,31+09</datetime></modified>
<revised><datetime>20180925T142959,30+09</datetime></revised>
<lastaccessed><datetime>20180925T142959,31+09</datetime></lastaccessed>
<addedtofile><datetime>20180925T142959,31+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='44c6' unid='687354D61F931BA749258313001EEFD6' sequence='1'>
<created><datetime>20180925T143754,78+09</datetime></created>
<modified><datetime>20180925T143754,79+09</datetime></modified>
<revised><datetime>20180925T143754,78+09</datetime></revised>
<lastaccessed><datetime>20180925T143754,79+09</datetime></lastaccessed>
<addedtofile><datetime>20180925T143754,79+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='44ce' unid='8FF181255454EDCE49258313001F3EF5' sequence='1'>
<created><datetime>20180925T144117,33+09</datetime></created>
<modified><datetime>20180925T144117,34+09</datetime></modified>
<revised><datetime>20180925T144117,33+09</datetime></revised>
<lastaccessed><datetime>20180925T144117,34+09</datetime></lastaccessed>
<addedtofile><datetime>20180925T144117,34+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby></agentdata>

<agent name='(値代入用)\(ビュー追加)' alias='AddViewInfo' hide='v3' publicaccess='false'
 designerversion='8.5.3' restrictions='unrestricted'>
<noteinfo noteid='44de' unid='19AF92BAE84B47C549258313001FDAA3' sequence='47'>
<created><datetime>20180925T144755,87+09</datetime></created>
<modified><datetime>20181031T100052,88+09</datetime></modified>
<revised><datetime>20181031T100052,87+09</datetime></revised>
<lastaccessed><datetime>20181031T100052,88+09</datetime></lastaccessed>
<addedtofile><datetime>20180925T144755,92+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby>
<wassignedby><name>CN=Administrator/O=Comture</name></wassignedby>
<designchange><datetime>20181031T100052,86+09</datetime></designchange>
<trigger type='agentlist'/>
<documentset type='selected'><search type='byformnames'><formchoice name='(01.データベース情報)|DbInfoDoc'/><formchoice
 name='(04.ビュー設定)|ViewInfoDoc'/></search></documentset><code event='options'><lotusscript
>Option Public
Option Declare
Use "DbToolLib"
Use "SortLib"
Use "NotesUICommonLib"


</lotusscript></code><code event='initialize'><lotusscript>Sub Initialize
	Call SetProcess("*AG - AddView")
	Call Main()
End Sub

</lotusscript></code><code event='Main'><lotusscript>Sub Main()
	On Error GoTo ErrorHandle
	
	Dim workSpace As New NotesUIWorkspace
	Dim curUiView As NotesUIView
	Dim curDB As NotesDatabase
	Dim unpro As NotesDocumentCollection
	Dim doc As NotesDocument
	
	Set curUIView = workSpace.CurrentView
	
	If curUIView Is Nothing Then
		Set curDB = workSpace.CurrentDatabase.Database
		Set unpro = curDB.UnprocessedDocuments
	Else
		Set curDB = curUIView.View.Parent
		Set unpro = curDB.UnprocessedDocuments
	End If
	
	If unpro.Count = 0 Then
		Exit Sub
	ElseIf unpro.Count &gt; 1 Then
		Exit Sub
	End If
	
	Set doc = unpro.Getfirstdocument()
	
	Dim dbInfoDoc As NotesDocument
	Dim vwInfoDoc As NotesDocument
	
	If StrCompare(doc.Form(0), FN_VwInfoDoc, 1) = 0 Then
		Set dbInfoDoc = curDB.Getdocumentbyunid(doc.Parentdocumentunid)
		Set vwInfoDoc = doc
	Else
		Set dbInfoDoc = doc
		Set vwInfoDoc = Nothing
	End If
	
	Dim dbInfo As CDbInfo
	Dim db As NotesDatabase
	Dim result As Integer
	
	result = GetDbInfo(curDB, dbInfoDoc, dbInfo)
	If result = FUNCTIONFAILURE Then
		Error USERERR, Error
	End If
	
	result = dbInfo.GetDatabase(db)
	If result = FUNCTIONFAILURE Then
		Error USERERR, Error
	End If
	
	' ダイアログ
	Dim allView As Variant
	Dim view As NotesView
	Dim viewNames() As String
	Dim index As Long
	Dim max As Long
	
	allView = db.Views
	index = 0
	max = UBound(allView)
	ReDim Preserve viewNames(0 To index)
	
	ForAll v In allView
		
		Set view = v
		ReDim Preserve viewNames(0 To index)
		viewNames(index) = view.Name
		index = index + 1
		
	End ForAll
	
	Call Sort(viewNames, True)
	
	Dim retVal As Variant
	Dim defVal As String
	
	If Not vwInfoDoc Is Nothing Then
		defVal = vwInfoDoc.GetItemValue("ViewName")(0)
	End If
	
	retVal = workSpace.Prompt(PROMPT_OKCANCELLIST,"","",defVal, viewNames)
	
	If IsEmpty(retVal) Then
		Exit Sub
	End If
	
	index = ArrayGetIndex(viewNames, retVal)
	
	Set view = db.GetView(viewNames(CLng(index)))
	
	'---------------
	'ビュー情報の作成
	'---------------
	Dim vwInfo As CVWInfo
	
	result = GetVwInfo(curDB, view, vwInfo)
	If result = FUNCTIONFAILURE Then
		Error USERERR, Error
	End If
	
	If vwInfo.VWInfoDoc.Isnewnote = True Then
		Call vwInfo.Save()
	End If
	
ExitTag:
	On Error Resume Next
	If Not curUIView Is Nothing Then Call curUIView.DeselectAll()
	Call workSpace.ViewRefresh()
	
	Exit Sub
ErrorHandle:
	Call SetErrorObject(Err, Error)
	Call Messagebox_Error(GetErrorMessage(), "")
	GoTo ExitTag
End Sub</lotusscript></code>
<rundata processeddocs='0' exitcode='0' agentdata='7FB2BA71AD659E244925831300268B7D'>
<agentmodified><datetime>20181031T100052,88+09</datetime></agentmodified>
<agentrun><datetime>20190227T182612,35+09</datetime></agentrun>
<runlog>エージェント (値代入用)\(ビュー追加)|AddViewInfo の 2019/02/27 18:26:06 での実行が開始しました。
選択文書で実行します。 合計 1
1 文書が検索条件に一致しました。
LotusScript を実行しました
エージェント (値代入用)\(ビュー追加)|AddViewInfo の実行が終了しました。(2019/02/27 18:26:12)
</runlog></rundata></agent>

<agentdata>
<noteinfo noteid='4536' unid='7FB2BA71AD659E244925831300268B7D' sequence='1'>
<created><datetime>20180925T160100,77+09</datetime></created>
<modified><datetime>20180925T160100,78+09</datetime></modified>
<revised><datetime>20180925T160100,77+09</datetime></revised>
<lastaccessed><datetime>20180925T160100,78+09</datetime></lastaccessed>
<addedtofile><datetime>20180925T160100,78+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby></agentdata>

<note class='form'>
<noteinfo noteid='453a' unid='FEFD83D351832B3349258313002AD862' sequence='48'>
<created><datetime>20180925T164759,06+09</datetime></created>
<modified><datetime>20190604T151457,24+09</datetime></modified>
<revised><datetime>20190604T151457,23+09</datetime></revised>
<lastaccessed><datetime>20190604T151457,24+09</datetime></lastaccessed>
<addedtofile><datetime>20180925T164759,07+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby>
<wassignedby><name>CN=Administrator/O=Comture</name></wassignedby>
<item name='$Flags'><text>~C4g</text></item>
<item name='$FlagsExt'><text>w</text></item>
<item name='$TITLE'><text>WEB-INF/classes/plugin/Activator.class</text></item>
<item name='$DesignerVersion'><text>8.5.3</text></item>
<item name='$FileSize' sign='true'><number>1071</number></item>
<item name='$FileData' sign='true'>
<rawitemdata type='1'>
YQAYAAAAAAAvBAAAAQAAAAAAAAAAAAAAYABBBAAALwQwBAAAAAAAAAAAyv66vgAAADEAKwcAAgEA
EHBsdWdpbi9BY3RpdmF0b3IHAAQBACZvcmcvZWNsaXBzZS91aS9wbHVnaW4vQWJzdHJhY3RVSVBs
dWdpbgEABnBsdWdpbgEAEkxwbHVnaW4vQWN0aXZhdG9yOwEABjxpbml0PgEAAygpVgEABENvZGUK
AAMACwwABwAICQABAA0MAAUABgEAD0xpbmVOdW1iZXJUYWJsZQEAEkxvY2FsVmFyaWFibGVUYWJs
ZQEABHRoaXMBAAVzdGFydAEAJShMb3JnL29zZ2kvZnJhbWV3b3JrL0J1bmRsZUNvbnRleHQ7KVYB
AApFeGNlcHRpb25zBwAVAQATamF2YS9sYW5nL0V4Y2VwdGlvbgoAAwAXDAARABIBAAdjb250ZXh0
AQAiTG9yZy9vc2dpL2ZyYW1ld29yay9CdW5kbGVDb250ZXh0OwEABHN0b3AKAAMAHAwAGgASAQAK
Z2V0RGVmYXVsdAEAFCgpTHBsdWdpbi9BY3RpdmF0b3I7AQASZ2V0SW1hZ2VEZXNjcmlwdG9yAQBA
KExqYXZhL2xhbmcvU3RyaW5nOylMb3JnL2VjbGlwc2UvamZhY2UvcmVzb3VyY2UvSW1hZ2VEZXNj
cmlwdG9yOwgAIgEACmRidG9vbC5uc2YKAAMAJAwAJQAmAQAZaW1hZ2VEZXNjcmlwdG9yRnJvbVBs
dWdpbgEAUihMamF2YS9sYW5nL1N0cmluZztMamF2YS9sYW5nL1N0cmluZzspTG9yZy9lY2xpcHNl
L2pmYWNlL3Jlc291cmNlL0ltYWdlRGVzY3JpcHRvcjsBAARwYXRoAQASTGphdmEvbGFuZy9TdHJp
bmc7AQAKU291cmNlRmlsZQEADkFjdGl2YXRvci5qYXZhACEAAQADAAAAAQAKAAUABgAAAAUAAQAH
AAgAAQAJAAAAOwABAAEAAAAJKrcACiqzAAyxAAAAAgAOAAAADgADAAAAGAAEABkACAAaAA8AAAAM
AAEAAAAJABAABgAAAAEAEQASAAIAEwAAAAQAAQAUAAkAAAA+AAIAAgAAAAYqK7cAFrEAAAACAA4A
AAAKAAIAAAAgAAUAIQAPAAAAFgACAAAABgAQAAYAAAAAAAYAGAAZAAEAAQAaABIAAgATAAAABAAB
ABQACQAAAEYAAgACAAAACiortwAbAbMADLEAAAACAA4AAAAOAAMAAAAnAAUAKAAJACkADwAAABYA
AgAAAAoAEAAGAAAAAAAKABgAGQABAAkAHQAeAAEACQAAACQAAQAAAAAABLIADLAAAAACAA4AAAAG
AAEAAAAvAA8AAAACAAAACQAfACAAAQAJAAAAMQACAAEAAAAHEiEquAAjsAAAAAIADgAAAAYAAQAA
ADoADwAAAAwAAQAAAAcAJwAoAAAAAQApAAAAAgAqCQ==
</rawitemdata></item>
<item name='$FileNames' sign='true'><text>WEB-INF/classes/plugin/Activator.class</text></item></note>

<note class='form'>
<noteinfo noteid='457e' unid='168186C659CD300B49258314001CE0CA' sequence='5'>
<created><datetime>20180926T141525,54+09</datetime></created>
<modified><datetime>20181001T111900,79+09</datetime></modified>
<revised><datetime>20181001T111900,78+09</datetime></revised>
<lastaccessed><datetime>20181001T111900,79+09</datetime></lastaccessed>
<addedtofile><datetime>20180926T141525,55+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby>
<wassignedby><name>CN=Administrator/O=Comture</name></wassignedby>
<item name='$Flags'><text>34567Cg~[</text></item>
<item name='$TITLE'><text>test/Test.java</text></item>
<item name='$DesignerVersion'><text>8.5.3</text></item>
<item name='$FileSize' sign='true'><number>43</number></item>
<item name='$FileData' sign='true'>
<rawitemdata type='1'>
YQAYAAAAAAArAAAAAQAAAAAAAAAAAAAAYAA9AAAAKwAsAAAAAAAAAAAAcGFja2FnZSB0ZXN0Ow0K
DQpwdWJsaWMgY2xhc3MgVGVzdCB7DQoNCn0NCnQ=
</rawitemdata></item>
<item name='$FileNames' sign='true'><text>test/Test.java</text></item>
<item name='$ClassIndexItem'><text>WEB-INF/classes/test/Test.class</text></item>
<item name='$ClassSize0' sign='true'><number>247</number></item>
<item name='$ClassData0' sign='true'>
<rawitemdata type='1'>
YQAYAAAAAAD3AAAAAQAAAAAAAAAAAAAAYAAJAQAA9wD4AAAAAAAAAAAAyv66vgAAADEAEAcAAgEA
CXRlc3QvVGVzdAcABAEAEGphdmEvbGFuZy9PYmplY3QBAAY8aW5pdD4BAAMoKVYBAARDb2RlCgAD
AAkMAAUABgEAD0xpbmVOdW1iZXJUYWJsZQEAEkxvY2FsVmFyaWFibGVUYWJsZQEABHRoaXMBAAtM
dGVzdC9UZXN0OwEAClNvdXJjZUZpbGUBAAlUZXN0LmphdmEAIQABAAMAAAAAAAEAAQAFAAYAAQAH
AAAALwABAAEAAAAFKrcACLEAAAACAAoAAAAGAAEAAAADAAsAAAAMAAEAAAAFAAwADQAAAAEADgAA
AAIADyQ=
</rawitemdata></item></note>

<agentdata>
<noteinfo noteid='4596' unid='038BEB78602675F44925831900179401' sequence='1'>
<created><datetime>20181001T131732,17+09</datetime></created>
<modified><datetime>20181001T131732,18+09</datetime></modified>
<revised><datetime>20181001T131732,17+09</datetime></revised>
<lastaccessed><datetime>20181001T131732,18+09</datetime></lastaccessed>
<addedtofile><datetime>20181001T131732,18+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator NRK/O=nrkadmin</name></updatedby></agentdata>

<subform name='(エージェントのプロパティ)' alias='SubAgProperty' publicaccess='true' designerversion='8.5.3'
 renderpassthrough='true' nofieldindex='true'>
<noteinfo noteid='459a' unid='1956D7C1DCFF87ED4925831900180195' sequence='308'>
<created><datetime>20181001T132212,69+09</datetime></created>
<modified><datetime>20181031T100053,60+09</datetime></modified>
<revised><datetime>20181031T100053,59+09</datetime></revised>
<lastaccessed><datetime>20181031T100053,60+09</datetime></lastaccessed>
<addedtofile><datetime>20181001T132212,85+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby>
<wassignedby><name>CN=Administrator/O=Comture</name></wassignedby>
<globals><code event='options'><lotusscript>Option Public
Option Declare
Use "NotesUICommonLib"
</lotusscript></code><code event='declarations'><lotusscript>Dim g_listFieldMemory List As FieldMemory 'タグ名がフィールド名

Class FieldMemory
	
	Private curUIDoc As NotesUIDocument
	Private fieldName As String
	Private curValue As String
	
	Sub New(curUIDoc As NotesUIDocument, fieldName)
		Set Me.curUIDoc = curUIDoc
		Me.fieldName = fieldName
		curValue = ""
		If Not Me.curUIDoc.Document Is Nothing Then
			curValue = Me.curUIDoc.Document.GetItemValue(Me.fieldName)(0)
		End If
	End Sub
	
	Property Get ControlFieldName As String
		ControlFieldName = Me.fieldName
	End Property
	
	Function ChangeOfValue() As Integer
		On Error Goto errorhandle
		Dim tmpVal As String
		Dim result As Integer
		result = False
		ChangeOfValue = result
		If Me.curUIDoc.CurrentField = Me.fieldName Then
			tmpVal = Me.curUIDoc.Document.GetItemValue(Me.fieldName)(0)
			If tmpVal &lt;&gt; curValue Then
				curValue = tmpVal
				result = True
			End If
		End If
		ChangeOfValue = result
		Exit Function
errorhandle:
		Call SetErrorObject(Err, Error)
		Error Err, Error
		Exit Function
	End Function
	
	Sub EnteringField()
		On Error Goto errorhandle
		Dim curField As NotesItem
		Set curField = curUIDoc.Document.GetFirstItem(Me.fieldName)
		curValue = curField.Values(0)
		Exit Sub
errorhandle:
		Call SetErrorObject(Err, Error)
		Error Err, Error
		Exit Sub
	End Sub
	
	Sub ExitingField()
		On Error Goto errorhandle
		curValue = ""
		Exit Sub
errorhandle:
		Call SetErrorObject(Err, Error)
		Error Err, Error
		Exit Sub
	End Sub
	
End Class

</lotusscript></code><code event='InitFieldMemory'><lotusscript>Function InitFieldMemory(uiDoc As NotesUIDocument) As Integer
	
	Dim ary As Variant
	
	ary = Split("type,timeslot,isstartdate,isenddate,runlocation",",")
	
	'監視するフィールドの設定
	Forall fn In ary
		Set g_listFieldMemory(fn) = New FieldMemory(uiDoc, fn)
	End Forall
	
End Function
</lotusscript></code><code event='DoFieldMemory'><lotusscript>Function DoFieldMemory(uiDoc As NotesUIDocument, curField As String) As Integer
	On Error Goto ErrorHandle
	
	Dim curDoc As NotesDocument
	Dim curValue As String
	
	Dim objFM As FieldMemory
	Dim checkResult As Integer
	
	Dim result As Integer
	
	Set curDoc = uiDoc.Document
	
	If curField = "" Then
		Forall fn In g_listFieldMemory
			
			result = ToggleDisable(curDoc, Listtag(fn))
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
		End Forall
	Else
		If Iselement(g_listFieldMemory(curField)) Then
			Set objFM = g_listFieldMemory(curField)
			
			If objFM.ChangeOfValue() = True Then
				result = ChangeField(curDoc, curField, checkResult)
				If result = FUNCTIONFAILURE Then
					Error USERERR, Error
				End If
				
				If checkResult &lt;&gt; 0 Then
					Exit Function
				End If
				
				result = ToggleDisable(curDoc, curField)
				If result = FUNCTIONFAILURE Then
					Error USERERR, Error
				End If
			End If
			
		End If
	End If
	
	Exit Function
ErrorHandle:
	Call SetErrorObject(Err, Error)
	DoFieldMemory = FUNCTIONFAILURE
	Exit Function
End Function
</lotusscript></code><code event='AddDisable'><lotusscript>Function AddDisable(curDoc As NotesDocument, field As String) As Integer
	On Error Goto ErrorHandle
	
	Dim item As NotesItem
	
	Set item = curDoc.GetFirstItem("dsp_disable_fields")
	If item.Contains(field) = False Then Call item.AppendToTextList( field )
	
	Exit Function
ErrorHandle:
	Call SetErrorObject(Err, Error)
	AddDisable = FUNCTIONFAILURE
	Exit Function
End Function
</lotusscript></code><code event='DelDisable'><lotusscript>Function DelDisable(curDoc As NotesDocument, field As String) As Integer
	On Error Goto ErrorHandle
	
	Dim item As NotesItem
	Dim ary As Variant
	
	ary = curDoc.GetItemValue("dsp_disable_fields")
	ary = Replace(ary, field, "")
	ary = Fulltrim(ary)
	
	Set item = curDoc.ReplaceItemValue("dsp_disable_fields", ary)
	item.SaveToDisk = False
	
	Exit Function
ErrorHandle:
	Call SetErrorObject(Err, Error)
	DelDisable = FUNCTIONFAILURE
	Exit Function
End Function
</lotusscript></code><code event='ToggleDisable'><lotusscript>Function ToggleDisable(curDoc As NotesDocument, curField As String) As Integer
	On Error Goto ErrorHandle
	
	Dim curValue As String
	Dim field As String
	
	Dim result As Integer
	
	'timeslot,isstartdate,isenddate,runlocation
	
	Select Case curField
	Case "type"
		Select Case curDoc.GetItemValue(curField)(0)
		Case "byminutes"
			field = "timeslot"
			
			result = ToggleDisable(curDoc, field)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
		End Select
	Case "timeslot"
		field = "starttime_byminutes"
		
		curValue = curDoc.GetItemValue(curField)(0)
		If curValue = "" Then
			result = AddDisable(curDoc, field)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
		Else
			result = DelDisable(curDoc, field)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
		End If
	Case "isstartdate"
		field = "startdate"
		
		curValue = curDoc.GetItemValue(curField)(0)
		If curValue = "" Then
			result = AddDisable(curDoc, field)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
		Else
			result = DelDisable(curDoc, field)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
		End If
		
	Case "isenddate"
		field = "enddate"
		
		curValue = curDoc.GetItemValue(curField)(0)
		If curValue = "" Then
			result = AddDisable(curDoc, field)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
		Else
			result = DelDisable(curDoc, field)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
		End If
		
	Case "runlocation"
		field = "runserver"
		
		curValue = curDoc.GetItemValue(curField)(0)
		If curValue = "" Then
			result = DelDisable(curDoc, field)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
			result = DelDisable(curDoc, "enabled")
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
		Else
			result = AddDisable(curDoc, field)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
			result = AddDisable(curDoc, "enabled")
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
		End If
	End Select
	
	Exit Function
ErrorHandle:
	Call SetErrorObject(Err, Error)
	ToggleDisable = FUNCTIONFAILURE
	Exit Function
End Function
</lotusscript></code><code event='ChangeField'><lotusscript>Function ChangeField(curDoc As NotesDocument, curField As String, checkResult As Integer) As Integer
	On Error Goto ErrorHandle
	
	Dim field As String
	
	'初期化
	checkResult = 0
	
	'timeslot,isstartdate,isenddate,runlocation
	
	Select Case curField
	Case "type"
		field = "timeslot"
		Call curDoc.RemoveItem("hours")
		Call curDoc.RemoveItem("minutes")
		Call curDoc.RemoveItem(field)
		Call g_listFieldMemory( field ).ChangeOfValue()
		
	Case "timeslot"
	Case "isstartdate"
	Case "isenddate"
	Case "runlocation"
		
		If curDoc.GetItemValue( "enabled" )(0) &lt;&gt; "" Then
			If 7 = Messagebox_YesNo("エージェントは無効化されます。よろしいですか？", "") Then
				Call curDoc.ReplaceItemValue( curField, "")
				Call g_listFieldMemory( curField ).ChangeOfValue()
				checkResult = 1
				Exit Function
			Else
				Call curDoc.ReplaceItemValue( "enabled", "")
			End If
		End If
		
	End Select
	
	Exit Function
ErrorHandle:
	Call SetErrorObject(Err, Error)
	ChangeField = FUNCTIONFAILURE
	Exit Function
End Function</lotusscript></code></globals><code event='options'><lotusscript
>Option Declare

</lotusscript></code><code event='queryrecalc'><lotusscript>Sub Queryrecalc(Source As Notesuidocument, Continue As Variant)
	On Error Goto ErrorHandle
	
	Dim result As Integer
	
	result = DoFieldMemory(Source, Source.CurrentField)
	If result = FUNCTIONFAILURE Then
		Error USERERR, Error
	End If
	
	Exit Sub
ErrorHandle:
	Call SetErrorObject(Err, Error)
	Call Messagebox_Error(GetErrorMessage(), "")
	Call ClearErrorObject()
	Exit Sub
End Sub
</lotusscript></code><code event='postopen'><lotusscript>Sub Postopen(Source As Notesuidocument)
	On Error Goto ErrorHandle
	
	Call InitFieldMemory(Source)
	
	Exit Sub
ErrorHandle:
	Call SetErrorObject(Err, Error)
	Call Messagebox_Error(GetErrorMessage(), "")
	Call ClearErrorObject()
	Exit Sub
End Sub</lotusscript></code>
<body><richtext>
<pardef id='1' hide='notes web mobile'/>
<par def='1'><run><font color='gray'/><field type='text' allowmultivalues='true'
 kind='computedfordisplay' name='dsp_type_list' listinputseparators='newline'
 listdisplayseparator='newline'><code event='defaultvalue'><formula>"一日一回以上|byminutes":
"日次|daily":
"週次|weekly":
"月次|monthly":
"なし|never"</formula></code></field></run><compositedata type='98' prevtype='65418'
 nexttype='222' afterparcount='7' containertype='65418' aftercontainercount='1'
 afterbegincount='3'>
Yg4BAIQAAAAAAAAAAAA=
</compositedata><run><font color='gray'/></run></par>
<par def='1'><run><font color='gray'/></run><run><font color='gray'/><field
 type='text' allowmultivalues='true' kind='computedfordisplay' name='dsp_trigger_list'
 listinputseparators='newline' listdisplayseparator='newline'><code event='defaultvalue'><formula
>"スケジュール|scheduled":
"アクションメニューの選択|actionsmenu":
"エージェントリストの選択|agentlist":
"新規メールの受信前|beforenewmail":
"新規メールの受信後|afternewmail":
"文書の作成または更新後|docupdate":
"文書が貼り付けられたとき|docpaste":
"サーバー開始時|serverstart"</formula></code></field></run><compositedata type='98'
 prevtype='65418' nexttype='222' afterparcount='9' containertype='65418' aftercontainercount='1'
 afterbegincount='3'>
Yg4BAIQAAAAAAAAAAAA=
</compositedata><run><font color='gray'/></run></par>
<par def='1'><run><font color='gray'/></run><run><font color='gray'/><field
 type='text' allowmultivalues='true' kind='computedfordisplay' name='dsp_documentset_list'
 listinputseparators='newline' listdisplayseparator='newline'><code event='defaultvalue'><formula
>"データベースのすべての文書|all":
"作成または変更されたすべての文書|modified":
"ビューのすべての未読文書|unreadinview":
"ビューのすべての文書|allinview":
"すべての選択文書|selected":
"なし|runonce"</formula></code></field></run><compositedata type='98' prevtype='65418'
 nexttype='222' afterparcount='9' containertype='65418' aftercontainercount='1'
 afterbegincount='3'>
Yg4BAIQAAAAAAAAAAAA=
</compositedata><run><font color='gray'/></run></par>
<par def='1'><run><font color='gray'/></run><run><font color='gray'/><field
 type='text' allowmultivalues='true' kind='computedfordisplay' name='dsp_hours_list'
 listinputseparators='newline' listdisplayseparator='newline'><code event='defaultvalue'><formula
>"0":
"1":
"2":
"3":
"4":
"5":
"6":
"7":
"8":
"9":
"10":
"11":
"12":
"13":
"14":
"15":
"16":
"17":
"18":
"19":
"20":
"21":
"22":
"23"</formula></code></field></run><compositedata type='98' prevtype='65418'
 nexttype='222' afterparcount='9' containertype='65418' aftercontainercount='1'
 afterbegincount='3'>
Yg4BAIQAAAAAAAAAAAA=
</compositedata><run><font color='gray'/></run></par>
<par def='1'><run><font color='gray'/></run><run><font color='gray'/><field
 type='text' allowmultivalues='true' kind='computedfordisplay' name='dsp_minutes_list'
 listinputseparators='newline' listdisplayseparator='newline'><code event='defaultvalue'><formula
>"0":
"5":
"10":
"15":
"20":
"25":
"30":
"35":
"40":
"45":
"50":
"55"</formula></code></field></run><compositedata type='98' prevtype='65418'
 nexttype='222' afterparcount='9' containertype='65418' aftercontainercount='1'
 afterbegincount='3'>
Yg4BAIQAAAAAAAAAAAA=
</compositedata><run><font color='gray'/></run></par>
<par def='1'><run><font color='gray'/></run><run><font color='gray'/><field
 type='text' allowmultivalues='true' kind='computedfordisplay' name='dsp_dayofweek_list'
 listinputseparators='newline' listdisplayseparator='newline'><code event='defaultvalue'><formula
>"日曜日|sunday":
"月曜日|monday":
"火曜日|tuesday":
"水曜日|wednesday":
"木曜日|thursday":
"金曜日|friday":
"土曜日|saturday"</formula></code></field></run><compositedata type='98' prevtype='65418'
 nexttype='222' afterparcount='9' containertype='65418' aftercontainercount='1'
 afterbegincount='3'>
Yg4BAIQAAAAAAAAAAAA=
</compositedata><run><font color='gray'/></run></par>
<par def='1'><run><font color='gray'/></run><run><font color='gray'/><field
 type='text' allowmultivalues='true' kind='computedfordisplay' name='dsp_dateinmonth_list'
 listinputseparators='newline' listdisplayseparator='newline'><code event='defaultvalue'><formula
>"0":
"1":
"2":
"3":
"4":
"5":
"6":
"7":
"8":
"9":
"10":
"11":
"12":
"13":
"14":
"15":
"16":
"17":
"18":
"19":
"20":
"21":
"22":
"23":
"24":
"25":
"26":
"27":
"28":
"29":
"30":
"31"</formula></code></field></run><compositedata type='98' prevtype='65418'
 nexttype='222' afterparcount='9' containertype='65418' aftercontainercount='1'
 afterbegincount='3'>
Yg4BAIQAAAAAAAAAAAA=
</compositedata><run><font color='gray'/></run></par>
<par def='1'><run><font color='gray'/></run><run><font color='gray'/><field
 type='text' allowmultivalues='true' kind='computedfordisplay' name='dsp_onweekends_list'
 listinputseparators='newline' listdisplayseparator='newline'><code event='defaultvalue'><formula
>"週末はエージェントを実行しない|false"</formula></code></field></run><compositedata type='98'
 prevtype='65418' nexttype='222' afterparcount='9' containertype='65418' aftercontainercount='1'
 afterbegincount='3'>
Yg4BAIQAAAAAAAAAAAA=
</compositedata><run><font color='gray'/></run></par>
<par def='1'><run><font color='gray'/></run><run><font color='gray'/><field
 type='text' allowmultivalues='true' kind='computedfordisplay' name='dsp_runserver_list'
 listinputseparators='newline' listdisplayseparator='newline'><code event='defaultvalue'><formula
>fn:=@DbLookup("":"Recache";"":"names.nsf";"($Locations)";"*";"$LastFileNames";[FailSilent]);
fn:=@Unique(@Trim(@Left(fn;"!!")));
fn:=@Name([Abbreviate]; fn);
"Local|Local":
"- すべてのサーバー -|*":
(fn+"|"+fn)</formula></code></field></run><compositedata type='98' prevtype='65418'
 nexttype='222' afterparcount='9' containertype='65418' aftercontainercount='1'
 afterbegincount='3'>
Yg4BAIQAAAAAAAAAAAA=
</compositedata><run><font color='gray'/></run></par>
<par def='1'><run><font color='gray'/></run><run><font color='gray'/><field
 type='text' allowmultivalues='true' kind='computedfordisplay' name='dsp_runlocation_list'
 listinputseparators='newline' listdisplayseparator='newline'><code event='defaultvalue'><formula
>"エージェントが有効になったときにサーバーを指定|choose"</formula></code></field></run><compositedata
 type='98' prevtype='65418' nexttype='222' afterparcount='9' containertype='65418'
 aftercontainercount='1' afterbegincount='3'>
Yg4BAIQAAAAAAAAAAAA=
</compositedata><run><font color='gray'/></run></par>
<par def='1'><run><font color='gray'/><field type='text' allowmultivalues='true'
 kind='computedfordisplay' name='dsp_disable_fields' listinputseparators='newline'
 listdisplayseparator='newline'><code event='defaultvalue'><formula>@ThisValue</formula></code></field></run><compositedata
 type='98' prevtype='65418' nexttype='222' afterparcount='6' containertype='65418'
 aftercontainercount='1' afterbegincount='3'>
Yg4BAIQAAAAAAAAAAAA=
</compositedata></par>
<par def='1'><run><font color='gray'/></run></par>
<table widthtype='fixedleft' rowspacing='0.0396in' columnspacing='0.3542in'
 refwidth='4.6451in'><tablecolumn width='3.9368in'/>
<tablerow>
<tablecell borderwidth='0px' bgcolor='system'>
<pardef id='3' keepwithnext='true' keeptogether='true'/>
<par def='3'/>
<par def='3'><border style='solid' width='1px' insidewidth='3px' color='navy'/><run
><font color='navy'/>◆基本</run></par>
<table widthtype='fitmargins' leftmargin='0' rowspacing='0.0396in' columnspacing='0.0396in'
 refwidth='3.9368in'><tablecolumn width='0.8021in' sizetofit='true'/><tablecolumn
 width='100%'/>
<tablerow>
<tablecell valign='center' borderwidth='1px 0px'>
<pardef id='5' align='right' keepwithnext='true' keeptogether='true'/>
<par def='5'>エージェント名</par></tablecell>
<tablecell valign='center' borderwidth='1px 0px'>
<cellbackground repeat='resize'><imageref><code event='value'><formula>@If(dsp_disable_fields="name";"";"白")</formula></code></imageref></cellbackground>
<pardef id='6' keepwithnext='true' keeptogether='true'/>
<par def='6'><field showdelimiters='false' type='text' kind='editable' name='name'><code
 event='inputenabled'><formula>!(dsp_disable_fields*=@ThisName)</formula></code></field><compositedata
 type='98' prevtype='65418' nexttype='222' afterparcount='8' containertype='65418'
 aftercontainercount='1' afterbegincount='4'>
Yg4BAIQAAAAAAAAAAAA=
</compositedata></par></tablecell></tablerow>
<tablerow>
<tablecell valign='center' borderwidth='1px 0px'>
<par def='5'>別名</par></tablecell>
<tablecell valign='center' borderwidth='1px 0px'>
<cellbackground repeat='resize'><imageref><code event='value'><formula>@If(dsp_disable_fields="alias";"";"白")</formula></code></imageref></cellbackground>
<par def='6'><field showdelimiters='false' type='text' kind='editable' name='alias'><code
 event='inputenabled'><formula>!(dsp_disable_fields*=@ThisName)</formula></code></field><compositedata
 type='98' prevtype='65418' nexttype='222' afterparcount='7' containertype='65418'
 aftercontainercount='1' afterbegincount='4'>
Yg4BAIQAAAAAAAAAAAA=
</compositedata></par></tablecell></tablerow>
<tablerow>
<tablecell valign='center' borderwidth='1px 0px'>
<par def='5'>トリガ</par></tablecell>
<tablecell valign='center' borderwidth='1px 0px'>
<cellbackground repeat='resize'><imageref><code event='value'><formula>@If(dsp_disable_fields="trigger";"";"白")</formula></code></imageref></cellbackground>
<par def='6'><field usenotesstyle='false' height='0.1722in' width='2.7563in'
 heighttype='proportional' alignwithparagraph='true' multiline='true' borderstyle='inset'
 lookupeachchar='false' lookupaddressonrefresh='false' type='keyword' kind='editable'
 name='trigger'><keywords helperbutton='false' columns='2' ui='combobox'><formula
>dsp_trigger_list</formula></keywords><code event='inputenabled'><formula
>!(dsp_disable_fields*=@ThisName)</formula></code></field></par></tablecell></tablerow>
<tablerow>
<tablecell valign='center' borderwidth='1px 0px'>
<par def='5'>種類</par></tablecell>
<tablecell valign='center' borderwidth='1px 0px'>
<cellbackground repeat='resize'><imageref><code event='value'><formula>@If(dsp_disable_fields="type";"";"白")</formula></code></imageref></cellbackground>
<par def='6'><field usenotesstyle='false' height='0.1722in' width='2.7563in'
 heighttype='proportional' alignwithparagraph='true' multiline='true' borderstyle='single'
 lookupeachchar='false' lookupaddressonrefresh='false' type='keyword' kind='editable'
 name='type'><keywords helperbutton='false' recalconchange='true' columns='1'
 ui='combobox'><formula>dsp_type_list</formula></keywords><code event='inputenabled'><formula
>!(dsp_disable_fields*=@ThisName)</formula></code></field></par></tablecell></tablerow>
<tablerow>
<tablecell valign='center' borderwidth='1px 0px'>
<par def='5'>対象</par></tablecell>
<tablecell valign='center' borderwidth='1px 0px'>
<cellbackground repeat='resize'><imageref><code event='value'><formula>@If(dsp_disable_fields="documentset";"";"白")</formula></code></imageref></cellbackground>
<par def='6'><field usenotesstyle='false' height='0.1722in' width='2.7563in'
 heighttype='proportional' alignwithparagraph='true' multiline='true' borderstyle='single'
 lookupeachchar='false' lookupaddressonrefresh='false' type='keyword' kind='editable'
 name='documentset'><keywords helperbutton='false' columns='1' ui='combobox'><formula
>dsp_documentset_list</formula></keywords><code event='inputenabled'><formula
>!(dsp_disable_fields*=@ThisName)</formula></code></field></par></tablecell></tablerow>
<tablerow>
<tablecell valign='center' borderwidth='1px 0px'>
<par def='5'>有効/無効</par></tablecell>
<tablecell valign='center' borderwidth='1px 0px'>
<cellbackground repeat='resize'><imageref><code event='value'><formula>@If(dsp_disable_fields="enabled";"";"白")</formula></code></imageref></cellbackground>
<par def='6'><run><font size='3pt'/></run></par>
<par def='6'><field borderstyle='none' lookupeachchar='false' lookupaddressonrefresh='false'
 type='keyword' allowmultivalues='true' kind='editable' name='enabled' listinputseparators='comma'
 listdisplayseparator='comma'><keywords helperbutton='false' columns='1' ui='checkbox'><textlist
><text>有効|true</text></textlist></keywords><code event='inputenabled'><formula
>!(dsp_disable_fields*=@ThisName)</formula></code></field></par></tablecell></tablerow></table>
<par def='3'/>
<pardef id='7' hide='notes web mobile' keepwithnext='true' keeptogether='true'/>
<par def='7'><run><font color='gray'/></run><run><font color='gray'/><field
 type='text' kind='computedfordisplay' name='$period'><code event='defaultvalue'><formula
>type</formula></code></field></run><compositedata type='98' prevtype='65418'
 nexttype='222' afterparcount='10' containertype='65418' aftercontainercount='1'
 afterbegincount='3'>
Yg4BAIQAAAAAAAAAAAA=
</compositedata><run><font color='gray'/></run></par>
<par def='7'><run><font color='gray'/></run><run><font color='gray'/><field
 type='datetime' kind='computedwhencomposed' name='starttime'><datetimeformat
 show='time' date='yearmonthday' fourdigityearfor21stcentury='true' time='hourminute'
 zone='never' dateformat='yearmonthdayweekday' dayformat='twodigitday' monthformat='twodigitmonth'
 yearformat='fourdigityear' weekdayformat='shortname' dateseparator1='/' dateseparator2='/'
 dateseparator3=' ' timeseparator=':' timeformat24='true' preference='usersetting'/><code
 event='defaultvalue'><formula>@ThisValue</formula></code></field></run><run
><font color='gray'/></run></par>
<par def='7'><run><font color='gray'/></run><run><font color='gray'/><field
 type='datetime' kind='computedwhencomposed' name='endtime'><datetimeformat
 show='time' date='yearmonthday' fourdigityearfor21stcentury='true' time='hourminute'
 zone='never' dateformat='yearmonthdayweekday' dayformat='twodigitday' monthformat='twodigitmonth'
 yearformat='fourdigityear' weekdayformat='shortname' dateseparator1='/' dateseparator2='/'
 dateseparator3=' ' timeseparator=':' timeformat24='true' preference='usersetting'/><code
 event='defaultvalue'><formula>@ThisValue</formula></code></field></run><run
><font color='gray'/></run></par>
<table widthtype='fitmargins' minrowheight='1.1813in' rowdisplay='compute'
 sizetabsequally='true' htmlid='period' leftmargin='0' rowspacing='0.0396in'
 columnspacing='0.0396in' refwidth='3.9354in'><tablerowstyle><font style='underline'
 color='black'/></tablerowstyle><tablecolumn width='100%'/>
<tablerow tablabel='byminutes'>
<tablecell borderwidth='0px'>
<pardef id='8' keepwithnext='true' keeptogether='true'/>
<par def='8'><border style='solid' width='1px' insidewidth='3px' color='navy'/><run
><font color='navy'/>◆毎日 1 回 以上 エージェントを実行</run></par>
<table widthtype='fitmargins' leftmargin='0' rowspacing='0.0396in' columnspacing='0.0396in'
 refwidth='3.8563in'><tablecolumn width='1.3438in' sizetofit='true'/><tablecolumn
 width='50%'/><tablecolumn width='0.4375in' sizetofit='true'/><tablecolumn
 width='50%'/><tablecolumn width='0.4583in' sizetofit='true'/>
<tablerow>
<tablecell valign='center' borderwidth='0px'>
<pardef id='10' keepwithnext='true' keeptogether='true'/>
<par def='10'>エージェントの実行間隔</par></tablecell>
<tablecell valign='center' borderwidth='0px' bgcolor='white'>
<pardef id='11' align='right' keepwithnext='true' keeptogether='true'/>
<par def='11'><field showdelimiters='false' lookupeachchar='false' lookupaddressonrefresh='false'
 type='keyword' kind='editable' name='hours'><keywords columns='1' ui='dialoglist'><formula
>dsp_hours_list</formula></keywords><code event='defaultvalue'><formula>"0"</formula></code></field></par></tablecell>
<tablecell valign='center' borderwidth='0px'>
<pardef id='12' keepwithnext='true' keeptogether='true'/>
<par def='12'>時間(H)</par></tablecell>
<tablecell valign='center' borderwidth='0px' bgcolor='white'>
<pardef id='13' align='right' keepwithnext='true' keeptogether='true'/>
<par def='13'><field showdelimiters='false' lookupeachchar='false' lookupaddressonrefresh='false'
 type='keyword' kind='editable' name='minutes'><keywords columns='1' ui='dialoglist'><formula
>dsp_minutes_list</formula></keywords><code event='defaultvalue'><formula
>"0"</formula></code></field></par></tablecell>
<tablecell valign='center' borderwidth='0px'>
<pardef id='14' keepwithnext='true' keeptogether='true'/>
<par def='14'>分毎(M)</par></tablecell></tablerow></table>
<par def='8'><run><font size='1pt'/></run></par>
<table widthtype='fitmargins' leftmargin='0' columnspacing='0.0396in' refwidth='3.8563in'><tablecolumn
 width='0.9792in' sizetofit='true'/><tablecolumn width='100%'/>
<tablerow>
<tablecell valign='center' borderwidth='0px'>
<pardef id='15' keepwithnext='true' keeptogether='true'/>
<par def='15'><run><font size='1pt'/></run></par>
<par def='15'><field borderstyle='none' lookupeachchar='false' lookupaddressonrefresh='false'
 type='keyword' allowmultivalues='true' kind='editable' name='timeslot' listinputseparators='comma'
 listdisplayseparator='comma'><keywords helperbutton='false' recalconchange='true'
 columns='1' ui='checkbox'><textlist><text>有効時間帯|1</text></textlist></keywords></field></par></tablecell>
<tablecell valign='center' borderwidth='0px'>
<cellbackground repeat='resize'><imageref><code event='value'><formula>@If(dsp_disable_fields="starttime_byminutes";"";"白")</formula></code></imageref></cellbackground>
<pardef id='16' keepwithnext='true' keeptogether='true'/>
<par def='16'><field usenotesstyle='false' height='0.1722in' width='1.1813in'
 heighttype='proportional' alignwithparagraph='true' multiline='true' borderstyle='single'
 type='datetime' allowmultivalues='true' kind='editable' name='starttime_byminutes'
 listinputseparators='comma' listdisplayseparator='comma'><datetimeformat
 show='time' date='yearmonthday' fourdigityearfor21stcentury='true' time='hourminute'
 zone='never' dateformat='yearmonthdayweekday' dayformat='twodigitday' monthformat='twodigitmonth'
 yearformat='fourdigityear' weekdayformat='shortname' dateseparator1='/' dateseparator2='/'
 dateseparator3=' ' timeseparator=':' timeformat24='true' preference='usersetting'/><code
 event='inputenabled'><formula>!(dsp_disable_fields*=@ThisName)</formula></code><code
 event='defaultvalue'><formula>[09:00:00 - 18:00:00]</formula></code></field></par></tablecell></tablerow></table></tablecell></tablerow>
<tablerow tablabel='daily'>
<tablecell borderwidth='0px'>
<par def='8'><border style='solid' width='1px' insidewidth='3px' color='navy'/><run
><font color='navy'/>◆毎日 1 回 エージェントを実行</run></par>
<table widthtype='fitmargins' leftmargin='0' rowspacing='0.0396in' columnspacing='0.0396in'
 refwidth='3.8563in'><tablecolumn width='0.5417in' sizetofit='true'/><tablecolumn
 width='100%'/>
<tablerow>
<tablecell valign='center' borderwidth='0px'>
<pardef id='17' align='right' keepwithnext='true' keeptogether='true'/>
<par def='17'>開始時刻</par></tablecell>
<tablecell valign='center' borderwidth='0px' bgcolor='white'>
<pardef id='18' keepwithnext='true' keeptogether='true'/>
<par def='18'><field usenotesstyle='false' height='0.1722in' width='1in' heighttype='proportional'
 alignwithparagraph='true' multiline='true' borderstyle='single' type='datetime'
 kind='editable' name='starttime_daily'><datetimeformat show='time' date='yearmonthday'
 fourdigityearfor21stcentury='true' time='hourminute' zone='never' dateformat='yearmonthdayweekday'
 dayformat='twodigitday' monthformat='twodigitmonth' yearformat='fourdigityear'
 weekdayformat='shortname' dateseparator1='/' dateseparator2='/' dateseparator3=' '
 timeseparator=':' timeformat24='true' preference='usersetting'/><code event='defaultvalue'><formula
>[00:00:00]</formula></code></field></par></tablecell></tablerow></table></tablecell></tablerow>
<tablerow tablabel='weekly'>
<tablecell borderwidth='0px'>
<par def='8'><border style='solid' width='1px' insidewidth='3px' color='navy'/><run
><font color='navy'/>◆毎週 1 回 エージェントを実行</run></par>
<table widthtype='fitmargins' leftmargin='0' rowspacing='0.0396in' columnspacing='0.0396in'
 refwidth='3.8563in'><tablecolumn width='0.5417in' sizetofit='true'/><tablecolumn
 width='100%'/>
<tablerow>
<tablecell valign='center' borderwidth='0px'>
<par def='17'>実行日</par></tablecell>
<tablecell valign='center' borderwidth='0px' bgcolor='white'>
<par def='18'><field usenotesstyle='false' height='0.1722in' width='1in' heighttype='proportional'
 alignwithparagraph='true' multiline='true' borderstyle='single' lookupeachchar='false'
 lookupaddressonrefresh='false' type='keyword' kind='editable' name='dayofweek'><keywords
 helperbutton='false' columns='1' ui='combobox'><formula>dsp_dayofweek_list</formula></keywords><code
 event='defaultvalue'><formula>v:=@Subset(dsp_dayofweek_list;1);
v:=@Subset(@Explode(v;"|");1);
v</formula></code></field></par></tablecell></tablerow>
<tablerow>
<tablecell valign='center' borderwidth='0px'>
<par def='17'>開始時刻</par></tablecell>
<tablecell valign='center' borderwidth='0px' bgcolor='white'>
<par def='18'><field usenotesstyle='false' height='0.1722in' width='1in' heighttype='proportional'
 alignwithparagraph='true' multiline='true' borderstyle='single' type='datetime'
 kind='editable' name='starttime_weekly'><datetimeformat show='time' date='yearmonthday'
 fourdigityearfor21stcentury='true' time='hourminute' zone='never' dateformat='yearmonthdayweekday'
 dayformat='twodigitday' monthformat='twodigitmonth' yearformat='fourdigityear'
 weekdayformat='shortname' dateseparator1='/' dateseparator2='/' dateseparator3=' '
 timeseparator=':' timeformat24='true' preference='usersetting'/><code event='defaultvalue'><formula
>[00:00:00]</formula></code></field></par></tablecell></tablerow></table></tablecell></tablerow>
<tablerow tablabel='monthly'>
<tablecell borderwidth='0px' transition='rolling'>
<par def='8'><border style='solid' width='1px' insidewidth='3px' color='navy'/><run
><font color='navy'/>◆毎月 1 回 エージェントを実行</run></par>
<table widthtype='fitmargins' leftmargin='0' rowspacing='0.0396in' columnspacing='0.0396in'
 refwidth='3.8563in'><tablecolumn width='0.5417in' sizetofit='true'/><tablecolumn
 width='100%'/>
<tablerow>
<tablecell valign='center' borderwidth='0px'>
<par def='17'>実行日</par></tablecell>
<tablecell valign='center' borderwidth='0px' bgcolor='white'>
<par def='18'><field showdelimiters='false' lookupeachchar='false' lookupaddressonrefresh='false'
 type='keyword' kind='editable' name='dateinmonth'><keywords columns='1' ui='dialoglist'><formula
>dsp_dateinmonth_list</formula></keywords><code event='defaultvalue'><formula
>"1"</formula></code></field> 日</par></tablecell></tablerow>
<tablerow>
<tablecell valign='center' borderwidth='0px'>
<par def='17'>開始時刻</par></tablecell>
<tablecell valign='center' borderwidth='0px' bgcolor='white'>
<par def='18'><field usenotesstyle='false' height='0.1722in' width='1in' heighttype='proportional'
 alignwithparagraph='true' multiline='true' borderstyle='single' type='datetime'
 kind='editable' name='starttime_monthly'><datetimeformat show='time' date='yearmonthday'
 fourdigityearfor21stcentury='true' time='hourminute' zone='never' dateformat='yearmonthdayweekday'
 dayformat='twodigitday' monthformat='twodigitmonth' yearformat='fourdigityear'
 weekdayformat='shortname' dateseparator1='/' dateseparator2='/' dateseparator3=' '
 timeseparator=':' timeformat24='true' preference='usersetting'/><code event='defaultvalue'><formula
>[00:00:00]</formula></code></field></par></tablecell></tablerow></table></tablecell></tablerow>
<tablerow tablabel='never'>
<tablecell borderwidth='0px'>
<par def='8'><border style='solid' width='1px' insidewidth='3px' color='navy'/><run
><font color='navy'/>◆</run><run><font color='navy'/>スケジューリングなし</run></par>
<par def='8'/></tablecell></tablerow></table>
<par def='3'><border style='solid' width='1px' insidewidth='3px' color='navy'/><run
><font color='navy'/>◆</run><run><font color='navy'/>エージェントの実行制限</run></par>
<table widthtype='fitmargins' leftmargin='0' rowspacing='0.0396in' columnspacing='0.0396in'
 refwidth='3.9368in'><tablecolumn width='1.2083in' sizetofit='true'/><tablecolumn
 width='100%'/>
<tablerow>
<tablecell valign='center' borderwidth='0px'>
<pardef id='19' keepwithnext='true' keeptogether='true'/>
<par def='19'><run><font size='1pt'/></run></par>
<par def='19'><field borderstyle='none' lookupeachchar='false' lookupaddressonrefresh='false'
 type='keyword' allowmultivalues='true' kind='editable' name='isstartdate'
 listinputseparators='comma' listdisplayseparator='comma'><keywords helperbutton='false'
 recalconchange='true' columns='1' ui='checkbox'><textlist><text>エージェントの実行開始日|1</text></textlist></keywords></field></par></tablecell>
<tablecell valign='center' borderwidth='0px'>
<cellbackground repeat='resize'><imageref><code event='value'><formula>@If(dsp_disable_fields="startdate";"";"白")</formula></code></imageref></cellbackground>
<pardef id='20' keepwithnext='true' keeptogether='true'/>
<par def='20'><field usenotesstyle='false' height='0.1722in' width='1in' heighttype='proportional'
 alignwithparagraph='true' multiline='true' borderstyle='single' type='datetime'
 kind='editable' name='startdate'><datetimeformat show='date' date='yearmonthday'
 fourdigityearfor21stcentury='true' zone='never' dateformat='yearmonthdayweekday'
 dayformat='twodigitday' monthformat='twodigitmonth' yearformat='fourdigityear'
 weekdayformat='shortname' dateseparator1='/' dateseparator2='/' dateseparator3=' '
 timeseparator=':' timeformat24='true' preference='usersetting'/><code event='inputenabled'><formula
>!(dsp_disable_fields*=@ThisName)</formula></code><code event='defaultvalue'><formula
>@Today</formula></code></field></par></tablecell></tablerow>
<tablerow>
<tablecell valign='center' borderwidth='0px'>
<par def='19'><run><font size='1pt'/></run></par>
<par def='19'><field borderstyle='none' lookupeachchar='false' lookupaddressonrefresh='false'
 type='keyword' allowmultivalues='true' kind='editable' name='isenddate' listinputseparators='comma'
 listdisplayseparator='comma'><keywords helperbutton='false' recalconchange='true'
 columns='1' ui='checkbox'><textlist><text>エージェントの実行終了日|1</text></textlist></keywords></field></par></tablecell>
<tablecell valign='center' borderwidth='0px'>
<cellbackground repeat='resize'><imageref><code event='value'><formula>@If(dsp_disable_fields="enddate";"";"白")</formula></code></imageref></cellbackground>
<par def='20'><field usenotesstyle='false' height='0.1722in' width='1in' heighttype='proportional'
 alignwithparagraph='true' multiline='true' borderstyle='single' type='datetime'
 kind='editable' name='enddate'><datetimeformat show='date' date='yearmonthday'
 fourdigityearfor21stcentury='true' zone='never' dateformat='yearmonthdayweekday'
 dayformat='twodigitday' monthformat='twodigitmonth' yearformat='fourdigityear'
 weekdayformat='shortname' dateseparator1='/' dateseparator2='/' dateseparator3=' '
 timeseparator=':' timeformat24='true' preference='usersetting'/><code event='inputenabled'><formula
>!(dsp_disable_fields*=@ThisName)</formula></code><code event='defaultvalue'><formula
>@Today</formula></code></field></par></tablecell></tablerow>
<tablerow>
<tablecell valign='center' borderwidth='0px'>
<par def='19'><run><font size='1pt'/></run></par>
<par def='19'><field borderstyle='none' lookupeachchar='false' lookupaddressonrefresh='false'
 type='keyword' allowmultivalues='true' kind='editable' name='onweekends'
 listinputseparators='comma' listdisplayseparator='comma'><keywords helperbutton='false'
 columns='1' ui='checkbox'><formula>dsp_onweekends_list</formula></keywords><code
 event='inputenabled'><formula>!(dsp_disable_fields*=@ThisName)</formula></code></field></par></tablecell>
<tablecell valign='center' borderwidth='0px'>
<par def='20'/></tablecell></tablerow></table>
<par def='3'/>
<par def='3'><border style='solid' width='1px' insidewidth='3px' color='navy'/><run
><font color='navy'/>◆エージェントの実行場所</run></par>
<table widthtype='fitmargins' leftmargin='0' rowspacing='0.0396in' columnspacing='0.0396in'
 refwidth='3.9368in'><tablecolumn width='0.5417in' sizetofit='true'/><tablecolumn
 width='100%'/>
<tablerow>
<tablecell valign='center' borderwidth='0px'>
<pardef id='21' keepwithnext='true' keeptogether='true'/>
<par def='21'>実行場所</par></tablecell>
<tablecell valign='center' borderwidth='0px'>
<cellbackground repeat='resize'><imageref><code event='value'><formula>@If(dsp_disable_fields="runserver";"";"白")</formula></code></imageref></cellbackground>
<pardef id='22' keepwithnext='true' keeptogether='true'/>
<par def='22'><field usenotesstyle='false' height='0.1722in' width='2.3625in'
 heighttype='proportional' alignwithparagraph='true' multiline='true' borderstyle='none'
 lookupeachchar='false' lookupaddressonrefresh='false' type='keyword' kind='editable'
 name='runserver'><keywords helperbutton='false' columns='1' ui='combobox'
 allownew='true'><formula>dsp_runserver_list</formula></keywords><code event='inputenabled'><formula
>!(dsp_disable_fields*=@ThisName)</formula></code><code event='defaultvalue'><formula
>@If(@ThisValue=""; @ThisValue; @Name([Abbreviate]; @ThisValue))</formula></code></field></par></tablecell></tablerow></table>
<par def='3'><run><font size='1pt'/></run></par>
<par def='3'><field borderstyle='none' lookupeachchar='false' lookupaddressonrefresh='false'
 type='keyword' allowmultivalues='true' kind='editable' name='runlocation'
 listinputseparators='comma' listdisplayseparator='comma'><keywords helperbutton='false'
 recalconchange='true' columns='1' ui='checkbox'><formula>dsp_runlocation_list</formula></keywords><code
 event='inputenabled'><formula>!(dsp_disable_fields*=@ThisName)</formula></code></field></par></tablecell></tablerow></table>
<pardef id='23'/>
<par def='23'/></richtext></body>
<item name='endtime_byminutes' summary='false'>
<rawitemdata type='400'>
AAAAAAAAAAA=
</rawitemdata></item>
<item name='$$ScriptName' summary='false' sign='true'><text>SubAgProperty</text></item></subform>

<agentdata>
<noteinfo noteid='45b6' unid='0336AC415D17099C49258319002C52CD' sequence='1'>
<created><datetime>20181001T170407,81+09</datetime></created>
<modified><datetime>20181001T170407,82+09</datetime></modified>
<revised><datetime>20181001T170407,81+09</datetime></revised>
<lastaccessed><datetime>20181001T170407,82+09</datetime></lastaccessed>
<addedtofile><datetime>20181001T170407,82+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby></agentdata>

<agent name='(ツール)\(スケジュールエージェントのプロパティ変更)' alias='ChangeScheduleAgentProperty'
 hide='v3' publicaccess='false' designerversion='8.5.3'>
<noteinfo noteid='45be' unid='3BADF093D1F14A5249258319002CB4BC' sequence='541'>
<created><datetime>20181001T170818,52+09</datetime></created>
<modified><datetime>20181031T100052,62+09</datetime></modified>
<revised><datetime>20181031T100052,61+09</datetime></revised>
<lastaccessed><datetime>20181031T100052,62+09</datetime></lastaccessed>
<addedtofile><datetime>20181001T170818,58+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby>
<wassignedby><name>CN=Administrator/O=Comture</name></wassignedby>
<designchange><datetime>20181031T100052,59+09</datetime></designchange>
<trigger type='actionsmenu'/>
<documentset type='selected'/><code event='options'><lotusscript>Option Public
Option Declare
Use "NotesUICommonLib"
Use "NotesDXLLIb"
Use "ToolsLib"

</lotusscript></code><code event='declarations'><lotusscript>Class CNotesAgentDXLOnDoc As CNotesAgentDXL
	
	Function ImportDocument(doc As NotesDocument) As Integer
		On Error GoTo ErrorHandle
		
		Dim aryNames As Variant
		Dim propName As String
		Dim tmpStr As String
		Dim tmpDate As Variant
		
		Dim tmpStrNew As String
		Dim tmpDateNew As Variant
		
		'**基本**
		Dim lstProperty As Variant
		
		lstProperty = Me.GetPropertys()
		
		ForAll n In lstProperty
			propName = ListTag(n)
			
			Select Case propName
			Case "documentset"
				tmpStr = lstProperty(propName)
				tmpStrNew = doc.GetItemValue(propName)(0)
				
				If tmpStrNew = "runonce" Then
					tmpStrNew = ""
				End If
				
				If StrCompare(tmpStr, tmpStrNew, 1) &lt;&gt; 0 Then
					lstProperty(propName) = tmpStrNew
				End If
				
			Case "enabled"
				tmpStr = lstProperty(propName)
				tmpStrNew = doc.GetItemValue(propName)(0)
				
				If tmpStrNew = "" Then
					tmpStrNew = "false"
				End If
				
				If StrCompare(tmpStr, tmpStrNew, 1) &lt;&gt; 0 Then
					lstProperty(propName) = tmpStrNew
				End If
				
			Case Else
				tmpStr = lstProperty(propName)
				tmpStrNew = doc.GetItemValue(propName)(0)
				
				If StrCompare(tmpStr, tmpStrNew, 1) &lt;&gt; 0 Then
					lstProperty(propName) = tmpStrNew
				End If
			End Select
			
		End ForAll
		
		Call Me.SetPropertys(lstProperty)
		
		'**スケジュール**
		Dim lstSchecule As Variant
		Dim varStartTime As Variant
		Dim varEndTime As Variant
		Dim empty As Variant
		
		lstSchecule = Me.GetSchedules()
		
		'種類
		Dim strType As String
		
		propName = "type"
		tmpStr = lstSchecule(propName)
		tmpStrNew = doc.GetItemValue(propName)(0)
		
		If StrCompare(tmpStr, tmpStrNew, 1) &lt;&gt; 0 Then
			lstSchecule(propName) = tmpStrNew
		End If
		
		strType = tmpStrNew
		
		Dim dtArray As Variant
		Dim objName As NotesName
		
		Select Case strType
			Case "byminutes"
				'時間
				propName = "hours"
				tmpStr = lstSchecule(propName)
				tmpStrNew = doc.GetItemValue(propName)(0)
				
				If StrCompare(tmpStr, tmpStrNew, 1) &lt;&gt; 0 Then
					lstSchecule(propName) = tmpStrNew
				End If
				
				'分
				propName = "minutes"
				tmpStr = lstSchecule(propName)
				tmpStrNew = doc.GetItemValue(propName)(0)
				
				If StrCompare(tmpStr, tmpStrNew, 1) &lt;&gt; 0 Then
					lstSchecule(propName) = tmpStrNew
				End If
				
				'有効時間帯
				propName = "starttime"
				varStartTime = empty
				varEndTime = empty
				
				If doc.GetItemValue("timeslot")(0) = "" Then
				Else
					dtArray = doc.GetItemValueDateTimeArray(propName &amp; "_" &amp; strType)
					If UBound(dtArray) = 0 Then
						varStartTime = dtArray(LBound(dtArray))
						varEndTime = dtArray(UBound(dtArray))
					Else
						varStartTime = dtArray(LBound(dtArray))
					End If
				End If
				
				lstSchecule("starttime") = varStartTime
				lstSchecule("endtime") = varEndTime
				
			Case "daily"
				'実行時刻
				propName = "starttime"
				tmpDate = lstSchecule(propName)
				tmpDateNew = doc.GetItemValue(propName &amp; "_" &amp; strType)(0)
				
				If tmpDate &lt;&gt; tmpDateNew Then
					lstSchecule("starttime") = tmpDateNew
					lstSchecule("endtime") = empty
				End If
				
			Case "weekly"
				'実行日
				propName = "dayofweek"
				tmpStr = lstSchecule(propName)
				tmpStrNew = doc.GetItemValue(propName)(0)
				
				If StrCompare(tmpStr, tmpStrNew, 1) &lt;&gt; 0 Then
					lstSchecule(propName) = tmpStrNew
				End If
				
				'実行時刻
				propName = "starttime"
				tmpDate = lstSchecule(propName)
				tmpDateNew = doc.Getitemvalue(propName &amp; "_" &amp; strType)(0)
				
				If tmpDate &lt;&gt; tmpDateNew Then
					lstSchecule("starttime") = tmpDateNew
					lstSchecule("endtime") = empty
				End If
				
			Case "monthly"
				'実行日
				propName = "dateinmonth"
				tmpStr = lstSchecule(propName)
				tmpStrNew = doc.GetItemValue(propName)(0)
				
				If StrCompare(tmpStr, tmpStrNew, 1) &lt;&gt; 0 Then
					lstSchecule(propName) = tmpStrNew
				End If
				
				'実行時刻
				propName = "starttime"
				
				varStartTime = Me.GetSchedule(propName)
				tmpDateNew = doc.Getitemvalue(propName &amp; "_" &amp; strType)(0)
				
				If varStartTime &lt;&gt; tmpDateNew Then
					lstSchecule("starttime") = tmpDateNew
					lstSchecule("endtime") = empty
				End If
				
			Case "never"
				'tmpStr = "なし"
			Case Else
				'tmpStr = ""
		End Select
		
		'開始日
		propName = "startdate"
		
		If doc.GetItemValue("is" &amp; propName)(0) = "" Then
			lstSchecule(propName) = empty
		Else
			tmpDate = Me.GetSchedule(propName)
			tmpDateNew = doc.Getitemvalue(propName)(0)
			
			If tmpDate &lt;&gt; tmpDateNew Then
				lstSchecule(propName) = tmpDateNew
			End If
			
		End If
		
		'終了日
		propName = "enddate"
		
		If doc.Getitemvalue("is" &amp; propName)(0) = "" Then
			lstSchecule(propName) = empty
		Else
			tmpDate = Me.GetSchedule(propName)
			tmpDateNew = doc.Getitemvalue(propName)(0)
			
			If tmpDate &lt;&gt; tmpDateNew Then
				lstSchecule(propName) = tmpDateNew
			End If
			
		End If
		
		'週末はエージェントを実行しない
		propName = "onweekends"
		
		tmpStr = Me.GetSchedule(propName)
		tmpStrNew = doc.Getitemvalue(propName)(0)
		
		If tmpStrNew = "" Then
			tmpStrNew = "true"
		End If
		
		If StrCompare(tmpStr, tmpStrNew, 1) &lt;&gt; 0 Then
			lstSchecule(propName) = tmpStrNew
		End If
		
		'エージェントが有効になったときにサーバーを指定
		propName = "runlocation"
		
		tmpStr = Me.GetSchedule(propName)
		tmpStrNew = doc.GetItemValue(propName)(0)
		
		If tmpStrNew = "" Then
			tmpStrNew = "specific"
		End If
		
		If StrCompare(tmpStr, tmpStrNew, 1) &lt;&gt; 0 Then
			lstSchecule(propName) = tmpStrNew
		End If
		
		'実行場所
		propName = "runserver"
		
		If tmpStrNew = "specific" Then
			tmpStr = Me.GetSchedule(propName)
			tmpStrNew = doc.GetItemValue(propName)(0)
			
			Set objName = New NotesName(tmpStr)
			tmpStr = objName.Canonical
			
			Set objName = New NotesName(tmpStrNew)
			tmpStrNew = objName.Canonical
			
			If StrCompare(tmpStr, tmpStrNew, 1) &lt;&gt; 0 Then
				lstSchecule(propName) = tmpStrNew
			End If
			
		Else
			lstSchecule(propName) = ""
		End If
		
		Call Me.SetSchedules(lstSchecule)
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		ImportDocument = FUNCTIONFAILURE
		Exit Function
	End Function
	
	Function ExportDocument(doc As NotesDocument) As Integer
		On Error GoTo ErrorHandle
		
		Dim pn As String
		Dim tmpStr As String
		Dim tmpDate As Variant
		Dim itemDisable As NotesItem
		
		Set itemDisable = doc.Replaceitemvalue("dsp_disable_fields", "")
		itemDisable.SaveToDisk = False
		
		'**基本**
		Dim lstProperty As Variant
		
		lstProperty = Me.GetPropertys()
		
		ForAll p In lstProperty
			pn = ListTag(p)
			
			Select Case pn
			Case "name","alias","trigger"
				tmpStr = p
				Call doc.ReplaceItemValue(pn, tmpStr)
				
				Call itemDisable.AppendToTextList(pn)
				
			Case "documentset"
				tmpStr = p
				
				If tmpStr = "" Then
					tmpStr = "runonce"
				End If
				
				Call doc.ReplaceItemValue(pn, tmpStr)
				
				Call itemDisable.AppendToTextList(pn)
				
			Case Else
				tmpStr = p
				Call doc.ReplaceItemValue(pn, p)
				
			End Select
			
		End ForAll
		
		'**スケジュール**
		Dim lstSchedules As Variant
		Dim strType As String
		
		Dim varStartTime As Variant
		Dim varEndTime As Variant
		
		Dim objName As NotesName
		
		lstSchedules = Me.GetSchedules()
		
		'種類
		pn = "type"
		tmpStr = lstSchedules(pn)
		Call doc.ReplaceItemValue(pn, tmpStr)
		
		strType = tmpStr
		
		Select Case strType
			Case "byminutes"
				'時間
				pn = "hours"
				tmpStr = lstSchedules(pn)
				Call doc.ReplaceItemValue(pn, tmpStr)
				
				'分
				pn = "minutes"
				tmpStr = lstSchedules(pn)
				Call doc.ReplaceItemValue(pn, tmpStr)
				
				'有効時間帯
				varStartTime = lstSchedules("starttime")
				varEndTime = lstSchedules("endtime")
				tmpStr = ""
				
				If IsEmpty(varEndTime) Then
					tmpStr = Format(varEndTime, "h:mm")
				End If
				
				If IsEmpty(varStartTime) Then
					tmpStr = ""
				ElseIf tmpStr = "" Then
					tmpStr = "[" &amp; Format(varStartTime, "h:mm") &amp; "]"
				Else
					tmpStr = "[" &amp; Format(varStartTime, "h:mm") &amp; "-" &amp; tmpStr &amp; "]"
				End If
				
				pn = "starttime_" &amp; strType
				If tmpStr = "" Then
					Call doc.RemoveItem(pn)
					Call doc.ReplaceItemValue("timeslot", "")
					Call itemDisable.AppendToTextList(pn)
				Else
					Call doc.ReplaceItemValue(pn, tmpStr)
					Call doc.ReplaceItemValue("timeslot", "1")
				End If
				
			Case "daily"
				'実行時刻
				pn = "starttime_" &amp; strType
				varStartTime = lstSchedules("starttime")
				Call doc.ReplaceItemValue(pn, varStartTime)
				
			Case "weekly"
				'実行日
				pn = "dayofweek"
				tmpStr = lstSchedules(pn)
				Call doc.ReplaceItemValue(pn, tmpStr)
				
				'実行時刻
				pn = "starttime_" &amp; strType
				varStartTime = lstSchedules("starttime")
				Call doc.ReplaceItemValue(pn, varStartTime)
				
			Case "monthly"
				'実行日
				pn = "dateinmonth"
				tmpStr = lstSchedules(pn)
				Call doc.ReplaceItemValue(pn, tmpStr)
				
				'実行時刻
				pn = "starttime_" &amp; strType
				varStartTime = lstSchedules("starttime")
				Call doc.ReplaceItemValue(pn, varStartTime)
				
		End Select
		
		'開始日
		pn = "startdate"
		tmpDate = lstSchedules(pn)
		
		If IsEmpty(tmpDate) Then
			Call doc.RemoveItem(pn)
			Call doc.ReplaceItemValue("is" &amp; pn, "")
			Call itemDisable.AppendToTextList(pn)
		Else
			Call doc.ReplaceItemValue(pn, tmpDate)
			Call doc.ReplaceItemValue("is" &amp; pn, "1")
		End If
		
		'終了日
		pn = "enddate"
		tmpDate = lstSchedules(pn)
		
		If IsEmpty(tmpDate) Then
			Call doc.RemoveItem(pn)
			Call doc.ReplaceItemValue("is" &amp; pn, "")
			Call itemDisable.AppendToTextList(pn)
		Else
			Call doc.ReplaceItemValue(pn, tmpDate)
			Call doc.ReplaceItemValue("is" &amp; pn, "1")
		End If
		
		'週末はエージェントを実行しない
		pn = "onweekends"
		tmpStr = lstSchedules(pn)
		Call doc.ReplaceItemValue(pn, tmpStr)
		
		'エージェントが有効になったときにサーバーを指定
		pn = "runlocation"
		tmpStr = lstSchedules(pn)
		Call doc.ReplaceItemValue(pn, tmpStr)
		
		'実行場所
		pn = "runserver"
		tmpStr = lstSchedules(pn)
		
		If tmpStr &lt;&gt; "" Then
			Set objName = New NotesName(tmpStr)
			tmpStr = objName.Abbreviated
			
			Call doc.ReplaceItemValue(pn, tmpStr)
		Else
			Call doc.ReplaceItemValue(pn, tmpStr)
			Call itemDisable.AppendToTextList(pn)
			
			pn = "enabled"
			Call doc.ReplaceItemValue(pn, "")
			Call itemDisable.AppendToTextList(pn)
		End If
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		ExportDocument = FUNCTIONFAILURE
		Exit Function
	End Function
	
End Class
</lotusscript></code><code event='initialize'><lotusscript>Sub Initialize
	Call SetProcess("*AG - ChangeAgent")
	Call Main()
End Sub

</lotusscript></code><code event='ChangeAGSettings'><lotusscript>Function ChangeAGSettings(curDB As NotesDatabase, db As NotesDatabase, note As NotesDocument, continue As Integer) As Integer
	On Error GoTo ErrorHandle
	
	Dim workSpace As New NotesUIWorkspace
	Dim dlgDoc As NotesDocument
	Dim objDXL As CNotesAgentDXLOnDoc
	'Dim aryDisable As Variant
	Dim result As Integer
	
	Set dlgDoc = curDB.Createdocument()
	
	Set objDXL = New CNotesAgentDXLOnDoc
	Call objDXL.ParseDOM(note)
	
	result = objDXL.ExportDocument(dlgDoc)
	If result = FUNCTIONFAILURE Then
		Error USERERR, Error
	End If
	
	'変更不可の項目
	'aryDisable = Split("name,alias,trigger,documentset", ",")
	
	'Call dlgDoc.Replaceitemvalue("dsp_disable_fields", aryDisable)
	
	'ダイアログ表示
	'Dim selectVal As Boolean
	continue = False
	
	continue = workSpace.Dialogbox("SubAgProperty", True, True, False, False, False, False, "エージェントのプロパティ変更", dlgDoc, True, False, True)
	If continue = False Then
		Exit Function
	End If
	
	result = objDXL.ImportDocument(dlgDoc)
	If result = FUNCTIONFAILURE Then
		Error USERERR, Error
	End If
	
	'変更内容のインポート
	Dim session As New NotesSession
	Dim importer As NotesDXLImporter
	Dim stream As NotesStream
	
	Set importer = session.CreateDXLImporter()
	Set stream = session.CreateStream()
	
	'Call importer.Setoutput(stream)
	
	Call objDXL.SerializeDXL(stream)
	
	Call importer.SetInput(stream)
	
	'debug
	%rem
	Dim stream2 As NotesStream
	Set stream2 = session.CreateStream()
	
	Call stream2.Open(GetEnviron("USERPROFILE") &amp; "\Desktop/degub.xml", "UTF-8")
	Call stream2.Truncate()
	stream2.Position = 0
	stream.Position = 0
	stream2.Writetext( stream.Readtext )
	
	Exit Function
	%endrem
	importer.Designimportoption = DXLIMPORTOPTION_REPLACE_ELSE_IGNORE
	'importer.UnknownTokenLogOption = DXLLOGOPTION_FATALERROR
	importer.UnknownTokenLogOption = DXLLOGOPTION_WARNING
	importer.Inputvalidationoption = VALIDATE_AUTO
	
	Call objDXL.ImportDXL(importer, db)
	
	Set importer = Nothing
	
	Dim agent As NotesAgent
	
	
	
	Exit Function
ErrorHandle:
	Call SetErrorObject(Err, Error)
	ChangeAGSettings = FUNCTIONFAILURE
	Exit Function
End Function






</lotusscript></code><code event='Main'><lotusscript>Sub Main()
	On Error GoTo ErrorHandle
	
	Dim session As New NotesSession
	Dim workSpace As New NotesUIWorkspace
	Dim uiView As NotesUIView
	Dim curDB As NotesDatabase
	Dim unpro As NotesDocumentCollection
	Dim doc As NotesDocument
	
	Set curDB = session.CurrentDatabase
	Set uiView = workSpace.CurrentView
	If Not uiView Is Nothing Then
		Set unpro = uiView.Documents
		If unpro.Count = 0 Then Set unpro = Nothing
	End If
	
	If unpro Is Nothing Then Set unpro = curDB.UnprocessedDocuments
	
	If unpro.Count = 0 Then
		Call Messagebox_Alert("データベースを選択してください", "")
		Exit Sub
	End If
	
	Dim db As NotesDatabase
	Dim notes As NotesNoteCollection
	Dim note As NotesDocument
	Dim noteID As String
	
	Set doc = unpro.GetFirstDocument()
	
	Set db = New NotesDatabase(doc.DbServer(0), doc.DbFilePath(0))
	If db.Isopen = True Then
		
		Set notes = db.CreateNoteCollection(False)
		notes.Selectagents = True
		notes.SelectionFormula = |$AssistTrigger="1"|
		Call notes.Buildcollection()
		
	End If
	
	Dim varSelectName As Variant
	Dim aryNoteIds As Variant
	Dim aryLst As Variant
	
	ReDim aryNoteIds(0) As String
	ReDim aryLst(0) As String
	
	noteID = notes.GetFirstNoteID()
	Set note = db.Getdocumentbyid(noteID)
	aryNoteIds(0) = noteID
	aryLst(0) = note.~$Title(0)
	noteID = notes.GetNextNoteID(noteID)
	
	Do Until noteID = ""
		Set note = db.Getdocumentbyid(noteID)
		aryNoteIds = ArrayAppend(aryNoteIds, noteID)
		aryLst = ArrayAppend(aryLst,note.~$Title(0))
		noteID = notes.GetNextNoteID(noteID)
	Loop
	
	varSelectName = workSpace.Prompt(PROMPT_OKCANCELLIST , "エージェント設定変更", "変更するエージェントを選択", "", aryLst)
	If IsEmpty(varSelectName) Then
		Exit Sub
	End If
	
	noteID = aryNoteIds(ArrayGetIndex(aryLst, varSelectName, 1))
	
	Set note = db.Getdocumentbyid(noteID)
	
	Dim continue As Integer
	
	continue = False
	
	If ChangeAGSettings(curDB, db, note, continue) = FUNCTIONFAILURE Then
		Error USERERR, Error
	End If
	
	If continue = True Then
		'一旦初期化
		Set note = Nothing
		
		'改めて取り直す
		Set note = db.Getdocumentbyid(noteID)
		
		Print "note.~$MachineName = " &amp; note.~$MachineName(0)
		
		Call note.Sign()
		Call note.Save(True, True)
		
	End If
	
	Exit Sub
ErrorHandle:
	Call SetErrorObject(Err, Error)
	Call Messagebox_Error(GetErrorMessage(), "")
	Exit Sub
End Sub







</lotusscript></code></agent>

<agentdata>
<noteinfo noteid='45fa' unid='A35F3C96726BE88A49258319002DDB3A' sequence='1'>
<created><datetime>20181001T172052,42+09</datetime></created>
<modified><datetime>20181001T172052,43+09</datetime></modified>
<revised><datetime>20181001T172052,42+09</datetime></revised>
<lastaccessed><datetime>20181001T172052,43+09</datetime></lastaccessed>
<addedtofile><datetime>20181001T172052,43+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='4602' unid='0C0D06E9FDFA050C49258319002DEB1A' sequence='1'>
<created><datetime>20181001T172133,06+09</datetime></created>
<modified><datetime>20181001T172133,07+09</datetime></modified>
<revised><datetime>20181001T172133,06+09</datetime></revised>
<lastaccessed><datetime>20181001T172133,07+09</datetime></lastaccessed>
<addedtofile><datetime>20181001T172133,07+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='460e' unid='DC8949951D01C4B149258319002DF2B5' sequence='1'>
<created><datetime>20181001T172152,53+09</datetime></created>
<modified><datetime>20181001T172152,54+09</datetime></modified>
<revised><datetime>20181001T172152,53+09</datetime></revised>
<lastaccessed><datetime>20181001T172152,54+09</datetime></lastaccessed>
<addedtofile><datetime>20181001T172152,54+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='4642' unid='DB1563FBB13ED66649258319002F5FEF' sequence='1'>
<created><datetime>20181001T173727,51+09</datetime></created>
<modified><datetime>20181001T173727,52+09</datetime></modified>
<revised><datetime>20181001T173727,51+09</datetime></revised>
<lastaccessed><datetime>20181001T173727,52+09</datetime></lastaccessed>
<addedtofile><datetime>20181001T173727,52+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='464a' unid='24D4C166C18405AC49258319002F6A2E' sequence='1'>
<created><datetime>20181001T173753,74+09</datetime></created>
<modified><datetime>20181001T173753,75+09</datetime></modified>
<revised><datetime>20181001T173753,74+09</datetime></revised>
<lastaccessed><datetime>20181001T173753,75+09</datetime></lastaccessed>
<addedtofile><datetime>20181001T173753,75+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='4662' unid='45BF178C1624D20A4925831A000234DC' sequence='1'>
<created><datetime>20181002T092406,04+09</datetime></created>
<modified><datetime>20181002T092406,05+09</datetime></modified>
<revised><datetime>20181002T092406,04+09</datetime></revised>
<lastaccessed><datetime>20181002T092406,05+09</datetime></lastaccessed>
<addedtofile><datetime>20181002T092406,05+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby></agentdata>

<agent name='すじぇクール' hide='v3' publicaccess='false' designerversion='8.5.3'>
<noteinfo noteid='466e' unid='4656348D760503314925831A00028662' sequence='1'>
<created><datetime>20181002T092734,74+09</datetime></created>
<modified><datetime>20181002T092734,83+09</datetime></modified>
<revised><datetime>20181002T092734,82+09</datetime></revised>
<lastaccessed><datetime>20181002T092734,83+09</datetime></lastaccessed>
<addedtofile><datetime>20181002T092734,83+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby>
<wassignedby><name>CN=Administrator/O=Comture</name></wassignedby>
<designchange><datetime>20181002T092734,74+09</datetime></designchange>
<trigger type='actionsmenu'/>
<documentset type='selected'/>
<rundata processeddocs='0' exitcode='0'>
<agentmodified><datetime>20181002T092734,81+09</datetime></agentmodified></rundata></agent>

<agentdata>
<noteinfo noteid='4672' unid='91841CF57D9FB6244925831A0003835F' sequence='1'>
<created><datetime>20181002T093822,39+09</datetime></created>
<modified><datetime>20181002T093822,40+09</datetime></modified>
<revised><datetime>20181002T093822,39+09</datetime></revised>
<lastaccessed><datetime>20181002T093822,40+09</datetime></lastaccessed>
<addedtofile><datetime>20181002T093822,40+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='467a' unid='BC679CF5973137D54925831A001B9CE3' sequence='1'>
<created><datetime>20181002T140136,35+09</datetime></created>
<modified><datetime>20181002T140136,36+09</datetime></modified>
<revised><datetime>20181002T140136,35+09</datetime></revised>
<lastaccessed><datetime>20181002T140136,36+09</datetime></lastaccessed>
<addedtofile><datetime>20181002T140136,36+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='4682' unid='775E26291E93677D4925831A001BC263' sequence='1'>
<created><datetime>20181002T140312,35+09</datetime></created>
<modified><datetime>20181002T140312,36+09</datetime></modified>
<revised><datetime>20181002T140312,35+09</datetime></revised>
<lastaccessed><datetime>20181002T140312,36+09</datetime></lastaccessed>
<addedtofile><datetime>20181002T140312,36+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='468e' unid='98AA80F1DB916DB64925831A001EEFBF' sequence='1'>
<created><datetime>20181002T143754,55+09</datetime></created>
<modified><datetime>20181002T143754,56+09</datetime></modified>
<revised><datetime>20181002T143754,55+09</datetime></revised>
<lastaccessed><datetime>20181002T143754,56+09</datetime></lastaccessed>
<addedtofile><datetime>20181002T143754,56+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='46a2' unid='9D14271256AB2E044925831A00223547' sequence='1'>
<created><datetime>20181002T151338,63+09</datetime></created>
<modified><datetime>20181002T151338,64+09</datetime></modified>
<revised><datetime>20181002T151338,63+09</datetime></revised>
<lastaccessed><datetime>20181002T151338,64+09</datetime></lastaccessed>
<addedtofile><datetime>20181002T151338,64+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='46aa' unid='78E573C37900EAF84925831A0022BCE1' sequence='1'>
<created><datetime>20181002T151925,77+09</datetime></created>
<modified><datetime>20181002T151925,78+09</datetime></modified>
<revised><datetime>20181002T151925,77+09</datetime></revised>
<lastaccessed><datetime>20181002T151925,78+09</datetime></lastaccessed>
<addedtofile><datetime>20181002T151925,78+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='46b2' unid='A62E576D2F1B59214925831A00231028' sequence='1'>
<created><datetime>20181002T152258,96+09</datetime></created>
<modified><datetime>20181002T152258,97+09</datetime></modified>
<revised><datetime>20181002T152258,96+09</datetime></revised>
<lastaccessed><datetime>20181002T152258,97+09</datetime></lastaccessed>
<addedtofile><datetime>20181002T152258,97+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='46ba' unid='95B50CBCE04A4E5D4925831A00236C47' sequence='1'>
<created><datetime>20181002T152654,79+09</datetime></created>
<modified><datetime>20181002T152654,80+09</datetime></modified>
<revised><datetime>20181002T152654,79+09</datetime></revised>
<lastaccessed><datetime>20181002T152654,80+09</datetime></lastaccessed>
<addedtofile><datetime>20181002T152654,80+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='46c2' unid='C6098AC78F2370804925831A0023FFF4' sequence='1'>
<created><datetime>20181002T153312,84+09</datetime></created>
<modified><datetime>20181002T153312,85+09</datetime></modified>
<revised><datetime>20181002T153312,84+09</datetime></revised>
<lastaccessed><datetime>20181002T153312,85+09</datetime></lastaccessed>
<addedtofile><datetime>20181002T153312,85+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='46ca' unid='8118662E2ED443634925831A00250ADB' sequence='1'>
<created><datetime>20181002T154436,11+09</datetime></created>
<modified><datetime>20181002T154436,12+09</datetime></modified>
<revised><datetime>20181002T154436,11+09</datetime></revised>
<lastaccessed><datetime>20181002T154436,12+09</datetime></lastaccessed>
<addedtofile><datetime>20181002T154436,12+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='46d2' unid='FE6A5C649E1507794925831A00257211' sequence='1'>
<created><datetime>20181002T154900,33+09</datetime></created>
<modified><datetime>20181002T154900,34+09</datetime></modified>
<revised><datetime>20181002T154900,33+09</datetime></revised>
<lastaccessed><datetime>20181002T154900,34+09</datetime></lastaccessed>
<addedtofile><datetime>20181002T154900,34+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='46da' unid='FB89EB681B8211994925831A0027D738' sequence='1'>
<created><datetime>20181002T161510,00+09</datetime></created>
<modified><datetime>20181002T161510,01+09</datetime></modified>
<revised><datetime>20181002T161510,00+09</datetime></revised>
<lastaccessed><datetime>20181002T161510,01+09</datetime></lastaccessed>
<addedtofile><datetime>20181002T161510,01+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='46ee' unid='87AC79EF8559CEFE4925831A00282311' sequence='1'>
<created><datetime>20181002T161824,17+09</datetime></created>
<modified><datetime>20181002T161824,18+09</datetime></modified>
<revised><datetime>20181002T161824,17+09</datetime></revised>
<lastaccessed><datetime>20181002T161824,18+09</datetime></lastaccessed>
<addedtofile><datetime>20181002T161824,18+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='46fe' unid='7CFC852098910E694925831A002880EE' sequence='1'>
<created><datetime>20181002T162224,46+09</datetime></created>
<modified><datetime>20181002T162224,47+09</datetime></modified>
<revised><datetime>20181002T162224,46+09</datetime></revised>
<lastaccessed><datetime>20181002T162224,47+09</datetime></lastaccessed>
<addedtofile><datetime>20181002T162224,47+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='4706' unid='D4DF94E50E05877F4925831A0028A25D' sequence='1'>
<created><datetime>20181002T162350,05+09</datetime></created>
<modified><datetime>20181002T162350,06+09</datetime></modified>
<revised><datetime>20181002T162350,05+09</datetime></revised>
<lastaccessed><datetime>20181002T162350,06+09</datetime></lastaccessed>
<addedtofile><datetime>20181002T162350,06+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='4712' unid='5DD425613613E27B4925831A0028C738' sequence='1'>
<created><datetime>20181002T162524,40+09</datetime></created>
<modified><datetime>20181002T162524,41+09</datetime></modified>
<revised><datetime>20181002T162524,40+09</datetime></revised>
<lastaccessed><datetime>20181002T162524,41+09</datetime></lastaccessed>
<addedtofile><datetime>20181002T162524,41+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby></agentdata>

<imageresource name='bgcolor_1px_white#ffffff.gif' alias='白' readonly='true'
 publicaccess='false' designerversion='6.5'>
<noteinfo noteid='4716' unid='D0D70D887B5EB57B4925831A00297E9C' sequence='1'>
<created><datetime>20181002T163313,88+09</datetime></created>
<modified><datetime>20181002T163313,89+09</datetime></modified>
<revised><datetime>20181002T163313,88+09</datetime></revised>
<lastaccessed><datetime>20181002T163313,89+09</datetime></lastaccessed>
<addedtofile><datetime>20181002T163313,89+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Admin Domino/O=COMTURE-PB</name><name>CNAP PRODUCTS</name><name
>CN=PSL85/O=Comture</name><name>CN=System Administrator/O=Comture</name><name
>CNAP PRODUCTS</name><name>CN=PSL85/O=Comture</name><name>CN=PSL655/O=Comture</name><name
>CN=PSL85/O=Comture</name><name>CNAP PRODUCTS</name><name>CN=System Administrator/O=Comture</name><name
>CNAP PRODUCTS</name><name>CN=System Administrator/O=Comture</name><name>CNAP PRODUCTS</name><name
>CN=PSL90/O=Comture</name><name>CNAP PRODUCTS</name><name>CN=PSL90/O=Comture</name><name
>CN=PSL901/O=Comture</name><name>CNAP PRODUCTS</name><name>CN=PSL901/O=Comture</name><name
>CN=CSS901/O=Comture</name><name>CN=Administrator/O=Comture</name></updatedby>
<wassignedby><name>CN=CSS901/O=Comture</name></wassignedby><gif>
R0lGODlhAQABAIgAAP7+/gAAACH5BAAAAAAALAAAAAABAAEAAAICRAEAOw==
</gif>
<item name='$FileSize' sign='true'><number>43</number></item>
<item name='$MimeType' sign='true'><text>image/gif</text></item>
<item name='$FileModDT' sign='true'><datetime>20090609T142304,43+09</datetime></item></imageresource>

<agentdata>
<noteinfo noteid='4722' unid='F955C62EFC22C03F4925831A002C408D' sequence='1'>
<created><datetime>20181002T170321,09+09</datetime></created>
<modified><datetime>20181002T170321,10+09</datetime></modified>
<revised><datetime>20181002T170321,09+09</datetime></revised>
<lastaccessed><datetime>20181002T170321,10+09</datetime></lastaccessed>
<addedtofile><datetime>20181002T170321,10+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='4742' unid='AC12CEE4C530E1904925831B0007E0EB' sequence='1'>
<created><datetime>20181003T102603,31+09</datetime></created>
<modified><datetime>20181003T102603,32+09</datetime></modified>
<revised><datetime>20181003T102603,31+09</datetime></revised>
<lastaccessed><datetime>20181003T102603,32+09</datetime></lastaccessed>
<addedtofile><datetime>20181003T102603,32+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='47e6' unid='9BA3F5481045B3F44925831B001D23F6' sequence='1'>
<created><datetime>20181003T141817,50+09</datetime></created>
<modified><datetime>20181003T141817,53+09</datetime></modified>
<revised><datetime>20181003T141817,52+09</datetime></revised>
<lastaccessed><datetime>20181003T141817,53+09</datetime></lastaccessed>
<addedtofile><datetime>20181003T141817,53+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='47ee' unid='24F69FBB8BDC99264925831B001D545B' sequence='1'>
<created><datetime>20181003T142021,39+09</datetime></created>
<modified><datetime>20181003T142021,40+09</datetime></modified>
<revised><datetime>20181003T142021,39+09</datetime></revised>
<lastaccessed><datetime>20181003T142021,40+09</datetime></lastaccessed>
<addedtofile><datetime>20181003T142021,40+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='47f6' unid='510722BE7D1C90A04925831B001D9884' sequence='1'>
<created><datetime>20181003T142315,88+09</datetime></created>
<modified><datetime>20181003T142315,89+09</datetime></modified>
<revised><datetime>20181003T142315,88+09</datetime></revised>
<lastaccessed><datetime>20181003T142315,89+09</datetime></lastaccessed>
<addedtofile><datetime>20181003T142315,89+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='480e' unid='F541320F6C9C33CE4925831B001DE60C' sequence='1'>
<created><datetime>20181003T142634,36+09</datetime></created>
<modified><datetime>20181003T142634,37+09</datetime></modified>
<revised><datetime>20181003T142634,36+09</datetime></revised>
<lastaccessed><datetime>20181003T142634,37+09</datetime></lastaccessed>
<addedtofile><datetime>20181003T142634,37+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='481e' unid='DC1C4B7FF42E58DC4925831B002269C0' sequence='1'>
<created><datetime>20181003T151552,96+09</datetime></created>
<modified><datetime>20181003T151552,98+09</datetime></modified>
<revised><datetime>20181003T151552,97+09</datetime></revised>
<lastaccessed><datetime>20181003T151552,98+09</datetime></lastaccessed>
<addedtofile><datetime>20181003T151552,98+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='4826' unid='C34A9D0FE0C0D7A74925831B0022884A' sequence='1'>
<created><datetime>20181003T151711,14+09</datetime></created>
<modified><datetime>20181003T151711,15+09</datetime></modified>
<revised><datetime>20181003T151711,14+09</datetime></revised>
<lastaccessed><datetime>20181003T151711,15+09</datetime></lastaccessed>
<addedtofile><datetime>20181003T151711,15+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='482e' unid='758217DB6E69CF1C4925831B0022F28A' sequence='1'>
<created><datetime>20181003T152143,14+09</datetime></created>
<modified><datetime>20181003T152143,15+09</datetime></modified>
<revised><datetime>20181003T152143,14+09</datetime></revised>
<lastaccessed><datetime>20181003T152143,15+09</datetime></lastaccessed>
<addedtofile><datetime>20181003T152143,15+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='4836' unid='DCD717A14F5E8BFA4925831B002334F7' sequence='1'>
<created><datetime>20181003T152433,19+09</datetime></created>
<modified><datetime>20181003T152433,22+09</datetime></modified>
<revised><datetime>20181003T152433,21+09</datetime></revised>
<lastaccessed><datetime>20181003T152433,22+09</datetime></lastaccessed>
<addedtofile><datetime>20181003T152433,22+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='483e' unid='88D13E345222EA524925831B002364A5' sequence='1'>
<created><datetime>20181003T152635,25+09</datetime></created>
<modified><datetime>20181003T152635,26+09</datetime></modified>
<revised><datetime>20181003T152635,25+09</datetime></revised>
<lastaccessed><datetime>20181003T152635,26+09</datetime></lastaccessed>
<addedtofile><datetime>20181003T152635,26+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='4846' unid='B6A2F28B02C447694925831B0023ABF5' sequence='1'>
<created><datetime>20181003T152937,81+09</datetime></created>
<modified><datetime>20181003T152937,82+09</datetime></modified>
<revised><datetime>20181003T152937,81+09</datetime></revised>
<lastaccessed><datetime>20181003T152937,82+09</datetime></lastaccessed>
<addedtofile><datetime>20181003T152937,82+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='4852' unid='D86D90429437F9D74925831B0023C4AF' sequence='1'>
<created><datetime>20181003T153041,11+09</datetime></created>
<modified><datetime>20181003T153041,12+09</datetime></modified>
<revised><datetime>20181003T153041,11+09</datetime></revised>
<lastaccessed><datetime>20181003T153041,12+09</datetime></lastaccessed>
<addedtofile><datetime>20181003T153041,12+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='4862' unid='597AA811C16185884925831B00261A5A' sequence='1'>
<created><datetime>20181003T155611,14+09</datetime></created>
<modified><datetime>20181003T155611,15+09</datetime></modified>
<revised><datetime>20181003T155611,14+09</datetime></revised>
<lastaccessed><datetime>20181003T155611,15+09</datetime></lastaccessed>
<addedtofile><datetime>20181003T155611,15+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='4872' unid='F7A1A726D73B48394925831B0026B08C' sequence='1'>
<created><datetime>20181003T160235,64+09</datetime></created>
<modified><datetime>20181003T160235,65+09</datetime></modified>
<revised><datetime>20181003T160235,64+09</datetime></revised>
<lastaccessed><datetime>20181003T160235,65+09</datetime></lastaccessed>
<addedtofile><datetime>20181003T160235,65+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='702a' unid='F96A8ACD4B442F844925831B0026D0BB' sequence='1'>
<created><datetime>20181003T160358,03+09</datetime></created>
<modified><datetime>20181003T160358,04+09</datetime></modified>
<revised><datetime>20181003T160358,03+09</datetime></revised>
<lastaccessed><datetime>20181003T160358,04+09</datetime></lastaccessed>
<addedtofile><datetime>20181003T160358,04+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby></agentdata>

<agent name='(ツール)\(エージェントのプロパティをXML出力)' alias='OutputAgentForXML' hide='v3'
 publicaccess='false' designerversion='8.5.3' restrictions='unrestricted'>
<noteinfo noteid='7032' unid='9746A627FC8B70604925831B00270C6B' sequence='25'>
<created><datetime>20181003T160630,83+09</datetime></created>
<modified><datetime>20181031T100052,57+09</datetime></modified>
<revised><datetime>20181031T100052,56+09</datetime></revised>
<lastaccessed><datetime>20181031T100052,57+09</datetime></lastaccessed>
<addedtofile><datetime>20181003T160630,87+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby>
<wassignedby><name>CN=Administrator/O=Comture</name></wassignedby>
<designchange><datetime>20181031T100052,54+09</datetime></designchange>
<trigger type='agentlist'/>
<documentset type='selected'><search type='byformnames'><formchoice name='(01.データベース情報)|DbInfoDoc'/></search></documentset><code
 event='options'><lotusscript>Option Public
Option Declare
Use "NotesUICommonLib"
Use "ToolsLib"
Use "NotesDXLLIb"

</lotusscript></code><code event='initialize'><lotusscript>Sub Initialize
	Call SetProcess("*AG - (エージェントのプロパティ)")
	Call Main()
End Sub

</lotusscript></code><code event='Main'><lotusscript>Sub Main()
	On Error GoTo ErrorHandle
	
	Dim session As New NotesSession
	Dim workSpace As New NotesUIWorkspace
	Dim uiView As NotesUIView
	Dim curDB As NotesDatabase
	Dim unpro As NotesDocumentCollection
	Dim doc As NotesDocument
	
	Set curDB = session.CurrentDatabase
	Set uiView = workSpace.CurrentView
	If Not uiView Is Nothing Then
		Set unpro = uiView.Documents
		If unpro.Count = 0 Then Set unpro = Nothing
	End If
	
	If unpro Is Nothing Then Set unpro = curDB.UnprocessedDocuments
	
	If unpro.Count = 0 Then
		Call Messagebox_Alert("データベースを選択してください", "")
		Exit Sub
	End If
	
	Dim varSelectKind As Variant
	Dim varSelectCols As Variant
	Dim aryLst As Variant
	Dim aryDef As Variant
	
	ReDim aryLst(0) As String
	aryLst = ArrayAppend(aryLst, "エージェント(全て)")
	aryLst = ArrayAppend(aryLst, "エージェント(スケジュールのみ)")
	aryLst = ArrayAppend(aryLst, "エージェント(スケジュール以外)")
	aryLst = FullTrim(aryLst)
	
	varSelectKind = workSpace.Prompt(PROMPT_OKCANCELLIST , "CSV出力", "出力する設計の種類を選択", "", aryLst)
	If IsEmpty(varSelectKind) Then
		Exit Sub
	End If
	
	Dim defDir As String
	Dim defFileName As String
	Dim filePath As Variant
	
	Set doc = unpro.GetFirstDocument()
	
	If doc.Getitemvalue("DbTitle")(0) &lt;&gt; "" Then
		defFileName = "[" &amp; doc.Getitemvalue("DbTitle")(0) &amp; "]"
		If unpro.Count &lt;&gt; 1 Then
			defFileName = defFileName &amp; " 等(全" &amp; unpro.Count &amp; " DB) "
		End If
	End If
	defFileName = defFileName &amp; "_" &amp; varSelectKind &amp; ".xml"
	
	defDir = GetEnviron("USERPROFILE") &amp; "\Desktop"
	
	Do
		filePath = workSpace.Savefiledialog(False, "XMLファイル選択", "XMLファイル|*.xml", defDir, defFileName)
		If IsEmpty(filePath) Then
			Exit Sub
		ElseIf CheckDir(filePath(0), 0) = True Then
			If 7 = Messagebox_YesNo("ファイルを上書きしますか？", "") Then
			ElseIf CheckFileOpend(filePath(0)) = True Then
				Call Messagebox_Alert("ファイルが別のプロセスによりロックされている為書き込みできません。", "")
			Else
				Exit Do
			End If
		Else
			Exit Do
		End If
	Loop
	
	Dim db As NotesDatabase
	Dim notes As NotesNoteCollection
	Dim note As NotesDocument
	Dim noteID As String
	
	Dim objDXL As New CNotesDesignDXL
	Dim stream As NotesStream
	
	Set stream = session.Createstream()
	
	Call stream.Open(filePath(0))
	Call stream.Truncate()
	stream.Position = 0
	
	Set doc = unpro.GetFirstDocument()
	
	Do Until doc Is Nothing
		
		Set db = New NotesDatabase(doc.DbServer(0), doc.DbFilePath(0))
		If db.Isopen = True Then
			
			Set notes = db.CreateNoteCollection(False)
			notes.Selectagents = True
			Select Case varSelectKind
			Case "エージェント(スケジュールのみ)"
				notes.SelectionFormula = |$AssistTrigger="1"|
			Case "エージェント(スケジュール以外)"
				notes.SelectionFormula = |$AssistTrigger!="1"|
			Case Else
				notes.SelectionFormula = ""
			End Select
			Call notes.Buildcollection()
			
			Call objDXL.ExportDXL(notes, stream)
			
		End If
NextLoop:
		Set doc = unpro.GetNextDocument(doc)
	Loop
	
	Call stream.Close()
	
ExitTag:
	If Not stream Is Nothing Then
		Call stream.Close()
	End If
	Exit Sub
Error4412Handle:
Error4060Handle:
	Call SetErrorObject(Err, Error)
	Print "エラー：" &amp; GetErrorMessage()
	Call ClearErrorObject()
	Resume NextLoop
ErrorHandle:
	Call SetErrorObject(Err, Error)
	Call Messagebox_Error(GetErrorMessage(), "")
	Resume ExitTag
End Sub

</lotusscript></code>
<rundata processeddocs='0' exitcode='0' agentdata='46AC7775072649204925831C0020B381'>
<agentmodified><datetime>20181031T100052,57+09</datetime></agentmodified>
<agentrun><datetime>20190823T135349,03+09</datetime></agentrun>
<runlog>エージェント (ツール)\(エージェントのプロパティをXML出力)|OutputAgentForXML の 2019/08/23 13:53:44 での実行が開始しました。
選択文書で実行します。 合計 1
1 文書が検索条件に一致しました。
LotusScript を実行しました
エージェント (ツール)\(エージェントのプロパティをXML出力)|OutputAgentForXML の実行が終了しました。(2019/08/23 13:53:49)
</runlog></rundata></agent>

<agentdata>
<noteinfo noteid='7046' unid='CFE640141DF7C2154925831B0027CD49' sequence='1'>
<created><datetime>20181003T161444,57+09</datetime></created>
<modified><datetime>20181003T161444,58+09</datetime></modified>
<revised><datetime>20181003T161444,57+09</datetime></revised>
<lastaccessed><datetime>20181003T161444,58+09</datetime></lastaccessed>
<addedtofile><datetime>20181003T161444,58+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='706a' unid='7EBD4A0D03477ABE4925831B00288C97' sequence='1'>
<created><datetime>20181003T162254,31+09</datetime></created>
<modified><datetime>20181003T162254,32+09</datetime></modified>
<revised><datetime>20181003T162254,31+09</datetime></revised>
<lastaccessed><datetime>20181003T162254,32+09</datetime></lastaccessed>
<addedtofile><datetime>20181003T162254,32+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='7086' unid='ECFC7DAE203B18044925831B002A5B22' sequence='1'>
<created><datetime>20181003T164238,42+09</datetime></created>
<modified><datetime>20181003T164238,43+09</datetime></modified>
<revised><datetime>20181003T164238,42+09</datetime></revised>
<lastaccessed><datetime>20181003T164238,43+09</datetime></lastaccessed>
<addedtofile><datetime>20181003T164238,43+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='709a' unid='2157A4D3FBD9BC8E4925831B002E5F64' sequence='1'>
<created><datetime>20181003T172630,76+09</datetime></created>
<modified><datetime>20181003T172630,77+09</datetime></modified>
<revised><datetime>20181003T172630,76+09</datetime></revised>
<lastaccessed><datetime>20181003T172630,77+09</datetime></lastaccessed>
<addedtofile><datetime>20181003T172630,77+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='70a2' unid='7B677E51FC681E1E4925831B002EF559' sequence='1'>
<created><datetime>20181003T173254,65+09</datetime></created>
<modified><datetime>20181003T173254,66+09</datetime></modified>
<revised><datetime>20181003T173254,65+09</datetime></revised>
<lastaccessed><datetime>20181003T173254,66+09</datetime></lastaccessed>
<addedtofile><datetime>20181003T173254,66+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='70be' unid='8945C4770FD4C5214925831C00026290' sequence='1'>
<created><datetime>20181004T092603,04+09</datetime></created>
<modified><datetime>20181004T092603,05+09</datetime></modified>
<revised><datetime>20181004T092603,04+09</datetime></revised>
<lastaccessed><datetime>20181004T092603,05+09</datetime></lastaccessed>
<addedtofile><datetime>20181004T092603,05+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='714a' unid='05CB31CA37820EB54925831C0016EF8A' sequence='1'>
<created><datetime>20181004T131031,14+09</datetime></created>
<modified><datetime>20181004T131031,15+09</datetime></modified>
<revised><datetime>20181004T131031,14+09</datetime></revised>
<lastaccessed><datetime>20181004T131031,15+09</datetime></lastaccessed>
<addedtofile><datetime>20181004T131031,15+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='7156' unid='03F651F44B82E9D84925831C00170851' sequence='1'>
<created><datetime>20181004T131134,57+09</datetime></created>
<modified><datetime>20181004T131134,58+09</datetime></modified>
<revised><datetime>20181004T131134,57+09</datetime></revised>
<lastaccessed><datetime>20181004T131134,58+09</datetime></lastaccessed>
<addedtofile><datetime>20181004T131134,58+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='715e' unid='86A47DC4688A63654925831C00172F76' sequence='1'>
<created><datetime>20181004T131314,78+09</datetime></created>
<modified><datetime>20181004T131314,79+09</datetime></modified>
<revised><datetime>20181004T131314,78+09</datetime></revised>
<lastaccessed><datetime>20181004T131314,79+09</datetime></lastaccessed>
<addedtofile><datetime>20181004T131314,79+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='7166' unid='2A60F9921C9C9FA94925831C00175D42' sequence='1'>
<created><datetime>20181004T131512,02+09</datetime></created>
<modified><datetime>20181004T131512,03+09</datetime></modified>
<revised><datetime>20181004T131512,02+09</datetime></revised>
<lastaccessed><datetime>20181004T131512,03+09</datetime></lastaccessed>
<addedtofile><datetime>20181004T131512,03+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='7196' unid='BDA8459E999C0A6D4925831C00193A48' sequence='1'>
<created><datetime>20181004T133533,20+09</datetime></created>
<modified><datetime>20181004T133533,21+09</datetime></modified>
<revised><datetime>20181004T133533,20+09</datetime></revised>
<lastaccessed><datetime>20181004T133533,21+09</datetime></lastaccessed>
<addedtofile><datetime>20181004T133533,21+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='71a2' unid='9D0F04CAB0CC4AF34925831C0019EE46' sequence='1'>
<created><datetime>20181004T134313,98+09</datetime></created>
<modified><datetime>20181004T134313,99+09</datetime></modified>
<revised><datetime>20181004T134313,98+09</datetime></revised>
<lastaccessed><datetime>20181004T134313,99+09</datetime></lastaccessed>
<addedtofile><datetime>20181004T134313,99+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='721e' unid='F0F59864C5CE1D1B4925831C001E27D9' sequence='1'>
<created><datetime>20181004T142922,81+09</datetime></created>
<modified><datetime>20181004T142922,83+09</datetime></modified>
<revised><datetime>20181004T142922,82+09</datetime></revised>
<lastaccessed><datetime>20181004T142922,83+09</datetime></lastaccessed>
<addedtofile><datetime>20181004T142922,83+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='7222' unid='46AC7775072649204925831C0020B381' sequence='1'>
<created><datetime>20181004T145711,05+09</datetime></created>
<modified><datetime>20181004T145711,06+09</datetime></modified>
<revised><datetime>20181004T145711,05+09</datetime></revised>
<lastaccessed><datetime>20181004T145711,06+09</datetime></lastaccessed>
<addedtofile><datetime>20181004T145711,06+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='723e' unid='E48F932F3913A64B4925831C0021F777' sequence='1'>
<created><datetime>20181004T151100,39+09</datetime></created>
<modified><datetime>20181004T151100,40+09</datetime></modified>
<revised><datetime>20181004T151100,39+09</datetime></revised>
<lastaccessed><datetime>20181004T151100,40+09</datetime></lastaccessed>
<addedtofile><datetime>20181004T151100,40+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='724a' unid='A4B45407343421734925831C002246FD' sequence='1'>
<created><datetime>20181004T151423,97+09</datetime></created>
<modified><datetime>20181004T151423,98+09</datetime></modified>
<revised><datetime>20181004T151423,97+09</datetime></revised>
<lastaccessed><datetime>20181004T151423,98+09</datetime></lastaccessed>
<addedtofile><datetime>20181004T151423,98+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='725a' unid='47A2024FEAC2423F4925831C0022C3DB' sequence='1'>
<created><datetime>20181004T151943,63+09</datetime></created>
<modified><datetime>20181004T151943,64+09</datetime></modified>
<revised><datetime>20181004T151943,63+09</datetime></revised>
<lastaccessed><datetime>20181004T151943,64+09</datetime></lastaccessed>
<addedtofile><datetime>20181004T151943,64+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='7262' unid='3ED9E9962A98281E4925831C0022E2EA' sequence='1'>
<created><datetime>20181004T152103,14+09</datetime></created>
<modified><datetime>20181004T152103,15+09</datetime></modified>
<revised><datetime>20181004T152103,14+09</datetime></revised>
<lastaccessed><datetime>20181004T152103,15+09</datetime></lastaccessed>
<addedtofile><datetime>20181004T152103,15+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='726a' unid='69B32A87488EBC2C4925831C0022EBDD' sequence='1'>
<created><datetime>20181004T152126,05+09</datetime></created>
<modified><datetime>20181004T152126,06+09</datetime></modified>
<revised><datetime>20181004T152126,05+09</datetime></revised>
<lastaccessed><datetime>20181004T152126,06+09</datetime></lastaccessed>
<addedtofile><datetime>20181004T152126,06+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='7272' unid='BE1669069639012E4925831C00246AEB' sequence='1'>
<created><datetime>20181004T153746,67+09</datetime></created>
<modified><datetime>20181004T153746,68+09</datetime></modified>
<revised><datetime>20181004T153746,67+09</datetime></revised>
<lastaccessed><datetime>20181004T153746,68+09</datetime></lastaccessed>
<addedtofile><datetime>20181004T153746,68+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='727e' unid='D101604AD77D43F04925831C0024A254' sequence='1'>
<created><datetime>20181004T154008,52+09</datetime></created>
<modified><datetime>20181004T154008,56+09</datetime></modified>
<revised><datetime>20181004T154008,55+09</datetime></revised>
<lastaccessed><datetime>20181004T154008,56+09</datetime></lastaccessed>
<addedtofile><datetime>20181004T154008,56+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='7286' unid='EC9C7E6294EA71154925831C0024B11B' sequence='1'>
<created><datetime>20181004T154046,35+09</datetime></created>
<modified><datetime>20181004T154046,38+09</datetime></modified>
<revised><datetime>20181004T154046,37+09</datetime></revised>
<lastaccessed><datetime>20181004T154046,38+09</datetime></lastaccessed>
<addedtofile><datetime>20181004T154046,38+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='7292' unid='456BA7937E9EB2D84925831C0024DF94' sequence='1'>
<created><datetime>20181004T154245,32+09</datetime></created>
<modified><datetime>20181004T154245,33+09</datetime></modified>
<revised><datetime>20181004T154245,32+09</datetime></revised>
<lastaccessed><datetime>20181004T154245,33+09</datetime></lastaccessed>
<addedtofile><datetime>20181004T154245,33+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='729e' unid='DBFCFCDABA8ACA504925831C0024F3A3' sequence='1'>
<created><datetime>20181004T154336,67+09</datetime></created>
<modified><datetime>20181004T154336,68+09</datetime></modified>
<revised><datetime>20181004T154336,67+09</datetime></revised>
<lastaccessed><datetime>20181004T154336,68+09</datetime></lastaccessed>
<addedtofile><datetime>20181004T154336,68+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='72a6' unid='60726E9947738CD64925831C002505E3' sequence='1'>
<created><datetime>20181004T154423,39+09</datetime></created>
<modified><datetime>20181004T154423,40+09</datetime></modified>
<revised><datetime>20181004T154423,39+09</datetime></revised>
<lastaccessed><datetime>20181004T154423,40+09</datetime></lastaccessed>
<addedtofile><datetime>20181004T154423,40+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='72ae' unid='FC214D49C475DF844925831C00251450' sequence='1'>
<created><datetime>20181004T154500,32+09</datetime></created>
<modified><datetime>20181004T154500,33+09</datetime></modified>
<revised><datetime>20181004T154500,32+09</datetime></revised>
<lastaccessed><datetime>20181004T154500,33+09</datetime></lastaccessed>
<addedtofile><datetime>20181004T154500,33+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='72be' unid='EAF7C793BF944BC84925831C00253E3A' sequence='1'>
<created><datetime>20181004T154647,62+09</datetime></created>
<modified><datetime>20181004T154647,63+09</datetime></modified>
<revised><datetime>20181004T154647,62+09</datetime></revised>
<lastaccessed><datetime>20181004T154647,63+09</datetime></lastaccessed>
<addedtofile><datetime>20181004T154647,63+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='72c6' unid='72E9BBEAFC56DC4A4925831C00254D6D' sequence='1'>
<created><datetime>20181004T154726,53+09</datetime></created>
<modified><datetime>20181004T154726,54+09</datetime></modified>
<revised><datetime>20181004T154726,53+09</datetime></revised>
<lastaccessed><datetime>20181004T154726,54+09</datetime></lastaccessed>
<addedtofile><datetime>20181004T154726,54+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='72ce' unid='A00DC7105E9189204925831C0025576A' sequence='1'>
<created><datetime>20181004T154752,10+09</datetime></created>
<modified><datetime>20181004T154752,11+09</datetime></modified>
<revised><datetime>20181004T154752,10+09</datetime></revised>
<lastaccessed><datetime>20181004T154752,11+09</datetime></lastaccessed>
<addedtofile><datetime>20181004T154752,11+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='72da' unid='3E743825B6C10C3B4925831C00256714' sequence='1'>
<created><datetime>20181004T154832,20+09</datetime></created>
<modified><datetime>20181004T154832,21+09</datetime></modified>
<revised><datetime>20181004T154832,20+09</datetime></revised>
<lastaccessed><datetime>20181004T154832,21+09</datetime></lastaccessed>
<addedtofile><datetime>20181004T154832,21+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='72e2' unid='90EEBDB952FF27B24925831C002574F8' sequence='1'>
<created><datetime>20181004T154907,76+09</datetime></created>
<modified><datetime>20181004T154907,77+09</datetime></modified>
<revised><datetime>20181004T154907,76+09</datetime></revised>
<lastaccessed><datetime>20181004T154907,77+09</datetime></lastaccessed>
<addedtofile><datetime>20181004T154907,77+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='72f2' unid='354A3EB6F8A7311F4925831C00258956' sequence='1'>
<created><datetime>20181004T154959,90+09</datetime></created>
<modified><datetime>20181004T154959,91+09</datetime></modified>
<revised><datetime>20181004T154959,90+09</datetime></revised>
<lastaccessed><datetime>20181004T154959,91+09</datetime></lastaccessed>
<addedtofile><datetime>20181004T154959,91+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='72fe' unid='740D12F12AE4E83B4925831C0025998E' sequence='1'>
<created><datetime>20181004T155041,42+09</datetime></created>
<modified><datetime>20181004T155041,43+09</datetime></modified>
<revised><datetime>20181004T155041,42+09</datetime></revised>
<lastaccessed><datetime>20181004T155041,43+09</datetime></lastaccessed>
<addedtofile><datetime>20181004T155041,43+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='7306' unid='17020FAF7470803C4925831C0025F768' sequence='1'>
<created><datetime>20181004T155441,68+09</datetime></created>
<modified><datetime>20181004T155441,69+09</datetime></modified>
<revised><datetime>20181004T155441,68+09</datetime></revised>
<lastaccessed><datetime>20181004T155441,69+09</datetime></lastaccessed>
<addedtofile><datetime>20181004T155441,69+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='731e' unid='FF3EE283224C4A554925831C002653B8' sequence='1'>
<created><datetime>20181004T155838,00+09</datetime></created>
<modified><datetime>20181004T155838,01+09</datetime></modified>
<revised><datetime>20181004T155838,00+09</datetime></revised>
<lastaccessed><datetime>20181004T155838,01+09</datetime></lastaccessed>
<addedtofile><datetime>20181004T155838,01+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='732e' unid='A654576158C9BCAC4925831C00270F77' sequence='1'>
<created><datetime>20181004T160638,63+09</datetime></created>
<modified><datetime>20181004T160638,64+09</datetime></modified>
<revised><datetime>20181004T160638,63+09</datetime></revised>
<lastaccessed><datetime>20181004T160638,64+09</datetime></lastaccessed>
<addedtofile><datetime>20181004T160638,64+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby></agentdata>

<scriptlibrary name='NotesDXLLib_BK' hide='v3 v4strict' designerversion='8.5.3'>
<noteinfo noteid='7332' unid='88D6FBE2C02D7A594925831D000567EB' sequence='6'>
<created><datetime>20181005T095902,83+09</datetime></created>
<modified><datetime>20181031T100051,17+09</datetime></modified>
<revised><datetime>20181031T100051,16+09</datetime></revised>
<lastaccessed><datetime>20181031T100051,17+09</datetime></lastaccessed>
<addedtofile><datetime>20181005T095902,89+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby>
<wassignedby><name>CN=Administrator/O=Comture</name></wassignedby><code event='options'><lotusscript
>Option Public
Option Declare
Use "ErrorLib"
Use "ISOLib"
Use "ObjectLib"

</lotusscript></code><code event='declarations'><lotusscript>Class CNotesDesignDXL As CObjectable
	
	'メンバ変数の初期化
	Private Sub pInitMembers()
		Set Me.DocumentNode = Nothing
		Set Me.RootNode = Nothing
	End Sub
	
	'*******************************************************
	'NotesDXLImporterによりDXLをインポートする
	'@param
	'(Variant) varIn : インプット
	'	(String):
	'	(NotesRichTextItem): NotesRichTextItem
	'	(NotesStream):NotesStream
	'	(NotesDXLImporter): input が set 済みの NotesDXLImporter
	'db :(NotesDatabase) アウトプット
	'※XML 入力または出力にファイルを使用する前に、そのファイルに関連付けられた NoteStream オブジェクトを明示的に読み書きすることはできません。
	' 例えば、ファイルに書き込んでから XML 入力にそのファイルを使用する場合、NotesStream オブジェクトをいったん閉じてから再度開く必要があります。
	Sub ImportDXL(varIn As Variant, db As NotesDatabase)
		On Error GoTo ErrorHandle
		
		Dim session As New NotesSession
		Dim importer As NotesDXLImporter
		
		Dim strIn As String
		Dim rtItem As NotesRichTextItem
		Dim stream As NotesStream
		
		'input
		If UCase$(TypeName(varIn)) = UCase$("NotesDXLImporter") Then
			Set importer = varIn
		Else
			Set importer = session.CreateDXLImporter()
			
			Select Case UCase$(TypeName(varIn))
			Case UCase$("String")
				strIn = varIn
				Call importer.SetInput(strIn)
			Case UCase$("NotesRichTextItem")
				Set rtItem = varIn
				Call importer.SetInput(rtItem)
			Case UCase$("NotesStream")
				Set stream = varIn
				Call importer.SetInput(stream)
			End Select
		End If
		
		'output
		Call importer.SetOutput(db)
		
		Call importer.Process()
		
		Exit Sub
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Sub
	End Sub
	
	'*******************************************************
	'NotesDXLExporterによりDXLにエクスポートする
	'@param
	'(Variant) varIn : インプット
	'	(NotesNoteCollection):ビルド済みのNotesNoteCollection
	'	(NotesDocument):NotesDocument
	'	(String):Notes URL
	'(Variant) varOut : アウトプット
	'	(NotesStream) : オープン済みのNotesStream
	'	(NotesRichTextItem) : NotesRichTextItem
	'	(NotesDOMParser) : NotesDOMParser
	Sub ExportDXL(varIn As Variant, varOut As Variant)
		On Error GoTo ErrorHandle
		
		Dim session As New NotesSession
		Dim exporter As NotesDXLExporter
		
		Dim notes As NotesNoteCollection
		Dim note As NotesDocument
		Dim stream As NotesStream
		Dim rtItem As NotesRichTextItem
		Dim parser As NotesDOMParser
		
		Set exporter = session.CreateDXLExporter()
		
		'input
		Select Case UCase$(TypeName(varIn))
		Case UCase$("NotesNoteCollection")
			Set notes = varIn
			Call exporter.SetInput(notes)
		Case UCase$("NotesDocument")
			Set note = varIn
			Call exporter.SetInput(note)
		Case UCase$("String")
			Set note = session.Resolve(CStr(varIn))
			Call exporter.SetInput(note)
		End Select
		
		'output
		Select Case UCase$(TypeName(varOut))
		Case UCase$("NotesStream")
			Set stream = varOut
			Call exporter.SetOutput(stream)
		Case UCase$("NotesRichTextItem")
			Set rtItem = varOut
			Call exporter.SetOutput(rtItem)
		Case UCase$("NotesDOMParser")
			Set parser = varOut
			Call exporter.SetOutput(parser)
		End Select
		
		Call exporter.Process()
		
		Exit Sub
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Sub
	End Sub
	
	'DOMをDXLへシリアライズする
	'@param
	'(Variant)param : output
	'	(NotesRichTextItem):NotesRichTextItem
	'	(NotesStream):NotesStream
	'	(NotesDXLImporter):NotesDXLImporter
	Sub SerializeDXL(param As Variant)
		On Error GoTo ErrorHandle
		
		Dim parser As NotesDOMParser
		
		Dim rtItem As NotesRichTextItem
		Dim stream As NotesStream
		Dim importer As NotesDXLImporter
		
		Set parser = Me.pParser
		
		'input
		
		
		'output
		Select Case UCase$(TypeName(param))
			Case UCase$("NotesRichTextItem")
				Set rtItem = param
				Call parser.SetOutput(rtItem)
			Case UCase$("NotesStream")
				Set stream = param
				Call parser.SetOutput(stream)
			Case UCase$("NotesDXLImporter")
				Call parser.SetOutput(importer)
		End Select
		
		Call parser.Serialize()
		
		Exit Sub
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Sub
	End Sub
	
	'**********************************************
	'DXLのDOMへパースする
	'@param
	'(Variant)param : インプット
	'	(NotesDocument)DXLへパースする設計文書
	'	(NotesDOMElementNode)DXLへパースするNotesDOMElementNode
	Sub ParseDOM(param As Variant)
		On Error GoTo ErrorHandle
		
		Dim note As NotesDocument
		Dim parentNode As NotesDOMNode
		
		Dim session As NotesSession
		Dim parser As NotesDOMParser
		
		If TypeName(param) = UCase$("NotesDomElementNode") Then
			Set parentNode = param
			Do Until parentNode Is Nothing
				If parentNode.ParentNode.IsNull = True Then
					Exit Do
				End If
				Set parentNode = parentNode.ParentNode
			Loop
			
			Set Me.DocumentNode = parentNode
			Set Me.RootNode = param
			Set Me.pParser = Nothing
			Set Me.pNote = Nothing
		Else
			Set session = New NotesSession
			Set note = param
			Set parser = session.CreateDOMParser()
			Call Me.ExportDXL(note, parser)
			Set Me.DocumentNode = parser.Document
			Set Me.RootNode = parser.Document.DocumEntelement
			Set Me.pParser = parser
			Set Me.pNote = note
		End If
		
		Exit Sub
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Sub
	End Sub
	
	'@param
	'(String) strItemName : アイテムの名前
	'@return
	'(NotesDOMElementNode) : itemノード
	Function GetItemNode(strItemName As String) As NotesDOMElementNode
		On Error GoTo ErrorHandle
		
		Dim nodeList As NotesDOMNodeList
		Dim rootNode As NotesDOMElementNode
		Dim elemNode As NotesDOMElementNode
		Dim itemNode As NotesDOMElementNode
		
		Dim tmpItems List As NotesDOMElementNode
		Dim varItems As Variant
		
		If Me.IsAvailable("plstItems") = False Then
			Me.pListItems = tmpItems
			varItems = tmpItems
		Else
			varItems = Me.pListItems
		End If
		
		If IsElement(varItems( strItemName )) = False Then
			If Me.pLoadedAllItems = False Then
				Set rootNode = Me.RootNode
				Set nodeList = rootNode.GetElementsByTagName("item")
				Set elemNode = Me.GetFirstNode(nodeList)
				
				Do Until elemNode Is Nothing
					Set varItems(strItemName) = elemNode
					Set elemNode = Me.GetNextNode(elemNode)
				Loop
				
				Me.pListItems = varItems
				Me.pLoadedAllItems = True
			End If
			
			Set itemNode = varItems( strItemName )
		Else
			Set itemNode = varItems( strItemName )
		End If
		
		If IsElement(varItems( strItemName )) = False Then
			Set itemNode = Nothing
		Else
			Set itemNode = varItems( strItemName )
		End If
		
		Set GetItemNode = itemNode
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Function
	End Function
	
	'@param
	' nodeList : (NotesDOMNodeList)
	Function GetFirstNode(nodeList As NotesDOMNodeList) As NotesDOMNode
		On Error GoTo ErrorHandle
		
		Dim domNode As NotesDOMNode
		
		If nodeList Is Nothing Then
			Set domNode = Nothing
		ElseIf 0 &lt; nodeList.NumberOfEntries Then
			Set domNode = nodeList.getItem(1)
		Else
			Set domNode = Nothing
		End If
		
		If domNode Is Nothing Then
		ElseIf domNode.IsNull = True Then
			Set domNode = Nothing
		End If
		
		Set GetFirstNode = domNode
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Function
	End Function
	
	'@param
	'domNode : (NotesDOMNode)
	Function GetNextNode(domNode As NotesDOMNode) As NotesDOMNode
		On Error GoTo ErrorHandle
		
		Dim nextNode As NotesDOMNode
		
		If domNode Is Nothing Then
			Set nextNode = Nothing
		Else
			Set nextNode = domNode.NextSibling
		End If
		
		If nextNode Is Nothing Then
		ElseIf nextNode.IsNull = True Then
			Set nextNode = Nothing
		End If
		
		Set GetNextNode = nextNode
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Function
	End Function
	
	'@param
	' ListItems : (Variant)List As NotesDOMElementNode
	Private Property Get pListItems As Variant
		pListItems = Me.Members("pListItems")
	End Property
	'@param
	' ListItems : (Variant)List As NotesDOMElementNode
	Private Property Set pListItems As Variant
		Me.Members("pListItems") = pListItems
	End Property
	
	'@param
	'LoadedAllItems : (Boolean)
	Private Property Get pLoadedAllItems As Boolean
		If Me.IsAvailable("pLoadedAllItems") Then pLoadedAllItems = Me.Members("pLoadedAllItems")
	End Property
	'@param
	'LoadedAllItems : (Boolean)
	Private Property Set pLoadedAllItems As Boolean
		Me.Members("pLoadedAllItems") = pLoadedAllItems
	End Property
	
	'*************************************************
	'@return : (NotesDomElementNode)設計文書情報ノード
	Property Get NoteInfoNode As NotesDOMElementNode
		On Error GoTo ErrorHandle
		
		Dim rootNode As NotesDOMElementNode
		Dim nodeList As NotesDOMNodeList
		Dim elemNode As NotesDOMElementNode
		
		If Me.IsAvailable("NoteInfoNode") = False Then
			Set rootNode = Me.RootNode
			Set nodeList = rootNode.GetElementsByTagName("noteinfo")
			Set elemNode = Me.GetFirstNode(nodeList)
			Set Me.Members("NoteInfoNode") = elemNode
		Else
			Set elemNode = Me.Members("NoteInfoNode")
		End If
		
		Set NoteInfoNode = elemNode
		
		Exit Property
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Property
	End Property
	
	'************************
	'@return : (String)文書ID
	Property Get NoteID As String
		NoteID = Me.NoteInfoNode.GetAttribute("noteid")
	End Property
	
	'******************************
	'@return : (String)ユニバーサルID
	Property Get UniversalID As String
		UniversalID = Me.NoteInfoNode.GetAttribute("unid")
	End Property
	
	'***************************
	'@return : (String)シーケンス
	Property Get Sequence As String
		Sequence = Me.NoteInfoNode.GetAttribute("sequence")
	End Property
	
	'***********************
	'@return : (Date)作成日
	Property Get Created As Variant
		On Error GoTo ErrorHandle
		
		Dim nodeList As NotesDOMNodeList
		Dim elemNode As NotesDOMElementNode
		Dim objDT As NotesDateTime
		Dim varDate As Variant
		
		If Me.IsAvailable("Created") = False Then
			Set nodeList = Me.NoteInfoNode.GetElementsByTagName("created")
			Set elemNode = Me.GetFirstNode(nodeList)
			If Not elemNode Is Nothing Then
				Set nodeList = elemNode.GetElementsByTagName("datetime")
				Set elemNode = Me.GetFirstNode(nodeList)
				If Not elemNode Is Nothing Then
					Set objDT = ConvDateTime(elemNode.FirstChild.NodeValue)
					varDate = objDT.LsLocalTime
				End If
			End If
			Me.Members("Created") = varDate
		Else
			varDate = Me.Members("Created")
		End If
		
		Created = varDate
		
		Exit Property
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Property
	End Property
	
	'***********************
	'@return : (Date)更新日
	Property Get Modified As Variant
		On Error GoTo ErrorHandle
		
		Dim nodeList As NotesDOMNodeList
		Dim elemNode As NotesDOMElementNode
		Dim objDT As NotesDateTime
		Dim varDate As Variant
		
		If Me.IsAvailable("Modified") = False Then
			Set nodeList = Me.NoteInfoNode.GetElementsByTagName("modified")
			Set elemNode = Me.GetFirstNode(nodeList)
			If Not elemNode Is Nothing Then
				Set nodeList = elemNode.GetElementsByTagName("datetime")
				Set elemNode = Me.GetFirstNode(nodeList)
				If Not elemNode Is Nothing Then
					Set objDT = ConvDateTime(elemNode.FirstChild.NodeValue)
					varDate = objDT.LsLocalTime
				End If
			End If
			Me.Members("Modified") = varDate
		Else
			varDate = Me.Members("Modified")
		End If
		
		Modified = varDate
		
		Exit Property
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Property
	End Property
	
	'***********************
	'@return : (Date)更新日
	Property Get Revised As Variant
		On Error GoTo ErrorHandle
		
		Dim nodeList As NotesDOMNodeList
		Dim elemNode As NotesDOMElementNode
		Dim objDT As NotesDateTime
		Dim varDate As Variant
		
		If Me.IsAvailable("Revised") = False Then
			Set nodeList = Me.NoteInfoNode.GetElementsByTagName("revised")
			Set elemNode = Me.GetFirstNode(nodeList)
			If Not elemNode Is Nothing Then
				Set nodeList = elemNode.GetElementsByTagName("datetime")
				Set elemNode = Me.GetFirstNode(nodeList)
				If Not elemNode Is Nothing Then
					Set objDT = ConvDateTime(elemNode.FirstChild.NodeValue)
					varDate = objDT.LsLocalTime
				End If
			End If
			Me.Members("Revised") = varDate
		Else
			varDate = Me.Members("Revised")
		End If
		
		Revised = varDate
		
		Exit Property
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Property
	End Property
	
	'*************************
	'@return : (Date)追加日時
	Property Get AddedToFile As Variant
		On Error GoTo ErrorHandle
		
		Dim nodeList As NotesDOMNodeList
		Dim elemNode As NotesDOMElementNode
		Dim objDT As NotesDateTime
		Dim varDate As Variant
		
		If Me.IsAvailable("AddedToFile") = False Then
			Set nodeList = Me.NoteInfoNode.GetElementsByTagName("addedtofile")
			Set elemNode = Me.GetFirstNode(nodeList)
			If Not elemNode Is Nothing Then
				Set nodeList = elemNode.GetElementsByTagName("datetime")
				Set elemNode = Me.GetFirstNode(nodeList)
				If Not elemNode Is Nothing Then
					Set objDT = ConvDateTime(elemNode.FirstChild.NodeValue)
					varDate = objDT.LsLocalTime
				End If
			End If
			Me.Members("AddedToFile") = varDate
		Else
			varDate = Me.Members("AddedToFile")
		End If
		
		AddedToFile = varDate
		
		Exit Property
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Property
	End Property
	
	'*****************************
	'@return : (Date)最終アクセス日
	Property Get LastAccessed As Variant
		On Error GoTo ErrorHandle
		
		Dim nodeList As NotesDOMNodeList
		Dim elemNode As NotesDOMElementNode
		Dim objDT As NotesDateTime
		Dim varDate As Variant
		
		If Me.IsAvailable("LastAccessed") = False Then
			Set nodeList = Me.NoteInfoNode.GetElementsByTagName("lastaccessed")
			Set elemNode = Me.GetFirstNode(nodeList)
			If Not elemNode Is Nothing Then
				Set nodeList = elemNode.GetElementsByTagName("datetime")
				Set elemNode = Me.GetFirstNode(nodeList)
				If Not elemNode Is Nothing Then
					Set objDT = ConvDateTime(elemNode.FirstChild.NodeValue)
					varDate = objDT.LsLocalTime
				End If
			End If
			Me.Members("LastAccessed") = varDate
		Else
			varDate = Me.Members("LastAccessed")
		End If
		
		LastAccessed = varDate
		
		Exit Property
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Property
	End Property
	
	'*******************************
	'@return : (String Array)更新者
	Property Get UpdatedBy As Variant
		On Error GoTo ErrorHandle
		
		Dim rootNode As NotesDOMElementNode
		Dim elemNode As NotesDOMElementNode
		Dim nodeList As NotesDOMNodeList
		Dim aryString As Variant
		
		If Me.IsAvailable("UpdatedBy") = False Then
			ReDim aryString(0) As String
			Set rootNode = Me.DocumentNode.DocumentElement
			Set nodeList = rootNode.GetElementsByTagName("updatedby")
			Set elemNode = Me.GetFirstNode(nodeList)
			If Not elemNode Is Nothing Then
				Set nodeList = elemNode.GetElementsByTagName("name")
				Set elemNode = Me.GetFirstNode(nodeList)
				If Not elemNode Is Nothing Then
					aryString(0) = elemNode.FirstChild.NodeValue
					Set elemNode = Me.GetNextNode(elemNode)
					Do Until elemNode Is Nothing
						aryString = ArrayAppend(aryString, elemNode.FirstChild.NodeValue)
						Set elemNode = Me.GetNextNode(elemNode)
					Loop
				End If
			End If
			Me.Members("UpdatedBy") = aryString
		Else
			aryString = Me.Members("UpdatedBy")
		End If
		
		UpdatedBy = aryString
		
		Exit Property
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Property
	End Property
	
	'******************************
	'@return : (String Array)署名者
	Property Get SignedBy As Variant
		On Error GoTo ErrorHandle
		
		Dim rootNode As NotesDOMElementNode
		Dim elemNode As NotesDOMElementNode
		Dim nodeList As NotesDOMNodeList
		Dim aryString As Variant
		
		If Me.IsAvailable("SignedBy") = False Then
			ReDim aryString(0) As String
			Set rootNode = Me.DocumentNode.DocumentElement
			Set nodeList = rootNode.GetElementsByTagName("wassignedby")
			Set elemNode = Me.GetFirstNode(nodeList)
			If Not elemNode Is Nothing Then
				Set nodeList = elemNode.GetElementsByTagName("name")
				Set elemNode = Me.GetFirstNode(nodeList)
				If Not elemNode Is Nothing Then
					aryString(0) = elemNode.FirstChild.NodeValue
					Set elemNode = Me.GetNextNode(elemNode)
					Do Until elemNode Is Nothing
						aryString = ArrayAppend(aryString, elemNode.FirstChild.NodeValue)
						Set elemNode = Me.GetNextNode(elemNode)
					Loop
				End If
			End If
			Me.Members("SignedBy") = aryString
		Else
			aryString = Me.Members("SignedBy")
		End If
		
		SignedBy = aryString
		
		Exit Property
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Property
	End Property
	
	'****************************
	'@return : (Date Array)更新日
	Property Get DesignChange As Variant
		On Error GoTo ErrorHandle
		
		Dim rootNode As NotesDOMElementNode
		Dim elemNode As NotesDOMElementNode
		Dim nodeList As NotesDOMNodeList
		Dim aryDate As Variant
		Dim objDT As NotesDateTime
		Dim i As Integer
		
		If Me.IsAvailable("DesignChange") = False Then
			ReDim aryString(0) As String
			Set rootNode = Me.DocumentNode.DocumentElement
			Set nodeList = rootNode.GetElementsByTagName("designchange")
			Set elemNode = Me.GetFirstNode(nodeList)
			If Not elemNode Is Nothing Then
				Set nodeList = elemNode.GetElementsByTagName("datetime")
				Set elemNode = Me.GetFirstNode(nodeList)
				If Not elemNode Is Nothing Then
					aryDate(0) = elemNode.FirstChild.NodeValue
					Set elemNode = Me.GetNextNode(elemNode)
					Do Until elemNode Is Nothing
						Set objDT = ConvDateTime(elemNode.FirstChild.NodeValue)
						aryDate = ArrayAppend(aryDate, objDT.Lslocaltime)
						Set elemNode = Me.GetNextNode(elemNode)
					Loop
				End If
			End If
			Me.Members("DesignChange") = aryDate
		Else
			aryDate = Me.Members("DesignChange")
		End If
		
		DesignChange = aryDate
		
		Exit Property
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Property
	End Property
	
	'**************************************************************
	'@return : (NotesDOMDocumentNode)DXLのrootに位置するDocumentNode
	Property Get DocumentNode As NotesDOMDocumentNode
		Set DocumentNode = Me.Members("DocumentNode")
	End Property
	'**************************************************************
	'@param : (NotesDOMDocumentNode)DXLのrootに位置するDocumentNode
	Property Set DocumentNode As NotesDOMDocumentNode
		Set Me.Members("DocumentNode") = DocumentNode
	End Property
	
	'@param
	'RootNode : (NotesDOMElementNode)
	Property Get RootNode As NotesDOMElementNode
		Set RootNode = Me.Members("RootNode")
	End Property
	'@param
	'RootNode : (NotesDOMElementNode)
	Property Set RootNode As NotesDOMElementNode
		Set Me.Members("RootNode") = RootNode
	End Property
	
	'@param
	'Parser : (NotesDOMParser)
	Private Property Get pParser As NotesDOMParser
		Set pParser = Me.Members("pParser")
	End Property
	'@param
	'Parser : (NotesDOMParser)
	Private Property Set pParser As NotesDOMParser
		Set Me.Members("pParser") = pParser
	End Property
	
	'@param
	'Note : (NotesDocument)
	Private Property Get pNote As NotesDocument
		Set pNote = Me.Members("pNote")
	End Property
	'@param
	'Note : (NotesDocument)
	Private Property Set pNote As NotesDocument
		Set Me.Members("pNote") = pNote
	End Property
	
End Class
Class CNotesAgentDXL As CNotesDesignDXL
	
	'@return :(String Array)
	'  name,alias,enabled,trigger,documentset
	Property Get PropertyNames As Variant
		If Me.IsAvailable("PropertyNames") = False Then
			Me.Members("PropertyNames") = Split(_
			"name,alias,enabled,trigger,documentset"_
			, ",")
		End If
		PropertyNames = Me.Members("PropertyNames")
	End Property
	
	'@return :(String Array)
	'  name,alias,enabled,readers,
	'  designerversion,fromtemplate,hide,noreplace,
	'  propagatenoreplace,runaswebuser,restrictions,publicaccess,activatable,
	'  trigger, documentset
	Property Get AllPropertyNames As Variant
		If Me.IsAvailable("AllPropertyNames") = False Then
			Me.Members("AllPropertyNames") = Split(_
			"name,alias,enabled,readers," &amp;_
			"designerversion,fromtemplate,hide,noreplace," &amp;_
			"propagatenoreplace,runaswebuser,restrictions,publicaccess,activatable," &amp;_
			"trigger, documentset"_
			, ",")
		End If
		AllPropertyNames = Me.Members("AllPropertyNames")
	End Property
	
	'@return :(Variant List)
	Function GetPropertys() As Variant
		On Error GoTo ErrorHandle
		
		Dim aryNames As Variant
		
		aryNames = Me.PropertyNames
		
		GetPropertys = Me.GetPropertysByName(aryNames)
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Function
	End Function
	
	'@return :(Variant List)
	Function GetAllPropertys() As Variant
		On Error GoTo ErrorHandle
		
		Dim aryNames As Variant
		
		aryNames = Me.AllPropertyNames
		
		GetAllPropertys = Me.GetPropertysByName(aryNames)
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Function
	End Function
	
	'@param
	' aryNames : (String Array) property names
	'@return :(Variant List)
	Function GetPropertysByName(aryNames As Variant) As Variant
		On Error GoTo ErrorHandle
		
		Dim lstProperty List As Variant
		
		ForAll n In aryNames
			lstProperty(CStr(n)) = Me.GetProperty(CStr(n))
		End ForAll
		
		GetPropertysByName = lstProperty
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Function
	End Function
	
	'@return :(String Array)
	Property Get ScheduleNames As Variant
		
		Dim aryNames As Variant
		
		aryNames = Split(_
		"type,onweekends,runlocation,runserver,startdate,enddate"_
		, ",")
		
		Dim strType As String
		
		strType = Me.GetSchedule("type")
		
		Select Case strType
			Case "byminutes"
				aryNames = ArrayAppend(aryNames, Split("hours,minutes,starttime,endtime", ","))
			Case "daily"
				aryNames = ArrayAppend(aryNames, Split("starttime", ","))
			Case "weekly"
				aryNames = ArrayAppend(aryNames, Split("dayofweek,starttime", ","))
			Case "monthly"
				aryNames = ArrayAppend(aryNames, Split("dateinmonth,starttime", ","))
		End Select
		
		ScheduleNames = aryNames
	End Property
	
	'@return :(String Array)
	Property Get AllScheduleNames As Variant
		AllScheduleNames = Me.ScheduleNames
	End Property
	
	'@return :(Variant List)
	Function GetSchedules() As Variant
		On Error GoTo ErrorHandle
		
		Dim aryNames As Variant
		
		aryNames = Me.ScheduleNames
		
		GetSchedules = Me.GetSchedulesByName(aryNames)
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Function
	End Function
	
	'@return :(Variant List)
	Function GetAllSchedules() As Variant
		On Error GoTo ErrorHandle
		
		Dim aryNames As Variant
		
		aryNames = Me.AllScheduleNames
		
		GetAllSchedules = Me.GetSchedulesByName(aryNames)
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Function
	End Function
	
	'@param
	' aryNames : (String Array) property names
	'@return :(Variant List)
	Function GetSchedulesByName(aryNames As Variant) As Variant
		On Error GoTo ErrorHandle
		
		Dim lstSchedule List As Variant
		
		ForAll n In aryNames
			lstSchedule(CStr(n)) = Me.GetSchedule(CStr(n))
		End ForAll
		
		GetSchedulesByName = lstSchedule
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Function
	End Function
	
	Property Get AgentNode As NotesDOMElementNode
		On Error GoTo ErrorHandle
		
		Dim elemNode As NotesDOMElementNode
		
		If Me.IsAvailable("AgentNode") = False Then
			Set elemNode = Me.RootNode
			Set Me.Members("AgentNode") = elemNode
		Else
			Set elemNode = Me.Members("AgentNode")
		End If
		
		Set AgentNode = elemNode
		
		Exit Property
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Property
	End Property
	
	Property Get TriggerNode As NotesDOMElementNode
		On Error GoTo ErrorHandle
		
		Dim nodeList As NotesDOMNodeList
		Dim elemNode As NotesDOMElementNode
		
		If Me.IsAvailable("TriggerNode") = False Then
			Set nodeList = Me.AgentNode.GetElementsByTagName("trigger")
			Set elemNode = Me.GetFirstNode(nodeList)
			Set Me.Members("TriggerNode") = elemNode
		Else
			Set elemNode = Me.Members("TriggerNode")
		End If
		
		Set TriggerNode = elemNode
		
		Exit Property
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Property
	End Property
	
	Property Get ScheduleNode As NotesDOMElementNode
		On Error GoTo ErrorHandle
		
		Dim nodeList As NotesDOMNodeList
		Dim elemNode As NotesDOMElementNode
		
		If Me.IsAvailable("ScheduleNode") = False Then
			Set nodeList = Me.TriggerNode.GetElementsByTagName("schedule")
			Set elemNode = Me.GetFirstNode(nodeList)
			Set Me.Members("ScheduleNode") = elemNode
		Else
			Set elemNode = Me.Members("ScheduleNode")
		End If
		
		Set ScheduleNode = elemNode
		
		Exit Property
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Property
	End Property
	
	Property Get DocumentSetNode As NotesDOMElementNode
		On Error GoTo ErrorHandle
		
		Dim nodeList As NotesDOMNodeList
		Dim elemNode As NotesDOMElementNode
		
		If Me.IsAvailable("DocumentSetNode") = False Then
			Set nodeList = Me.AgentNode.GetElementsByTagName("documentset")
			Set elemNode = Me.GetFirstNode(nodeList)
			Set Me.Members("DocumentSetNode") = elemNode
		Else
			Set elemNode = Me.Members("DocumentSetNode")
		End If
		
		Set DocumentSetNode = elemNode
		
		Exit Property
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Property
	End Property
	
	Function SetPropertys(lstProperty As Variant) As Integer
		On Error GoTo ErrorHandle
		
		Dim pn As String
		
		ForAll p In lstProperty
			pn = ListTag(p)
			
			Call Me.SetProperty(pn, p)
		End ForAll
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Function
	End Function
	
	'@param
	'strName : (String)
	' name, alias, enabled, readers, designerversion, fromtemplate, hide, noreplace
	' propagatenoreplace, runaswebuser, restrictions, publicaccess, activatable
	' trigger, documentset
	'varVal : (Variant)
	Function SetProperty(strName As String, varVal As Variant) As Integer
		On Error GoTo ErrorHandle
		
		Dim nodeList As NotesDOMNodeList
		Dim elemNode As NotesDOMElementNode
		
		Const CHECK_MSG$ = "この値は許可されていません。"
		
		Dim strTxt As String
		
		Select Case LCase$(strName)
		Case "trigger"
			Set elemNode = Me.TriggerNode
			If elemNode Is Nothing Then
			Else
				strTxt = Me.ChangePropertyText(strName, CStr(varVal))
				If strTxt = "" Then
					Error USERERR, CHECK_MSG &amp; "[name = '" &amp; strName &amp; "', val = " &amp; varVal &amp; "]"
				End If
				
				Call elemNode.SetAttribute("type", varVal)
			End If
		Case "documentset"
			Set elemNode = Me.DocumentSetNode
			If elemNode Is Nothing Then
			Else
				strTxt = Me.ChangePropertyText(strName, CStr(varVal))
				If strTxt = "" Then
					Error USERERR, CHECK_MSG &amp; "[name = '" &amp; strName &amp; "', val = " &amp; varVal &amp; "]"
				End If
				
				Call elemNode.SetAttribute("type", varVal)
			End If
		Case "readers"
			
		Case Else
			Set elemNode = Me.AgentNode
			If elemNode Is Nothing Then
			Else
				Call elemNode.SetAttribute(strName, varVal)
			End If
		End Select
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Function
	End Function
	
	'@param
	'(String) strName
	' name, alias, enabled, readers, designerversion, fromtemplate, hide, noreplace
	' propagatenoreplace, runaswebuser, restrictions, publicaccess, activatable
	' trigger, documentset
	'@return プロパティ値
	Function GetProperty(strName As String) As Variant
		On Error GoTo ErrorHandle
		
		Dim nodeList As NotesDOMNodeList
		Dim elemNode As NotesDOMElementNode
		Dim domNode As NotesDOMNode
		Dim varVal As Variant
		Dim i As Integer
		
		Select Case LCase$(strName)
			Case "trigger"
				Set elemNode = Me.TriggerNode
				If elemNode Is Nothing Then
					varVal = ""
				Else
					varVal = elemNode.GetAttribute("type")
				End If
			Case "documentset"
				Set elemNode = Me.DocumentSetNode
				If elemNode Is Nothing Then
					varVal = ""
				Else
					varVal = elemNode.GetAttribute("type")
				End If
			Case "readers"
				If Me.IsAvailable("Readers") = False Then
					Set nodeList = Me.AgentNode.GetElementsByTagName("item")
					If nodeList.NumberOfEntries &lt;&gt; 0 Then
						Set elemNode = Me.GetItemNode("$Readers")
						If Not elemNode Is Nothing Then
							Set nodeList = elemNode.GetElementsByTagName("textlist")
							Set elemNode = Me.GetFirstNode(nodeList)
							If Not elemNode Is Nothing Then
								Set nodeList = elemNode.GetElementsByTagName("text")
								Set domNode = Me.GetFirstNode(nodeList)
								If Not domNode Is Nothing Then
									ReDim varVal(0) As String
									varVal(0) = domNode.FirstChild.NodeValue
									For i = 2 To nodeList.NumberOfEntries
										Set domNode = nodeList.Getitem(i)
										varVal = ArrayAppend(varVal, domNode.FirstChild.NodeValue)
									Next
								End If
							End If
						End If
					End If
					Me.Members("Readers") = varVal
				Else
					varVal = Me.Members("Readers")
				End If
				
			Case Else
				varVal = Me.AgentNode.GetAttribute(strName)
		End Select
		
		If IsArray(varVal) Then
		ElseIf varVal = "" Then
			Dim empty As Variant
			varVal = empty
		End If
		
		GetProperty = varVal
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Function
	End Function
	
	'@param
	'(String) strName
	' trigger, documentset, restrictions, enabled, runaswebuser, publicaccess, activatable
	' allowremotedebugging, profile, clientbackgroundthread, private, storehighlights
	Function GetPropertyText(strName As String) As String
		On Error GoTo ErrorHandle
		
		Dim strValue As String
		
		strValue = Me.GetProperty(strName)
		
		GetPropertyText = Me.ChangePropertyText(strName, strValue)
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Function
	End Function
	
	Function ChangePropertyText(strName As String, strValue As String) As String
		On Error GoTo ErrorHandle
		
		Dim retVal As String
		
		Select Case strName
			Case "trigger"
				Select Case strValue
				Case "scheduled":retVal="スケジュール"
				Case "actionsmenu":retVal="アクションメニューの選択"
				Case "agentlist":retVal="エージェントリストの選択"
				Case "beforenewmail":retVal="新規メールの受信前"
				Case "afternewmail":retVal="新規メールの受信後"
				Case "docupdate":retVal="文書の作成または更新後"
				Case "docpaste":retVal="文書が貼り付けられたとき"
				Case "serverstart":retVal="サーバー開始時"
				Case Else:retVal=strValue
				End Select
			Case "documentset"
				Select Case strValue
				Case "all":retVal="データベースのすべての文書"
				Case "modified":retVal="作成または変更されたすべての文書"
				Case "unreadinview":retVal="ビューのすべての未読文書"
				Case "allinview":retVal="ビューのすべての文書"
				Case "selected":retVal="すべての選択文書"
				Case "runonce","":retVal="なし"
				Case Else:retVal=strValue
				End Select
			Case "restrictions"
				Select Case strValue
				Case "unrestricted":retVal = "制限された操作を許可する"
				Case "fulladminunrestricted":retVal = "フルアドミニストレータ権限で制限された操作を許可する"
				Case Else:retVal = "制限された操作を許可しない"
				End Select
			Case "enabled"
				If Me.IsSchedule Or Me.IsAutomatic Or Me.IsDefault Then
					If strValue = "false" Then
						retVal = "無効"
					ElseIf strValue = "true" Or strValue = "" Then
						retVal = "有効"
					End If
				Else
					retVal = ""
				End If
			Case "noreplace"
				If strValue = "true" Then
					retVal = "更新時に再設計/設計の置換を禁止する"
				End If
				
			Case "propagatenoreplace"
				If strValue = "true" Then
					retVal = "設計の置換が禁止されていることを知らせる"
				End If
			Case "hide"
				retVal = strValue
				retVal = Replace(retVal, "v3", "")
				retVal = Trim$(retVal)
				retVal = Replace(retVal, " ", ",")
				retVal = Replace(retVal, "notes", "Lotus Notes R4.6以降のクライアントで非表示")
				retVal = Replace(retVal, "web", "Webブラウザで非表示")
				retVal = Replace(retVal, "v4", "Lotus Notes R4以降のクライアントのメニューに設計要素を表示しない")
			Case "runaswebuser":If strValue = "true" Then retVal = "Webユーザーとして実行"
			Case "publicaccess":If strValue = "true" Then retVal = "パブリックユーザーに対してこのエージェントの参照と実行を許可する"
			Case "activatable":If strValue = "true" Then retVal = "「編集者」レベルのユーザーの有効化を許可"
			Case "allowremotedebugging":If strValue = "true" Then retVal = "リモートデバッグを許可"
			Case "private":If strValue = "true" Then retVal = "個人エージェント"
			Case "showinsearch":If strValue = "true" Then retVal = "検索バーメニューの検索を保存"
			Case "storehighlights":If strValue = "true" Then retVal = "文書中のハイライトを保存"
			Case "clientbackgroundthread":If strValue = "true" Then retVal = "クライアントのバックグラウンドスレッドで実行"
			Case "profile":If strValue = "true" Then retVal = "エージェントをプロファイル"
			Case Else
				retVal = strValue
		End Select
		
		ChangePropertyText = retVal
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Function
	End Function
	
	Function SetSchedules(lstSchedule As Variant) As Integer
		On Error GoTo Errorhandle
		
		Dim pn As String
		
		ForAll s In lstSchedule
			pn = ListTag(s)
			Call Me.SetSchedule(pn, s)
		End ForAll
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Function
	End Function
	
	Function SetSchedule(strName As String, varVal As Variant) As Integer
		
		Dim nodeList As NotesDOMNodeList
		Dim elemNode As NotesDOMElementNode
		Dim objDT As NotesDateTime
		Dim strDT As String
		
		If Me.IsSchedule = False Then Exit Function
		
		Select Case LCase$(strName)
			Case "starttime", "endtime", "startdate", "enddate"
				Set elemNode = Me.ScheduleNode
				Set nodeList = elemNode.GetElementsByTagName(strName)
				Set elemNode = Me.GetFirstNode(nodeList)
				If Not elemNode Is Nothing Then
					Set nodeList = elemNode.GetElementsByTagName("datetime")
					Set elemNode = Me.GetFirstNode(nodeList)
					If Not elemNode Is Nothing Then
						Set objDT = New NotesDateTime(varVal)
						strDT = ConvISO8601Base(objDT)
						elemNode.Nodevalue = strDT
						'更新
						Me.Members("var" &amp; strName) = objDT.LsLocalTime
					End If
					
				End If
			Case Else
				Set elemNode = Me.ScheduleNode
				Call elemNode.Setattribute(strName, CStr(varVal))
		End Select
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Function
	End Function
	
	'@param
	' strName : パラメタ名
	'  type, onweekends, runlocation, runserver,
	'  hours, minutes, dayofweek, dateinmonth
	'  starttime, endtime, startdate, enddate
	'@return : (Variant)スケジュール設定値
	Function GetSchedule(strName As String) As Variant
		On Error GoTo ErrorHandle
		
		Dim nodeList As NotesDOMNodeList
		Dim elemNode As NotesDOMElementNode
		Dim objDT As NotesDateTime
		Dim varVal As Variant
		
		If Me.IsSchedule = False Then Exit Function
		
		Select Case LCase$(strName)
			Case "starttime", "endtime", "startdate", "enddate"
				If Me.IsAvailable("var" &amp; strName) = False Then
					Set nodeList = Me.ScheduleNode.GetElementsByTagName(strName)
					If nodeList.NumberOfEntries &lt;&gt; 0 Then
						Set elemNode = nodeList.GetItem(1)
						Set nodeList = elemNode.GetElementsByTagName("datetime")
						Set objDT = ConvDateTime(nodeList.GetItem(1).FirstChild.NodeValue)
						Me.Members("var" &amp; strName) = objDT.LsLocalTime
					End If
				End If
				varVal = Me.Members("var" &amp; strName)
			Case Else
				varVal = Me.ScheduleNode.GetAttribute(strName)
		End Select
		
		If IsArray(varVal) Then
		ElseIf varVal = "" Then
			Dim empty As Variant
			varVal = empty
		End If
		
		GetSchedule = varVal
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Function
	End Function
	
	'@param
	' strName : (String)
	'  type, dayofweek, runlocation, onweekends
	'@return : (String) スケジュール設定値のテキスト
	Function GetScheduleText(strName As String) As String
		On Error GoTo ErrorHandle
		
		Dim strValue As String
		
		strValue = Me.GetSchedule(strName)
		
		GetScheduleText = Me.ChangeScheduleText(strName, strValue)
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Function
	End Function
	
	Function ChangeScheduleText(strName As String, strValue As String) As String
		On Error GoTo ErrorHandle
		
		Dim retVal As String
		
		Select Case LCase$(strName)
		Case "type"
			Select Case strValue
			Case "byminutes":retVal="一日一回以上"
			Case "daily":retVal="日次"
			Case "weekly":retVal="週次"
			Case "monthly":retVal="月次"
			Case "never":retVal="なし"
			End Select
		Case "dayofweek"
			Select Case strValue
			Case "sunday":retVal = "日曜日"
			Case "monday":retVal = "月曜日"
			Case "tuesday":retVal = "火曜日"
			Case "wednesday":retVal = "水曜日"
			Case "thursday":retVal = "木曜日"
			Case "friday":retVal = "金曜日"
			Case "saturday":retVal = "土曜日"
			End Select
		Case "runlocation"
			Select Case strValue
			Case "choose":retVal = "エージェントが有効になったときにサーバーを指定"
			Case "specific":retVal = strValue
			Case Else:retVal = ""
			End Select
		Case "onweekends"
			If strValue = "false" Then retVal = "週末はエージェントを実行しない"
		Case Else
			retVal = strValue
		End Select
		
		ChangeScheduleText = retVal
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Function
	End Function
	
	'@return : (Boolean) True : スケジュールエージェント、False : スケジュールエージェント以外
	Property Get IsSchedule As Boolean
		IsSchedule = (Me.GetProperty("trigger") = "scheduled")
	End Property
	
	'@return : (Boolean) True : 自動エージェント、 False : 自動エージェント以外
	Property Get IsAutomatic As Boolean
		On Error GoTo ErrorHandle
		
		Dim elemNode As NotesDOMElementNode
		Set elemNode = Me.ScheduleNode
		If Not elemNode Is Nothing Then IsAutomatic = (elemNode.GetAttribute("type") = "automatic")
		
		Exit Property
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Property
	End Property
	
	'@return : (Boolean) True : デフォルトエージェント、 False : デフォルトエージェント以外
	Property Get IsDefault As Boolean
		IsDefault = (Me.GetProperty("default") = "true")
	End Property
	
	'@return
	'(Boolean) True : 文書の選択有、False : 無
	Property Get HasSearch As Boolean
		On Error GoTo ErrorHandle
		
		Dim elemNode As NotesDOMElementNode
		Set elemNode = Me.DocumentSetNode
		If Not elemNode Is Nothing Then HasSearch = (elemNode.NumberOfChildNodes &lt;&gt; 0)
		
		Exit Property
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Property
	End Property
	
End Class
Class CNotesDatabaseDXL As CNotesDesignDXL
	
	'@override
	'@param
	'(Variant)param: only NotesNoteCollection
	Sub ParseDOM(param As Variant)
		On Error GoTo ErrorHandle
		
		Dim notes As NotesNoteCollection
		
		Set notes = param
		
		If TypeName(param) = UCase$("NotesNoteCollection") Then
			Set Me.Database = notes.Parent
			Call CNotesDesignDXL..ParseDOM(notes)
		End If
		
		Exit Sub
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Sub
	End Sub
	
	'@override
	Property Get NoteInfoNode As NotesDOMElementNode
		On Error GoTo ErrorHandle
		
		Dim elemNode As NotesDOMElementNode
		Dim nodeList As NotesDOMNodeList
		
		If Me.IsAvailable("NoteInfoNode") = False Then
			Set elemNode = Me.GetNoteNode("icon", "true")
			If Not elemNode Is Nothing then
				Set nodeList = elemNode.GetElementsByTagName("noteinfo")
				Set elemNode = Me.GetFirstNode(nodeList)
			End If
			Set Me.Members("NoteInfoNode") = elemNode
		Else
			Set elemNode = Me.Members("NoteInfoNode")
		End If
		
		Set NoteInfoNode = elemNode
		
		Exit Property
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Property
	End Property
	
	Property Get DatabaseNode As NotesDOMElementNode
		On Error GoTo ErrorHandle
		
		Dim elemNode As NotesDOMElementNode
		
		If Me.IsAvailable("DatabaseNode") = False Then
			Set elemNode = Me.RootNode
			Set Me.Members("DatabaseNode") = elemNode
		Else
			Set elemNode = Me.Members("DatabaseNode")
		End If
		
		Set DatabaseNode = elemNode
		
		Exit Property
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Property
	End Property
	
	Property Get DatabaseInfoNode As NotesDOMElementNode
		On Error GoTo ErrorHandle
		
		Dim nodeList As NotesDOMNodeList
		Dim elemNode As NotesDOMElementNode
		
		If Me.IsAvailable("DatabaseInfoNode") = False Then
			Set nodeList = Me.DatabaseNode.GetElementsByTagName("databaseinfo")
			Set elemNode = Me.GetFirstNode(nodeList)
			Set Me.Members("DatabaseInfoNode") = elemNode
		Else
			Set elemNode = Me.Members("DatabaseInfoNode")
		End If
		
		Set DatabaseInfoNode = elemNode
		
		Exit Property
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Property
	End Property
	
	Property Get FullTextSettingsNode As NotesDOMElementNode
		On Error GoTo ErrorHandle
		
		Dim nodeList As NotesDOMNodeList
		Dim elemNode As NotesDOMElementNode
		
		If Me.IsAvailable("FullTextSettingsNode") = False Then
			Set nodeList = Me.DatabaseNode.GetElementsByTagName("fulltextsettings")
			Set elemNode = Me.GetFirstNode(nodeList)
			Set Me.Members("FullTextSettingsNode") = elemNode
		Else
			Set elemNode = Me.Members("FullTextSettingsNode")
		End If
		
		Set FullTextSettingsNode = elemNode
		
		Exit Property
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Property
	End Property
	
	Property Get LaunchSettingsNode As NotesDOMElementNode
		On Error GoTo ErrorHandle
		
		Dim nodeList As NotesDOMNodeList
		Dim elemNode As NotesDOMElementNode
		
		If Me.IsAvailable("LaunchSettingsNode") = False Then
			Set nodeList = Me.DatabaseNode.GetElementsByTagName("launchsettings")
			Set elemNode = Me.GetFirstNode(nodeList)
			Set Me.Members("LaunchSettingsNode") = elemNode
		Else
			Set elemNode = Me.Members("LaunchSettingsNode")
		End If
		
		Set LaunchSettingsNode = elemNode
		
		Exit Property
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Property
	End Property
	
	Property Get IconNoteDXL As CNotesDesignDXL
		On Error GoTo ErrorHandle
		
		Dim elemNode As NotesDOMElementNode
		Dim objDXL As CNotesDesignDXL
		
		If Me.IsAvailable("IconNoteDXL") = False Then
			Set elemNode = Me.GetNoteNode("icon", "true")
			If Not elemNode Is Nothing Then
				Set objDXL = New CNotesDesignDXL
				Call objDXL.ParseDOM(elemNode)
			End If
			Set Me.Members("IconNoteDXL") = objDXL
		Else
			Set objDXL = Me.Members("IconNoteDXL")
		End If
		
		Set IconNoteDXL = objDXL
		
		Exit Property
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Property
	End Property
	
	Property Get ReplicationFormulaDXL As CNotesDesignDXL
		On Error GoTo ErrorHandle
		
		Dim elemNode As NotesDOMElementNode
		Dim objDXL As CNotesDesignDXL
		
		If Me.IsAvailable("ReplicationFormulaDXL") = False Then
			Set elemNode = Me.GetNoteNode("replicationformula", "")
			If Not elemNode Is Nothing Then
				Set objDXL = New CNotesDesignDXL
				Call objDXL.ParseDOM(elemNode)
			End If
			Set Me.Members("ReplicationFormulaDXL") = objDXL
		Else
			Set objDXL = Me.Members("ReplicationFormulaDXL")
		End If
		
		Set ReplicationFormulaDXL = objDXL
		
		Exit Property
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Property
	End Property
	
	Property Get ArchiveProfileDXL As CNotesDesignDXL
		On Error GoTo ErrorHandle
		
		Dim elemNode As NotesDOMElementNode
		Dim objDXL As CNotesDesignDXL
		
		If Me.IsAvailable("ArchiveProfileDXL") = False Then
			Set elemNode = Me.GetProfileDocumentNode("archive profile")
			If Not elemNode Is Nothing Then
				Set objDXL = New CNotesDesignDXL
				Call objDXL.ParseDOM(elemNode)
			End If
			Set Me.Members("ArchiveProfileDXL") = objDXL
		Else
			Set objDXL = Me.Members("ArchiveProfileDXL")
		End If
		
		Set ArchiveProfileDXL = objDXL
		
		Exit Property
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Property
	End Property
	
	'@param
	'(String)strClass : Class Name
	'(String)strDefault : has "default" attribute
	Function GetNoteNode(strClass As String, strDefault As String) As NotesDOMElementNode
		On Error GoTo ErrorHandle
		
		Dim nodeList As NotesDOMNodeList
		Dim elemNode As NotesDOMElementNode
		Dim entryNode As NotesDOMElementNode
		Dim strMember As String
		
		strMember="obj" &amp; strClass &amp; "NoteNode"
		
		If Me.IsAvailable(strMember) = False Then
			Set nodeList = Me.DatabaseNode.GetElementsByTagName("note")
			Set elemNode = Me.GetFirstNode(nodeList)
			Do Until elemNode Is Nothing
				If elemNode.IsNull = True Then
				ElseIf elemNode.GetAttribute("class") = LCase$(strClass) Then
					Set entryNode = elemNode
					If LCase$(strDefault) = "true" And elemNode.GetAttribute("default") = LCase$(strDefault) Then
						Exit Do
					End If
				End If
				Set elemNode = Me.GetNextNode(elemNode)
			Loop
			Set Me.Members(strMember) = entryNode
		Else
			Set entryNode = Me.Members(strMember)
		End If
		
		Set GetNoteNode = entryNode
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Function
	End Function
	
	'@param
	'(String)strName : Profile Name
	Function GetProfileDocumentNode(strName As String) As NotesDOMElementNode
		On Error GoTo ErrorHandle
		
		Dim nodeList As NotesDOMNodeList
		Dim elemNode As NotesDOMElementNode
		Dim entryNode As NotesDOMElementNode
		Dim strMember As String
		Dim i As Integer
		
		strMember="obj" &amp; strName &amp; "ProfileDocumentNode"
		
		If Me.IsAvailable(strMember) = False Then
			Set nodeList = Me.DatabaseNode.GetElementsByTagName("profiledocument")
			Set elemNode = Me.GetFirstNode(nodeList)
			Do Until elemNode Is Nothing
				If elemNode.IsNull = True Then
				ElseIf elemNode.GetAttribute("name") = LCase$(strName) Then
					Exit Do
				End If
				Set elemNode = Me.GetNextNode(elemNode)
			Loop
			Set Me.Members(strMember) = entryNode
		Else
			Set entryNode = Me.Members(strMember)
		End If
		
		Set GetProfileDocumentNode = entryNode
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Function
	End Function
	
	'@param
	'(String)strName
	' dbid, odsversion, diskspace, percentused, numberofdocuments
	' datamodified, designmodified, created, modified
	Function GetProperty(strName As String) As Variant
		On Error GoTo ErrorHandle
		
		Dim elemNode As NotesDOMElementNode
		Dim nodeList As NotesDOMNodeList
		Dim objDT As NotesDateTime
		Dim retVal As Variant
		
		Select Case LCase$(strName)
			Case "dbid", "odsversion", "diskspace", "percentused", "numberofdocuments"
				Set elemNode = Me.DatabaseInfoNode
				If elemNode Is Nothing Then
					retVal = ""
				Else
					retVal = elemNode.GetAttribute(strName)
				End If
			Case "datamodified", "designmodified"
				If Me.IsAvailable("var" &amp; strName) = False Then
					Set elemNode = Me.DatabaseInfoNode
					Set nodeList = elemNode.GetElementsByTagName(strName)
					Set elemNode = Me.GetFirstNode(nodeList)
					If Not elemNode Is Nothing Then
						Set nodeList = elemNode.GetElementsByTagName("datetime")
						Set elemNode = Me.GetFirstNode(nodeList)
						Set objDT = ConvDateTime(elemNode.FirstChild.NodeValue)
						retVal = objDT.LsLocalTime
					End If
					Me.Members("var" &amp; strName) = retVal
				Else
					retVal = Me.Members("var" &amp; strName)
				End If
			Case "created":retVal=Me.Created
			Case "modified":retVal=Me.Modified
			Case Else
				retVal = Me.DatabaseNode.GetAttribute(strName)
		End Select
		
		GetProperty = retVal
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Function
	End Function
	
	'@param
	'(String)strName
	' usejavascriptinpages, requiressl, nourlopen, allowpost8html, allowbackgroundagents,
	' allowstoredforms, imageloadsdeferred, allowdocumentlocking, inheritostheme
	' diskspace, percentused, numberofdocuments, datamodified, designmodified
	' created, modified, replicaid, odsversion
	' allowdesignlocking, listindbcatalog, showinopendialog, multidbindexed,
	' markmodifiedunread, trackreplyfwd, fromtemplate, advancedtemplate,
	' copyprofiledocswithdesign, multilingual, defaultlanguage, defaultsortorder,
	' unicodestandardsorting
	' maintainunread, replicateunread, optimizetablebitmaps, overwritefreespace,
	' savelastaccessed, logtransactions, allowspecialhierarchy, uselz1, allowheadlinemonitors,
	' increasemaxfields, supportrespthread, nosimplesearch, compressdesign, compressdata,
	' noautoviewupdate, disableexport, allowsoftdeletion, maxupdatedbyentries, maxrevisionentries,
	' allowrestdbapi
	Function GetPropertyText(strName As String) As String
		On Error GoTo ErrorHandle
		
		Dim retVal As String, strValue As String, tmpStr As String
		Dim elemNode As NotesDOMElementNode
		Dim nodeList As NotesDOMNode
		Dim objDXL As CNotesAgentDXL
		Dim i As Integer
		
		strValue = Me.GetProperty(strName)
		
		Select Case strName
		'[基本]タブ
		Case "usejavascriptinpages":If strValue&lt;&gt;"false" Then retVal="ページ生成時に JavaScript を使用"
		Case "requiressl":If strValue="true" Then retVal="SSL接続の要求"
		Case "nourlopen":If strValue="true" Then retVal="URL参照を許可しない"
		Case "$AllowPost8HTML", "allowpost8html":
			Set objDXL = Me.IconNoteDXL
			If Not objDXL Is Nothing Then
				Set elemNode = objDXL.GetItemNode("$AllowPost8HTML")
				If elemNode Is Nothing Then
				ElseIf elemNode.NumberOfChildNodes &lt;&gt; 0 Then
				ElseIf elemNode.FirstChild.NodeValue = "1" Then
					retVal="拡張 HTML 生成を有効にする"
				End If
			End If
		Case "allowbackgroundagents":If strValue="false" Then retVal = "バックグラウンドエージェント不可"
		Case "allowstoredforms":If strValue&lt;&gt;"false" Then retVal="格納フォームの使用を許可"
		Case "imageloadsdeferred":If strValue="true" Then retVal="ロード後にイメージを表示"
		Case "allowdocumentlocking":If strValue="true" Then retVal="文書ロックを許可"
		Case "inheritostheme":If strValue="true" Then retVal="Lotus Notes プリファレンスからオペレーティングシステムのテーマを継承する"
		'[情報]タブ
		Case "diskspace"
			Dim aryUNIT As Variant, dblSize As Double, strUNIT As String
			aryUNIT=Split("B,MB,GB,TB")
			dblSize=CDbl(strValue)
			strUNIT=aryUNIT(0)
			For i = 0 To UBound(aryUNIT)
				If 4 &lt; Len(CStr(dblSize)) Then
					dblSize=(dblSize/1024)
					strUNIT=aryUNIT(i)
				End If
			Next
			retVal="サイズ[" &amp; strValue &amp; " " &amp; strUNIT &amp; "]"
		Case "percentused":retVal="使用率[" &amp; CStr(Round(strValue, 2)) &amp; " %]"
		Case "numberofdocuments":retVal="文書数[" &amp; strValue &amp; " 文書]"
		Case "datamodified":retVal="データ更新日[" &amp; strValue &amp; "]"
		Case "designmodified":retVal="設計更新日[" &amp; strValue &amp; "]"
		Case "created":retVal="作成日[" &amp; strValue &amp; "]"
		Case "modified":retVal="更新日[" &amp; strValue &amp; "]"
		Case "replicaid", "dbid":retVal="レプリカID[" &amp; strValue &amp; "]"
		Case "odsversion":retVal="ODSバージョン[" &amp; strValue &amp; "]"
		'ユーザーの使用状況はlog.nsfのSession文書を参照・集計することで得られる
		'[設計]タブ
		Case "allowdesignlocking":If strValue="true" Then retVal="設計のロックを許可"
		Case "ListInDbCatalog","listindbcatalog"
			If Me.Database.ListInDbCatalog Then
				retVal="データベースカタログに表示[" &amp; Me.GetProperty("categories") &amp; "]"
			End If
		Case "showinopendialog":If strValue&lt;&gt;"false" Then retVal="[アプリケーションを開く]ダイアログに表示"
		Case "multidbindexed":If strValue="true" Then retVal="サイト検索に含む"
		Case "markmodifiedunread":If strValue="false" Then retVal="更新文書に未読マークをつけない"
		Case "trackreplyfwd":If strValue="true" Then retVal="返信あるいは転送をマークする"
		Case "fromtemplate":If strValue&lt;&gt;"" Then retVal="テンプレートから設計を引き継ぐ[" &amp; strValue &amp; "]"
		Case "templatename":If strValue&lt;&gt;"" Then retVal="マスターテンプレートデータベース[" &amp; strValue &amp; "]"
		Case "advancedtemplate":If strValue="true" Then retVal="詳細テンプレートとして[新規アプリケーション]ダイアログにリスト表示"
		Case "copyprofiledocswithdesign":If strValue="true" Then retVal="設計と共にプロファイル文書をコピー"
		Case "multilingual":If strValue="true" Then retVal="マルチリンガル データベース"
		Case "defaultlanguage":If strValue&lt;&gt; "" Then retVal="デフォルトの言語[" &amp; strValue &amp; "]"
		Case "defaultsortorder":If strValue&lt;&gt;"" Then retVal="デフォルトのソート方法[" &amp; strValue &amp; "]"
		Case "unicodestandardsorting":If strValue="true" Then retVal="Unicode スタンダードソート"
		'[詳細タブ]
		Case "maintainunread":If strValue="false" Then retVal="未読マークを複製しない"
		Case "replicateunread"
			Select Case strValue
			Case "cluster":retVal="未読マークを複製する[クラスタサーバーのみ]"
			Case "all":retVal="未読マークを複製する[すべてのサーバー]"
			Case Else:retVal="未読マークを複製する[なし]"
			End Select
		Case "optimizetablebitmaps":If strValue="true" Then retVal="文書テーブルマップの最適化"
		Case "overwritefreespace":If strValue="false" Then retVal="空きスペースに上書きしない"
		Case "savelastaccessed":If strValue="true" Then retVal="LastAccessed プロパティを保持"
		Case "logtransactions":If strValue="false" Then retVal="トランザクションログを無効"
		Case "allowspecialhierarchy":If strValue="false" Then retVal="文書の階層情報を使用しない"
		Case "uselz1":If strValue="true" Then retVal="添付ファイルの圧縮形式として LZ1 を使用"
		Case "allowheadlinemonitors":If strValue="false" Then retVal="ヘッドラインモニターを許可しない"
		Case "increasemaxfields":If strValue="true" Then retVal="データベースで多くのフィールドを許可"
		Case "supportrespthread":If strValue="true" Then retVal="返答スレッド履歴をサポート"
		Case "nosimplesearch":If strValue="true" Then retVal="簡易検索を許可しない"
		Case "compressdesign":If strValue="true" Then retVal="データベース設計の圧縮"
		Case "compressdata":If strValue="true" Then retVal="文書データの圧縮"
		Case "noautoviewupdate":If strValue="true" Then retVal="ビューの自動更新を無効にする"
		Case "$DisableExport", "disableexport":
			Set objDXL = Me.IconNoteDXL
			If Not objDXL Is Nothing Then
				Set elemNode = objDXL.GetItemNode("$DisableExport")
				If elemNode Is Nothing Then
				ElseIf elemNode.NumberOfChildNodes &lt;&gt; 0 Then
				ElseIf elemNode.FirstChild.NodeValue = "1" Then
					retVal="ビューデータの書き出しを無効にする"
				End If
			End If
		Case "allowsoftdeletion"
			If strValue="true" Then
				tmpStr=Me.GetProperty("softdeletionsexpirein")
				If tmpStr = "" Then tmpStr="48"
				retVal="一時的削除を許可[文書を完全に削除:" &amp; tmpStr &amp; " 時間後]"
			End If
		Case "maxupdatedbyentries":retVal="$UpdatedBy フィールドのエントリ制限[" &amp; strValue &amp; "]"
		Case "maxrevisionentries":retVal="$Revisions フィールドのエントリ制限[" &amp; strValue &amp; "]"
		Case "$AllowRESTDbAPI", "allowrestdbapi"
			Set objDXL = Me.IconNoteDXL
			If Not objDXL Is Nothing Then
				Set elemNode = objDXL.GetItemNode("$AllowRESTDbAPI")
				If elemNode Is Nothing Then
				ElseIf elemNode.NumberOfChildNodes &lt;&gt; 0 Then
				ElseIf elemNode.FirstChild.NodeValue = "1" Then
					retVal="Lotus Domino データサービスを許可[ビューのみ]"
				ElseIf elemNode.FirstChild.NodeValue = "2" Then
					retVal="Lotus Domino データサービスを許可[ビューと文書]"
				End If
			End If
		Case Else:retVal = strValue
		End Select
		
		GetPropertyText = retVal
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Function
	End Function
	
	'
	Function GetArchiveProfile(strName As String) As Variant
		On Error GoTo ErrorHandle
		
		Dim itemNode As NotesDOMElementNode
		Dim nodeList As NotesDOMNodeList
		Dim elemNode As NotesDOMElementNode
		Dim objDXL As CNotesDesignDXL
		Dim retVal As Variant
		Dim i As Integer
		
		Set objDXL = Me.ArchiveProfileDXL
		If objDXL Is Nothing Then Exit Function
		
		Select Case strName
			Case "ArchProfilesToCopy", "ArchivePrivatePolicyList"
				Set itemNode = objDXL.GetItemNode(strName)
				If itemNode Is Nothing Then
				ElseIf itemNode.NumberOfChildNodes&lt;&gt; 0 Then
					Set elemNode = itemNode.FirstChild
					Set nodeList = elemNode.GetElementsByTagName("text")
					Set elemNode = Me.GetFirstNode(nodeList)
					If Not elemNode Is Nothing Then
						ReDim retVal(0) As Variant
						retVal(0) = elemNode.NodeValue
						Set elemNode = Me.GetNextNode(elemNode)
						Do Until elemNode Is Nothing
							retVal = ArrayAppend(retVal, elemNode.NodeValue)
							Set elemNode = Me.GetNextNode(elemNode)
						Loop
					End If
				End If
			Case "created":retVal=objDXL.Created
			Case "modified":retVal=objDXL.Modified
			Case "revised":retVal=objDXL.revised
			Case "lastaccessed":retVal=objDXL.LastAccessed
			Case "addedtofile":retVal=objDXL.AddedToFile
			Case "updatedby":retVal=objDXL.UpdatedBy
			Case "revisions":retVal=objDXL.Revised
			Case "wassignedby":retVal=objDXL.SignedBy
			Case Else
				Set itemNode = Me.GetItemNode(strName)
				If itemNode Is Nothing Then
				ElseIf itemNode.NumberOfChildNodes &lt;&gt; 0 Then
					Set nodeList = itemNode.GetElementsByTagName("text")
					Set elemNode = Me.GetFirstNode(nodeList)
					If Not elemNode Is Nothing Then
						retVal=elemNode.NodeValue
					End If
				End If
		End Select
		
		GetArchiveProfile = retVal
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Function
	End Function
	
	Function GetArchiveProfileText(strName As String) As String
		On Error GoTo ErrorHandle
		
		Dim retVal As Variant, strValue As String, tmpStr As String
		
		strValue=Me.GetArchiveProfileText(strName)
		Select Case strName
		Case "ArchiveOnClientOrServer"
			tmpStr=Me.GetArchiveProfile("ServerName")
			
			Select Case strValue
			Case "1"
				If tmpStr="" Then tmpStr="Local"
				retVal="Lotus Notes クライアントベース(実行先)[" &amp; tmpStr &amp; "]"
			Case "2"
				retVal=Me.GetArchiveProfile("ArchSrcServer")
				If tmpStr="" Then tmpStr="Local"
				If retVal="" Then retVal="Local"
				retVal="Lotus Domino サーバー(実行場所)[" &amp; tmpStr &amp; "=&gt;" &amp; retVal &amp; "]"
			End Select
		End Select
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Function
	End Function
	
	'@param
	'(String)strName
	' lastindexed, size, update, casesensitive, includeattachments, breakat
	Function GetFullTextSettings(strName As String) As Variant
		On Error GoTo ErrorHandle
		
		Dim elemNode As NotesDOMElementNode
		Dim nodeList As NotesDOMNodeList
		Dim objDT As NotesDateTime
		Dim retVal As Variant
		
		Select Case strName
			Case "lastindexed"
				If Me.IsAvailable("var" &amp; strName) = False Then
					Set elemNode = Me.FullTextSettingsNode
					Set nodeList = elemNode.GetElementsByTagName(strName)
					Set elemNode = Me.GetFirstNode(nodeList)
					If Not elemNode Is Nothing Then
						If elemNode.NumberOfChildNodes &lt;&gt; 0 Then
							Set objDT = ConvDateTime(elemNode.FirstChild.NodeValue)
							retVal = objDT.Lslocaltime
						End If
					End If
					Me.Members("var" &amp; strName) = retVal
				Else
					retVal = Me.Members("var" &amp; strName)
				End If
			Case Else
				Set elemNode = Me.FullTextSettingsNode
				If elemNode Is Nothing Then
					retVal = ""
				Else
					retVal = elemNode.GetAttribute(strName)
				End If
		End Select
		
		GetFullTextSettings = retVal
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Function
	End Function
	
	'@param
	'(String)strName
	' update, casesensitive, includeattachments, includeencryptedfields, breakat
	Function GetFullTextSettingsText(strName As String) As String
		On Error GoTo ErrorHandle
		
		Dim retVal As String, strValue As String
		strValue = Me.GetFullTextSettings(strName)
		Select Case strName
		Case "update"
			Select Case strValue
			Case "immediate":retVal="即時"
			Case "hourly":retVal="1時間おき"
			Case "scheduled":retVal="スケジュールに合わせる"
			Case "daily":retVal="毎日"
			Case Else:retVal=strValue
			End Select
		Case "casesensitive"
			If strValue="true" Then
				retVal="大文字/小文字を区別[ON]"
			Else
				retVal="大文字/小文字を区別[OFF]"
			End If
		Case "breakat"
			If strValue="wordssentencesparagraphs" Then
				retVal="単語、文、段落"
			Else
				retVal="単語のみ"
			End If
		Case "includeattachments", "attachmenttype"
			If Me.GetProperty("includeattachments")="true" Then
				If Me.GetProperty("attachmenttype")="includebinary" Then
					retVal="添付ファイルの索引[ON(詳細)]"
				Else
					retVal="添付ファイルの索引[ON(簡易)]"
				End If
			Else
				retVal="添付ファイルの索引[OFF)]"
			End If
		Case "includeencryptedfields"
			If strValue="false" Then
				retVal="暗号フィールドの索引[OFF]"
			Else
				retVal="暗号フィールドの索引[ON]"
			End If
		Case Else:retVal=strValue
		End Select
		
		GetFullTextSettingsText = retVal
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Function
	End Function
	
	'@param
	'(String)strTagName:
	' noteslaunch, weblaunch
	'(String)strName
	' whenopened, restorelastview, showaboutdocument
	Function GetLaunchSettings(strTagName As String, strName As String) As String
		On Error GoTo ErrorHandle
		
		Dim elemNode As NotesDOMElementNode
		Dim retVal As String
		
		Select Case strTagName
		Case "noteslaunch"
			Set elemNode = Me.LaunchSettingsNode
			If elemNode Is Nothing Then
				retVal = ""
			Else
				retVal = elemNode.GetAttribute(strName)
			End If
		case "weblaunch"
			Set elemNode = Me.LaunchSettingsNode
			If elemNode Is Nothing Then
				retVal = ""
			Else
				retVal = elemNode.GetAttribute(strName)
			End If
		Case Else
			retVal = ""
		End Select
		
		GetLaunchSettings = retVal
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Function
	End Function
	
	'@param
	'(String)strTagName:
	' noteslaunch, weblaunch
	'(String)strName
	' whenopened, restorelastview, showaboutdocument
	Function GetLaunchSettingsText(strTagName As String, strName As String) As String
		On Error GoTo ErrorHandle
		
		Dim elemNode As NotesDOMElementNode, nodeList As NotesDOMNodeList
		Dim retVal As String, strValue As String, tmpVal As String
		
		strValue = Me.GetLaunchSettings(strTagName, strName)
		Select Case strName
		Case "whenopened"
			Select Case strValue
			Case "openaboutdocument":retVal="「アプリケーションについて」文書を開く"
			Case "openframeset":retVal="指定されたフレームセットを開く[" &amp; Me.GetLaunchSettings(strTagName, "frameset") &amp; "]"
			Case "opennavigator"
				tmpVal=Me.GetLaunchSettings(strTagName, "navigator")
				If Me.GetLaunchSettings(strTagName, "navigatortype") = "page" Then
					retVal="指定されたナビゲータを開く[ページ:" &amp; tmpVal &amp; "]"
				ElseIf tmpVal = "Folder" Then
					retVal="指定されたナビゲータを開く[フォルダ]"
				Else
					retVal="指定されたナビゲータを開く[ナビゲータ:" &amp; tmpVal &amp; "]"
				End If
			Case "opennavigatorinwindow"
				tmpVal=Me.GetLaunchSettings(strTagName, "navigator")
				If Me.GetLaunchSettings(strTagName, "navigatortype") = "page" Then
					retVal="指定されたナビゲータを画面全体に表示する[ページ:" &amp; tmpVal &amp; "]"
				Else
					retVal="指定されたナビゲータを画面全体に表示する[ナビゲータ:" &amp; tmpVal &amp; "]"
				End If
			Case "openpage":retVal = "指定されたページを開く[ページ:" &amp; Me.GetLaunchSettings(strTagName, "page") &amp; "]"
			Case "openxpage":retVal = "指定されたXPageを開く[XPage:" &amp; Me.GetLaunchSettings(strTagName, "xpage") &amp; "]"
			Case "openfirstaboutattachment":retVal = "「アプリケーションについて」文書の最初の添付を起動する"
			Case "openfirstdoclink":retVal = "「アプリケーションについて」文書の最初の文書リンクを起動する"
			Case "opencompapp"
				tmpVal=Me.GetLaunchSettings(strTagName, "compapppage")
				retVal="コンポジットアプリケーションとして起動する[名前:" &amp; Me.GetLaunchSettings(strTagName, "compapp") &amp; ", ページ:" &amp; tmpVal &amp; "]"
			Case "openspecifieddoclink"
				Set elemNode = Me.LaunchSettingsNode
				Set nodeList = elemNode.GetElementsByTagName("doclink")
				Set elemNode = Me.GetFirstNode(nodeList)
				If Not elemNode Is Nothing Then
					tmpVal = "/" &amp; elemNode.GetAttribute("database") &amp; "/" &amp; elemNode.GetAttribute("view") &amp; "/" &amp; elemNode.GetAttribute("document")
				End If
				retVal="指定された文書リンクを起動する[" &amp; tmpVal &amp; "]"
			Case "openfirstdocumentinview"
				retVal="ビューの最初の文書を起動する[ビュー:" &amp; Me.GetLaunchSettings(strTagName, "view") &amp; "]"
			Case Else
				Select Case strTagName
				Case "noteslaunch":retVal="最後に表示していたものを表示する"
				Case "weblaunch":retVal="Lotus Notes 起動オプションを使う"
				End Select
			End Select
		Case "restorelastview":If strValue = "true" Then retVal = "最後に表示されていたものを表示する"
		Case "showaboutdocument"
			Select Case strValue
			Case "firstopenandchanged":retVal = "更新時に「アプリケーションについて」文書を表示する"
			Case "never":retVal = ""
			Case Else:retVal = "アプリケーションの初回起動時に「アプリケーションについて」文書を表示する"
			End Select
		Case Else
			retVal = strValue
		End Select
		
		GetLaunchSettingsText = retVal
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Function
	End Function
	
	Property Get Database As NotesDatabase
		If Me.IsAvailable("Database") = True Then Set Database = Me.Members("Database")
	End Property
	
	Property Set Database As NotesDatabase
		Set Me.Members("objDatabase") = Database
	End Property
	
End Class
</lotusscript></code><code event='initialize'><lotusscript>Sub Initialize
	Call SetProcess("*SL - NotesDXLLIb")
End Sub











</lotusscript></code></scriptlibrary>

<form name='DXLテスト' alias='dxltext' nocompose='true' noquery='true' treatashtml='true'
 htmlallfields='true' publicaccess='true' designerversion='8.5.3' comment='コメント'
 activelinkcolor='black' visitedlinkcolor='black' unvisitedlinkcolor='black'
 bgcolor='black' type='response' versions='newresponse' inherit='true' mailable='true'
 recalc='true' storeform='true' inheritdoc='link' contextpane='link' editonopen='true'
 manualversion='true' anonymous='true' nofieldexchange='true' noinitialfocus='true'
 signdocuments='true' nofocusonf6='true' renderpassthrough='true' nofieldindex='true'
 allowautosave='true' conflictaction='mergeconflicts' resourcename='asdfasd'
 metadataname='asdfasd'>
<noteinfo noteid='7336' unid='50B5F01B3383B0114925831D001822EE' sequence='19'>
<created><datetime>20181005T132338,06+09</datetime></created>
<modified><datetime>20181031T100054,05+09</datetime></modified>
<revised><datetime>20181031T100054,04+09</datetime></revised>
<lastaccessed><datetime>20181031T100054,05+09</datetime></lastaccessed>
<addedtofile><datetime>20181005T132338,21+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby>
<wassignedby><name>CN=Administrator/O=Comture</name></wassignedby>
<background hide='editdesign' repeat='resize'><imageref name='actn020.gif'/></background>
<body><richtext>
<pardef id='1'/>
<par def='1'/></richtext></body>
<item name='$Readers'><text>[管理者]</text></item>
<item name='$FormUsers'><text>[管理者]</text></item>
<item name='$AUTOLAUNCH' sign='true'>
<rawitemdata type='1'>
v/8yABAAAAAEAAAABAAAAAAAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=
</rawitemdata></item>
<item name='$FrameInfo'><textlist><text>(インナーフレーム)|InnerFS</text><text>Left</text></textlist></item>
<item name='$XPageAltClient'><text>xptest.xsp</text></item>
<item name='$MimeType'><text>text/plain</text></item>
<item name='$MimeCharSet'><text>UTF-8</text></item>
<item name='$KeepPrivate' sign='true'><text>1</text></item>
<item name='$Header'>
<rawitemdata type='1'>
jv8yAABEZWZhdWx0IFNhbnMgU2VyaWYAAAAAAAAAAAAAAAAAAAEAAAkGAGFzZGZhcwA=
</rawitemdata></item>
<item name='$Footer'>
<rawitemdata type='1'>
jv8yAABEZWZhdWx0IE1vbm9zcGFjZQAAAAAAAAAAAAAAAAAAAAAAAAoHAGFzZGZhc2Q=
</rawitemdata></item>
<item name='$$ScriptName' summary='false' sign='true'><text>dxltext</text></item></form>

<note class='form'>
<noteinfo noteid='733a' unid='CEAE4740C51C57DF4925831D001E7B58' sequence='6'>
<created><datetime>20181005T143256,56+09</datetime></created>
<modified><datetime>20181010T113131,18+09</datetime></modified>
<revised><datetime>20181010T113131,17+09</datetime></revised>
<lastaccessed><datetime>20181010T113131,18+09</datetime></lastaccessed>
<addedtofile><datetime>20181005T143256,58+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby>
<wassignedby><name>CN=Administrator/O=Comture</name></wassignedby>
<item name='$Flags'><text>gC~4K</text></item>
<item name='$TITLE'><text>xptest.xsp</text></item>
<item name='$FileSize' sign='true'><number>101</number></item>
<item name='$FileData' sign='true'>
<rawitemdata type='1'>
YQAYAAAAAABlAAAAAQAAAAAAAAAAAAAAYAB3AAAAZQBmAAAAAAAAAAAAPD94bWwgdmVyc2lvbj0i
MS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPHhwOnZpZXcgeG1sbnM6eHA9Imh0dHA6Ly93d3cuaWJt
LmNvbS94c3AvY29yZSI+Cgo8L3hwOnZpZXc+DQoA
</rawitemdata></item>
<item name='$FileNames' sign='true'><text>xptest.xsp</text></item>
<item name='$DesignerVersion'><text>8.5</text></item>
<item name='$ClassSize0' sign='true'><number>568</number></item>
<item name='$ClassData0' sign='true'>
<rawitemdata type='1'>
YQAYAAAAAAA4AgAAAQAAAAAAAAAAAAAAYABKAgAAOAI4AgAAAAAAAAAAyv66vgAAADEAHQcAAgEA
CnhzcC9YcHRlc3QHAAQBADhjb20vaWJtL3hzcC9wYWdlL2NvbXBpbGVkL0Fic3RyYWN0Q29tcGls
ZWRQYWdlRGlzcGF0Y2hlcgEABjxpbml0PgEAAygpVgEABENvZGUIAAkBAAMzLjAKAAMACwwABQAM
AQAVKExqYXZhL2xhbmcvU3RyaW5nOylWAQAPTGluZU51bWJlclRhYmxlAQASTG9jYWxWYXJpYWJs
ZVRhYmxlAQAEdGhpcwEADEx4c3AvWHB0ZXN0OwEACmNyZWF0ZVBhZ2UBADMoSSlMY29tL2libS94
c3AvcGFnZS9jb21waWxlZC9BYnN0cmFjdENvbXBpbGVkUGFnZTsHABQBABV4c3AvWHB0ZXN0JFhw
dGVzdFBhZ2UKABMAFgwABQAGAQAJcGFnZUluZGV4AQABSQEAClNvdXJjZUZpbGUBAAtYcHRlc3Qu
amF2YQEADElubmVyQ2xhc3NlcwEAClhwdGVzdFBhZ2UAIQABAAMAAAAAAAIAAQAFAAYAAQAHAAAA
NQACAAEAAAAHKhIItwAKsQAAAAIADQAAAAoAAgAAABUABgAWAA4AAAAMAAEAAAAHAA8AEAAAAAQA
EQASAAEABwAAADwAAgACAAAACLsAE1m3ABWwAAAAAgANAAAABgABAAAAGQAOAAAAFgACAAAACAAP
ABAAAAAAAAgAFwAYAAEAAgAZAAAAAgAaABsAAAAKAAEAEwABABwACQ==
</rawitemdata></item>
<item name='$ClassIndexItem'><textlist><text>WEB-INF/classes/xsp/Xptest.class</text><text
>WEB-INF/classes/xsp/Xptest$XptestPage.class</text></textlist></item>
<item name='$ClassSize1' sign='true'><number>1997</number></item>
<item name='$ClassData1' sign='true'>
<rawitemdata type='1'>
YQAYAAAAAADNBwAAAQAAAAAAAAAAAAAAYADfBwAAzQfOBwAAAAAAAAAAyv66vgAAADEAQgcAAgEA
FXhzcC9YcHRlc3QkWHB0ZXN0UGFnZQcABAEALmNvbS9pYm0veHNwL3BhZ2UvY29tcGlsZWQvQWJz
dHJhY3RDb21waWxlZFBhZ2UBAAdzX2luZm9zAQA/W0xjb20vaWJtL3hzcC9wYWdlL2NvbXBpbGVk
L0Fic3RyYWN0Q29tcGlsZWRQYWdlJENvbXBvbmVudEluZm87AQAIPGNsaW5pdD4BAAMoKVYBAARD
b2RlBwALAQA8Y29tL2libS94c3AvcGFnZS9jb21waWxlZC9BYnN0cmFjdENvbXBpbGVkUGFnZSRD
b21wb25lbnRJbmZvCQAKAA0MAA4ADwEADEVNUFRZX05PUk1BTAEAPkxjb20vaWJtL3hzcC9wYWdl
L2NvbXBpbGVkL0Fic3RyYWN0Q29tcGlsZWRQYWdlJENvbXBvbmVudEluZm87CQABABEMAAUABgEA
D0xpbmVOdW1iZXJUYWJsZQEAEkxvY2FsVmFyaWFibGVUYWJsZQEABjxpbml0PgoAAwAWDAAUABcB
AEMoSVtMY29tL2libS94c3AvcGFnZS9jb21waWxlZC9BYnN0cmFjdENvbXBpbGVkUGFnZSRDb21w
b25lbnRJbmZvOylWAQAEdGhpcwEAF0x4c3AvWHB0ZXN0JFhwdGVzdFBhZ2U7AQARZ2V0Q29tcG9u
ZW50Rm9ySWQBABUoTGphdmEvbGFuZy9TdHJpbmc7KUkBAApFeGNlcHRpb25zBwAeAQAyY29tL2li
bS94c3AvcGFnZS9jb21waWxlZC9Ob1N1Y2hDb21wb25lbnRFeGNlcHRpb24BAAJpZAEAEkxqYXZh
L2xhbmcvU3RyaW5nOwEAD2NyZWF0ZUNvbXBvbmVudAEAnihJTGphdmF4L2ZhY2VzL2NvbnRleHQv
RmFjZXNDb250ZXh0O0xqYXZheC9mYWNlcy9jb21wb25lbnQvVUlDb21wb25lbnQ7TGNvbS9pYm0v
eHNwL3BhZ2UvY29tcGlsZWQvUGFnZUV4cHJlc3Npb25FdmFsdWF0b3I7KUxqYXZheC9mYWNlcy9j
b21wb25lbnQvVUlDb21wb25lbnQ7CgABACQMACUAJgEACmNyZWF0ZVZpZXcBAJ0oTGphdmF4L2Zh
Y2VzL2NvbnRleHQvRmFjZXNDb250ZXh0O0xqYXZheC9mYWNlcy9jb21wb25lbnQvVUlDb21wb25l
bnQ7TGNvbS9pYm0veHNwL3BhZ2UvY29tcGlsZWQvUGFnZUV4cHJlc3Npb25FdmFsdWF0b3I7KUxq
YXZheC9mYWNlcy9jb21wb25lbnQvVUlDb21wb25lbnQ7CgAdACgMABQAKQEABChJKVYBAAFJAQAH
Y29udGV4dAEAIkxqYXZheC9mYWNlcy9jb250ZXh0L0ZhY2VzQ29udGV4dDsBAAZwYXJlbnQBACNM
amF2YXgvZmFjZXMvY29tcG9uZW50L1VJQ29tcG9uZW50OwEACWV2YWx1YXRvcgEAM0xjb20vaWJt
L3hzcC9wYWdlL2NvbXBpbGVkL1BhZ2VFeHByZXNzaW9uRXZhbHVhdG9yOwcAMgEAI2NvbS9pYm0v
eHNwL2NvbXBvbmVudC9VSVZpZXdSb290RXgyCgAxADQMABQACAoAAQA2DAA3ADgBAAxpbml0Vmll
d1Jvb3QBACUoTGphdmF4L2ZhY2VzL2NvbXBvbmVudC9VSVZpZXdSb290OylWAQAGcmVzdWx0AQAl
TGNvbS9pYm0veHNwL2NvbXBvbmVudC9VSVZpZXdSb290RXgyOwEAClNvdXJjZUZpbGUBAAtYcHRl
c3QuamF2YQEADElubmVyQ2xhc3NlcwEADUNvbXBvbmVudEluZm8HAEABAAp4c3AvWHB0ZXN0AQAK
WHB0ZXN0UGFnZQAhAAEAAwAAAAEAGgAFAAYAAAAFAAgABwAIAAEACQAAADoABAAAAAAADgS9AApZ
A7IADFOzABCxAAAAAgASAAAAEgAEAAAAHgAGAB8ACgAeAA0AHAATAAAAAgAAAAEAFAAIAAEACQAA
ADcAAwABAAAACSoDsgAQtwAVsQAAAAIAEgAAAAoAAgAAACMACAAkABMAAAAMAAEAAAAJABgAGQAA
AAEAGgAbAAIAHAAAAAQAAQAdAAkAAAA2AAEAAgAAAAICrAAAAAIAEgAAAAYAAQAAACcAEwAAABYA
AgAAAAIAGAAZAAAAAAACAB8AIAABAAEAIQAiAAIAHAAAAAQAAQAdAAkAAACAAAQABQAAACYbqgAA
AAAAHAAAAAAAAAAAAAAAEyosLRkEtwAjsLsAHVkbtwAnvwAAAAIAEgAAAA4AAwAAAC0AFAAvAB0A
MQATAAAANAAFAAAAJgAYABkAAAAAACYAHwAqAAEAAAAmACsALAACAAAAJgAtAC4AAwAAACYALwAw
AAQAAgAlACYAAQAJAAAAbAACAAUAAAASuwAxWbcAMzoEKhkEtgA1GQSwAAAAAgASAAAADgADAAAA
NgAJADcADwA4ABMAAAA0AAUAAAASABgAGQAAAAAAEgArACwAAQAAABIALQAuAAIAAAASAC8AMAAD
AAkACQA5ADoABAACADsAAAACADwAPQAAABIAAgAKAAMAPgAJAAEAPwBBAAlY
</rawitemdata></item></note>

<form name='aaa' publicaccess='false' designerversion='8.5.3' renderpassthrough='true'>
<noteinfo noteid='7422' unid='790C31D5CA249A754925831D002D1B92' sequence='9'>
<created><datetime>20181005T171241,78+09</datetime></created>
<modified><datetime>20181031T100053,96+09</datetime></modified>
<revised><datetime>20181031T100053,95+09</datetime></revised>
<lastaccessed><datetime>20181031T100053,96+09</datetime></lastaccessed>
<addedtofile><datetime>20181005T171241,93+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby>
<wassignedby><name>CN=Administrator/O=Comture</name></wassignedby>
<body><richtext>
<pardef id='1'/>
<par def='1'/></richtext></body>
<item name='$$ScriptName' summary='false' sign='true'><text>aaa</text></item></form>

<agent name='フォームのプロパティをCSV出力' hide='v3' publicaccess='false' designerversion='8.5.3'>
<noteinfo noteid='742a' unid='045F793EE8EF14534925832100045CB6' sequence='105'>
<created><datetime>20181009T094738,78+09</datetime></created>
<modified><datetime>20181031T100052,21+09</datetime></modified>
<revised><datetime>20181031T100052,20+09</datetime></revised>
<lastaccessed><datetime>20181031T100052,21+09</datetime></lastaccessed>
<addedtofile><datetime>20181009T094738,82+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby>
<wassignedby><name>CN=Administrator/O=Comture</name></wassignedby>
<designchange><datetime>20181031T100052,14+09</datetime></designchange>
<trigger type='actionsmenu'/>
<documentset type='selected'><search type='byformnames'><formchoice name='(01.データベース情報)|DbInfoDoc'/></search></documentset><code
 event='options'><lotusscript>Option Public
Option Declare
Use "NotesUICommonLib"
Use "NotesDXLLIb"
Use "ToolsLib"

</lotusscript></code><code event='declarations'><lotusscript>Const FORM_ONLY$ = "フォームのみ"
Const FORM_AND_SUBFORM$ = "フォームとサブフォーム"
Const SUBFORM_ONLY$ = "サブフォームのみ"

</lotusscript></code><code event='initialize'><lotusscript>Sub Initialize
	Call SetProcess("*AG - (フォームのプロパティをCSV出力)")
	Call Main()
End Sub

</lotusscript></code><code event='OutputCSV'><lotusscript>Function OutputCSV(notes As NotesNoteCollection, stream As OutputStreamCSV, aryCols As Variant) As Integer
	On Error GoTo ErrorHandle
	
	Dim note As NotesDocument
	Dim noteID As String
	Dim session As NotesSession
	Dim db As NotesDatabase
	
	Dim objDXL As CNotesFormDXL
	Dim lstProperty List As Variant
	
	Dim tmpColName As String
	
	Dim aryElem List As String
	Dim varStartTime As Variant
	Dim varEndTime As Variant
	
	Dim strType As String
	Dim tmpStr As String
	Dim tmpDate As Variant
	Dim tmpVar As Variant
	Dim tmpAry As Variant
	
	Dim result As Integer
	
	Set db = notes.Parent
	Set session = db.Parent
	noteID = notes.GetFirstNoteID()
	
	Do Until noteID = ""
		Set note = db.GetDocumentByID(noteID)
		
		Set objDXL = New CNotesFormDXL
		result = objDXL.ParseDOM(note)
		If result = FUNCTIONFAILURE Then
			Print GetErrorMessage()
			Call ClearErrorObject()
			GoTo NextLoop
		End If
		
		result = objDXL.GetAllPropertys(lstProperty)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		If stream.LineNum = 1 Then
			ForAll v In lstProperty
				tmpStr = objDXL.ChangePropertyLabel(ListTag(v))
				Call stream.AddLineEntry(tmpStr, True)
			End ForAll
			Call stream.FlashLine()
			Call stream.SheekNextLine()
		End If
		
		ForAll v In lstProperty
			tmpStr = objDXL.ChangePropertyText(ListTag(v), CStr(v))
			Call stream.AddLineEntry(tmpStr, True)
		End ForAll
		
		Call stream.FlashLine()
		Call stream.SheekNextLine()
		
NextLoop:
		noteID = notes.GetNextNoteID(noteID)
	Loop
	
	Exit Function
ErrorHandle:
	Call SetErrorObject(Err, Error)
	OutputCSV = FUNCTIONFAILURE
	Exit Function
End Function

</lotusscript></code><code event='CreateNotesNoteCollection'><lotusscript
>Function CreateNotesNoteCollection(db As NotesDatabase, flg As String, formula As String, notes As NotesNoteCollection) As Integer
	
	Set notes = db.CreateNoteCollection(False)
	Select Case flg
		Case FORM_ONLY
			notes.SelectForms = True
			notes.SelectSubForms = False
		Case FORM_AND_SUBFORM
			notes.SelectForms = True
			notes.SelectSubForms = True
		Case SUBFORM_ONLY
			notes.SelectForms = False
			notes.SelectSubForms = True
	End Select
	
	notes.SelectionFormula = formula
	
	Call notes.Buildcollection()
	
End Function

</lotusscript></code><code event='Main'><lotusscript>Sub Main()
	On Error GoTo ErrorHandle
	
	Dim session As New NotesSession
	Dim workSpace As New NotesUIWorkspace
	Dim uiView As NotesUIView
	Dim curDB As NotesDatabase
	Dim unpro As NotesDocumentCollection
	Dim doc As NotesDocument
	
	Set curDB = session.CurrentDatabase
	Set uiView = workSpace.CurrentView
	If Not uiView Is Nothing Then
		Set unpro = uiView.Documents
		If unpro.Count = 0 Then Set unpro = Nothing
	End If
	
	If unpro Is Nothing Then Set unpro = curDB.UnprocessedDocuments
	
	If unpro.Count = 0 Then
		Call Messagebox_Alert("データベースを選択してください", "")
		Exit Sub
	End If
	
	Dim varSelectKind As Variant
	Dim varSelectCols As Variant
	Dim aryLst As Variant
	Dim aryDef As Variant
	
	ReDim aryLst(0) As String
	aryLst = ArrayAppend(aryLst, "フォームのみ")
	aryLst = ArrayAppend(aryLst, "フォームとサブフォーム")
	aryLst = ArrayAppend(aryLst, "サブフォームのみ")
	aryLst = FullTrim(aryLst)
	
	varSelectKind = workSpace.Prompt(PROMPT_OKCANCELLIST , "CSV出力", "出力する設計の種類を選択", "", aryLst)
	If IsEmpty(varSelectKind) Then
		Exit Sub
	End If
	
	Dim db As NotesDatabase
	Dim notes As NotesNoteCollection
	Dim note As NotesDocument
	Dim noteID As String
	
	Dim varDesignName As Variant
	
	Dim fmla As String
	
	If unpro.Count = 1 Then
		Set doc = unpro.GetFirstDocument()
		
		Set db = New NotesDatabase(doc.DbServer(0), doc.DbFilePath(0))
		If db.Isopen = True Then
			
			If CreateNotesNoteCollection(db, CStr(varSelectKind), "", notes) = FUNCTIONFAILURE Then
				Error Err, Error
			End If
			
			ReDim aryLst(0) As String
			noteID = notes.GetFirstNoteID()
			
			Do Until noteID = ""
				Set note = db.GetDocumentByID(noteID)
				
				aryLst = ArrayAppend(aryLst, note.~$Title(0))
				
				noteID = notes.GetNextNoteID(noteID)
			Loop
			
		End If
		
		aryLst = FullTrim(aryLst)
		
		varDesignName = workSpace.Prompt(PROMPT_OKCANCELLISTMULT , "CSV出力", "出力する設計名を選択", "", aryLst)
		If IsEmpty(varDesignName) Then
			Exit Sub
		End If
		
		fmla = {$Title="} &amp; Join(varDesignName,{":"}) &amp; {"}
		
	End If
	
	ReDim aryLst(0) As String
	aryLst = ArrayAppend(aryLst, "データベース名")
	aryLst = ArrayAppend(aryLst, "ファイルパス")
	aryLst = ArrayAppend(aryLst, "レプリカID")
	aryLst = ArrayAppend(aryLst, "設計名")
	aryLst = ArrayAppend(aryLst, "トリガ")
	aryLst = ArrayAppend(aryLst, "種類")
	aryLst = ArrayAppend(aryLst, "対象")
	aryLst = ArrayAppend(aryLst, "有効/無効")
	aryLst = ArrayAppend(aryLst, "実行時刻")
	aryLst = ArrayAppend(aryLst, "周期")
	aryLst = ArrayAppend(aryLst, "実行開始日")
	aryLst = ArrayAppend(aryLst, "実行終了日")
	aryLst = ArrayAppend(aryLst, "週末はエージェントを実行しない")
	aryLst = ArrayAppend(aryLst, "実行場所")
	aryLst = ArrayAppend(aryLst, "セキュリティ情報")
	aryLst = ArrayAppend(aryLst, "作成日(初回)")
	aryLst = ArrayAppend(aryLst, "更新日(初回)")
	aryLst = ArrayAppend(aryLst, "追加日(現在のファイル)")
	aryLst = ArrayAppend(aryLst, "更新日(現在のファイル)")
	aryLst = ArrayAppend(aryLst, "文書ID")
	aryLst = ArrayAppend(aryLst, "ユニバーサルID")
	aryLst = ArrayAppend(aryLst, "コメント")
	aryLst = ArrayAppend(aryLst, "その他")
	aryLst = FullTrim(aryLst)
	
	ReDim aryDef(0) As String
	aryDef = ArrayAppend(aryDef, "データベース名")
	aryDef = ArrayAppend(aryDef, "ファイルパス")
	aryDef = ArrayAppend(aryDef, "設計名")
	aryDef = ArrayAppend(aryDef, "トリガ")
	aryDef = ArrayAppend(aryDef, "種類")
	aryDef = ArrayAppend(aryDef, "対象")
	aryDef = ArrayAppend(aryDef, "有効/無効")
	If varSelectKind &lt;&gt; "エージェント(スケジュール以外)" Then
		aryDef = ArrayAppend(aryDef, "実行時刻")
		aryDef = ArrayAppend(aryDef, "周期")
		aryDef = ArrayAppend(aryDef, "実行開始日")
		aryDef = ArrayAppend(aryDef, "実行終了日")
		aryDef = ArrayAppend(aryDef, "週末はエージェントを実行しない")
		aryDef = ArrayAppend(aryDef, "実行場所")
	End If
	aryDef = FullTrim(aryDef)
	
	'varSelectCols = workSpace.Prompt(PROMPT_OKCANCELLISTMULT, "CSV出力", "出力する列を選択", aryDef, aryLst)
	'If IsEmpty(varSelectCols) Then
	'	Exit Sub
	'End If
	
	Dim defDir As String
	Dim defFileName As String
	Dim filePath As Variant
	
	Set doc = unpro.GetFirstDocument()
	
	If doc.Getitemvalue("DbTitle")(0) &lt;&gt; "" Then
		defFileName = "[" &amp; doc.Getitemvalue("DbTitle")(0) &amp; "]"
		If unpro.Count &lt;&gt; 1 Then
			defFileName = defFileName &amp; " 等(全" &amp; unpro.Count &amp; " DB) "
		End If
	End If
	defFileName = defFileName &amp; "_" &amp; varSelectKind &amp; ".csv"
	
	defDir = GetEnviron("USERPROFILE") &amp; "\Desktop"
	
	Do
		filePath = workSpace.Savefiledialog(False, "CSVファイル選択", "CSVファイル|*.csv", defDir, defFileName)
		If IsEmpty(filePath) Then
			Exit Sub
		ElseIf CheckDir(filePath(0), 0) = True Then
			If 7 = Messagebox_YesNo("ファイルを上書きしますか？", "") Then
			ElseIf CheckFileOpend(filePath(0)) = True Then
				Call Messagebox_Alert("ファイルが別のプロセスによりロックされている為書き込みできません。", "")
			Else
				Exit Do
			End If
		Else
			Exit Do
		End If
	Loop
	
	'Dim db As NotesDatabase
	'Dim notes As NotesNoteCollection
	'Dim note As NotesDocument
	'Dim noteID As String
	
	Dim stream As New OutputStreamCSV
	
	Set doc = unpro.GetFirstDocument()
	
	Do Until doc Is Nothing
		
		Set db = New NotesDatabase(doc.DbServer(0), doc.DbFilePath(0))
		If db.Isopen = True Then
			%rem
			Set notes = db.CreateNoteCollection(False)
			Select Case varSelectKind
			Case FORM_ONLY
				notes.SelectForms = True
				notes.SelectSubForms = False
			Case FORM_AND_SUBFORM
				notes.SelectForms = True
				notes.SelectSubForms = True
			Case SUBFORM_ONLY
				notes.SelectForms = False
				notes.SelectSubForms = True
			End Select
			Call notes.Buildcollection()
			%endrem
			
			If CreateNotesNoteCollection(db, CStr(varSelectKind), fmla, notes) = FUNCTIONFAILURE Then
				Error Err, Error
			End If
			
			If OutputCSV(notes, stream, varSelectCols) = FUNCTIONFAILURE Then
				Error Err, Error
			End If
			
		End If
NextLoop:
		Set doc = unpro.GetNextDocument(doc)
	Loop
	
	Call stream.SaveStream(CStr(filePath(0)), True, "")
	
ExitTag:
	If Not stream Is Nothing Then
		Call stream.CloseStream()
	End If
	Exit Sub
Error4412Handle:
Error4060Handle:
	Call SetErrorObject(Err, Error)
	Print "エラー：" &amp; GetErrorMessage()
	Call ClearErrorObject()
	Resume NextLoop
ErrorHandle:
	Call SetErrorObject(Err, Error)
	Call Messagebox_Error(GetErrorMessage(), "")
	Resume ExitTag
End Sub

	</lotusscript></code>
<rundata processeddocs='0' exitcode='0' agentdata='CC554B6950A020DF49258322001BAE94'>
<agentmodified><datetime>20181010T140215,98+09</datetime></agentmodified>
<agentrun><datetime>20181010T140557,83+09</datetime></agentrun>
<runlog>エージェント フォームのプロパティをCSV出力 の 2018/10/10 14:05:51 での実行が開始しました。
選択文書で実行します。 合計 1
1 文書が検索条件に一致しました。
LotusScript を実行しました
エージェント フォームのプロパティをCSV出力 の実行が終了しました。(2018/10/10 14:05:57)
</runlog></rundata></agent>

<agentdata>
<noteinfo noteid='7482' unid='A71380318B6AAA7849258321000DEF9A' sequence='1'>
<created><datetime>20181009T113213,06+09</datetime></created>
<modified><datetime>20181009T113213,07+09</datetime></modified>
<revised><datetime>20181009T113213,06+09</datetime></revised>
<lastaccessed><datetime>20181009T113213,07+09</datetime></lastaccessed>
<addedtofile><datetime>20181009T113213,07+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='7492' unid='8B2F9F12AA69938649258321000E0B5D' sequence='1'>
<created><datetime>20181009T113324,13+09</datetime></created>
<modified><datetime>20181009T113324,14+09</datetime></modified>
<revised><datetime>20181009T113324,13+09</datetime></revised>
<lastaccessed><datetime>20181009T113324,14+09</datetime></lastaccessed>
<addedtofile><datetime>20181009T113324,14+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='749a' unid='791B79BD1C01A6E549258321000EB579' sequence='1'>
<created><datetime>20181009T114039,61+09</datetime></created>
<modified><datetime>20181009T114039,62+09</datetime></modified>
<revised><datetime>20181009T114039,61+09</datetime></revised>
<lastaccessed><datetime>20181009T114039,62+09</datetime></lastaccessed>
<addedtofile><datetime>20181009T114039,62+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='74a6' unid='57954C947450F8C549258321000F86A0' sequence='1'>
<created><datetime>20181009T114935,04+09</datetime></created>
<modified><datetime>20181009T114935,05+09</datetime></modified>
<revised><datetime>20181009T114935,04+09</datetime></revised>
<lastaccessed><datetime>20181009T114935,05+09</datetime></lastaccessed>
<addedtofile><datetime>20181009T114935,05+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='74ba' unid='ED2C17B7624DFC9949258321001EF6EB' sequence='1'>
<created><datetime>20181009T143812,91+09</datetime></created>
<modified><datetime>20181009T143812,92+09</datetime></modified>
<revised><datetime>20181009T143812,91+09</datetime></revised>
<lastaccessed><datetime>20181009T143812,92+09</datetime></lastaccessed>
<addedtofile><datetime>20181009T143812,92+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='7502' unid='404298DF4819276349258322000A4050' sequence='1'>
<created><datetime>20181010T105158,24+09</datetime></created>
<modified><datetime>20181010T105158,25+09</datetime></modified>
<revised><datetime>20181010T105158,24+09</datetime></revised>
<lastaccessed><datetime>20181010T105158,25+09</datetime></lastaccessed>
<addedtofile><datetime>20181010T105158,25+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby></agentdata>

<scriptlibrary name='NotesDXLLib_bk2' hide='v3 v4strict' designerversion='8.5.3'>
<noteinfo noteid='7512' unid='1C779DCEA122F8AA49258322001A9BEC' sequence='5'>
<created><datetime>20181010T135038,52+09</datetime></created>
<modified><datetime>20181031T100051,12+09</datetime></modified>
<revised><datetime>20181031T100051,11+09</datetime></revised>
<lastaccessed><datetime>20181031T100051,12+09</datetime></lastaccessed>
<addedtofile><datetime>20181010T135038,62+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby>
<wassignedby><name>CN=Administrator/O=Comture</name></wassignedby><code event='options'><lotusscript
>Option Public
Option Declare
Use "ISOLib"
Use "ObjectLib"


</lotusscript></code><code event='declarations'><lotusscript>Class CNotesDesignDXL As CObjectable
	
	'メンバ変数の初期化
	Private Sub pInitMembers()
		Set Me.DocumentNode = Nothing
		Set Me.RootNode = Nothing
	End Sub
	
	'*******************************************************
	'NotesDXLImporterによりDXLをインポートする
	'@param
	'(Variant) varIn : インプット
	'	(String):
	'	(NotesRichTextItem): NotesRichTextItem
	'	(NotesStream):NotesStream
	'	(NotesDXLImporter): input が set 済みの NotesDXLImporter
	'db :(NotesDatabase) アウトプット
	'※XML 入力または出力にファイルを使用する前に、そのファイルに関連付けられた NoteStream オブジェクトを明示的に読み書きすることはできません。
	' 例えば、ファイルに書き込んでから XML 入力にそのファイルを使用する場合、NotesStream オブジェクトをいったん閉じてから再度開く必要があります。
	Sub ImportDXL(varIn As Variant, db As NotesDatabase)
		On Error GoTo ErrorHandle
		
		Dim session As New NotesSession
		Dim importer As NotesDXLImporter
		
		Dim strIn As String
		Dim rtItem As NotesRichTextItem
		Dim stream As NotesStream
		
		'input
		If UCase$(TypeName(varIn)) = UCase$("NotesDXLImporter") Then
			Set importer = varIn
		Else
			Set importer = session.CreateDXLImporter()
			
			Select Case UCase$(TypeName(varIn))
			Case UCase$("String")
				strIn = varIn
				Call importer.SetInput(strIn)
			Case UCase$("NotesRichTextItem")
				Set rtItem = varIn
				Call importer.SetInput(rtItem)
			Case UCase$("NotesStream")
				Set stream = varIn
				Call importer.SetInput(stream)
			End Select
		End If
		
		'output
		Call importer.SetOutput(db)
		
		Call importer.Process()
		
		Exit Sub
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Sub
	End Sub
	
	'*******************************************************
	'NotesDXLExporterによりDXLにエクスポートする
	'@param
	'(Variant) varIn : インプット
	'	(NotesNoteCollection):ビルド済みのNotesNoteCollection
	'	(NotesDocument):NotesDocument
	'	(String):Notes URL
	'(Variant) varOut : アウトプット
	'	(NotesStream) : オープン済みのNotesStream
	'	(NotesRichTextItem) : NotesRichTextItem
	'	(NotesDOMParser) : NotesDOMParser
	Sub ExportDXL(varIn As Variant, varOut As Variant)
		On Error GoTo ErrorHandle
		
		Dim session As New NotesSession
		Dim exporter As NotesDXLExporter
		
		Dim notes As NotesNoteCollection
		Dim note As NotesDocument
		Dim stream As NotesStream
		Dim rtItem As NotesRichTextItem
		Dim parser As NotesDOMParser
		
		Set exporter = session.CreateDXLExporter()
		
		'input
		Select Case UCase$(TypeName(varIn))
		Case UCase$("NotesNoteCollection")
			Set notes = varIn
			Call exporter.SetInput(notes)
		Case UCase$("NotesDocument")
			Set note = varIn
			Call exporter.SetInput(note)
		Case UCase$("String")
			Set note = session.Resolve(CStr(varIn))
			Call exporter.SetInput(note)
		End Select
		
		'output
		Select Case UCase$(TypeName(varOut))
		Case UCase$("NotesStream")
			Set stream = varOut
			Call exporter.SetOutput(stream)
		Case UCase$("NotesRichTextItem")
			Set rtItem = varOut
			Call exporter.SetOutput(rtItem)
		Case UCase$("NotesDOMParser")
			Set parser = varOut
			Call exporter.SetOutput(parser)
		End Select
		
		Call exporter.Process()
		
		Exit Sub
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Sub
	End Sub
	
	'DOMをDXLへシリアライズする
	'@param
	'(Variant)param : output
	'	(NotesRichTextItem):NotesRichTextItem
	'	(NotesStream):NotesStream
	'	(NotesDXLImporter):NotesDXLImporter
	Sub SerializeDXL(param As Variant)
		On Error GoTo ErrorHandle
		
		Dim parser As NotesDOMParser
		
		Dim rtItem As NotesRichTextItem
		Dim stream As NotesStream
		Dim importer As NotesDXLImporter
		
		Set parser = Me.pParser
		
		'input
		
		
		'output
		Select Case UCase$(TypeName(param))
			Case UCase$("NotesRichTextItem")
				Set rtItem = param
				Call parser.SetOutput(rtItem)
			Case UCase$("NotesStream")
				Set stream = param
				Call parser.SetOutput(stream)
			Case UCase$("NotesDXLImporter")
				Call parser.SetOutput(importer)
		End Select
		
		Call parser.Serialize()
		
		Exit Sub
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Sub
	End Sub
	
	'**********************************************
	'DXLのDOMへパースする
	'@param
	'(Variant)param : インプット
	'	(NotesDocument)DXLへパースする設計文書
	'	(NotesDOMElementNode)DXLへパースするNotesDOMElementNode
	Function ParseDOM(param As Variant) As Integer
		On Error GoTo ErrorHandle
		
		Dim note As NotesDocument
		Dim parentNode As NotesDOMNode
		
		Dim session As NotesSession
		Dim parser As NotesDOMParser
		
		If TypeName(param) = UCase$("NotesDomElementNode") Then
			Set parentNode = param
			Do Until parentNode Is Nothing
				If parentNode.ParentNode.IsNull = True Then
					Exit Do
				End If
				Set parentNode = parentNode.ParentNode
			Loop
			
			Set Me.DocumentNode = parentNode
			Set Me.RootNode = param
			Set Me.pParser = Nothing
			Set Me.pNote = Nothing
		Else
			Set session = New NotesSession
			Set note = param
			Set parser = session.CreateDOMParser()
			Call Me.ExportDXL(note, parser)
			Set Me.DocumentNode = parser.Document
			Set Me.RootNode = parser.Document.DocumEntelement
			Set Me.pParser = parser
			Set Me.pNote = note
		End If
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		ParseDOM = FUNCTIONFAILURE
		Exit Function
	End Function
	
	'@param
	'(String) strItemName : アイテムの名前
	'@return
	'(NotesDOMElementNode) : itemノード
	Function GetItemNode(strItemName As String) As NotesDOMElementNode
		On Error GoTo ErrorHandle
		
		Dim nodeList As NotesDOMNodeList
		Dim rootNode As NotesDOMElementNode
		Dim elemNode As NotesDOMElementNode
		Dim itemNode As NotesDOMElementNode
		
		Dim tmpItems List As NotesDOMElementNode
		Dim varItems As Variant
		Dim tmpName As String
		Dim num As Integer
		
		If Me.IsAvailable("plstItems") = False Then
			Me.pListItems = tmpItems
			varItems = tmpItems
		Else
			varItems = Me.pListItems
		End If
		
		If IsElement(varItems( strItemName )) = False Then
			Set rootNode = Me.RootNode
			Set nodeList = rootNode.GetElementsByTagName("item")
			
			For num = 1 To nodeList.NumberOfEntries
				Set elemNode = Me.GetItemAt(nodeList, num)
				tmpName = elemNode.GetAttribute("name")
				Set varItems(tmpName) = elemNode
			Next
			
			Me.pListItems = varItems
		End If
		
		If IsElement(varItems( strItemName )) = False Then
			Set itemNode = Nothing
		Else
			Set itemNode = varItems( strItemName )
		End If
		
		Set GetItemNode = itemNode
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Function
	End Function
	
	'@param
	' domNode : (NotesDOMNode)
	Function GetParentNode(domNode As NotesDOMNode) As NotesDOMNode
		On Error GoTo ErrorHandle
		
		Dim parentNode As NotesDOMNode
		
		Set parentNode = domNode.ParentNode
		
		If parentNode.IsNull = True Then
			Set parentNode = Nothing
		End If
		
		Set GetParentNode = parentNode
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Function
	End Function
	
	'@param
	' nodeList : (NotesDOMNodeList)
	Function GetFirstNode(nodeList As NotesDOMNodeList) As NotesDOMNode
		On Error GoTo ErrorHandle
		
		Dim domNode As NotesDOMNode
		
		If nodeList Is Nothing Then
			Set domNode = Nothing
		ElseIf 0 &lt; nodeList.NumberOfEntries Then
			Set domNode = nodeList.GetItem(1)
		Else
			Set domNode = Nothing
		End If
		
		If domNode Is Nothing Then
		ElseIf domNode.IsNull = True Then
			Set domNode = Nothing
		End If
		
		Set GetFirstNode = domNode
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Function
	End Function
	
	Function GetItemAt(nodeList As NotesDOMNodeList, num As Integer) As NotesDOMNode
		On Error GoTo ErrorHandle
		
		Dim domNode As NotesDOMNode
		
		If nodeList Is Nothing Then
			Set domNode = Nothing
		ElseIf num &lt;= nodeList.NumberOfEntries Then
			Set domNode = nodeList.GetItem(num)
		Else
			Set domNode = Nothing
		End If
		
		If domNode Is Nothing Then
		ElseIf domNode.IsNull = True Then
			Set domNode = Nothing
		End If
		
		Set GetItemAt = domNode
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Function
	End Function
	
	'@param
	'domNode : (NotesDOMNode)
	Function GetNextSibling(domNode As NotesDOMNode) As NotesDOMNode
		On Error GoTo ErrorHandle
		
		Dim nextSibling As NotesDOMNode
		
		If domNode Is Nothing Then
			Set nextSibling = Nothing
		Else
			Set nextSibling = domNode.NextSibling
		End If
		
		If nextSibling Is Nothing Then
		ElseIf nextSibling.IsNull = True Then
			Set nextSibling = Nothing
		End If
		
		Set GetNextSibling = nextSibling
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Function
	End Function
	
	'@param
	' ListItems : (Variant)List As NotesDOMElementNode
	Private Property Get pListItems As Variant
		pListItems = Me.Members("pListItems")
	End Property
	'@param
	' ListItems : (Variant)List As NotesDOMElementNode
	Private Property Set pListItems As Variant
		Me.Members("pListItems") = pListItems
	End Property
	
	'@param
	'LoadedAllItems : (Boolean)
	'Private Property Get pLoadedAllItems As Boolean
	'	If Me.IsAvailable("pLoadedAllItems") Then pLoadedAllItems = Me.Members("pLoadedAllItems")
	'End Property
	'@param
	'LoadedAllItems : (Boolean)
	'Private Property Set pLoadedAllItems As Boolean
	'	Me.Members("pLoadedAllItems") = pLoadedAllItems
	'End Property
	
	'*************************************************
	'@return : (NotesDomElementNode)設計文書情報ノード
	Property Get NoteInfoNode As NotesDOMElementNode
		On Error GoTo ErrorHandle
		
		Dim rootNode As NotesDOMElementNode
		Dim nodeList As NotesDOMNodeList
		Dim elemNode As NotesDOMElementNode
		
		If Me.IsAvailable("NoteInfoNode") = False Then
			Set rootNode = Me.RootNode
			Set nodeList = rootNode.GetElementsByTagName("noteinfo")
			Set elemNode = Me.GetFirstNode(nodeList)
			Set Me.Members("NoteInfoNode") = elemNode
		Else
			Set elemNode = Me.Members("NoteInfoNode")
		End If
		
		Set NoteInfoNode = elemNode
		
		Exit Property
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Property
	End Property
	
	'************************
	'@return : (String)文書ID
	Property Get NoteID As String
		NoteID = Me.NoteInfoNode.GetAttribute("noteid")
	End Property
	
	'******************************
	'@return : (String)ユニバーサルID
	Property Get UniversalID As String
		UniversalID = Me.NoteInfoNode.GetAttribute("unid")
	End Property
	
	'***************************
	'@return : (String)シーケンス
	Property Get Sequence As String
		Sequence = Me.NoteInfoNode.GetAttribute("sequence")
	End Property
	
	'***********************
	'@return : (Date)作成日
	Property Get Created As Variant
		On Error GoTo ErrorHandle
		
		Dim nodeList As NotesDOMNodeList
		Dim elemNode As NotesDOMElementNode
		Dim objDT As NotesDateTime
		Dim varDate As Variant
		
		If Me.IsAvailable("Created") = False Then
			Set nodeList = Me.NoteInfoNode.GetElementsByTagName("created")
			Set elemNode = Me.GetFirstNode(nodeList)
			If Not elemNode Is Nothing Then
				Set nodeList = elemNode.GetElementsByTagName("datetime")
				Set elemNode = Me.GetFirstNode(nodeList)
				If Not elemNode Is Nothing Then
					Set objDT = ConvDateTime(elemNode.FirstChild.NodeValue)
					varDate = objDT.LsLocalTime
				End If
			End If
			Me.Members("Created") = varDate
		Else
			varDate = Me.Members("Created")
		End If
		
		Created = varDate
		
		Exit Property
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Property
	End Property
	
	'***********************
	'@return : (Date)更新日
	Property Get Modified As Variant
		On Error GoTo ErrorHandle
		
		Dim nodeList As NotesDOMNodeList
		Dim elemNode As NotesDOMElementNode
		Dim objDT As NotesDateTime
		Dim varDate As Variant
		
		If Me.IsAvailable("Modified") = False Then
			Set nodeList = Me.NoteInfoNode.GetElementsByTagName("modified")
			Set elemNode = Me.GetFirstNode(nodeList)
			If Not elemNode Is Nothing Then
				Set nodeList = elemNode.GetElementsByTagName("datetime")
				Set elemNode = Me.GetFirstNode(nodeList)
				If Not elemNode Is Nothing Then
					Set objDT = ConvDateTime(elemNode.FirstChild.NodeValue)
					varDate = objDT.LsLocalTime
				End If
			End If
			Me.Members("Modified") = varDate
		Else
			varDate = Me.Members("Modified")
		End If
		
		Modified = varDate
		
		Exit Property
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Property
	End Property
	
	'***********************
	'@return : (Date)更新日
	Property Get Revised As Variant
		On Error GoTo ErrorHandle
		
		Dim nodeList As NotesDOMNodeList
		Dim elemNode As NotesDOMElementNode
		Dim objDT As NotesDateTime
		Dim varDate As Variant
		
		If Me.IsAvailable("Revised") = False Then
			Set nodeList = Me.NoteInfoNode.GetElementsByTagName("revised")
			Set elemNode = Me.GetFirstNode(nodeList)
			If Not elemNode Is Nothing Then
				Set nodeList = elemNode.GetElementsByTagName("datetime")
				Set elemNode = Me.GetFirstNode(nodeList)
				If Not elemNode Is Nothing Then
					Set objDT = ConvDateTime(elemNode.FirstChild.NodeValue)
					varDate = objDT.LsLocalTime
				End If
			End If
			Me.Members("Revised") = varDate
		Else
			varDate = Me.Members("Revised")
		End If
		
		Revised = varDate
		
		Exit Property
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Property
	End Property
	
	'*************************
	'@return : (Date)追加日時
	Property Get AddedToFile As Variant
		On Error GoTo ErrorHandle
		
		Dim nodeList As NotesDOMNodeList
		Dim elemNode As NotesDOMElementNode
		Dim objDT As NotesDateTime
		Dim varDate As Variant
		
		If Me.IsAvailable("AddedToFile") = False Then
			Set nodeList = Me.NoteInfoNode.GetElementsByTagName("addedtofile")
			Set elemNode = Me.GetFirstNode(nodeList)
			If Not elemNode Is Nothing Then
				Set nodeList = elemNode.GetElementsByTagName("datetime")
				Set elemNode = Me.GetFirstNode(nodeList)
				If Not elemNode Is Nothing Then
					Set objDT = ConvDateTime(elemNode.FirstChild.NodeValue)
					varDate = objDT.LsLocalTime
				End If
			End If
			Me.Members("AddedToFile") = varDate
		Else
			varDate = Me.Members("AddedToFile")
		End If
		
		AddedToFile = varDate
		
		Exit Property
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Property
	End Property
	
	'*****************************
	'@return : (Date)最終アクセス日
	Property Get LastAccessed As Variant
		On Error GoTo ErrorHandle
		
		Dim nodeList As NotesDOMNodeList
		Dim elemNode As NotesDOMElementNode
		Dim objDT As NotesDateTime
		Dim varDate As Variant
		
		If Me.IsAvailable("LastAccessed") = False Then
			Set nodeList = Me.NoteInfoNode.GetElementsByTagName("lastaccessed")
			Set elemNode = Me.GetFirstNode(nodeList)
			If Not elemNode Is Nothing Then
				Set nodeList = elemNode.GetElementsByTagName("datetime")
				Set elemNode = Me.GetFirstNode(nodeList)
				If Not elemNode Is Nothing Then
					Set objDT = ConvDateTime(elemNode.FirstChild.NodeValue)
					varDate = objDT.LsLocalTime
				End If
			End If
			Me.Members("LastAccessed") = varDate
		Else
			varDate = Me.Members("LastAccessed")
		End If
		
		LastAccessed = varDate
		
		Exit Property
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Property
	End Property
	
	'*******************************
	'@return : (String Array)更新者
	Property Get UpdatedBy As Variant
		On Error GoTo ErrorHandle
		
		Dim rootNode As NotesDOMElementNode
		Dim elemNode As NotesDOMElementNode
		Dim nodeList As NotesDOMNodeList
		Dim aryString As Variant
		
		If Me.IsAvailable("UpdatedBy") = False Then
			ReDim aryString(0) As String
			Set rootNode = Me.DocumentNode.DocumentElement
			Set nodeList = rootNode.GetElementsByTagName("updatedby")
			Set elemNode = Me.GetFirstNode(nodeList)
			If Not elemNode Is Nothing Then
				Set nodeList = elemNode.GetElementsByTagName("name")
				Set elemNode = Me.GetFirstNode(nodeList)
				If Not elemNode Is Nothing Then
					aryString(0) = elemNode.FirstChild.NodeValue
					Set elemNode = Me.GetNextSibling(elemNode)
					Do Until elemNode Is Nothing
						aryString = ArrayAppend(aryString, elemNode.FirstChild.NodeValue)
						Set elemNode = Me.GetNextSibling(elemNode)
					Loop
				End If
			End If
			Me.Members("UpdatedBy") = aryString
		Else
			aryString = Me.Members("UpdatedBy")
		End If
		
		UpdatedBy = aryString
		
		Exit Property
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Property
	End Property
	
	'******************************
	'@return : (String Array)署名者
	Property Get SignedBy As Variant
		On Error GoTo ErrorHandle
		
		Dim rootNode As NotesDOMElementNode
		Dim elemNode As NotesDOMElementNode
		Dim nodeList As NotesDOMNodeList
		Dim aryString As Variant
		
		If Me.IsAvailable("SignedBy") = False Then
			ReDim aryString(0) As String
			Set rootNode = Me.DocumentNode.DocumentElement
			Set nodeList = rootNode.GetElementsByTagName("wassignedby")
			Set elemNode = Me.GetFirstNode(nodeList)
			If Not elemNode Is Nothing Then
				Set nodeList = elemNode.GetElementsByTagName("name")
				Set elemNode = Me.GetFirstNode(nodeList)
				If Not elemNode Is Nothing Then
					aryString(0) = elemNode.FirstChild.NodeValue
					Set elemNode = Me.GetNextSibling(elemNode)
					Do Until elemNode Is Nothing
						aryString = ArrayAppend(aryString, elemNode.FirstChild.NodeValue)
						Set elemNode = Me.GetNextSibling(elemNode)
					Loop
				End If
			End If
			Me.Members("SignedBy") = aryString
		Else
			aryString = Me.Members("SignedBy")
		End If
		
		SignedBy = aryString
		
		Exit Property
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Property
	End Property
	
	'****************************
	'@return : (Date Array)更新日
	Property Get DesignChange As Variant
		On Error GoTo ErrorHandle
		
		Dim rootNode As NotesDOMElementNode
		Dim elemNode As NotesDOMElementNode
		Dim nodeList As NotesDOMNodeList
		Dim aryDate As Variant
		Dim objDT As NotesDateTime
		Dim i As Integer
		
		If Me.IsAvailable("DesignChange") = False Then
			ReDim aryString(0) As String
			Set rootNode = Me.DocumentNode.DocumentElement
			Set nodeList = rootNode.GetElementsByTagName("designchange")
			Set elemNode = Me.GetFirstNode(nodeList)
			If Not elemNode Is Nothing Then
				Set nodeList = elemNode.GetElementsByTagName("datetime")
				Set elemNode = Me.GetFirstNode(nodeList)
				If Not elemNode Is Nothing Then
					aryDate(0) = elemNode.FirstChild.NodeValue
					Set elemNode = Me.GetNextSibling(elemNode)
					Do Until elemNode Is Nothing
						Set objDT = ConvDateTime(elemNode.FirstChild.NodeValue)
						aryDate = ArrayAppend(aryDate, objDT.Lslocaltime)
						Set elemNode = Me.GetNextSibling(elemNode)
					Loop
				End If
			End If
			Me.Members("DesignChange") = aryDate
		Else
			aryDate = Me.Members("DesignChange")
		End If
		
		DesignChange = aryDate
		
		Exit Property
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Property
	End Property
	
	'**************************************************************
	'@return : (NotesDOMDocumentNode)DXLのrootに位置するDocumentNode
	Property Get DocumentNode As NotesDOMDocumentNode
		Set DocumentNode = Me.Members("DocumentNode")
	End Property
	'**************************************************************
	'@param : (NotesDOMDocumentNode)DXLのrootに位置するDocumentNode
	Property Set DocumentNode As NotesDOMDocumentNode
		Set Me.Members("DocumentNode") = DocumentNode
	End Property
	
	'@param
	'RootNode : (NotesDOMElementNode)
	Property Get RootNode As NotesDOMElementNode
		Set RootNode = Me.Members("RootNode")
	End Property
	'@param
	'RootNode : (NotesDOMElementNode)
	Property Set RootNode As NotesDOMElementNode
		Set Me.Members("RootNode") = RootNode
	End Property
	
	'@param
	'Parser : (NotesDOMParser)
	Private Property Get pParser As NotesDOMParser
		Set pParser = Me.Members("pParser")
	End Property
	'@param
	'Parser : (NotesDOMParser)
	Private Property Set pParser As NotesDOMParser
		Set Me.Members("pParser") = pParser
	End Property
	
	'@param
	'Note : (NotesDocument)
	Private Property Get pNote As NotesDocument
		Set pNote = Me.Members("pNote")
	End Property
	'@param
	'Note : (NotesDocument)
	Private Property Set pNote As NotesDocument
		Set Me.Members("pNote") = pNote
	End Property
	
End Class
Class CNotesAgentDXL As CNotesDesignDXL
	
	'@return :(String Array)
	'  name,alias,enabled,trigger,documentset
	Property Get PropertyNames As Variant
		If Me.IsAvailable("PropertyNames") = False Then
			Me.Members("PropertyNames") = Split(_
			"name,alias,enabled,trigger,documentset"_
			, ",")
		End If
		PropertyNames = Me.Members("PropertyNames")
	End Property
	
	'@return :(String Array)
	'  name,alias,enabled,readers,
	'  designerversion,fromtemplate,hide,noreplace,
	'  propagatenoreplace,runaswebuser,restrictions,publicaccess,activatable,
	'  trigger, documentset
	Property Get AllPropertyNames As Variant
		If Me.IsAvailable("AllPropertyNames") = False Then
			Me.Members("AllPropertyNames") = Split(_
			"name,alias,enabled,readers," &amp;_
			"designerversion,fromtemplate,hide,noreplace," &amp;_
			"propagatenoreplace,runaswebuser,restrictions,publicaccess,activatable," &amp;_
			"trigger, documentset"_
			, ",")
		End If
		AllPropertyNames = Me.Members("AllPropertyNames")
	End Property
	
	'@return :(Variant List)
	Function GetPropertys() As Variant
		On Error GoTo ErrorHandle
		
		Dim aryNames As Variant
		
		aryNames = Me.PropertyNames
		
		GetPropertys = Me.GetPropertysByName(aryNames)
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Function
	End Function
	
	'@return :(Variant List)
	Function GetAllPropertys() As Variant
		On Error GoTo ErrorHandle
		
		Dim aryNames As Variant
		
		aryNames = Me.AllPropertyNames
		
		GetAllPropertys = Me.GetPropertysByName(aryNames)
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Function
	End Function
	
	'@param
	' aryNames : (String Array) property names
	'@return :(Variant List)
	Function GetPropertysByName(aryNames As Variant) As Variant
		On Error GoTo ErrorHandle
		
		Dim lstProperty List As Variant
		
		ForAll n In aryNames
			lstProperty(CStr(n)) = Me.GetProperty(CStr(n))
		End ForAll
		
		GetPropertysByName = lstProperty
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Function
	End Function
	
	'@return :(String Array)
	Property Get ScheduleNames As Variant
		
		Dim aryNames As Variant
		
		aryNames = Split(_
		"type,onweekends,runlocation,runserver,startdate,enddate"_
		, ",")
		
		Dim strType As String
		
		strType = Me.GetSchedule("type")
		
		Select Case strType
			Case "byminutes"
				aryNames = ArrayAppend(aryNames, Split("hours,minutes,starttime,endtime", ","))
			Case "daily"
				aryNames = ArrayAppend(aryNames, Split("starttime", ","))
			Case "weekly"
				aryNames = ArrayAppend(aryNames, Split("dayofweek,starttime", ","))
			Case "monthly"
				aryNames = ArrayAppend(aryNames, Split("dateinmonth,starttime", ","))
		End Select
		
		ScheduleNames = aryNames
	End Property
	
	'@return :(String Array)
	Property Get AllScheduleNames As Variant
		AllScheduleNames = Me.ScheduleNames
	End Property
	
	'@return :(Variant List)
	Function GetSchedules() As Variant
		On Error GoTo ErrorHandle
		
		Dim aryNames As Variant
		
		aryNames = Me.ScheduleNames
		
		GetSchedules = Me.GetSchedulesByName(aryNames)
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Function
	End Function
	
	'@return :(Variant List)
	Function GetAllSchedules() As Variant
		On Error GoTo ErrorHandle
		
		Dim aryNames As Variant
		
		aryNames = Me.AllScheduleNames
		
		GetAllSchedules = Me.GetSchedulesByName(aryNames)
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Function
	End Function
	
	'@param
	' aryNames : (String Array) property names
	'@return :(Variant List)
	Function GetSchedulesByName(aryNames As Variant) As Variant
		On Error GoTo ErrorHandle
		
		Dim lstSchedule List As Variant
		
		ForAll n In aryNames
			lstSchedule(CStr(n)) = Me.GetSchedule(CStr(n))
		End ForAll
		
		GetSchedulesByName = lstSchedule
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Function
	End Function
	
	Property Get AgentNode As NotesDOMElementNode
		On Error GoTo ErrorHandle
		
		Dim elemNode As NotesDOMElementNode
		Dim nodeList As NotesDOMNodeList
		
		If Me.IsAvailable("AgentNode") = False Then
			Set elemNode = Me.RootNode
			If StrCompare(elemNode.TagName, "agent", 1) &lt;&gt; 0 Then
				Set nodeList = elemNode.Getelementsbytagname("agent")
				Set elemNode = Me.GetFirstNode(nodeList)
			End If
			Set Me.Members("AgentNode") = elemNode
		Else
			Set elemNode = Me.Members("AgentNode")
		End If
		
		Set AgentNode = elemNode
		
		Exit Property
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Property
	End Property
	
	Property Get TriggerNode As NotesDOMElementNode
		On Error GoTo ErrorHandle
		
		Dim nodeList As NotesDOMNodeList
		Dim elemNode As NotesDOMElementNode
		
		If Me.IsAvailable("TriggerNode") = False Then
			Set elemNode = Me.AgentNode
			Set nodeList = elemNode.GetElementsByTagName("trigger")
			Set elemNode = Me.GetFirstNode(nodeList)
			Set Me.Members("TriggerNode") = elemNode
		Else
			Set elemNode = Me.Members("TriggerNode")
		End If
		
		Set TriggerNode = elemNode
		
		Exit Property
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Property
	End Property
	
	Property Get ScheduleNode As NotesDOMElementNode
		On Error GoTo ErrorHandle
		
		Dim nodeList As NotesDOMNodeList
		Dim elemNode As NotesDOMElementNode
		
		If Me.IsAvailable("ScheduleNode") = False Then
			Set nodeList = Me.TriggerNode.GetElementsByTagName("schedule")
			Set elemNode = Me.GetFirstNode(nodeList)
			Set Me.Members("ScheduleNode") = elemNode
		Else
			Set elemNode = Me.Members("ScheduleNode")
		End If
		
		Set ScheduleNode = elemNode
		
		Exit Property
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Property
	End Property
	
	Property Get DocumentSetNode As NotesDOMElementNode
		On Error GoTo ErrorHandle
		
		Dim nodeList As NotesDOMNodeList
		Dim elemNode As NotesDOMElementNode
		
		If Me.IsAvailable("DocumentSetNode") = False Then
			Set nodeList = Me.AgentNode.GetElementsByTagName("documentset")
			Set elemNode = Me.GetFirstNode(nodeList)
			Set Me.Members("DocumentSetNode") = elemNode
		Else
			Set elemNode = Me.Members("DocumentSetNode")
		End If
		
		Set DocumentSetNode = elemNode
		
		Exit Property
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Property
	End Property
	
	Function SetPropertys(lstProperty As Variant) As Integer
		On Error GoTo ErrorHandle
		
		Dim pn As String
		
		ForAll p In lstProperty
			pn = ListTag(p)
			
			Call Me.SetProperty(pn, p)
		End ForAll
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Function
	End Function
	
	'@param
	'strName : (String)
	' name, alias, enabled, readers, designerversion, fromtemplate, hide, noreplace
	' propagatenoreplace, runaswebuser, restrictions, publicaccess, activatable
	' trigger, documentset
	'varVal : (Variant)
	Function SetProperty(strName As String, varVal As Variant) As Integer
		On Error GoTo ErrorHandle
		
		Dim nodeList As NotesDOMNodeList
		Dim elemNode As NotesDOMElementNode
		
		Const CHECK_MSG$ = "この値は許可されていません。"
		
		Dim strTxt As String
		
		Select Case LCase$(strName)
		Case "trigger"
			Set elemNode = Me.TriggerNode
			If elemNode Is Nothing Then
			Else
				strTxt = Me.ChangePropertyText(strName, CStr(varVal))
				If strTxt = "" Then
					Error USERERR, CHECK_MSG &amp; "[name = '" &amp; strName &amp; "', val = " &amp; varVal &amp; "]"
				End If
				
				Call elemNode.SetAttribute("type", varVal)
			End If
		Case "documentset"
			Set elemNode = Me.DocumentSetNode
			If elemNode Is Nothing Then
			Else
				strTxt = Me.ChangePropertyText(strName, CStr(varVal))
				If strTxt = "" Then
					Error USERERR, CHECK_MSG &amp; "[name = '" &amp; strName &amp; "', val = " &amp; varVal &amp; "]"
				End If
				
				Call elemNode.SetAttribute("type", varVal)
			End If
		Case "readers"
			
		Case Else
			Set elemNode = Me.AgentNode
			If elemNode Is Nothing Then
			Else
				Call elemNode.SetAttribute(strName, varVal)
			End If
		End Select
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Function
	End Function
	
	'@param
	'(String) strName
	' name, alias, enabled, readers, designerversion, fromtemplate, hide, noreplace
	' propagatenoreplace, runaswebuser, restrictions, publicaccess, activatable
	' trigger, documentset
	'@return プロパティ値
	Function GetProperty(strName As String) As Variant
		On Error GoTo ErrorHandle
		
		Dim nodeList As NotesDOMNodeList
		Dim elemNode As NotesDOMElementNode
		Dim domNode As NotesDOMNode
		Dim varVal As Variant
		Dim i As Integer
		
		Select Case LCase$(strName)
			Case "trigger"
				Set elemNode = Me.TriggerNode
				If elemNode Is Nothing Then
					varVal = ""
				Else
					varVal = elemNode.GetAttribute("type")
				End If
			Case "documentset"
				Set elemNode = Me.DocumentSetNode
				If elemNode Is Nothing Then
					varVal = ""
				Else
					varVal = elemNode.GetAttribute("type")
				End If
			Case "readers"
				Set elemNode = Me.AgentNode
				Set nodeList = elemNode.GetElementsByTagName("item")
				
				If nodeList.NumberOfEntries &lt;&gt; 0 Then
					Set elemNode = Me.GetItemNode("$Readers")
					
					If Not elemNode Is Nothing Then
						Set nodeList = elemNode.GetElementsByTagName("textlist")
						Set elemNode = Me.GetFirstNode(nodeList)
						
						If Not elemNode Is Nothing Then
							Set nodeList = elemNode.GetElementsByTagName("text")
							Set domNode = Me.GetFirstNode(nodeList)
							
							If Not domNode Is Nothing Then
								ReDim varVal(0) As String
								varVal(0) = domNode.FirstChild.NodeValue
								Set domNode = Me.GetNextSibling(domNode)
								
								Do Until domNode Is Nothing
									varVal = ArrayAppend(varVal, domNode.FirstChild.NodeValue)
									Set domNode = Me.GetNextSibling(domNode)
								Loop
								
							End If
							
						End If
						
					End If
					
				End If
				
			Case Else
				varVal = Me.AgentNode.GetAttribute(strName)
		End Select
		
		If IsArray(varVal) Then
		ElseIf varVal = "" Then
			Dim empty As Variant
			varVal = empty
		End If
		
		GetProperty = varVal
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Function
	End Function
	
	'@param
	'(String) strName
	' trigger, documentset, restrictions, enabled, runaswebuser, publicaccess, activatable
	' allowremotedebugging, profile, clientbackgroundthread, private, storehighlights
	Function GetPropertyText(strName As String) As String
		On Error GoTo ErrorHandle
		
		Dim strValue As String
		
		strValue = Me.GetProperty(strName)
		
		GetPropertyText = Me.ChangePropertyText(strName, strValue)
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Function
	End Function
	
	Function ChangePropertyLabel(strName As String) As String
		On Error GoTo ErrorHandle
		
		Dim retVal As String
		
		Select Case strName
			Case "trigger":retVal="トリガ"
			Case "documentset":retVal="対象"
			Case "restrictions":retVal="実行時のセキュリティレベル"
			Case "enabled":retVal="有効/無効"
			Case "noreplace":retVal = "更新時に再設計/設計の置換を禁止する"
			Case "propagatenoreplace":retVal = "設計の置換が禁止されていることを知らせる"
			Case "hide":retVal = "設計要素を非表示にする"
			Case "runaswebuser":retVal = "Webユーザーとして実行"
			Case "publicaccess":retVal = "パブリックユーザーに対してこのエージェントの参照と実行を許可する"
			Case "activatable":retVal = "「編集者」レベルのユーザーの有効化を許可"
			Case "allowremotedebugging":retVal = "リモートデバッグを許可"
			Case "private":retVal = "個人エージェント"
			Case "showinsearch":retVal = "検索バーメニューの検索を保存"
			Case "storehighlights":retVal = "文書中のハイライトを保存"
			Case "clientbackgroundthread":retVal = "クライアントのバックグラウンドスレッドで実行"
			Case "profile":retVal = "エージェントをプロファイル"
			Case Else:retVal = strName
		End Select
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Function
	End Function
	
	Function ChangePropertyText(strName As String, strValue As String) As String
		On Error GoTo ErrorHandle
		
		Dim retVal As String
		
		Select Case strName
			Case "trigger"
				Select Case strValue
				Case "scheduled":retVal="スケジュール"
				Case "actionsmenu":retVal="アクションメニューの選択"
				Case "agentlist":retVal="エージェントリストの選択"
				Case "beforenewmail":retVal="新規メールの受信前"
				Case "afternewmail":retVal="新規メールの受信後"
				Case "docupdate":retVal="文書の作成または更新後"
				Case "docpaste":retVal="文書が貼り付けられたとき"
				Case "serverstart":retVal="サーバー開始時"
				Case Else:retVal=strValue
				End Select
			Case "documentset"
				Select Case strValue
				Case "all":retVal="データベースのすべての文書"
				Case "modified":retVal="作成または変更されたすべての文書"
				Case "unreadinview":retVal="ビューのすべての未読文書"
				Case "allinview":retVal="ビューのすべての文書"
				Case "selected":retVal="すべての選択文書"
				Case "runonce","":retVal="なし"
				Case Else:retVal=strValue
				End Select
			Case "restrictions"
				Select Case strValue
				Case "unrestricted":retVal = "制限された操作を許可する"
				Case "fulladminunrestricted":retVal = "フルアドミニストレータ権限で制限された操作を許可する"
				Case Else:retVal = "制限された操作を許可しない"
				End Select
			Case "enabled"
				If Me.IsSchedule Or Me.IsAutomatic Or Me.IsDefault Then
					If strValue = "false" Then
						retVal = "無効"
					ElseIf strValue = "true" Or strValue = "" Then
						retVal = "有効"
					End If
				Else
					retVal = ""
				End If
			Case "noreplace"
				If strValue = "true" Then
					retVal = "更新時に再設計/設計の置換を禁止する"
				End If
				
			Case "propagatenoreplace"
				If strValue = "true" Then
					retVal = "設計の置換が禁止されていることを知らせる"
				End If
			Case "hide"
				retVal = strValue
				retVal = Replace(retVal, "v3", "")
				retVal = Trim$(retVal)
				retVal = Replace(retVal, " ", ",")
				retVal = Replace(retVal, "notes", "Lotus Notes R4.6以降のクライアントで非表示")
				retVal = Replace(retVal, "web", "Webブラウザで非表示")
				retVal = Replace(retVal, "v4", "Lotus Notes R4以降のクライアントのメニューに設計要素を表示しない")
			Case "runaswebuser":If strValue = "true" Then retVal = "Webユーザーとして実行"
			Case "publicaccess":If strValue = "true" Then retVal = "パブリックユーザーに対してこのエージェントの参照と実行を許可する"
			Case "activatable":If strValue = "true" Then retVal = "「編集者」レベルのユーザーの有効化を許可"
			Case "allowremotedebugging":If strValue = "true" Then retVal = "リモートデバッグを許可"
			Case "private":If strValue = "true" Then retVal = "個人エージェント"
			Case "showinsearch":If strValue = "true" Then retVal = "検索バーメニューの検索を保存"
			Case "storehighlights":If strValue = "true" Then retVal = "文書中のハイライトを保存"
			Case "clientbackgroundthread":If strValue = "true" Then retVal = "クライアントのバックグラウンドスレッドで実行"
			Case "profile":If strValue = "true" Then retVal = "エージェントをプロファイル"
			Case Else
				retVal = strValue
		End Select
		
		ChangePropertyText = retVal
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Function
	End Function
	
	Function SetSchedules(lstSchedule As Variant) As Integer
		On Error GoTo Errorhandle
		
		Dim pn As String
		
		ForAll s In lstSchedule
			pn = ListTag(s)
			Call Me.SetSchedule(pn, s)
		End ForAll
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Function
	End Function
	
	Function SetSchedule(strName As String, varVal As Variant) As Integer
		
		Dim nodeList As NotesDOMNodeList
		Dim elemNode As NotesDOMElementNode
		Dim objDT As NotesDateTime
		Dim strDT As String
		
		If Me.IsSchedule = False Then Exit Function
		
		Select Case LCase$(strName)
			Case "starttime", "endtime", "startdate", "enddate"
				Set elemNode = Me.ScheduleNode
				Set nodeList = elemNode.GetElementsByTagName(strName)
				Set elemNode = Me.GetFirstNode(nodeList)
				
				If Not elemNode Is Nothing Then
					Set nodeList = elemNode.GetElementsByTagName("datetime")
					Set elemNode = Me.GetFirstNode(nodeList)
					
					If Not elemNode Is Nothing Then
						Set objDT = New NotesDateTime(varVal)
						strDT = ConvISO8601Base(objDT)
						elemNode.NodeValue = strDT
					End If
					
				End If
				
			Case Else
				Set elemNode = Me.ScheduleNode
				Call elemNode.SetAttribute(strName, CStr(varVal))
		End Select
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Function
	End Function
	
	'@param
	' strName : パラメタ名
	'  type, onweekends, runlocation, runserver,
	'  hours, minutes, dayofweek, dateinmonth
	'  starttime, endtime, startdate, enddate
	'@return : (Variant)スケジュール設定値
	Function GetSchedule(strName As String) As Variant
		On Error GoTo ErrorHandle
		
		Dim nodeList As NotesDOMNodeList
		Dim elemNode As NotesDOMElementNode
		Dim objDT As NotesDateTime
		Dim varVal As Variant
		
		If Me.IsSchedule = False Then Exit Function
		
		Select Case LCase$(strName)
			Case "starttime", "endtime", "startdate", "enddate"
				Set elemNode = Me.ScheduleNode
				Set nodeList = elemNode.GetElementsByTagName(strName)
				Set elemNode = Me.GetFirstNode(nodeList)
				
				If Not elemNode Is Nothing Then
					Set nodeList = elemNode.GetElementsByTagName("datetime")
					Set elemNode = Me.GetFirstNode(nodeList)
					
					If Not elemNode Is Nothing Then
						Set objDT = ConvDateTime(elemNode.FirstChild.NodeValue)
						varVal = objDT.LsLocalTime
					End If
					
				End If
				
			Case Else
				Set elemNode = Me.ScheduleNode
				varVal = elemNode.GetAttribute(strName)
				
		End Select
		
		If IsArray(varVal) Then
		ElseIf varVal = "" Then
			Dim empty As Variant
			varVal = empty
		End If
		
		GetSchedule = varVal
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Function
	End Function
	
	'@param
	' strName : (String)
	'  type, dayofweek, runlocation, onweekends
	'@return : (String) スケジュール設定値のテキスト
	Function GetScheduleText(strName As String) As String
		On Error GoTo ErrorHandle
		
		Dim strValue As String
		
		strValue = Me.GetSchedule(strName)
		
		GetScheduleText = Me.ChangeScheduleText(strName, strValue)
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Function
	End Function
	
	Function ChangeScheduleText(strName As String, strValue As String) As String
		On Error GoTo ErrorHandle
		
		Dim retVal As String
		
		Select Case LCase$(strName)
		Case "type"
			Select Case strValue
			Case "byminutes":retVal="一日一回以上"
			Case "daily":retVal="日次"
			Case "weekly":retVal="週次"
			Case "monthly":retVal="月次"
			Case "never":retVal="なし"
			End Select
		Case "dayofweek"
			Select Case strValue
			Case "sunday":retVal = "日曜日"
			Case "monday":retVal = "月曜日"
			Case "tuesday":retVal = "火曜日"
			Case "wednesday":retVal = "水曜日"
			Case "thursday":retVal = "木曜日"
			Case "friday":retVal = "金曜日"
			Case "saturday":retVal = "土曜日"
			End Select
		Case "runlocation"
			Select Case strValue
			Case "choose":retVal = "エージェントが有効になったときにサーバーを指定"
			Case "specific":retVal = strValue
			Case Else:retVal = ""
			End Select
		Case "onweekends"
			If strValue = "false" Then retVal = "週末はエージェントを実行しない"
		Case Else
			retVal = strValue
		End Select
		
		ChangeScheduleText = retVal
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Function
	End Function
	
	'@return : (Boolean) True : スケジュールエージェント、False : スケジュールエージェント以外
	Property Get IsSchedule As Boolean
		IsSchedule = (Me.GetProperty("trigger") = "scheduled")
	End Property
	
	'@return : (Boolean) True : 自動エージェント、 False : 自動エージェント以外
	Property Get IsAutomatic As Boolean
		On Error GoTo ErrorHandle
		
		Dim elemNode As NotesDOMElementNode
		Set elemNode = Me.ScheduleNode
		If Not elemNode Is Nothing Then IsAutomatic = (elemNode.GetAttribute("type") = "automatic")
		
		Exit Property
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Property
	End Property
	
	'@return : (Boolean) True : デフォルトエージェント、 False : デフォルトエージェント以外
	Property Get IsDefault As Boolean
		IsDefault = (Me.GetProperty("default") = "true")
	End Property
	
	'@return
	'(Boolean) True : 文書の選択有、False : 無
	Property Get HasSearch As Boolean
		On Error GoTo ErrorHandle
		
		Dim elemNode As NotesDOMElementNode
		Set elemNode = Me.DocumentSetNode
		If Not elemNode Is Nothing Then HasSearch = (elemNode.NumberOfChildNodes &lt;&gt; 0)
		
		Exit Property
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Property
	End Property
	
End Class
Class CNotesDatabaseDXL As CNotesDesignDXL
	
	'@override
	'@param
	'(Variant)param: only NotesNoteCollection
	Function ParseDOM(param As Variant) As Integer
		On Error GoTo ErrorHandle
		
		Dim notes As NotesNoteCollection
		
		Set notes = param
		
		If TypeName(param) = UCase$("NotesNoteCollection") Then
			Set Me.Database = notes.Parent
			Call CNotesDesignDXL..ParseDOM(notes)
		End If
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		ParseDOM = FUNCTIONFAILURE
		Exit Function
	End Function
	
	'@override
	Property Get NoteInfoNode As NotesDOMElementNode
		On Error GoTo ErrorHandle
		
		Dim elemNode As NotesDOMElementNode
		Dim nodeList As NotesDOMNodeList
		
		If Me.IsAvailable("NoteInfoNode") = False Then
			Set elemNode = Me.GetNoteNode("icon", "true")
			If Not elemNode Is Nothing then
				Set nodeList = elemNode.GetElementsByTagName("noteinfo")
				Set elemNode = Me.GetFirstNode(nodeList)
			End If
			Set Me.Members("NoteInfoNode") = elemNode
		Else
			Set elemNode = Me.Members("NoteInfoNode")
		End If
		
		Set NoteInfoNode = elemNode
		
		Exit Property
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Property
	End Property
	
	Property Get DatabaseNode As NotesDOMElementNode
		On Error GoTo ErrorHandle
		
		Dim elemNode As NotesDOMElementNode
		
		If Me.IsAvailable("DatabaseNode") = False Then
			Set elemNode = Me.RootNode
			Set Me.Members("DatabaseNode") = elemNode
		Else
			Set elemNode = Me.Members("DatabaseNode")
		End If
		
		Set DatabaseNode = elemNode
		
		Exit Property
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Property
	End Property
	
	Property Get DatabaseInfoNode As NotesDOMElementNode
		On Error GoTo ErrorHandle
		
		Dim nodeList As NotesDOMNodeList
		Dim elemNode As NotesDOMElementNode
		
		If Me.IsAvailable("DatabaseInfoNode") = False Then
			Set nodeList = Me.DatabaseNode.GetElementsByTagName("databaseinfo")
			Set elemNode = Me.GetFirstNode(nodeList)
			Set Me.Members("DatabaseInfoNode") = elemNode
		Else
			Set elemNode = Me.Members("DatabaseInfoNode")
		End If
		
		Set DatabaseInfoNode = elemNode
		
		Exit Property
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Property
	End Property
	
	Property Get FullTextSettingsNode As NotesDOMElementNode
		On Error GoTo ErrorHandle
		
		Dim nodeList As NotesDOMNodeList
		Dim elemNode As NotesDOMElementNode
		
		If Me.IsAvailable("FullTextSettingsNode") = False Then
			Set nodeList = Me.DatabaseNode.GetElementsByTagName("fulltextsettings")
			Set elemNode = Me.GetFirstNode(nodeList)
			Set Me.Members("FullTextSettingsNode") = elemNode
		Else
			Set elemNode = Me.Members("FullTextSettingsNode")
		End If
		
		Set FullTextSettingsNode = elemNode
		
		Exit Property
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Property
	End Property
	
	Property Get LaunchSettingsNode As NotesDOMElementNode
		On Error GoTo ErrorHandle
		
		Dim nodeList As NotesDOMNodeList
		Dim elemNode As NotesDOMElementNode
		
		If Me.IsAvailable("LaunchSettingsNode") = False Then
			Set nodeList = Me.DatabaseNode.GetElementsByTagName("launchsettings")
			Set elemNode = Me.GetFirstNode(nodeList)
			Set Me.Members("LaunchSettingsNode") = elemNode
		Else
			Set elemNode = Me.Members("LaunchSettingsNode")
		End If
		
		Set LaunchSettingsNode = elemNode
		
		Exit Property
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Property
	End Property
	
	Property Get IconNoteDXL As CNotesDesignDXL
		On Error GoTo ErrorHandle
		
		Dim elemNode As NotesDOMElementNode
		Dim objDXL As CNotesDesignDXL
		
		If Me.IsAvailable("IconNoteDXL") = False Then
			Set elemNode = Me.GetNoteNode("icon", "true")
			If Not elemNode Is Nothing Then
				Set objDXL = New CNotesDesignDXL
				Call objDXL.ParseDOM(elemNode)
			End If
			Set Me.Members("IconNoteDXL") = objDXL
		Else
			Set objDXL = Me.Members("IconNoteDXL")
		End If
		
		Set IconNoteDXL = objDXL
		
		Exit Property
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Property
	End Property
	
	Property Get ReplicationFormulaDXL As CNotesDesignDXL
		On Error GoTo ErrorHandle
		
		Dim elemNode As NotesDOMElementNode
		Dim objDXL As CNotesDesignDXL
		
		If Me.IsAvailable("ReplicationFormulaDXL") = False Then
			Set elemNode = Me.GetNoteNode("replicationformula", "")
			If Not elemNode Is Nothing Then
				Set objDXL = New CNotesDesignDXL
				Call objDXL.ParseDOM(elemNode)
			End If
			Set Me.Members("ReplicationFormulaDXL") = objDXL
		Else
			Set objDXL = Me.Members("ReplicationFormulaDXL")
		End If
		
		Set ReplicationFormulaDXL = objDXL
		
		Exit Property
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Property
	End Property
	
	Property Get ArchiveProfileDXL As CNotesDesignDXL
		On Error GoTo ErrorHandle
		
		Dim elemNode As NotesDOMElementNode
		Dim objDXL As CNotesDesignDXL
		
		If Me.IsAvailable("ArchiveProfileDXL") = False Then
			Set elemNode = Me.GetProfileDocumentNode("archive profile")
			If Not elemNode Is Nothing Then
				Set objDXL = New CNotesDesignDXL
				Call objDXL.ParseDOM(elemNode)
			End If
			Set Me.Members("ArchiveProfileDXL") = objDXL
		Else
			Set objDXL = Me.Members("ArchiveProfileDXL")
		End If
		
		Set ArchiveProfileDXL = objDXL
		
		Exit Property
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Property
	End Property
	
	'@param
	'(String)strClass : Class Name
	'(String)strDefault : has "default" attribute
	Function GetNoteNode(strClass As String, strDefault As String) As NotesDOMElementNode
		On Error GoTo ErrorHandle
		
		Dim nodeList As NotesDOMNodeList
		Dim elemNode As NotesDOMElementNode
		Dim entryNode As NotesDOMElementNode
		Dim strMember As String
		
		strMember="obj" &amp; strClass &amp; "NoteNode"
		
		If Me.IsAvailable(strMember) = False Then
			Set nodeList = Me.DatabaseNode.GetElementsByTagName("note")
			Set elemNode = Me.GetFirstNode(nodeList)
			Do Until elemNode Is Nothing
				If elemNode.IsNull = True Then
				ElseIf elemNode.GetAttribute("class") = LCase$(strClass) Then
					Set entryNode = elemNode
					If LCase$(strDefault) = "true" And elemNode.GetAttribute("default") = LCase$(strDefault) Then
						Exit Do
					End If
				End If
				Set elemNode = Me.GetNextSibling(elemNode)
			Loop
			Set Me.Members(strMember) = entryNode
		Else
			Set entryNode = Me.Members(strMember)
		End If
		
		Set GetNoteNode = entryNode
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Function
	End Function
	
	'@param
	'(String)strName : Profile Name
	Function GetProfileDocumentNode(strName As String) As NotesDOMElementNode
		On Error GoTo ErrorHandle
		
		Dim nodeList As NotesDOMNodeList
		Dim elemNode As NotesDOMElementNode
		Dim entryNode As NotesDOMElementNode
		Dim strMember As String
		Dim i As Integer
		
		strMember="obj" &amp; strName &amp; "ProfileDocumentNode"
		
		If Me.IsAvailable(strMember) = False Then
			Set nodeList = Me.DatabaseNode.GetElementsByTagName("profiledocument")
			Set elemNode = Me.GetFirstNode(nodeList)
			Do Until elemNode Is Nothing
				If elemNode.IsNull = True Then
				ElseIf elemNode.GetAttribute("name") = LCase$(strName) Then
					Exit Do
				End If
				Set elemNode = Me.GetNextSibling(elemNode)
			Loop
			Set Me.Members(strMember) = entryNode
		Else
			Set entryNode = Me.Members(strMember)
		End If
		
		Set GetProfileDocumentNode = entryNode
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Function
	End Function
	
	'@param
	'(String)strName
	' dbid, odsversion, diskspace, percentused, numberofdocuments
	' datamodified, designmodified, created, modified
	Function GetProperty(strName As String) As Variant
		On Error GoTo ErrorHandle
		
		Dim elemNode As NotesDOMElementNode
		Dim nodeList As NotesDOMNodeList
		Dim objDT As NotesDateTime
		Dim retVal As Variant
		
		Select Case LCase$(strName)
			Case "dbid", "odsversion", "diskspace", "percentused", "numberofdocuments"
				Set elemNode = Me.DatabaseInfoNode
				If elemNode Is Nothing Then
					retVal = ""
				Else
					retVal = elemNode.GetAttribute(strName)
				End If
			Case "datamodified", "designmodified"
				If Me.IsAvailable("var" &amp; strName) = False Then
					Set elemNode = Me.DatabaseInfoNode
					Set nodeList = elemNode.GetElementsByTagName(strName)
					Set elemNode = Me.GetFirstNode(nodeList)
					If Not elemNode Is Nothing Then
						Set nodeList = elemNode.GetElementsByTagName("datetime")
						Set elemNode = Me.GetFirstNode(nodeList)
						Set objDT = ConvDateTime(elemNode.FirstChild.NodeValue)
						retVal = objDT.LsLocalTime
					End If
					Me.Members("var" &amp; strName) = retVal
				Else
					retVal = Me.Members("var" &amp; strName)
				End If
			Case "created":retVal=Me.Created
			Case "modified":retVal=Me.Modified
			Case Else
				retVal = Me.DatabaseNode.GetAttribute(strName)
		End Select
		
		GetProperty = retVal
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Function
	End Function
	
	'@param
	'(String)strName
	' usejavascriptinpages, requiressl, nourlopen, allowpost8html, allowbackgroundagents,
	' allowstoredforms, imageloadsdeferred, allowdocumentlocking, inheritostheme
	' diskspace, percentused, numberofdocuments, datamodified, designmodified
	' created, modified, replicaid, odsversion
	' allowdesignlocking, listindbcatalog, showinopendialog, multidbindexed,
	' markmodifiedunread, trackreplyfwd, fromtemplate, advancedtemplate,
	' copyprofiledocswithdesign, multilingual, defaultlanguage, defaultsortorder,
	' unicodestandardsorting
	' maintainunread, replicateunread, optimizetablebitmaps, overwritefreespace,
	' savelastaccessed, logtransactions, allowspecialhierarchy, uselz1, allowheadlinemonitors,
	' increasemaxfields, supportrespthread, nosimplesearch, compressdesign, compressdata,
	' noautoviewupdate, disableexport, allowsoftdeletion, maxupdatedbyentries, maxrevisionentries,
	' allowrestdbapi
	Function GetPropertyText(strName As String) As String
		On Error GoTo ErrorHandle
		
		Dim retVal As String, strValue As String, tmpStr As String
		Dim elemNode As NotesDOMElementNode
		Dim nodeList As NotesDOMNode
		Dim objDXL As CNotesAgentDXL
		Dim i As Integer
		
		strValue = Me.GetProperty(strName)
		
		Select Case strName
		'[基本]タブ
		Case "usejavascriptinpages":If strValue&lt;&gt;"false" Then retVal="ページ生成時に JavaScript を使用"
		Case "requiressl":If strValue="true" Then retVal="SSL接続の要求"
		Case "nourlopen":If strValue="true" Then retVal="URL参照を許可しない"
		Case "$AllowPost8HTML", "allowpost8html":
			Set objDXL = Me.IconNoteDXL
			If Not objDXL Is Nothing Then
				Set elemNode = objDXL.GetItemNode("$AllowPost8HTML")
				If elemNode Is Nothing Then
				ElseIf elemNode.NumberOfChildNodes &lt;&gt; 0 Then
				ElseIf elemNode.FirstChild.NodeValue = "1" Then
					retVal="拡張 HTML 生成を有効にする"
				End If
			End If
		Case "allowbackgroundagents":If strValue="false" Then retVal = "バックグラウンドエージェント不可"
		Case "allowstoredforms":If strValue&lt;&gt;"false" Then retVal="格納フォームの使用を許可"
		Case "imageloadsdeferred":If strValue="true" Then retVal="ロード後にイメージを表示"
		Case "allowdocumentlocking":If strValue="true" Then retVal="文書ロックを許可"
		Case "inheritostheme":If strValue="true" Then retVal="Lotus Notes プリファレンスからオペレーティングシステムのテーマを継承する"
		'[情報]タブ
		Case "diskspace"
			Dim aryUNIT As Variant, dblSize As Double, strUNIT As String
			aryUNIT=Split("B,MB,GB,TB")
			dblSize=CDbl(strValue)
			strUNIT=aryUNIT(0)
			For i = 0 To UBound(aryUNIT)
				If 4 &lt; Len(CStr(dblSize)) Then
					dblSize=(dblSize/1024)
					strUNIT=aryUNIT(i)
				End If
			Next
			retVal="サイズ[" &amp; strValue &amp; " " &amp; strUNIT &amp; "]"
		Case "percentused":retVal="使用率[" &amp; CStr(Round(strValue, 2)) &amp; " %]"
		Case "numberofdocuments":retVal="文書数[" &amp; strValue &amp; " 文書]"
		Case "datamodified":retVal="データ更新日[" &amp; strValue &amp; "]"
		Case "designmodified":retVal="設計更新日[" &amp; strValue &amp; "]"
		Case "created":retVal="作成日[" &amp; strValue &amp; "]"
		Case "modified":retVal="更新日[" &amp; strValue &amp; "]"
		Case "replicaid", "dbid":retVal="レプリカID[" &amp; strValue &amp; "]"
		Case "odsversion":retVal="ODSバージョン[" &amp; strValue &amp; "]"
		'ユーザーの使用状況はlog.nsfのSession文書を参照・集計することで得られる
		'[設計]タブ
		Case "allowdesignlocking":If strValue="true" Then retVal="設計のロックを許可"
		Case "ListInDbCatalog","listindbcatalog"
			If Me.Database.ListInDbCatalog Then
				retVal="データベースカタログに表示[" &amp; Me.GetProperty("categories") &amp; "]"
			End If
		Case "showinopendialog":If strValue&lt;&gt;"false" Then retVal="[アプリケーションを開く]ダイアログに表示"
		Case "multidbindexed":If strValue="true" Then retVal="サイト検索に含む"
		Case "markmodifiedunread":If strValue="false" Then retVal="更新文書に未読マークをつけない"
		Case "trackreplyfwd":If strValue="true" Then retVal="返信あるいは転送をマークする"
		Case "fromtemplate":If strValue&lt;&gt;"" Then retVal="テンプレートから設計を引き継ぐ[" &amp; strValue &amp; "]"
		Case "templatename":If strValue&lt;&gt;"" Then retVal="マスターテンプレートデータベース[" &amp; strValue &amp; "]"
		Case "advancedtemplate":If strValue="true" Then retVal="詳細テンプレートとして[新規アプリケーション]ダイアログにリスト表示"
		Case "copyprofiledocswithdesign":If strValue="true" Then retVal="設計と共にプロファイル文書をコピー"
		Case "multilingual":If strValue="true" Then retVal="マルチリンガル データベース"
		Case "defaultlanguage":If strValue&lt;&gt; "" Then retVal="デフォルトの言語[" &amp; strValue &amp; "]"
		Case "defaultsortorder":If strValue&lt;&gt;"" Then retVal="デフォルトのソート方法[" &amp; strValue &amp; "]"
		Case "unicodestandardsorting":If strValue="true" Then retVal="Unicode スタンダードソート"
		'[詳細タブ]
		Case "maintainunread":If strValue="false" Then retVal="未読マークを複製しない"
		Case "replicateunread"
			Select Case strValue
			Case "cluster":retVal="未読マークを複製する[クラスタサーバーのみ]"
			Case "all":retVal="未読マークを複製する[すべてのサーバー]"
			Case Else:retVal="未読マークを複製する[なし]"
			End Select
		Case "optimizetablebitmaps":If strValue="true" Then retVal="文書テーブルマップの最適化"
		Case "overwritefreespace":If strValue="false" Then retVal="空きスペースに上書きしない"
		Case "savelastaccessed":If strValue="true" Then retVal="LastAccessed プロパティを保持"
		Case "logtransactions":If strValue="false" Then retVal="トランザクションログを無効"
		Case "allowspecialhierarchy":If strValue="false" Then retVal="文書の階層情報を使用しない"
		Case "uselz1":If strValue="true" Then retVal="添付ファイルの圧縮形式として LZ1 を使用"
		Case "allowheadlinemonitors":If strValue="false" Then retVal="ヘッドラインモニターを許可しない"
		Case "increasemaxfields":If strValue="true" Then retVal="データベースで多くのフィールドを許可"
		Case "supportrespthread":If strValue="true" Then retVal="返答スレッド履歴をサポート"
		Case "nosimplesearch":If strValue="true" Then retVal="簡易検索を許可しない"
		Case "compressdesign":If strValue="true" Then retVal="データベース設計の圧縮"
		Case "compressdata":If strValue="true" Then retVal="文書データの圧縮"
		Case "noautoviewupdate":If strValue="true" Then retVal="ビューの自動更新を無効にする"
		Case "$DisableExport", "disableexport":
			Set objDXL = Me.IconNoteDXL
			If Not objDXL Is Nothing Then
				Set elemNode = objDXL.GetItemNode("$DisableExport")
				If elemNode Is Nothing Then
				ElseIf elemNode.NumberOfChildNodes &lt;&gt; 0 Then
				ElseIf elemNode.FirstChild.NodeValue = "1" Then
					retVal="ビューデータの書き出しを無効にする"
				End If
			End If
		Case "allowsoftdeletion"
			If strValue="true" Then
				tmpStr=Me.GetProperty("softdeletionsexpirein")
				If tmpStr = "" Then tmpStr="48"
				retVal="一時的削除を許可[文書を完全に削除:" &amp; tmpStr &amp; " 時間後]"
			End If
		Case "maxupdatedbyentries":retVal="$UpdatedBy フィールドのエントリ制限[" &amp; strValue &amp; "]"
		Case "maxrevisionentries":retVal="$Revisions フィールドのエントリ制限[" &amp; strValue &amp; "]"
		Case "$AllowRESTDbAPI", "allowrestdbapi"
			Set objDXL = Me.IconNoteDXL
			If Not objDXL Is Nothing Then
				Set elemNode = objDXL.GetItemNode("$AllowRESTDbAPI")
				If elemNode Is Nothing Then
				ElseIf elemNode.NumberOfChildNodes &lt;&gt; 0 Then
				ElseIf elemNode.FirstChild.NodeValue = "1" Then
					retVal="Lotus Domino データサービスを許可[ビューのみ]"
				ElseIf elemNode.FirstChild.NodeValue = "2" Then
					retVal="Lotus Domino データサービスを許可[ビューと文書]"
				End If
			End If
		Case Else:retVal = strValue
		End Select
		
		GetPropertyText = retVal
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Function
	End Function
	
	'
	Function GetArchiveProfile(strName As String) As Variant
		On Error GoTo ErrorHandle
		
		Dim itemNode As NotesDOMElementNode
		Dim nodeList As NotesDOMNodeList
		Dim elemNode As NotesDOMElementNode
		Dim objDXL As CNotesDesignDXL
		Dim retVal As Variant
		Dim i As Integer
		
		Set objDXL = Me.ArchiveProfileDXL
		If objDXL Is Nothing Then Exit Function
		
		Select Case strName
			Case "ArchProfilesToCopy", "ArchivePrivatePolicyList"
				Set itemNode = objDXL.GetItemNode(strName)
				If itemNode Is Nothing Then
				ElseIf itemNode.NumberOfChildNodes&lt;&gt; 0 Then
					Set elemNode = itemNode.FirstChild
					Set nodeList = elemNode.GetElementsByTagName("text")
					Set elemNode = Me.GetFirstNode(nodeList)
					If Not elemNode Is Nothing Then
						ReDim retVal(0) As Variant
						retVal(0) = elemNode.NodeValue
						Set elemNode = Me.GetNextSibling(elemNode)
						Do Until elemNode Is Nothing
							retVal = ArrayAppend(retVal, elemNode.NodeValue)
							Set elemNode = Me.GetNextSibling(elemNode)
						Loop
					End If
				End If
			Case "created":retVal=objDXL.Created
			Case "modified":retVal=objDXL.Modified
			Case "revised":retVal=objDXL.revised
			Case "lastaccessed":retVal=objDXL.LastAccessed
			Case "addedtofile":retVal=objDXL.AddedToFile
			Case "updatedby":retVal=objDXL.UpdatedBy
			Case "revisions":retVal=objDXL.Revised
			Case "wassignedby":retVal=objDXL.SignedBy
			Case Else
				Set itemNode = Me.GetItemNode(strName)
				If itemNode Is Nothing Then
				ElseIf itemNode.NumberOfChildNodes &lt;&gt; 0 Then
					Set nodeList = itemNode.GetElementsByTagName("text")
					Set elemNode = Me.GetFirstNode(nodeList)
					If Not elemNode Is Nothing Then
						retVal=elemNode.NodeValue
					End If
				End If
		End Select
		
		GetArchiveProfile = retVal
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Function
	End Function
	
	Function GetArchiveProfileText(strName As String) As String
		On Error GoTo ErrorHandle
		
		Dim retVal As Variant, strValue As String, tmpStr As String
		
		strValue=Me.GetArchiveProfileText(strName)
		Select Case strName
		Case "ArchiveOnClientOrServer"
			tmpStr=Me.GetArchiveProfile("ServerName")
			
			Select Case strValue
			Case "1"
				If tmpStr="" Then tmpStr="Local"
				retVal="Lotus Notes クライアントベース(実行先)[" &amp; tmpStr &amp; "]"
			Case "2"
				retVal=Me.GetArchiveProfile("ArchSrcServer")
				If tmpStr="" Then tmpStr="Local"
				If retVal="" Then retVal="Local"
				retVal="Lotus Domino サーバー(実行場所)[" &amp; tmpStr &amp; "=&gt;" &amp; retVal &amp; "]"
			End Select
		End Select
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Function
	End Function
	
	'@param
	'(String)strName
	' lastindexed, size, update, casesensitive, includeattachments, breakat
	Function GetFullTextSettings(strName As String) As Variant
		On Error GoTo ErrorHandle
		
		Dim elemNode As NotesDOMElementNode
		Dim nodeList As NotesDOMNodeList
		Dim objDT As NotesDateTime
		Dim retVal As Variant
		
		Select Case strName
			Case "lastindexed"
				If Me.IsAvailable("var" &amp; strName) = False Then
					Set elemNode = Me.FullTextSettingsNode
					Set nodeList = elemNode.GetElementsByTagName(strName)
					Set elemNode = Me.GetFirstNode(nodeList)
					If Not elemNode Is Nothing Then
						If elemNode.NumberOfChildNodes &lt;&gt; 0 Then
							Set objDT = ConvDateTime(elemNode.FirstChild.NodeValue)
							retVal = objDT.Lslocaltime
						End If
					End If
					Me.Members("var" &amp; strName) = retVal
				Else
					retVal = Me.Members("var" &amp; strName)
				End If
			Case Else
				Set elemNode = Me.FullTextSettingsNode
				If elemNode Is Nothing Then
					retVal = ""
				Else
					retVal = elemNode.GetAttribute(strName)
				End If
		End Select
		
		GetFullTextSettings = retVal
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Function
	End Function
	
	'@param
	'(String)strName
	' update, casesensitive, includeattachments, includeencryptedfields, breakat
	Function GetFullTextSettingsText(strName As String) As String
		On Error GoTo ErrorHandle
		
		Dim retVal As String, strValue As String
		strValue = Me.GetFullTextSettings(strName)
		Select Case strName
		Case "update"
			Select Case strValue
			Case "immediate":retVal="即時"
			Case "hourly":retVal="1時間おき"
			Case "scheduled":retVal="スケジュールに合わせる"
			Case "daily":retVal="毎日"
			Case Else:retVal=strValue
			End Select
		Case "casesensitive"
			If strValue="true" Then
				retVal="大文字/小文字を区別[ON]"
			Else
				retVal="大文字/小文字を区別[OFF]"
			End If
		Case "breakat"
			If strValue="wordssentencesparagraphs" Then
				retVal="単語、文、段落"
			Else
				retVal="単語のみ"
			End If
		Case "includeattachments", "attachmenttype"
			If Me.GetProperty("includeattachments")="true" Then
				If Me.GetProperty("attachmenttype")="includebinary" Then
					retVal="添付ファイルの索引[ON(詳細)]"
				Else
					retVal="添付ファイルの索引[ON(簡易)]"
				End If
			Else
				retVal="添付ファイルの索引[OFF)]"
			End If
		Case "includeencryptedfields"
			If strValue="false" Then
				retVal="暗号フィールドの索引[OFF]"
			Else
				retVal="暗号フィールドの索引[ON]"
			End If
		Case Else:retVal=strValue
		End Select
		
		GetFullTextSettingsText = retVal
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Function
	End Function
	
	'@param
	'(String)strTagName:
	' noteslaunch, weblaunch
	'(String)strName
	' whenopened, restorelastview, showaboutdocument
	Function GetLaunchSettings(strTagName As String, strName As String) As String
		On Error GoTo ErrorHandle
		
		Dim elemNode As NotesDOMElementNode
		Dim retVal As String
		
		Select Case strTagName
		Case "noteslaunch"
			Set elemNode = Me.LaunchSettingsNode
			If elemNode Is Nothing Then
				retVal = ""
			Else
				retVal = elemNode.GetAttribute(strName)
			End If
		case "weblaunch"
			Set elemNode = Me.LaunchSettingsNode
			If elemNode Is Nothing Then
				retVal = ""
			Else
				retVal = elemNode.GetAttribute(strName)
			End If
		Case Else
			retVal = ""
		End Select
		
		GetLaunchSettings = retVal
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Function
	End Function
	
	'@param
	'(String)strTagName:
	' noteslaunch, weblaunch
	'(String)strName
	' whenopened, restorelastview, showaboutdocument
	Function GetLaunchSettingsText(strTagName As String, strName As String) As String
		On Error GoTo ErrorHandle
		
		Dim elemNode As NotesDOMElementNode, nodeList As NotesDOMNodeList
		Dim retVal As String, strValue As String, tmpVal As String
		
		strValue = Me.GetLaunchSettings(strTagName, strName)
		Select Case strName
		Case "whenopened"
			Select Case strValue
			Case "openaboutdocument":retVal="「アプリケーションについて」文書を開く"
			Case "openframeset":retVal="指定されたフレームセットを開く[" &amp; Me.GetLaunchSettings(strTagName, "frameset") &amp; "]"
			Case "opennavigator"
				tmpVal=Me.GetLaunchSettings(strTagName, "navigator")
				If Me.GetLaunchSettings(strTagName, "navigatortype") = "page" Then
					retVal="指定されたナビゲータを開く[ページ:" &amp; tmpVal &amp; "]"
				ElseIf tmpVal = "Folder" Then
					retVal="指定されたナビゲータを開く[フォルダ]"
				Else
					retVal="指定されたナビゲータを開く[ナビゲータ:" &amp; tmpVal &amp; "]"
				End If
			Case "opennavigatorinwindow"
				tmpVal=Me.GetLaunchSettings(strTagName, "navigator")
				If Me.GetLaunchSettings(strTagName, "navigatortype") = "page" Then
					retVal="指定されたナビゲータを画面全体に表示する[ページ:" &amp; tmpVal &amp; "]"
				Else
					retVal="指定されたナビゲータを画面全体に表示する[ナビゲータ:" &amp; tmpVal &amp; "]"
				End If
			Case "openpage":retVal = "指定されたページを開く[ページ:" &amp; Me.GetLaunchSettings(strTagName, "page") &amp; "]"
			Case "openxpage":retVal = "指定されたXPageを開く[XPage:" &amp; Me.GetLaunchSettings(strTagName, "xpage") &amp; "]"
			Case "openfirstaboutattachment":retVal = "「アプリケーションについて」文書の最初の添付を起動する"
			Case "openfirstdoclink":retVal = "「アプリケーションについて」文書の最初の文書リンクを起動する"
			Case "opencompapp"
				tmpVal=Me.GetLaunchSettings(strTagName, "compapppage")
				retVal="コンポジットアプリケーションとして起動する[名前:" &amp; Me.GetLaunchSettings(strTagName, "compapp") &amp; ", ページ:" &amp; tmpVal &amp; "]"
			Case "openspecifieddoclink"
				Set elemNode = Me.LaunchSettingsNode
				Set nodeList = elemNode.GetElementsByTagName("doclink")
				Set elemNode = Me.GetFirstNode(nodeList)
				If Not elemNode Is Nothing Then
					tmpVal = "/" &amp; elemNode.GetAttribute("database") &amp; "/" &amp; elemNode.GetAttribute("view") &amp; "/" &amp; elemNode.GetAttribute("document")
				End If
				retVal="指定された文書リンクを起動する[" &amp; tmpVal &amp; "]"
			Case "openfirstdocumentinview"
				retVal="ビューの最初の文書を起動する[ビュー:" &amp; Me.GetLaunchSettings(strTagName, "view") &amp; "]"
			Case Else
				Select Case strTagName
				Case "noteslaunch":retVal="最後に表示していたものを表示する"
				Case "weblaunch":retVal="Lotus Notes 起動オプションを使う"
				End Select
			End Select
		Case "restorelastview":If strValue = "true" Then retVal = "最後に表示されていたものを表示する"
		Case "showaboutdocument"
			Select Case strValue
			Case "firstopenandchanged":retVal = "更新時に「アプリケーションについて」文書を表示する"
			Case "never":retVal = ""
			Case Else:retVal = "アプリケーションの初回起動時に「アプリケーションについて」文書を表示する"
			End Select
		Case Else
			retVal = strValue
		End Select
		
		GetLaunchSettingsText = retVal
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Function
	End Function
	
	Property Get Database As NotesDatabase
		If Me.IsAvailable("Database") = True Then Set Database = Me.Members("Database")
	End Property
	
	Property Set Database As NotesDatabase
		Set Me.Members("objDatabase") = Database
	End Property
	
End Class
Class CNotesFormDXL As CNotesDesignDXL
	
	Property Get FormNode As NotesDOMElementNode
		On Error GoTo ErrorHandle
		
		Dim elemNode As NotesDOMElementNode
		Dim nodeList As NotesDOMNodeList
		
		If Me.IsAvailable("FormNode") = False Then
			Set elemNode = Me.RootNode
			If StrCompare(elemNode.TagName, "form", 1) &lt;&gt; 0 Then
				Set nodeList = elemNode.GetElementsByTagName("form")
				Set elemNode = Me.GetFirstNode(nodeList)
			End If
			Set Me.Members("FormNode") = elemNode
		Else
			Set elemNode = Me.Members("FormNode")
		End If
		
		Set FormNode = elemNode
		
		Exit Property
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Property
	End Property
	
	Property Get BackgroundNode As NotesDOMElementNode
		On Error GoTo ErrorHandle
		
		Dim nodeList As NotesDOMNodeList
		Dim elemNode As NotesDOMElementNode
		
		If Me.IsAvailable("BackgroundNode") = False Then
			Set elemNode = Me.FormNode
			Set nodeList = elemNode.GetElementsByTagName("background")
			Set elemNode = Me.GetFirstNode(nodeList)
			Set Me.Members("BackgroundNode") = elemNode
		Else
			Set elemNode = Me.Members("BackgroundNode")
		End If
		
		Set BackgroundNode = elemNode
		
		Exit Property
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Property
	End Property
	
	'@return : (String Array)
	'name,alias,type,nocompose,otherdialog,
	'noquery,versions,manualversion,default,storeform,nofieldexchange,
	'recalc,anonymous,noinitialfocus,nofocusonf6,signdocuments,renderpassthrough,
	'nofieldindex,allowautosave,conflictaction,inherit,inheritdoc,inheritdocfield,
	'contextpane,editonopen,mailable,xpagealtclient,treatashtml,mimecharset,
	'htmlallfields,activelinkcolor,visitedlinkcolor,unvisitedlinkcolor,
	'metadataname,resourcename,autolunch,frameinfo,bgcolor,imageref,header,
	'footer,readers,formusers,keepprivate,publicaccess,designerversion
	Property Get AllPropertyNames As Variant
		On Error GoTo ErrorHandle
		
		If Me.IsAvailable("AllPropertyNames") = False Then
			Me.Members("AllPropertyNames") = Split("name,alias,type,nocompose,otherdialog," &amp;_
			"noquery,versions,manualversion,default,storeform,nofieldexchange," &amp;_
			"recalc,anonymous,noinitialfocus,nofocusonf6,signdocuments,renderpassthrough," &amp;_
			"nofieldindex,allowautosave,conflictaction,inherit,inheritdoc,inheritdocfield," &amp;_
			"contextpane,editonopen,mailable,xpagealtclient,treatashtml,mimecharset," &amp;_
			"htmlallfields,activelinkcolor,visitedlinkcolor,unvisitedlinkcolor," &amp;_
			"metadataname,resourcename,autolunch,frameinfo,bgcolor,imageref,header," &amp;_
			"footer,readers,formusers,keepprivate,publicaccess,designerversion"_
			, ",")
		End If
		
		AllPropertyNames = Me.Members("AllPropertyNames")
		
		Exit Property
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Property
	End Property
	
	Function GetAllPropertys() As Variant
		On Error GoTo ErrorHandle
		
		Dim aryNames As Variant
		
		aryNames = Me.AllPropertyNames
		
		GetAllPropertys = Me.GetPropertysByName(aryNames)
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Function
	End Function
	
	'@param
	' aryNames : (String Array) property names
	'@return :(Variant List)
	Function GetPropertysByName(aryNames As Variant) As Variant
		On Error GoTo ErrorHandle
		
		Dim lstProperty List As Variant
		
		ForAll n In aryNames
			lstProperty(CStr(n)) = Me.GetProperty(CStr(n))
		End ForAll
		
		GetPropertysByName = lstProperty
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Function
	End Function
	
	Function GetProperty2(strName As String) As Variant
		GetProperty2 = Me.FormNode.Getattribute(strName)
	End Function
	
	'@return プロパティ値
	Function GetProperty(strName As String) As Variant
		On Error GoTo ErrorHandle
		
		Dim elemNode As NotesDOMElementNode
		Dim nodeList As NotesDOMNodeList
		Dim domNode As NotesDOMNode
		Dim tmpAry As Variant
		Dim retVal As Variant
		
		Select Case strName
			'**フォーム情報**********
			'Case "name"':retVal="設計名"
			'Case "alias"':retVal="別名"
			'Case "type"':retVal="種類"
			'Case "nocompose"':retVal="メニューに含む"
			'Case "otherdialog"':retVal="[作成] - [その他] ダイアログ"
			'Case "noquery"':retVal="検索ビルダーに含む"
			'Case "versions"':retVal="バージョン"
			'Case "manualversion"':retVal="手動 - ファイル - 新規バージョン"
			'Case "default"':retVal="デフォルトのデータベースフォーム"
			'Case "storeform"':retVal="フォームを文書に格納"
			'Case "nofieldexchange"':retVal="データ交換機能を無効にする"
			'Case "recalc"':retVal="フィールドを自動更新"
			'Case "anonymous"':retVal="Anonymous のフォーム"
			'Case "noinitialfocus"':retVal="デフォルトのフォーカスなし"
			'Case "nofocusonf6"':retVal="F6 でフォーカスしない"
			'Case "signdocuments"':retVal="このフォームを使用する文書に署名する"
			'Case "renderpassthrough"':retVal = "IBM Notes パススルー HTML を解釈する"
			'Case "nofieldindex"':retVal = "インデックスにフィールドを追加しない"
			'Case "allowautosave"':retVal = "自動保存を許可する"
			'Case "conflictaction"':retVal="競合時の処理"
				
			'**デフォルト********
			'Case "inherit"':retVal="式で選択文書から値を引き継ぐ"
			'Case "inheritdoc"':retVal="選択文書全体をリッチテキストフィールドに引き継ぐ"
			'Case "inheritdocfield"':retVal="選択文書全体をリッチテキストフィールドに引き継ぐ"
			'Case "contextpane"':retVal="コンテキストペインを表示"
			'Case "editonopen"':retVal="自動的に編集モードにする"
			'Case "mailable"':retVal="メール送信ダイアログ"
			Case "XPageAltClient","xpagealtclient"':retVal="代わりに XPages を表示"
				Set elemNode = Me.GetItemNode("$XPageAltClient")
				If elemNode Is Nothing Then
					retVal = ""
				Else
					Set nodeList = elemNode.GetElementsByTagName("text")
					Set elemNode = Me.GetFirstNode(nodeList)
					retVal = elemNode.FirstChild.NodeValue
				End If
			'Case "treatashtml"':retVal="コンテントタイプ"
			'Case "MimeCharSet","mimecharset"':retVal="文字セット"
			'Case "htmlallfields"':retVal = "全てのフィールドに HTML を生成する"
			'Case "activelinkcolor"':retVal = "アクティブリンク"
			'Case "visitedlinkcolor"':retVal = "既読リンク"
			'Case "unvisitedlinkcolor"':retVal = "未読リンク"
			'Case "metadataname"':retVal="デフォルトデータコネクション"
			'Case "resourcename"':retVal="デフォルトメタデータオブジェクト"
				
			'**起動********
	
			Case "autolunch","AUTOLAUNCH"':retVal="自動起動"
				Set elemNode = Me.GetItemNode("$AUTOLAUNCH")
				If elemNode Is Nothing Then
					retVal = ""
				Else
					Set nodeList = elemNode.GetElementsByTagName("rawitemdata")
					Set elemNode = Me.GetFirstNode(nodeList)
					If Not elemNode Is Nothing Then
						retVal = elemNode.FirstChild.NodeValue
					End If
				End If
			Case "FrameInfo","frameinfo"':retVal="自動フレーム"
				Set elemNode = Me.GetItemNode("$FrameInfo")
				If elemNode Is Nothing Then
					retVal = ""
				Else
					Set nodeList = elemNode.GetElementsByTagName("textlist")
					If nodeList.NumberOfEntries &lt;&gt; 0 Then
						Set elemNode = Me.GetFirstNode(nodeList)
						Set nodeList = elemNode.GetElementsByTagName("text")
					Else
						Set nodeList = elemNode.GetElementsByTagName("text")
					End If
					
					Set domNode = Me.GetFirstNode(nodeList)
					
					If Not domNode Is Nothing Then
						ReDim tmpAry(0) As Variant
						tmpAry(0) = domNode.FirstChild.NodeValue
						
						Set domNode = Me.GetNextSibling(domNode)
						Do Until domNode Is Nothing
							tmpAry = ArrayAppend(tmpAry, domNode.FirstChild.NodeValue)
							Set domNode = Me.GetNextSibling(domNode)
						Loop
						
						retVal = Join(tmpAry, ",")
					End If
				End If
			'**フォームの背景********
			'Case "bgcolor":retVal="色"
			Case "imageref"':retVal="図形またはリソース"
				Set elemNode = Me.BackgroundNode
				If elemNode Is Nothing Then
					retVal = ""
				Else
					Set nodeList = elemNode.GetElementsByTagName("imageref")
					Set elemNode = Me.GetFirstNode(nodeList)
					If Not elemNode Is Nothing Then
						retVal = elemNode.GetAttribute("name")
					End If
				End If
				
			'**ヘッダー********
				
			'**印刷********
			'Case "Header","header":retVal="ヘッダー"
			'Case "Footer","footer":retVal="フッター"
				
			'**セキュリティ********
			'Case "Readers","readers":retVal="フォームで作成した文書のデフォルトのアクセス権"
			'Case "FormUsers","formusers":retVal="フォームで文書を作成できるユーザー"
			'Case "KeepPrivate","keepprivate":retVal="印刷/転送/クリップボードへのコピーを不可"
			'Case "publicaccess":retVal="パブリックアクセスユーザーの使用を許可"
				
			'その他
			'Case "designerversion":retVal="デザイナーバージョン"
				
		Case Else
			Set elemNode = Me.FormNode
			retVal = elemNode.Getattribute(strName)
		End Select
		
		GetProperty = retVal
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Function
	End Function
	
	'@return プロパティ値
	Function GetPropertyText(strName As String) As String
		On Error GoTo ErrorHandle
		
		Dim elemNode As NotesDOMElementNode
		Dim strValue As Variant
		
		Select Case strName
			Case Else
				Set elemNode = Me.FormNode
				strValue = elemNode.Getattribute(strName)
		End Select
		
		GetPropertyText = strValue
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Function
	End Function
	
	Function ChangePropertyLabel(strName As String) As String
		
		Dim retVal As String
		
		Select Case strName
			'**フォーム情報**********
			Case "name":retVal="設計名"
			Case "alias":retVal="別名"
			Case "type":retVal="種類"
			Case "nocompose":retVal="メニューに含む"
			Case "otherdialog":retVal="[作成] - [その他] ダイアログ"
			Case "noquery":retVal="検索ビルダーに含む"
			Case "versions":retVal="バージョン"
			Case "manualversion":retVal="手動 - ファイル - 新規バージョン"
			Case "default":retVal="デフォルトのデータベースフォーム"
			Case "storeform":retVal="フォームを文書に格納"
			Case "nofieldexchange":retVal="データ交換機能を無効にする"
			Case "recalc":retVal="フィールドを自動更新"
			Case "anonymous":retVal="Anonymous のフォーム"
			Case "noinitialfocus":retVal="デフォルトのフォーカスなし"
			Case "nofocusonf6":retVal="F6 でフォーカスしない"
			Case "signdocuments":retVal="このフォームを使用する文書に署名する"
			Case "renderpassthrough":retVal = "IBM Notes パススルー HTML を解釈する"
			Case "nofieldindex":retVal = "インデックスにフィールドを追加しない"
			Case "allowautosave":retVal = "自動保存を許可する"
			Case "conflictaction":retVal="競合時の処理"
				
			'**デフォルト********
			Case "inherit":retVal="式で選択文書から値を引き継ぐ"
			Case "inheritdoc":retVal="選択文書全体をリッチテキストフィールドに引き継ぐ"
			Case "inheritdocfield":retVal="選択文書全体をリッチテキストフィールドに引き継ぐ"
			Case "contextpane":retVal="コンテキストペインを表示"
			Case "editonopen":retVal="自動的に編集モードにする"
			Case "mailable":retVal="メール送信ダイアログ"
			Case "XPageAltClient","xpagealtclient":retVal="代わりに XPages を表示"
			Case "treatashtml":retVal="コンテントタイプ"
			Case "MimeCharSet","mimecharset":retVal="文字セット"
			Case "htmlallfields":retVal = "全てのフィールドに HTML を生成する"
			Case "activelinkcolor":retVal = "アクティブリンク"
			Case "visitedlinkcolor":retVal = "既読リンク"
			Case "unvisitedlinkcolor":retVal = "未読リンク"
			Case "metadataname":retVal="デフォルトデータコネクション"
			Case "resourcename":retVal="デフォルトメタデータオブジェクト"
				
			'**起動********
			Case "autolunch":retVal="自動起動"
			Case "FrameInfo","frameinfo":retVal="自動フレーム"
				
			'**フォームの背景********
			Case "bgcolor":retVal="色"
			Case "imageref":retVal="図形またはリソース"
				
			'**ヘッダー********
			
			'**印刷********
			Case "Header","header":retVal="ヘッダー"
			Case "Footer","footer":retVal="フッター"
				
			'**セキュリティ********
			Case "Readers","readers":retVal="フォームで作成した文書のデフォルトのアクセス権"
			Case "FormUsers","formusers":retVal="フォームで文書を作成できるユーザー"
			Case "KeepPrivate","keepprivate":retVal="印刷/転送/クリップボードへのコピーを不可"
			Case "publicaccess":retVal="パブリックアクセスユーザーの使用を許可"
				
			'その他
			Case "designerversion":retVal="デザイナーバージョン"
			Case Else:retVal=strName
		End Select
		
		ChangePropertyLabel = retVal
		
	End Function
	
	Function ChangePropertyText(strName As String, strValue As String) As String
		On Error GoTo ErrorHandle
		
		Dim retVal As String
		Dim domNode As NotesDOMNode
		Dim nodeList As NotesDOMNodeList
		Dim elemNode As NotesDOMElementNode
		Dim tmpStr As String
		Dim tmpVar As Variant
		
		Select Case strName
			'**フォーム情報**********
			'Case "name":retVal="設計名"
			'Case "alias":retVal="別名"
			Case "type"':retVal="種類"
				Select Case strValue
					Case "document":retVal = "文書"
					Case "response":retVal = "返答"
					Case "responsetoresponse":retVal = "返答の返答"
				End Select
			Case "nocompose"':retVal="メニューに含む"
				If strValue = "true" Then
					retVal = ""
				Else
					retVal = "[作成]"
				End If
			Case "otherdialog"':retVal="[作成] - [その他] ダイアログ"
				If strValue = "true" Then
					retVal = "[作成] - [その他]ダイアログ"
				Else
					retVal = ""
				End If
			Case "noquery"':retVal="検索ビルダーに含む"
				If strValue = "true" Then
					retVal = ""
				Else
					retVal = "○"
				End If
			Case "versions"':retVal="バージョン"
				Select Case strValue
					Case "none":retVal="なし"
					Case "newresponse":retVal="新規文書を返答文書に"
					Case "oldresponse":retVal="以前の文書を返答文書に"
					Case "newsibling":retVal="新規文書を兄弟文書に"
				End Select
			Case "manualversion"':retVal="手動 - ファイル - 新規バージョン"
				If strValue = "true" Then
					retVal = "手動 - ファイル、新規バージョン"
				Else
					retVal = ""
				End If
			Case "default"':retVal="デフォルトのデータベースフォーム"
				If strValue = "true" Then
					retVal = "○"
				Else
					retVal = ""
				End If
			Case "storeform"':retVal="フォームを文書に格納"
				If strValue = "true" Then
					retVal = "○"
				Else
					retVal = ""
				End If
			Case "nofieldexchange"':retVal="データ交換機能を無効にする"
				If strValue = "true" Then
					retVal = "○"
				Else
					retVal = ""
				End If
			Case "recalc"':retVal="フィールドを自動更新"
				If strValue = "true" Then
					retVal = "○"
				Else
					retVal = ""
				End If
			Case "anonymous"':retVal="Anonymous のフォーム"
				If strValue = "true" Then
					retVal = "○"
				Else
					retVal = ""
				End If
			Case "noinitialfocus"':retVal="デフォルトのフォーカスなし"
				If strValue = "true" Then
					retVal = "○"
				Else
					retVal = ""
				End If
			Case "nofocusonf6"':retVal="F6 でフォーカスしない"
				If strValue = "true" Then
					retVal = "○"
				Else
					retVal = ""
				End If
			Case "signdocuments"':retVal="このフォームを使用する文書に署名する"
				If strValue = "true" Then
					retVal = "○"
				Else
					retVal = ""
				End If
			Case "renderpassthrough"':retVal = "IBM Notes パススルー HTML を解釈する"
				If strValue = "true" Then
					retVal = "○"
				Else
					retVal = ""
				End If
			Case "nofieldindex"':retVal = "インデックスにフィールドを追加しない"
				If strValue = "true" Then
					retVal = "○"
				Else
					retVal = ""
				End If
			Case "allowautosave"':retVal = "自動保存を許可する"
				If strValue = "true" Then
					retVal = "○"
				Else
					retVal = ""
				End If
			Case "conflictaction"':retVal="競合時の処理"
				Select Case strValue
					Case "createconflicts":retVal="競合の作成"
					Case "donotcreateconflicts":retVal="競合を作成しない"
					Case "mergeconflicts":retVal="競合のマージ"
					Case "mergenoconflicts":retVal="マージ/競合なし"
				End Select
				
			'**デフォルト********
			Case "inherit"':retVal="式で選択文書から値を引き継ぐ"
				If strValue = "true" Then
					retVal = "○"
				Else
					retVal = ""
				End If
			Case "inheritdoc"':retVal="選択文書全体をリッチテキストフィールドに引き継ぐ"
				Select Case strValue
					Case "none":retVal=""
					Case "link":retVal="[文書リンク]"
					Case "richtext":retVal="[リッチテキスト]"
					Case "collapsed":retVal="[セクション(省略可)]"
				End Select
			'Case "inheritdocfield"':retVal="選択文書全体をリッチテキストフィールドに引き継ぐ"
			Case "editonopen"':retVal="自動的に編集モードにする"
				If strValue = "true" Then
					retVal = "○"
				Else
					retVal = ""
				End If
			Case "contextpane"':retVal="コンテキストペインを表示"
				Select Case strValue
					Case "hide":retVal=""
					Case "link":retVal="文書リンク"
					Case "parent":retVal="親文書"
				End Select
			Case "mailable"':retVal="メール送信ダイアログ"
				If strValue = "true" Then
					retVal = "○"
				Else
					retVal = ""
				End If
			'Case "XPageAltClient","xpagealtclient"':retVal="代わりに XPages を表示"
			Case "treatashtml":retVal="コンテントタイプ"
				If strValue = "true" Then
					Set domNode = Me.GetItemNode("mimetype")
					If domNode Is Nothing Then
						tmpStr = ""
					Else
						tmpStr = domNode.FirstChild.NodeValue
					End If
					If tmpStr = "" Then
						retVal = "HTML"
					Else
						retVal = "その他"
					End If
				Else
					retVal = "Notes"
				End If
			'Case "MimeCharSet","mimecharset"':retVal="文字セット"
			Case "htmlallfields"':retVal = "全てのフィールドに HTML を生成する"
				If strValue = "true" Then
					retVal = "○"
				Else
					retVal = ""
				End If
			'Case "activelinkcolor"':retVal = "アクティブリンク"
			'Case "visitedlinkcolor"':retVal = "既読リンク"
			'Case "unvisitedlinkcolor"':retVal = "未読リンク"
			'Case "metadataname"':retVal="デフォルトデータコネクション"
			'Case "resourcename"':retVal="デフォルトメタデータオブジェクト"
				
			'**起動********
			'Case "autolunch"':retVal="自動起動"
			'Case "FrameInfo","frameinfo"':retVal="自動フレーム"
			
			'**フォームの背景********
			'Case "bgcolor"':retVal="色"
			'Case "imageref"':retVal="図形またはリソース"
			
			'**ヘッダー********
			
			'**印刷********
			'Case "Header","header"':retVal="ヘッダー"
			'Case "Footer","footer"':retVal="フッター"
			
			'**セキュリティ********
			'Case "Readers","readers"':retVal="フォームで作成した文書のデフォルトのアクセス権"
			'Case "FormUsers","formusers"':retVal="フォームで文書を作成できるユーザー"
			Case "KeepPrivate","keepprivate"':retVal="印刷/転送/クリップボードへのコピーを不可"
				If strValue = "true" Then
					retVal = "○"
				Else
					retVal = ""
				End If
			Case "publicaccess"':retVal="パブリックアクセスユーザーの使用を許可"
				If strValue = "true" Then
					retVal = "○"
				Else
					retVal = ""
				End If
			'その他
			'Case "designerversion":retVal="デザイナーバージョン"
			Case Else:retVal=strValue
		End Select
		
		ChangePropertyText = retVal
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Function
	End Function
	
End Class
</lotusscript></code><code event='initialize'><lotusscript>Sub Initialize
	Call SetProcess("*SL - NotesDXLLIb")
End Sub



















</lotusscript></code></scriptlibrary>

<agentdata>
<noteinfo noteid='751a' unid='CC554B6950A020DF49258322001BAE94' sequence='1'>
<created><datetime>20181010T140221,64+09</datetime></created>
<modified><datetime>20181010T140221,65+09</datetime></modified>
<revised><datetime>20181010T140221,64+09</datetime></revised>
<lastaccessed><datetime>20181010T140221,65+09</datetime></lastaccessed>
<addedtofile><datetime>20181010T140221,65+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby></agentdata>

<form name='xpath' publicaccess='false' designerversion='8.5.3' renderpassthrough='true'>
<noteinfo noteid='751e' unid='CA0AEBE472BC8DE449258323000C35D0' sequence='67'>
<created><datetime>20181011T111322,08+09</datetime></created>
<modified><datetime>20181031T100054,08+09</datetime></modified>
<revised><datetime>20181031T100054,07+09</datetime></revised>
<lastaccessed><datetime>20181031T100054,08+09</datetime></lastaccessed>
<addedtofile><datetime>20181011T111322,24+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby>
<wassignedby><name>CN=Administrator/O=Comture</name></wassignedby>
<actionbar bgcolor='#f0f0f0' bordercolor='black'>
<actionbuttonstyle bgcolor='#f0f0f0'/><font color='system'/><border style='solid'
 width='0px 0px 1px'/>
<action title='CXMLVarifier'><code event='options'><lotusscript>Option Declare
Use "XPathBaseLib"
Use "NotesUICommonLib"
</lotusscript></code><code event='click'><lotusscript>Sub Click(Source As Button)
	On Error Goto ErrorHandle
	
	Dim ws As New NotesUIWorkspace
	Dim uiDoc As NotesUIDocument
	Dim doc As NotesDocument
	
	Set uiDoc = ws.CurrentDocument
	Set doc = uiDoc.Document
	
	Dim xpath As String
	Dim objBuf As CStringable
	Dim XMLVarifier As CXMLVarifier
	Dim i As Integer
	Dim c As String
	Dim b As Boolean
	Dim result As Integer
	
	result = GetXMLVarifier(XMLVarifier)
	If result = FUNCTIONFAILURE Then
		Error USERERR, Error
	End If
	
	'XMLVarifier.Debug = True
	
	xpath = doc.xpath(0)
	
	Set objBuf = New CStringable
	
	Call objBuf.Build(xpath)
	
	For i = 0 To objBuf.StringLength-1
		
		result = objBuf.CharAt(i, c)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		result = XMLVarifier.IsXMLLetter(c, b)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		Print "c='" &amp; c &amp; "',b=" &amp; Cstr(b)
		
	Next
	
	Exit Sub
ErrorHandle:
	Call SetErrorObject(Err, Error)
	Call Messagebox_Error(GetErrorMessage(), "")
	Call ClearErrorObject()
	Exit Sub
End Sub</lotusscript></code></action>
<action title='CXMLLexer'><code event='options'><lotusscript>Option Declare
Use "XPathBaseLib"
Use "NotesUICommonLib"
</lotusscript></code><code event='click'><lotusscript>Sub Click(Source As Button)
	On Error Goto ErrorHandle
	
	Dim ws As New NotesUIWorkspace
	Dim uiDoc As NotesUIDocument
	Dim doc As NotesDocument
	
	Set uiDoc = ws.CurrentDocument
	Set doc = uiDoc.Document
	
	Dim xpath As String
	Dim buffer As String
	Dim buf As String
	
	Dim xv As CXMLVarifier
	Dim XPTTypes As CXPathTokenTypes
	Dim XPTTypes_EOF As Integer
	Dim XPTTypes_ERROR As Integer
	
	Dim xpLexer As CXPathLexer
	Dim xpToken As CXPathToken
	Dim i As Integer
	Dim c As String
	Dim b As Boolean
	Dim result As Integer
	
	result = GetXMLVarifier(xv)
	If result = FUNCTIONFAILURE Then
		Error USERERR, Error
	End If
	
	'xv.Debug = True
	
	result = GetXPathTokenTypes(XPTTypes)
	If result = FUNCTIONFAILURE Then
		Error USERERR, Error
	End If
	
	result = XPTTypes.GetTokenType("EOF", XPTTypes_EOF)
	If result = FUNCTIONFAILURE Then
		Error USERERR, Error
	End If
	
	result = XPTTypes.GetTokenType("ERROR", XPTTypes_ERROR)
	If result = FUNCTIONFAILURE Then
		Error USERERR, Error
	End If
	
	xpath = doc.xpath(0)
	
	Set xpLexer = New CXPathLexer
	
	result = xpLexer.Build(xpath)
	If result = FUNCTIONFAILURE Then
		Error USERERR, Error
	End If
	
	result = xpLexer.GetFirstToken(xpToken)
	If result = FUNCTIONFAILURE Then
		Error USERERR, Error
	End If
	
	Do Until xpToken.TokenType = XPTTypes_EOF
		
		result = XPTTypes.GetTokenTypeText(xpToken.TokenType, buf)
		
		buffer = buffer &amp; Chr(10) &amp; xpToken.ToString &amp; " token='" &amp; buf &amp; "'"
		
		result = xpLexer.GetNextToken(xpToken)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		If xpToken.TokenType = XPTTypes_ERROR Then
			'Error usererr, xpToken.ToString
			Exit Do
		End If
		
	Loop
	
	
	
	doc.buffer = buffer
	
	Exit Sub
ErrorHandle:
	Call SetErrorObject(Err, Error)
	Call Messagebox_Error(GetErrorMessage(), "")
	Call ClearErrorObject()
	Exit Sub
End Sub</lotusscript></code></action></actionbar>
<body><richtext>
<pardef id='1' hide='notes web mobile'/>
<par def='1'><run><font color='gray'/><field type='text' kind='computedfordisplay'
 name='SaveOptions'><code event='defaultvalue'><formula>0</formula></code></field></run><compositedata
 type='98' prevtype='65418' nexttype='222' afterparcount='7' containertype='65418'
 aftercontainercount='1' afterbegincount='3'>
Yg4BAIQAAAAAAAAAAAA=
</compositedata></par>
<pardef id='2'/>
<par def='2'><field type='text' kind='editable' name='xpath'/><compositedata
 type='98' prevtype='65418' nexttype='222' afterparcount='7' containertype='65418'
 aftercontainercount='1' afterbegincount='3'>
Yg4BAIQAAAAAAAAAAAA=
</compositedata></par>
<par def='2'>++++++++++++</par>
<par def='2'><field showdelimiters='false' type='text' kind='editable' name='buffer'/><compositedata
 type='98' prevtype='65418' nexttype='222' afterparcount='7' containertype='65418'
 aftercontainercount='1' afterbegincount='4'>
Yg4BAIQAAAAAAAAAAAA=
</compositedata></par></richtext></body>
<item name='$$ScriptName' summary='false' sign='true'><text>xpath</text></item></form>

<agentdata>
<noteinfo noteid='7536' unid='C5CEB3DAAFA88A8549258323000CB263' sequence='1'>
<created><datetime>20181011T111840,99+09</datetime></created>
<modified><datetime>20181011T111841,00+09</datetime></modified>
<revised><datetime>20181011T111840,99+09</datetime></revised>
<lastaccessed><datetime>20181011T111841,00+09</datetime></lastaccessed>
<addedtofile><datetime>20181011T111841,00+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='753e' unid='F64688921A04B27E49258323000CBDEA' sequence='1'>
<created><datetime>20181011T111910,50+09</datetime></created>
<modified><datetime>20181011T111910,52+09</datetime></modified>
<revised><datetime>20181011T111910,51+09</datetime></revised>
<lastaccessed><datetime>20181011T111910,52+09</datetime></lastaccessed>
<addedtofile><datetime>20181011T111910,52+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby></agentdata>

<scriptlibrary name='XPathSaxbaseLib' hide='v3 v4strict' designerversion='8.5.3'>
<noteinfo noteid='7542' unid='670B9753158575E549258323000DAA48' sequence='2376'>
<created><datetime>20181011T112915,60+09</datetime></created>
<modified><datetime>20181031T173117,48+09</datetime></modified>
<revised><datetime>20181031T173117,47+09</datetime></revised>
<lastaccessed><datetime>20181031T173117,48+09</datetime></lastaccessed>
<addedtofile><datetime>20181011T112915,63+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby>
<wassignedby><name>CN=Administrator/O=Comture</name></wassignedby><code event='options'><lotusscript
>Option Public
Option Declare
Use "XPathExprLib"

</lotusscript></code><code event='declarations'><lotusscript>'--private
Private p_xPathTokenTypes As CXPathTokenTypes
Private p_xmlVarifier As CXMLVarifier
Class CXMLVarifier As CObjectable
'Extensible Markup Language (XML) 1.0 (第五版)
'@ref http://www.eplusx.net/translation/W3C/REC-xml-20081126/
	
	Sub New()
		Call Me.pInit_CXMLVarifier()
	End Sub
	
	'@ref ???
	Function IsXMLNCName(c As String, b As Boolean) As Integer
		On Error GoTo ErrorHandle
		
		Dim t As String
		Dim w As Boolean
		Dim result As Integer
		
		t = "XMLNCName"
		result = Me.pWasCheckedChar(t, c, w, b)
		If result= FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		If w = True Then
			GoTo ExitTag
		End If
		
		result = Me.ISXMLLetter(c, b)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		If b = True Then
			GoTo ExitT
		End If
		
		'other char(s)
		'[template]If Me.pDL(c, "") = True Then GoTo ExitT
		If Me.pDL(c, "_") = True Then GoTo ExitT
		
		result = Me.IsXMLNCNameChar(c, b)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		If b = True Then
			GoTo ExitT
		End If
		
ExitF:	b = False
		GoTo ExitTag
ExitT:	b = True
		GoTo ExitTag
ExitTag:
		If w = False Then
			result = Me.pAddCheckedChar(t, c, b)
			If result= FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
		End If
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		IsXMLNCName = FUNCTIONFAILURE
		Exit Function
	End Function
	
	'@ref ???
	Function IsXMLNCNameChar(c As String, b As Boolean) As Integer
		On Error GoTo ErrorHandle
		
		Dim t As String
		Dim w As Boolean
		Dim result As Integer
		
		t = "XMLNCNameChar"
		result = Me.pWasCheckedChar(t, c, w, b)
		If result= FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		If w = True Then
			GoTo ExitTag
		End If
		
		result = Me.IsXMLLetter(c, b)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		If b = True Then
			GoTo ExitT
		End If
		
		result = Me.IsXMLDigit(c, b)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		If b = True Then
			GoTo ExitT
		End If
		
		'other char(s)
		'[template]If Me.pDL(c, "") = True Then GoTo ExitT
		If Me.pDL(c, ".") = True Then GoTo ExitT
		If Me.pDL(c, "-") = True Then GoTo ExitT
		If Me.pDL(c, "_") = True Then GoTo ExitT
		
		result = Me.IsXMLCombiningChar(c, b)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		If b = True Then
			GoTo ExitT
		End If
		
		result = Me.IsXMLExtender(c, b)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		If b = True Then
			GoTo ExitT
		End If
		
ExitF:	b = False
		GoTo ExitTag
ExitT:	b = True
		GoTo ExitTag
ExitTag:
		If w = False Then
			result = Me.pAddCheckedChar(t, c, b)
			If result= FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
		End If
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		IsXMLNCNameChar = FUNCTIONFAILURE
		Exit Function
	End Function
	
	'@ref http://w4ard.eplusx.net/translation/W3C/REC-xml-20081126/#NT-NameStartChar
	Function IsXMLNameStartChar(c As String, b As Boolean) As Integer
		On Error GoTo ErrorHandle
		
		Dim t As String
		Dim w As Boolean
		Dim result As Integer
		
		t = "XMLNameStartChar"
		result = Me.pWasCheckedChar(t, c, w, b)
		If result= FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		If w = True Then
			GoTo ExitTag
		End If
		
		'[template]If Me.pDL(c, "") = True Then GoTo ExitT
		If Me.pDL(c, ":") = True Then GoTo ExitT
		If Me.pDL(c, "[A-Z]") = True Then GoTo ExitT
		If Me.pDL(c, "_") = True Then GoTo ExitT
		If Me.pDL(c, "[a-z]") = True Then  GoTo ExitT
		If Me.pDL(c, "[&amp;HC0-&amp;HD6]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;HD8-&amp;HF6]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;HF8-&amp;H2FF]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H370-&amp;H37D]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H37F-&amp;H1FFF]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H200C-&amp;H200D]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H2070-&amp;H218F]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H2C00-&amp;H2FEF]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H3001-&amp;HD7FF]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;HF900-&amp;HFDCF]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;HFDF0-&amp;HFFFD]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H10000-&amp;HEFFFF]") = True Then GoTo ExitT
		
ExitF:	b = False
		GoTo ExitTag
ExitT:	b = True
		GoTo ExitTag
ExitTag:
		If w = False Then
			result = Me.pAddCheckedChar(t, c, b)
			If result= FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
		End If
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		IsXMLNameStartChar = FUNCTIONFAILURE
		Exit Function
	End Function
	
	'@ref http://w4ard.eplusx.net/translation/W3C/REC-xml-20081126/#NT-NameChar
	Function ISXMLNameChar(c As String, b As Boolean) As Integer
		On Error GoTo ErrorHandle
		
		Dim t As String
		Dim w As Boolean
		Dim result As Integer
		
		t = "XMLNameChar"
		result = Me.pWasCheckedChar(t, c, w, b)
		If result= FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		If w = True Then
			GoTo ExitTag
		End If
		
		result = Me.IsXMLNameStartChar(c, b)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		If b = True Then
			'[template]If Me.pDL(c, "") = True Then GoTo ExitT
			If Me.pDL(c, "-") = True Then GoTo ExitT
			If Me.pDL(c, ".") = True Then GoTo ExitT
			If Me.pDL(c, "[0-9]") = True Then GoTo ExitT
			If Me.pDL(c, "&amp;HB7") = True Then GoTo ExitT
			If Me.pDL(c, "[&amp;H0300-&amp;H036F]") = True Then GoTo ExitT
			If Me.pDL(c, "[&amp;H203F-&amp;H2040]") = True Then GoTo ExitT
		End If
		
ExitF:	b = False
		GoTo ExitTag
ExitT:	b = True
		GoTo ExitTag
ExitTag:
		If w = False Then
			result = Me.pAddCheckedChar(t, c, b)
			If result= FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
		End If
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		ISXMLNameChar = FUNCTIONFAILURE
		Exit Function
	End Function
	
	'@ref http://w4ard.eplusx.net/translation/W3C/REC-xml-20081126/#NT-Char
	Function IsXMLChar(c As String, b As Boolean) As Integer
		On Error GoTo ErrorHandle
		
		Dim t As String
		Dim w As Boolean
		Dim result As Integer
		
		t = "XMLChar"
		result = Me.pWasCheckedChar(t, c, w, b)
		If result= FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		If w = True Then
			GoTo ExitTag
		End If
		
		'[template]If Me.pDL(c, "") = True Then GoTo ExitT
		If Me.pDL(c, "&amp;H9") = True Then GoTo ExitT
		If Me.pDL(c, "&amp;HA") = True Then GoTo ExitT
		If Me.pDL(c, "&amp;HD") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H20-&amp;HD7FF]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;HE000-&amp;HFFFD]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H10000-&amp;H10FFFF]") = True Then GoTo ExitT
		
		'other char(s)
		'[template]If Me.pDL(c, "") = True Then GoTo ExitF
		If Me.pDL(c, "&amp;HFFFE") = True Then GoTo ExitF
		If Me.pDL(c, "&amp;HFFFF") = True Then GoTo ExitF
		If Me.pDL(c, "[&amp;HD800-&amp;HDBFF]") = True Then GoTo ExitF 'high surrogates
		If Me.pDL(c, "[&amp;HDC00-&amp;HDFFF]") = True Then GoTo ExitF 'low surrogates
		
ExitF:	b = False
		GoTo ExitTag
ExitT:	b = True
		GoTo ExitTag
ExitTag:
		If w = False Then
			result = Me.pAddCheckedChar(t, c, b)
			If result= FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
		End If
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		IsXMLChar = FUNCTIONFAILURE
		Exit Function
	End Function
	
	'@ref http://w4ard.eplusx.net/translation/W3C/REC-xml-20081126/#NT-Char
	Function IsXMLLetter(c As String, b As Boolean) As Integer
		On Error GoTo ErrorHandle
		
		Dim t As String
		Dim w As Boolean
		Dim result As Integer
		
		t = "XMLLetter"
		result = Me.pWasCheckedChar(t, c, w, b)
		If result= FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		If w = True Then
			GoTo ExitTag
		End If
		
		result = Me.IsXMLBaseChar(c, b)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		If b = False Then
			result = Me.IsXMLIdeographic(c, b)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
		End If
		
		If b = True Then
			GoTo ExitT
		End If
		
ExitF:	b = False
		GoTo ExitTag
ExitT:	b = True
		GoTo ExitTag
ExitTag:
		If w = False Then
			result = Me.pAddCheckedChar(t, c, b)
			If result= FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
		End If
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		IsXMLLetter = FUNCTIONFAILURE
		Exit Function
	End Function
	
	'@ref http://w4ard.eplusx.net/translation/W3C/REC-xml-20081126/#NT-BaseChar
	Function IsXMLBaseChar(c As String, b As Boolean) As Integer
		On Error GoTo ErrorHandle
		
		Dim t As String
		Dim w As Boolean
		Dim result As Integer
		
		t = "XMLBaseChar"
		result = Me.pWasCheckedChar(t, c, w, b)
		If result= FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		If w = True Then
			GoTo ExitTag
		End If
		
		'[template]If Me.pDL(c, "") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H0041-&amp;H005A]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H0061-&amp;H007A]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H00C0-&amp;H00D6]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H00D8-&amp;H00F6]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H00F8-&amp;H00FF]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H0100-&amp;H0131]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H0134-&amp;H013E]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H0141-&amp;H0148]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H014A-&amp;H017E]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H0180-&amp;H01C3]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H01CD-&amp;H01F0]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H01F4-&amp;H01F5]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H01FA-&amp;H0217]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H0250-&amp;H02A8]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H02BB-&amp;H02C1]") = True Then GoTo ExitT
		If Me.pDL(c, "&amp;H0386") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H0388-&amp;H038A]") = True Then GoTo ExitT
		If Me.pDL(c, "&amp;H038C") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H038E-&amp;H03A1]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H03A3-&amp;H03CE]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H03D0-&amp;H03D6]") = True Then GoTo ExitT
		If Me.pDL(c, "&amp;H03DA") = True Then GoTo ExitT
		If Me.pDL(c, "&amp;H03DC") = True Then GoTo ExitT
		If Me.pDL(c, "&amp;H03DE") = True Then GoTo ExitT
		If Me.pDL(c, "&amp;H03E0") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H03E2-&amp;H03F3]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H0401-&amp;H040C]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H040E-&amp;H044F]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H0451-&amp;H045C]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H045E-&amp;H0481]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H0490-&amp;H04C4]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H04C7-&amp;H04C8]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H04CB-&amp;H04CC]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H04D0-&amp;H04EB]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H04EE-&amp;H04F5]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H04F8-&amp;H04F9]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H0531-&amp;H0556]") = True Then GoTo ExitT
		If Me.pDL(c, "&amp;H0559") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H0561-&amp;H0586]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H05D0-&amp;H05EA]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H05F0-&amp;H05F2]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H0621-&amp;H063A]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H0641-&amp;H064A]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H0671-&amp;H06B7]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H06BA-&amp;H06BE]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H06C0-&amp;H06CE]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H06D0-&amp;H06D3]") = True Then GoTo ExitT
		If Me.pDL(c, "&amp;H06D5") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H06E5-&amp;H06E6]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H0905-&amp;H0939]") = True Then GoTo ExitT
		If Me.pDL(c, "&amp;H093D") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H0958-&amp;H0961]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H0985-&amp;H098C]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H098F-&amp;H0990]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H0993-&amp;H09A8]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H09AA-&amp;H09B0]") = True Then GoTo ExitT
		If Me.pDL(c, "&amp;H09B2") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H09B6-&amp;H09B9]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H09DC-&amp;H09DD]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H09DF-&amp;H09E1]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H09F0-&amp;H09F1]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H0A05-&amp;H0A0A]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H0A0F-&amp;H0A10]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H0A13-&amp;H0A28]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H0A2A-&amp;H0A30]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H0A32-&amp;H0A33]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H0A35-&amp;H0A36]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H0A38-&amp;H0A39]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H0A59-&amp;H0A5C]") = True Then GoTo ExitT
		If Me.pDL(c, "&amp;H0A5E") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H0A72-&amp;H0A74]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H0A85-&amp;H0A8B]") = True Then GoTo ExitT
		If Me.pDL(c, "&amp;H0A8D") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H0A8F-&amp;H0A91]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H0A93-&amp;H0AA8]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H0AAA-&amp;H0AB0]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H0AB2-&amp;H0AB3]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H0AB5-&amp;H0AB9]") = True Then GoTo ExitT
		If Me.pDL(c, "&amp;H0ABD") = True Then GoTo ExitT
		If Me.pDL(c, "&amp;H0AE0") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H0B05-&amp;H0B0C]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H0B0F-&amp;H0B10]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H0B13-&amp;H0B28]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H0B2A-&amp;H0B30]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H0B32-&amp;H0B33]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H0B36-&amp;H0B39]") = True Then GoTo ExitT
		If Me.pDL(c, "&amp;H0B3D") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H0B5C-&amp;H0B5D]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H0B5F-&amp;H0B61]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H0B85-&amp;H0B8A]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H0B8E-&amp;H0B90]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H0B92-&amp;H0B95]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H0B99-&amp;H0B9A]") = True Then GoTo ExitT
		If Me.pDL(c, "&amp;H0B9C") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H0B9E-&amp;H0B9F]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H0BA3-&amp;H0BA4]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H0BA8-&amp;H0BAA]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H0BAE-&amp;H0BB5]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H0BB7-&amp;H0BB9]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H0C05-&amp;H0C0C]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H0C0E-&amp;H0C10]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H0C12-&amp;H0C28]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H0C2A-&amp;H0C33]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H0C35-&amp;H0C39]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H0C60-&amp;H0C61]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H0C85-&amp;H0C8C]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H0C8E-&amp;H0C90]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H0C92-&amp;H0CA8]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H0CAA-&amp;H0CB3]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H0CB5-&amp;H0CB9]") = True Then GoTo ExitT
		If Me.pDL(c, "&amp;H0CDE") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H0CE0-&amp;H0CE1]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H0D05-&amp;H0D0C]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H0D0E-&amp;H0D10]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H0D12-&amp;H0D28]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H0D2A-&amp;H0D39]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H0D60-&amp;H0D61]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H0E01-&amp;H0E2E]") = True Then GoTo ExitT
		If Me.pDL(c, "&amp;H0E30") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H0E32-&amp;H0E33]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H0E40-&amp;H0E45]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H0E81-&amp;H0E82]") = True Then GoTo ExitT
		If Me.pDL(c, "&amp;H0E84") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H0E87-&amp;H0E88]") = True Then GoTo ExitT
		If Me.pDL(c, "&amp;H0E8A") = True Then GoTo ExitT
		If Me.pDL(c, "&amp;H0E8D") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H0E94-&amp;H0E97]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H0E99-&amp;H0E9F]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H0EA1-&amp;H0EA3]") = True Then GoTo ExitT
		If Me.pDL(c, "&amp;H0EA5") = True Then GoTo ExitT
		If Me.pDL(c, "&amp;H0EA7") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H0EAA-&amp;H0EAB]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H0EAD-&amp;H0EAE]") = True Then GoTo ExitT
		If Me.pDL(c, "&amp;H0EB0") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H0EB2-&amp;H0EB3]") = True Then GoTo ExitT
		If Me.pDL(c, "&amp;H0EBD") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H0EC0-&amp;H0EC4]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H0F40-&amp;H0F47]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H0F49-&amp;H0F69]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H10A0-&amp;H10C5]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H10D0-&amp;H10F6]") = True Then GoTo ExitT
		If Me.pDL(c, "&amp;H1100") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H1102-&amp;H1103]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H1105-&amp;H1107]") = True Then GoTo ExitT
		If Me.pDL(c, "&amp;H1109") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H110B-&amp;H110C]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H110E-&amp;H1112]") = True Then GoTo ExitT
		If Me.pDL(c, "&amp;H113C") = True Then GoTo ExitT
		If Me.pDL(c, "&amp;H113E") = True Then GoTo ExitT
		If Me.pDL(c, "&amp;H1140") = True Then GoTo ExitT
		If Me.pDL(c, "&amp;H114C") = True Then GoTo ExitT
		If Me.pDL(c, "&amp;H114E") = True Then GoTo ExitT
		If Me.pDL(c, "&amp;H1150") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H1154-&amp;H1155]") = True Then GoTo ExitT
		If Me.pDL(c, "&amp;H1159") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H115F-&amp;H1161]") = True Then GoTo ExitT
		If Me.pDL(c, "&amp;H1163") = True Then GoTo ExitT
		If Me.pDL(c, "&amp;H1165") = True Then GoTo ExitT
		If Me.pDL(c, "&amp;H1167") = True Then GoTo ExitT
		If Me.pDL(c, "&amp;H1169") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H116D-&amp;H116E]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H1172-&amp;H1173]") = True Then GoTo ExitT
		If Me.pDL(c, "&amp;H1175") = True Then GoTo ExitT
		If Me.pDL(c, "&amp;H119E") = True Then GoTo ExitT
		If Me.pDL(c, "&amp;H11A8") = True Then GoTo ExitT
		If Me.pDL(c, "&amp;H11AB") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H11AE-&amp;H11AF]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H11B7-&amp;H11B8]") = True Then GoTo ExitT
		If Me.pDL(c, "&amp;H11BA") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H11BC-&amp;H11C2]") = True Then GoTo ExitT
		If Me.pDL(c, "&amp;H11EB") = True Then GoTo ExitT
		If Me.pDL(c, "&amp;H11F0") = True Then GoTo ExitT
		If Me.pDL(c, "&amp;H11F9") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H1E00-&amp;H1E9B]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H1EA0-&amp;H1EF9]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H1F00-&amp;H1F15]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H1F18-&amp;H1F1D]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H1F20-&amp;H1F45]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H1F48-&amp;H1F4D]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H1F50-&amp;H1F57]") = True Then GoTo ExitT
		If Me.pDL(c, "&amp;H1F59") = True Then GoTo ExitT
		If Me.pDL(c, "&amp;H1F5B") = True Then GoTo ExitT
		If Me.pDL(c, "&amp;H1F5D") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H1F5F-&amp;H1F7D]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H1F80-&amp;H1FB4]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H1FB6-&amp;H1FBC]") = True Then GoTo ExitT
		If Me.pDL(c, "&amp;H1FBE") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H1FC2-&amp;H1FC4]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H1FC6-&amp;H1FCC]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H1FD0-&amp;H1FD3]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H1FD6-&amp;H1FDB]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H1FE0-&amp;H1FEC]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H1FF2-&amp;H1FF4]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H1FF6-&amp;H1FFC]") = True Then GoTo ExitT
		If Me.pDL(c, "&amp;H2126") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H212A-&amp;H212B]") = True Then GoTo ExitT
		If Me.pDL(c, "&amp;H212E") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H2180-&amp;H2182]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H3041-&amp;H3094]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H30A1-&amp;H30FA]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H3105-&amp;H312C]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;HAC00-&amp;HD7A3]") = True Then GoTo ExitT
		
ExitF:	b = False
		GoTo ExitTag
ExitT:	b = True
		GoTo ExitTag
ExitTag:
		If w = False Then
			result = Me.pAddCheckedChar(t, c, b)
			If result= FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
		End If
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		IsXMLBaseChar = FUNCTIONFAILURE
		Exit Function
	End Function
	
	'@ref http://w4ard.eplusx.net/translation/W3C/REC-xml-20081126/#NT-Ideographic
	Function IsXMLIdeographic(c As String, b As Boolean) As Integer
		On Error GoTo ErrorHandle
		
		Dim t As String
		Dim w As Boolean
		Dim result As Integer
		
		t = "XMLIdeographic"
		result = Me.pWasCheckedChar(t, c, w, b)
		If result= FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		If w = True Then
			GoTo ExitTag
		End If
		
		'[template]If Me.pDL(c, "") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H4E00-&amp;H9FA5]") = True Then GoTo ExitT
		If Me.pDL(c, "&amp;H3007") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H3021-&amp;H3029]") = True Then GoTo ExitT
		
ExitF:	b = False
		GoTo ExitTag
ExitT:	b = True
		GoTo ExitTag
ExitTag:
		If w = False Then
			result = Me.pAddCheckedChar(t, c, b)
			If result= FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
		End If
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		IsXMLIdeographic = FUNCTIONFAILURE
		Exit Function
	End Function
	
	'@ref http://w4ard.eplusx.net/translation/W3C/REC-xml-20081126/#NT-CombiningChar
	Function IsXMLCombiningChar(c As String, b As Boolean) As Integer
		On Error GoTo ErrorHandle
		
		Dim t As String
		Dim w As Boolean
		Dim result As Integer
		
		t = "CombiningChar"
		result = Me.pWasCheckedChar(t, c, w, b)
		If result= FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		If w = True Then
			GoTo ExitTag
		End If
		
		'[template]If Me.pDL(c, "") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H0300-&amp;H0345]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H0360-&amp;H0361]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H0483-&amp;H0486]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H0591-&amp;H05A1]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H05A3-&amp;H05B9]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H05BB-&amp;H05BD]") = True Then GoTo ExitT
		If Me.pDL(c, "&amp;H05BF") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H05C1-&amp;H05C2]") = True Then GoTo ExitT
		If Me.pDL(c, "&amp;H05C4") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H064B-&amp;H0652]") = True Then GoTo ExitT
		If Me.pDL(c, "&amp;H0670") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H06D6-&amp;H06DC]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H06DD-&amp;H06DF]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H06E0-&amp;H06E4]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H06E7-&amp;H06E8]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H06EA-&amp;H06ED]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H0901-&amp;H0903]") = True Then GoTo ExitT
		If Me.pDL(c, "&amp;H093C") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H093E-&amp;H094C]") = True Then GoTo ExitT
		If Me.pDL(c, "&amp;H094D") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H0951-&amp;H0954]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H0962-&amp;H0963]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H0981-&amp;H0983]") = True Then GoTo ExitT
		If Me.pDL(c, "&amp;H09BC") = True Then GoTo ExitT
		If Me.pDL(c, "&amp;H09BE") = True Then GoTo ExitT
		If Me.pDL(c, "&amp;H09BF") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H09C0-&amp;H09C4]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H09C7-&amp;H09C8]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H09CB-&amp;H09CD]") = True Then GoTo ExitT
		If Me.pDL(c, "&amp;H09D7") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H09E2-&amp;H09E3]") = True Then GoTo ExitT
		If Me.pDL(c, "&amp;H0A02") = True Then GoTo ExitT
		If Me.pDL(c, "&amp;H0A3C") = True Then GoTo ExitT
		If Me.pDL(c, "&amp;H0A3E") = True Then GoTo ExitT
		If Me.pDL(c, "&amp;H0A3F") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H0A40-&amp;H0A42]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H0A47-&amp;H0A48]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H0A4B-&amp;H0A4D]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H0A70-&amp;H0A71]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H0A81-&amp;H0A83]") = True Then GoTo ExitT
		If Me.pDL(c, "&amp;H0ABC") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H0ABE-&amp;H0AC5]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H0AC7-&amp;H0AC9]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H0ACB-&amp;H0ACD]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H0B01-&amp;H0B03]") = True Then GoTo ExitT
		If Me.pDL(c, "&amp;H0B3C") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H0B3E-&amp;H0B43]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H0B47-&amp;H0B48]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H0B4B-&amp;H0B4D]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H0B56-&amp;H0B57]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H0B82-&amp;H0B83]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H0BBE-&amp;H0BC2]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H0BC6-&amp;H0BC8]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H0BCA-&amp;H0BCD]") = True Then GoTo ExitT
		If Me.pDL(c, "&amp;H0BD7") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H0C01-&amp;H0C03]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H0C3E-&amp;H0C44]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H0C46-&amp;H0C48]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H0C4A-&amp;H0C4D]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H0C55-&amp;H0C56]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H0C82-&amp;H0C83]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H0CBE-&amp;H0CC4]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H0CC6-&amp;H0CC8]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H0CCA-&amp;H0CCD]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H0CD5-&amp;H0CD6]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H0D02-&amp;H0D03]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H0D3E-&amp;H0D43]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H0D46-&amp;H0D48]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H0D4A-&amp;H0D4D]") = True Then GoTo ExitT
		If Me.pDL(c, "&amp;H0D57") = True Then GoTo ExitT
		If Me.pDL(c, "&amp;H0E31") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H0E34-&amp;H0E3A]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H0E47-&amp;H0E4E]") = True Then GoTo ExitT
		If Me.pDL(c, "&amp;H0EB1") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H0EB4-&amp;H0EB9]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H0EBB-&amp;H0EBC]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H0EC8-&amp;H0ECD]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H0F18-&amp;H0F19]") = True Then GoTo ExitT
		If Me.pDL(c, "&amp;H0F35") = True Then GoTo ExitT
		If Me.pDL(c, "&amp;H0F37") = True Then GoTo ExitT
		If Me.pDL(c, "&amp;H0F39") = True Then GoTo ExitT
		If Me.pDL(c, "&amp;H0F3E") = True Then GoTo ExitT
		If Me.pDL(c, "&amp;H0F3F") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H0F71-&amp;H0F84]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H0F86-&amp;H0F8B]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H0F90-&amp;H0F95]") = True Then GoTo ExitT
		If Me.pDL(c, "&amp;H0F97") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H0F99-&amp;H0FAD]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H0FB1-&amp;H0FB7]") = True Then GoTo ExitT
		If Me.pDL(c, "&amp;H0FB9") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H20D0-&amp;H20DC]") = True Then GoTo ExitT
		If Me.pDL(c, "&amp;H20E1") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H302A-&amp;H302F]") = True Then GoTo ExitT
		If Me.pDL(c, "&amp;H3099") = True Then GoTo ExitT
		If Me.pDL(c, "&amp;H309A") = True Then GoTo ExitT
		
ExitF:	b = False
		GoTo ExitTag
ExitT:	b = True
		GoTo ExitTag
ExitTag:
		If w = False Then
			result = Me.pAddCheckedChar(t, c, b)
			If result= FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
		End If
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		IsXMLCombiningChar = FUNCTIONFAILURE
		Exit Function
	End Function
	
	'@ref http://w4ard.eplusx.net/translation/W3C/REC-xml-20081126/#NT-Digit
	Function IsXMLDigit(c As String, b As Boolean) As Integer
		On Error GoTo ErrorHandle
		
		Dim t As String
		Dim w As Boolean
		Dim result As Integer
		
		t = "XMLDigit"
		result = Me.pWasCheckedChar(t, c, w, b)
		If result= FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		If w = True Then
			GoTo ExitTag
		End If
		
		'[template]If Me.pDL(c, "") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H0030-&amp;H0039]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H0660-&amp;H0669]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H06F0-&amp;H06F9]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H0966-&amp;H096F]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H09E6-&amp;H09EF]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H0A66-&amp;H0A6F]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H0AE6-&amp;H0AEF]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H0B66-&amp;H0B6F]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H0BE7-&amp;H0BEF]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H0C66-&amp;H0C6F]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H0CE6-&amp;H0CEF]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H0D66-&amp;H0D6F]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H0E50-&amp;H0E59]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H0ED0-&amp;H0ED9]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H0F20-&amp;H0F29]") = True Then GoTo ExitT
		
ExitF:	b = False
		GoTo ExitTag
ExitT:	b = True
		GoTo ExitTag
ExitTag:
		If w = False Then
			result = Me.pAddCheckedChar(t, c, b)
			If result= FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
		End If
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		IsXMLDigit = FUNCTIONFAILURE
		Exit Function
	End Function
	
	'@ref http://w4ard.eplusx.net/translation/W3C/REC-xml-20081126/#NT-Extender
	Function IsXMLExtender(c As String, b As Boolean) As Integer
		On Error GoTo ErrorHandle
		
		Dim t As String
		Dim w As Boolean
		Dim result As Integer
		
		t = "XMLExtender"
		result = Me.pWasCheckedChar(t, c, w, b)
		If result= FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		If w = True Then
			GoTo ExitTag
		End If
		
		'[template]If Me.pDL(c, "") = True Then GoTo ExitT
		If Me.pDL(c, "&amp;H00B7") = True Then GoTo ExitT
		If Me.pDL(c, "&amp;H02D0") = True Then GoTo ExitT
		If Me.pDL(c, "&amp;H02D1") = True Then GoTo ExitT
		If Me.pDL(c, "&amp;H0387") = True Then GoTo ExitT
		If Me.pDL(c, "&amp;H0640") = True Then GoTo ExitT
		If Me.pDL(c, "&amp;H0E46") = True Then GoTo ExitT
		If Me.pDL(c, "&amp;H0EC6") = True Then GoTo ExitT
		If Me.pDL(c, "&amp;H3005") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H3031-&amp;H3035]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H309D-&amp;H309E]") = True Then GoTo ExitT
		If Me.pDL(c, "[&amp;H30FC-&amp;H30FE]") = True Then GoTo ExitT
		
ExitF:	b = False
		GoTo ExitTag
ExitT:	b = True
		GoTo ExitTag
ExitTag:
		If w = False Then
			result = Me.pAddCheckedChar(t, c, b)
			If result= FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
		End If
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		IsXMLExtender = FUNCTIONFAILURE
		Exit Function
	End Function
	
	Private Sub pInit_CXMLVarifier()
		Me.Debug = False
		Set Me.pCheckedType = Nothing
	End Sub
	
	Property Get Debug As Boolean
		Debug = Me.Members("Debug")
	End Property
	Property Set Debug As Boolean
		Me.Members("Debug") = Debug
	End Property
	
	'@param
	' c : (String) char
	' e : (String) expr
	'@format expr
	' "char" or "[char]" or "[char-char]"
	Private Function pDL(c As String, e As String) As Boolean
		On Error GoTo ErrorHandle
		
		Dim expr As String
		Dim st As String
		Dim ed As String
		
		Dim pos As Integer
		Dim bol As Boolean
		
		Dim m_debug As Boolean
		
		m_debug = Me.Debug 'do debug
		
		expr = e
		
		'find "["
		pos = InStr(expr, "[")
		If m_debug Then Print "1. c=" &amp; c &amp; ",expr=" &amp; expr
		
		'**format "[expr]"**
		If pos &lt;&gt; 0 Then
			expr = Mid(expr, 2, Len(expr)-2 )
			If m_debug Then Print "2. [" &amp; expr &amp; "] -&gt; " &amp; expr &amp; ""
			
			'find "-"
			pos = InStr(expr, "-")
			
			If pos &lt;&gt; 0 Then
				'**format "start-end"**
				
				'left
				st = Mid(expr, 1, pos-1)
				'right
				ed = Mid(expr, pos+1)
				
				If Left(expr, 2) = "&amp;H" Then
					bol = (Val(st) &lt;= Uni(c))
					If bol = True Then bol = (Uni(c) &lt;= Val(ed) )
					If m_debug Then Print "3. {" &amp; st &amp; "(#" &amp; Val(st) &amp; ")" &amp; "&lt;=" &amp; c &amp; "(#" &amp; Uni(c) &amp; ")" &amp; "&lt;=" ed &amp; "(#" &amp; Val(ed) &amp; ")" &amp; "} -&gt; " &amp; CStr(bol)
				Else
					bol = (Uni(st) &lt;= Uni(c))
					If bol = True Then bol = (Uni(c) &lt;= Uni(ed) )
					If m_debug Then Print "4. {" &amp; st &amp; "(#" &amp; Uni(st) &amp; ")" &amp; "&lt;=" &amp; c &amp; "(#" &amp; Uni(c) &amp; ")" &amp; "&lt;=" ed &amp; "(#" &amp; Uni(ed) &amp; ")" &amp; "} -&gt; " &amp; CStr(bol)
				End If
			ElseIf Left(expr, 2) = "&amp;H" Then
				'**format "expr"**
				bol = (Uni(c) = Val(expr))
				If m_debug Then Print "5. {" c &amp; "(#" &amp; Uni(c) &amp; ")" &amp; "=" &amp; expr &amp; "(#" &amp; Val(expr) &amp; ")" &amp; "} -&gt; " &amp; CStr(bol)
			Else
				'**format "expr"**
				bol = (Uni(c) = Uni(expr))
				If m_debug Then Print "6. {" c &amp; "(#" &amp; Uni(c) &amp; ")" &amp; "=" &amp; expr &amp; "(#" &amp; Uni(expr) &amp; ")" &amp; "} -&gt; " &amp; CStr(bol)
			End If
			
		ElseIf Left(expr, 2) = "&amp;H" Then
			'**format "expr"**
			bol = (Uni(c) = Val(expr))
			If m_debug Then Print "7. {" c &amp; "(#" &amp; Uni(c) &amp; ")" &amp; "=" &amp; expr &amp; "(#" &amp; Val(expr) &amp; ")" &amp; "} -&gt; " &amp; CStr(bol)
		Else
			'**format "expr"**
			bol = (Uni(c) = Uni(expr))
			If m_debug Then Print "8. {" c &amp; "(#" &amp; Uni(c) &amp; ")" &amp; "=" &amp; expr &amp; "(#" &amp; Uni(expr) &amp; ")" &amp; "} -&gt; " &amp; CStr(bol)
		End If
		
		pDL = bol
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Function
	End Function
	
	'@param
	' t : function type
	' c : char
	' b (@return) : result
	Private Function pAddCheckedChar(t As String, c As String, b As Boolean)As Integer
		On Error GoTo ErrorHandle
		
		Dim ct As CListCollection
		Dim cc As CListCollection
		Dim result As Integer
		
		Set ct = Me.pCheckedType
		
		If ct Is Nothing Then
			Set ct = New CListCollection
			Set Me.pCheckedType = ct
		End If
		
		result = ct.GetBy(t, cc)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		If cc Is Nothing Then
			Set cc = New CListCollection
			result = ct.SetBy(t, cc)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
		End If
		
		result = cc.SetBy(c, b)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		pAddCheckedChar = FUNCTIONFAILURE
		Exit Function
	End Function
	
	'@param
	' t : function type
	' c : char
	' w (@return) : true is checked
	' b (@return) : result
	Private Function pWasCheckedChar(t As String, c As String, w As Boolean, b As Boolean) As Integer
		On Error GoTo ErrorHandle
		
		'init
		w = False
		b = False
		
		Dim ct As CListCollection
		Dim cc As CListCollection
		Dim idx As Long
		Dim result As Integer
		
		Set ct = Me.pCheckedType
		If ct Is Nothing Then
			GoTo ExitTag
		End If
		
		result = ct.GetBy(t, cc)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		If Not cc Is Nothing Then
			
			result = cc.GetNameIdx(c, idx)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
			If -1 &lt; idx Then
				w = True 'found
				
				result = cc.GetBy(c, b)
				If result = FUNCTIONFAILURE Then
					Error USERERR, Error
				End If
			End If
		End If
		
ExitTag:
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		pWasCheckedChar = FUNCTIONFAILURE
		Exit Function
	End Function
	
	Private Sub pClearCheckedChar()
		Set Me.pCheckedType = Nothing
	End Sub
	
	Private Property Get pCheckedType As CListCollection
		Set pCheckedType = Me.Members("pCheckedType")
	End Property
	Private Property Set pCheckedType As CListCollection
		Set Me.Members("pCheckedType") = pCheckedType
	End Property
	
End Class
Class CXPathTokenTypes As CListCollection
	
	Sub New()
		Call Me.pInit_CXPathTokenType()
	End Sub
	
	Property Get TokenTypeEOF As Integer
		On Error GoTo ErrorHandle
		
		Dim intTokenType As Integer
		Dim result As Integer
		
		result = Me.GetTokenType("EOF", intTokenType)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		TokenTypeEOF = intTokenType
		
		Exit Property
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Property
	End Property
	
	Property Get TokenTypeSKIP As Integer
		On Error GoTo ErrorHandle
		
		Dim intTokenType As Integer
		Dim result As Integer
		
		result = Me.GetTokenType("SKIP", intTokenType)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		TokenTypeSKIP = intTokenType
		
		Exit Property
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Property
	End Property
	
	Property Get TokenTypeERROR As Integer
		On Error GoTo ErrorHandle
		
		Dim intTokenType As Integer
		Dim result As Integer
		
		result = Me.GetTokenType("ERROR", intTokenType)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		TokenTypeERROR = intTokenType
		
		Exit Property
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Property
	End Property
	
	'@param
	' strTokenName : token type name
	' intTokenType (@return): token type
	Function GetTokenType(strTokenName As String, intTokenType As Integer) As Integer
		On Error GoTo ErrorHandle
		
		Dim result As Integer
		
		result = Me.GetBy(strTokenName, intTokenType)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		GetTokenType = FUNCTIONFAILURE
		Exit Function
	End Function
	
	'@param
	' intTokenType : token type
	' strTokenName (@return): token type name
	Function GetTokenName(intTokenType As Integer, strTokenName As String) As Integer
		On Error GoTo ErrorHandle
		
		Dim idx As Long
		Dim result As Integer
		
		result = Me.GetIdx(intTokenType, Idx)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		result = Me.GetIdxName(idx, strTokenName)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		GetTokenName = FUNCTIONFAILURE
		Exit Function
	End Function
	
	'@param
	' intType : token type
	' strType (@return): token text
	Function GetTokenTypeText(intTokenType As Integer, strTokenText As String) As Integer
		On Error GoTo ErrorHandle
		
		Dim strTokenName As String
		Dim result As Integer
		
		result = Me.GetTokenName(intTokenType, strTokenName)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		Select Case strTokenName
			Case "EOF":strTokenText="(" &amp; strTokenName &amp; ")"
			Case "SKIP":strTokenText="(" &amp; strTokenName &amp; ")"
			Case "ERROR":strTokenText="(" &amp; strTokenName &amp; ")"
			Case "": strTokenText="un support token type: " &amp; 0
			Case "SLASH":strTokenText="/"
			Case "DOUBLE_SLASH":strTokenText="//"
			Case "COMMA":strTokenText=","
			Case "LEFT_PAREN":strTokenText="("
			Case "RIGHT_PAREN":strTokenText=")"
			Case "LEFT_BRACKET":strTokenText="["
			Case "RIGHT_BRACKET":strTokenText="]"
			Case "PLUS":strTokenText="+"
			Case "MINUS":strTokenText="-"
			'Case "RELATIONAL_OPERATOR":strType="(" &amp; strTokenName &amp; ")"
			Case "EQUALS":strTokenText="="
			Case "NOT_EQUALS":strTokenText="!="
			Case "PIPE":strTokenText="|"
			Case "AT":strTokenText="@"
			Case "COLON":strTokenText=":"
			Case "DOUBLE_COLON":strTokenText="::"
			Case "STAR":strTokenText="*"
			Case "DOTS":strTokenText="."
			Case "DOUBLE":strTokenText="(" &amp; strTokenName &amp; ")"
			Case "IDENTIFIER":strTokenText="(" &amp; strTokenName &amp; ")"
			Case "MOD":strTokenText="mod"
			Case "DIV":strTokenText="div"
			Case "AND":strTokenText="and"
			Case "OR":strTokenText="or"
			Case "SMALL":strTokenText="&lt;"
			Case "SMALL_EQUALS":strTokenText="&lt;="
			Case "BIG":strTokenText="&gt;"
			Case "BIG_EQUALS":strTokenText="&gt;="
			Case "LITERAL":strTokenText="(" &amp; strTokenName &amp; ")"
			Case "STAR_OPERATOR":strTokenText="*"
			Case Else: strTokenText="un support token type: " &amp; intTokenType
		End Select
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		GetTokenTypeText = FUNCTIONFAILURE
		Exit Function
	End Function
	
	Private Sub pInit_CXPathTokenType()
		
		Dim aryNames As Variant
		Dim c0 As String
		Dim i As Integer
		Dim result As Integer
		
		c0 = Chr(0)
		
		aryNames = Split(_
		"SLASH" &amp; c0 &amp;_
		"DOUBLE_SLASH" &amp; c0 &amp;_
		"COMMA" &amp; c0 &amp;_
		"LEFT_PAREN" &amp; c0 &amp;_
		"RIGHT_PAREN" &amp; c0 &amp;_
		"LEFT_BRACKET" &amp; c0 &amp;_
		"RIGHT_BRACKET" &amp; c0 &amp;_
		"PLUS" &amp; c0 &amp;_
		"MINUS" &amp; c0 &amp;_
		"RELATIONAL_OPERATOR" &amp; c0 &amp;_
		"EQUALS" &amp; c0 &amp;_
		"NOT_EQUALS" &amp; c0 &amp;_
		"PIPE" &amp; c0 &amp;_
		"AT" &amp; c0 &amp;_
		"COLON" &amp; c0 &amp;_
		"DOUBLE_COLON" &amp; c0 &amp;_
		"STAR" &amp; c0 &amp;_
		"DOTS" &amp; c0 &amp;_
		"DOUBLE" &amp; c0 &amp;_
		"IDENTIFIER" &amp; c0 &amp;_
		"MOD" &amp; c0 &amp;_
		"DIV" &amp; c0 &amp;_
		"AND" &amp; c0 &amp;_
		"OR" &amp; c0 &amp;_
		"SMALL" &amp; c0 &amp;_
		"SMALL_EQUALS" &amp; c0 &amp;_
		"BIG" &amp; c0 &amp;_
		"BIG_EQUALS" &amp; c0 &amp;_
		"LITERAL" &amp; c0 &amp;_
		"STAR_OPERATOR" &amp; c0 &amp;_
		"", c0 )
		
		'init
		i = 0
		
		ForAll n In aryNames
			If n &lt;&gt; "" Then
				i = i + 1
				
				result = Me.SetBy(CStr(n), i)
				If result = FUNCTIONFAILURE Then
					Error USERERR, Error
				End If
				
			End If
		End ForAll
		
		aryNames = Split(_
		"EOF" &amp; c0 &amp;_
		"SKIP" &amp; c0 &amp;_
		"ERROR" &amp; c0 &amp;_
		"",c0)
		
		'init
		i = 0
		
		ForAll n In aryNames
			If n &lt;&gt; "" Then
				i = i - 1
				result = Me.SetBy(CStr(n), i)
				If result = FUNCTIONFAILURE Then
					Error USERERR, Error
				End If
			End If
		End ForAll
		
	End Sub
	
End Class
Class CXPathToken As CObjectable
	
	Sub New()
		Call Me.pInit_CXPathToken()
	End Sub
	
	'@param
	' intTokenType : (Integer) token type
	' strParseText : (CStringable) parse string
	' intBeginIdx : begin index of strParse
	' intEndIdx : end index of strParse
	Function Build(intTokenType As Integer, strParseText As CStringable, intBeginIdx As Integer, intEndIdx As Integer) As Integer
		On Error GoTo ErrorHandle
		
		Me.pTokenType = intTokenType
		Set Me.pParseText = strParseText
		Me.pBeginIdx = intBeginIdx
		Me.pEndIdx = intEndIdx
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Build = FUNCTIONFAILURE
		Exit Function
	End Function
	
	'@param
	' strString (@return) : token string
	Function GetTokenText(strTokenText As String) As Integer
		On Error GoTo ErrorHandle
		
		Dim objString As CStringable
		Dim intBegin As Integer
		Dim intEnd As Integer
		Dim result As Integer
		
		Set objString = Me.ParseText
		intBegin = Me.BeginIdx
		intEnd = Me.EndIdx
		
		result = objString.SubString(intBegin, intEnd, strTokenText)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		GetTokenText = FUNCTIONFAILURE
		Exit Function
	End Function
	
	Property Get ToString As String
		On Error GoTo ErrorHandle
		
		Dim intTokenType As Integer
		Dim strTokenText As String
		Dim result As Integer
		
		intTokenType = Me.TokenType
		
		result = Me.GetTokenText(strTokenText)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		ToString = "type=" &amp; intTokenType &amp; ",text=" &amp; strTokenText &amp; ",biginIdx=" &amp; Me.BeginIdx &amp; ",endIdx=" &amp; Me.EndIdx &amp; ""
		
		Exit Property
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Property
	End Property
	
	Property Get TokenType As Integer
		TokenType = Me.pTokenType
	End Property
	
	Property Get ParseText As CStringable
		Set ParseText = Me.pParseText
	End Property
	
	Property Get BeginIdx As Integer
		BeginIdx = Me.pBeginIdx
	End Property
	
	Property Get EndIdx As Integer
		EndIdx = Me.pEndIdx
	End Property
	
	Private Sub pInit_CXPathToken()
		Me.pTokenType = 0
		Set Me.pParseText = Nothing
		Me.pBeginIdx = -1
		Me.pEndIdx = -1
	End Sub
	
	Private Property Get pTokenType As Integer
		pTokenType = Me.Members("pTokenType")
	End Property
	Private Property Set pTokenType As Integer
		Me.Members("pTokenType") = pTokenType
	End Property
	
	Private Property Get pParseText As CStringable
		Set pParseText = Me.Members("pParseText")
	End Property
	Private Property Set pParseText As CStringable
		Set Me.Members("pParseText") = pParseText
	End Property
	
	Private Property Get pBeginIdx As Integer
		pBeginIdx = Me.Members("pBeginIdx")
	End Property
	Private Property Set pBeginIdx As Integer
		Me.Members("pBeginIdx") = pBeginIdx
	End Property
	
	Private Property Get pEndIdx As Integer
		pEndIdx = Me.Members("pEndIdx")
	End Property
	Private Property Set pEndIdx As Integer
		Me.Members("pEndIdx") = pEndIdx
	End Property
	
End Class
Class CXPathLexer As CObjectable
	
	Sub New()
		Call Me.pInit_CXPathLexer()
	End Sub
	
	'@param
	' xPath : (String) xPath string
	Function Build(xPath As String) As Integer
		On Error GoTo ErrorHandle
		
		Dim objBuffer As CStringable
		Dim result As Integer
		
		Set objBuffer = New CStringable
		
		result = objBuffer.Build(xPath)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		Set Me.pBuffer = objBuffer
		Me.pCurPos = 0
		Me.pEndPos = objBuffer.StringLength
		
		Exit Function
ErrorHandle:
		Call SetErrorObject(Err, Error)
		Build = FUNCTIONFAILURE
		Exit Function
	End Function
	
	'@param
	' aToken (@return) : first token
	Function GetFirstToken(aToken As CXPathToken) As Integer
		On Error GoTo ErrorHandle
		
		Dim result As Integer
		
		Me.pCurPos = 0
		
		result = Me.GetNextToken(Atoken)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		Exit Function
ErrorHandle:
		Call SetErrorObject(Err, Error)
		GetFirstToken = FUNCTIONFAILURE
		Exit Function
	End Function
	
	'@param
	' aToken (@return) : next token
	Function GetNextToken(aToken As CXPathToken) As Integer
		On Error GoTo ErrorHandle
		
		Dim result As Integer
		Dim XPTTypes As CXPathTokenTypes
		Dim intType As Integer
		
		result = GetXPathTokenTypes(XPTTypes)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		Dim XPTTypes_SKIP As Integer
		
		XPTTypes_SKIP = XPTTypes.TokenTypeSKIP
		
		Dim c1 As String
		Dim c2 As String
		Dim c3 As String
		
		Do
			Set aToken = Nothing
			
			'get 1st char
			result = Me.pReadBuffer(1, c1)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
			Select Case c1
				'Case "$"
				Case {"}', {\"}
					result = Me.pLiteral(aToken)
					If result = FUNCTIONFAILURE Then
						Error USERERR, Error
					End If
					
				Case "/"
					result = Me.pSlashOrDoubleSlash(aToken)
					If result = FUNCTIONFAILURE Then
						Error USERERR, Error
					End If
					
				Case ","
					result = XPTTypes.GetTokenType("COMMA", intType)
					If result = FUNCTIONFAILURE Then
						Error USERERR, Error
					End If
					
					result = Me.pCreateTokenAndNextPos(intType, 1, aToken)
					If result = FUNCTIONFAILURE Then
						Error USERERR, Error
					End If
					
				Case "("
					result = XPTTypes.GetTokenType("LEFT_PAREN", intType)
					If result = FUNCTIONFAILURE Then
						Error USERERR, Error
					End If
					
					result = Me.pCreateTokenAndNextPos(intType, 1, aToken)
					If result = FUNCTIONFAILURE Then
						Error USERERR, Error
					End If
					
				Case ")"
					result = XPTTypes.GetTokenType("RIGHT_PAREN", intType)
					If result = FUNCTIONFAILURE Then
						Error USERERR, Error
					End If
					
					result = Me.pCreateTokenAndNextPos(intType, 1, aToken)
					If result = FUNCTIONFAILURE Then
						Error USERERR, Error
					End If
					
				Case "["
					result = XPTTypes.GetTokenType("LEFT_BRACKET", intType)
					If result = FUNCTIONFAILURE Then
						Error USERERR, Error
					End If
					
					result = Me.pCreateTokenAndNextPos(intType, 1, aToken)
					If result = FUNCTIONFAILURE Then
						Error USERERR, Error
					End If
					
				Case "]"
					result = XPTTypes.GetTokenType("RIGHT_BRACKET", intType)
					If result = FUNCTIONFAILURE Then
						Error USERERR, Error
					End If
					
					result = Me.pCreateTokenAndNextPos(intType, 1, aToken)
					If result = FUNCTIONFAILURE Then
						Error USERERR, Error
					End If
					
				Case "+"
					result = XPTTypes.GetTokenType("PLUS", intType)
					If result = FUNCTIONFAILURE Then
						Error USERERR, Error
					End If
					
					result = Me.pCreateTokenAndNextPos(intType, 1, aToken)
					If result = FUNCTIONFAILURE Then
						Error USERERR, Error
					End If
					
				Case "-"
					result = XPTTypes.GetTokenType("MINUS", intType)
					If result = FUNCTIONFAILURE Then
						Error USERERR, Error
					End If
					
					result = Me.pCreateTokenAndNextPos(intType, 1, aToken)
					If result = FUNCTIONFAILURE Then
						Error USERERR, Error
					End If
					
				Case "&lt;", "&gt;"
					result = Me.pRelationalOperator(aToken)
					If result = FUNCTIONFAILURE Then
						Error USERERR, Error
					End If
					
				Case "="
					result = XPTTypes.GetTokenType("EQUALS", intType)
					If result = FUNCTIONFAILURE Then
						Error USERERR, Error
					End If
					
					result = Me.pCreateTokenAndNextPos(intType, 1, aToken)
					If result = FUNCTIONFAILURE Then
						Error USERERR, Error
					End If
					
				Case "!"
					'get 2nd char
					result = Me.pReadBuffer(2, c2)
					If result = FUNCTIONFAILURE Then
						Error USERERR, Error
					End If
					
					If c2 = "=" Then
						result = XPTTypes.GetTokenType("NOT_EQUALS", intType)
						If result = FUNCTIONFAILURE Then
							Error USERERR, Error
						End If
						
						result = Me.pCreateTokenAndNextPos(intType, 2, aToken)
						If result = FUNCTIONFAILURE Then
							Error USERERR, Error
						End If
					End If
					
				Case "|"
					result = XPTTypes.GetTokenType("PIPE", intType)
					If result = FUNCTIONFAILURE Then
						Error USERERR, Error
					End If
					
					result = Me.pCreateTokenAndNextPos(intType, 1, aToken)
					If result = FUNCTIONFAILURE Then
						Error USERERR, Error
					End If
					
				Case "@"
					result = XPTTypes.GetTokenType("AT", intType)
					If result = FUNCTIONFAILURE Then
						Error USERERR, Error
					End If
					
					result = Me.pCreateTokenAndNextPos(intType, 1, aToken)
					If result = FUNCTIONFAILURE Then
						Error USERERR, Error
					End If
					
				Case ":"
					result = Me.pColonOrDoubleColon(aToken)
					If result = FUNCTIONFAILURE Then
						Error USERERR, Error
					End If
					
				Case "*"
					result = Me.pStar(aToken)
					If result = FUNCTIONFAILURE Then
						Error USERERR, Error
					End If
					
				Case "."
					'get 2nd char
					result = Me.pReadBuffer(2, c2)
					If result = FUNCTIONFAILURE Then
						Error USERERR, Error
					End If
					
					Select Case c2
						Case "0","1","2","3","4","5","6","7","8","9"
							result = Me.pDouble(Atoken)
							If result = FUNCTIONFAILURE Then
								Error USERERR, Error
							End If
							
						Case Else
							result = XPTTypes.GetTokenType("DOTS", intType)
							If result = FUNCTIONFAILURE Then
								Error USERERR, Error
							End If
							
							result = Me.pCreateTokenAndNextPos(intType, 1, aToken)
							If result = FUNCTIONFAILURE Then
								Error USERERR, Error
							End If
					End Select
					
				Case "0","1","2","3","4","5","6","7","8","9"
					result = Me.pDouble(Atoken)
					If result = FUNCTIONFAILURE Then
						Error USERERR, Error
					End If
					
				Case " ", "\"
					result = Me.pSkip(aToken)
					If result = FUNCTIONFAILURE Then
						Error USERERR, Error
					End If
					
				Case Else
					result = Me.pIndentiferOrOparator(aToken)
					If result = FUNCTIONFAILURE Then
						Error USERERR, Error
					End If
					
			End Select
			
			If aToken Is Nothing Then
				
				If Me.pHasNextChar = True Then
					result = XPTTypes.GetTokenType("ERROR", intType)
					If result = FUNCTIONFAILURE Then
						Error USERERR, Error
					End If
					
					result = Me.pCreateToken(intType, (Me.pEndPos - Me.pCurPos), aToken)
					If result = FUNCTIONFAILURE Then
						Error USERERR, Error
					End If
				Else
					result = XPTTypes.GetTokenType("EOF", intType)
					If result = FUNCTIONFAILURE Then
						Error USERERR, Error
					End If
					
					result = Me.pCreateToken(intType, (Me.pEndPos - Me.pCurPos), aToken)
					If result = FUNCTIONFAILURE Then
						Error USERERR, Error
					End If
				End If
				
			End If
			
		Loop While aToken.TokenType = XPTTypes_SKIP
		
		Dim b As Boolean
		
		result = Me.pIsExpectOperator(aToken, b)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		Me.pExpectOperator = b
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		GetNextToken = FUNCTIONFAILURE
		Exit Function
	End Function
	
	Private Function pIsExpectOperator(aToken As CXPathToken, b As Boolean) As Integer
		On Error GoTo ErrorHandle
		
		Dim XPTTypes As CXPathTokenTypes
		Dim strTokenName As String
		Dim intTokenType As Integer
		Dim result As Integer
		
		result = GetXPathTokenTypes(XPTTypes)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		'token type
		intTokenType = aToken.TokenType
		
		'token name
		result = XPTTypes.GetTokenName(intTokenType, strTokenName)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		'init
		b = False
		
		Select Case strTokenName
			Case "AT"
			Case "COLON"
			Case "LEFT_PAREN"
			Case "LEFT_BRACKET"
			Case "AND"
			Case "OR"
			Case "MOD"
			Case "DIV"
			Case "COLON"
			Case "SLASH"
			Case "DOUBLE_SLASH"
			Case "PIPE"
			'Case "DOLLAR"
			Case "PLUS"
			Case "MINUS"
			Case "STAR_OPERATOR"
			Case "COMMA"
			Case "SMALL" 'Case "LESS_THAN_SIGN"
			Case "SMALL_EQUALS" 'Case "GREATER_THAN_SIGN"
			Case "BIG'Case" '"LESS_THAN_OR_EQUALS_SIGN"
			Case "BIG_EQUALS" 'Case "GREATER_THAN_OR_EQUALS_SIGN"
			Case "EQUALS"
			Case "NOT_EQUALS"
			Case Else:b = True
		End Select
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		pIsExpectOperator = FUNCTIONFAILURE
		Exit Function
	End Function
	
	'@proc
	' create token other
	Private Function pIndentiferOrOparator(aToken As CXPathToken) As Integer
		On Error GoTo ErrorHandle
		
		Dim result As Integer
		
		If Me.pExpectOperator = True Then
			result = Me.pOparator(aToken)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
		Else
			result = Me.pIndentifer(aToken)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
		End If
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		pIndentiferOrOparator = FUNCTIONFAILURE
		Exit Function
	End Function
	
	Private Function pIndentifer(aToken As CXPathToken) As Integer
		On Error GoTo ErrorHandle
		
		Dim XMLVarifier As CXMLVarifier
		Dim c As String
		Dim p As Integer
		Dim b As Boolean
		Dim result As Integer
		
		result = GetXMLVarifier(XMLVarifier)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		p = 0
		
		Do
			p = p + 1
			
			If Me.pEndPos &lt; (Me.pCurPos + p) Then
				Exit Do
			End If
			
			result = Me.pReadBuffer(p, c)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
			result = XMLVarifier.IsXMLNCName(c, b)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
			If b = False Then
				p = p - 1
				Exit Do
			End If
			
		Loop
		
		Dim XPTTypes As CXPathTokenTypes
		Dim intType As Integer
		
		result = GetXPathTokenTypes(XPTTypes)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		result = XPTTypes.GetTokenType("IDENTIFIER", intType)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		result = Me.pCreateTokenAndNextPos(intType, p, aToken)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		pIndentifer = FUNCTIONFAILURE
		Exit Function
	End Function
	
	'@proc
	' create token "and", "or", "mod", "div"
	Private Function pOparator(aToken As CXPathToken) As Integer
		On Error GoTo ErrorHandle
		
		Dim XPTTypes As CXPathTokenTypes
		Dim intType As Integer
		Dim result As Integer
		
		result = GetXPathTokenTypes(XPTTypes)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		Dim c1 As String
		Dim c2 As String
		Dim c3 As String
		
		'get 1st char
		result = Me.pReadBuffer(1, c1)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		Select Case c1
			Case "a" 'and
				'get 2nd char
				result = Me.pReadBuffer(2, c2)
				If result = FUNCTIONFAILURE Then
					Error USERERR, Error
				End If
				
				'get 3rd char
				result = Me.pReadBuffer(3, c3)
				If result = FUNCTIONFAILURE Then
					Error USERERR, Error
				End If
				
				If c2 = "n" And c3 = "d" Then
					result = XPTTypes.GetTokenType("AND", intType)
					If result = FUNCTIONFAILURE Then
						Error USERERR, Error
					End If
					
					result = Me.pCreateTokenAndNextPos(intType, 3, aToken)
					If result = FUNCTIONFAILURE Then
						Error USERERR, Error
					End If
				End If
				
			Case "o" 'or
				'get 2nd char
				result = Me.pReadBuffer(2, c2)
				If result = FUNCTIONFAILURE Then
					Error USERERR, Error
				End If
				
				If c2 = "r" Then
					result = XPTTypes.GetTokenType("OR", intType)
					If result = FUNCTIONFAILURE Then
						Error USERERR, Error
					End If
					
					result = Me.pCreateTokenAndNextPos(intType, 2, aToken)
					If result = FUNCTIONFAILURE Then
						Error USERERR, Error
					End If
				End If
				
			Case "m" 'mod
				'get 2nd char
				result = Me.pReadBuffer(2, c2)
				If result = FUNCTIONFAILURE Then
					Error USERERR, Error
				End If
				
				'get 3rd char
				result = Me.pReadBuffer(3, c3)
				If result = FUNCTIONFAILURE Then
					Error USERERR, Error
				End If
				
				If c2 = "o" And c3 = "d" Then
					result = XPTTypes.GetTokenType("MOD", intType)
					If result = FUNCTIONFAILURE Then
						Error USERERR, Error
					End If
					
					result = Me.pCreateTokenAndNextPos(intType, 3, aToken)
					If result = FUNCTIONFAILURE Then
						Error USERERR, Error
					End If
				End If
				
			Case "d" 'div
				'get 2nd char
				result = Me.pReadBuffer(2, c2)
				If result = FUNCTIONFAILURE Then
					Error USERERR, Error
				End If
				
				'get 3rd char
				result = Me.pReadBuffer(3, c3)
				If result = FUNCTIONFAILURE Then
					Error USERERR, Error
				End If
				
				If c2 = "i" And c3 = "v" Then
					result = XPTTypes.GetTokenType("DIV", intType)
					If result = FUNCTIONFAILURE Then
						Error USERERR, Error
					End If
					
					result = Me.pCreateTokenAndNextPos(intType, 3, aToken)
					If result = FUNCTIONFAILURE Then
						Error USERERR, Error
					End If
				End If
				
		End Select
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		pOparator = FUNCTIONFAILURE
		Exit Function
	End Function
	
	'@proc
	' create token " ", "\t", "\r", "\n"
	Private Function pSkip(aToken As CXPathToken) As Integer
		On Error GoTo ErrorHandle
		
		Dim c1 As String
		Dim c2 As String
		Dim p As Integer
		Dim result As Integer
		
		p = 0
		
		Do
			'position
			p = p + 1
			
			'get nth char
			result = Me.pReadBuffer(p, c1)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
			Select Case c1
				Case " "
				Case "\"
					'position
					p = p + 1
					
					'get nth char
					result = Me.pReadBuffer(p, c2)
					If result = FUNCTIONFAILURE Then
						Error USERERR, Error
					End If
					
					Select Case c2
					Case "t", "n", "r"
						Exit Do
					Case Else: Exit Do
				End Select
					
				Case Else: Exit Do
			End Select
			
		Loop
		
		Dim XPTTypes As CXPathTokenTypes
		Dim intType As Integer
		
		result = GetXPathTokenTypes(XPTTypes)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		result = XPTTypes.GetTokenType("SKIP", intType)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		result = Me.pCreateTokenAndNextPos(intType, p, aToken)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		pSkip = FUNCTIONFAILURE
		Exit Function
	End Function
	
	'@proc
	' create token "number of [0-9].[0-9]...."
	Private Function pDouble(aToken As CXPathToken) As Integer
		On Error GoTo ErrorHandle
		
		Dim c As String
		Dim p As Integer
		Dim decimal As Boolean
		Dim result As Integer
		
		p = 0
		decimal = True
		
		Do
			'position
			p = p + 1
			
			'get nth char
			result = Me.pReadBuffer(p, c)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
			Select Case c
				Case "0","1","2","3","4","5","6","7","8","9"
					'next loop
				Case "."
					If decimal = True Then
						decimal = False
					Else
						Exit Do
					End If
				Case Else: Exit Do
			End Select
		Loop
		
		Dim XPTTypes As CXPathTokenTypes
		Dim intType As Integer
		
		result = GetXPathTokenTypes(XPTTypes)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		result = XPTTypes.GetTokenType("DOUBLE", intType)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		result = Me.pCreateTokenAndNextPos(intType, p, aToken)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		pDouble = FUNCTIONFAILURE
		Exit Function
	End Function
	
	'@proc
	' create token "*", "*"(operator)
	Private Function pStar(aToken As CXPathToken) As Integer
		On Error GoTo ErrorHandle
		
		Dim XPTTypes As CXPathTokenTypes
		Dim intType As Integer
		Dim result As Integer
		
		result = GetXPathTokenTypes(XPTTypes)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		If Me.pExpectOperator = True Then
			result = XPTTypes.GetTokenType("STAR_OPERATOR", intType)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
			result = Me.pCreateTokenAndNextPos(intType, 1, aToken)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
		Else
			result = XPTTypes.GetTokenType("STAR", intType)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
			result = Me.pCreateTokenAndNextPos(intType, 1, aToken)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
		End If
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		pStar = FUNCTIONFAILURE
		Exit Function
	End Function
	
	'@proc
	' create token ":", "::"
	Private Function pColonOrDoubleColon(aToken As CXPathToken) As Integer
		On Error GoTo ErrorHandle
		
		Dim XPTTypes As CXPathTokenTypes
		Dim intType As Integer
		Dim result As Integer
		
		result = GetXPathTokenTypes(XPTTypes)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		Dim c1 As String
		Dim c2 As String
		
		'get 1st char
		result = Me.pReadBuffer(1, c1)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		'get 2nd char
		result = Me.pReadBuffer(2, c2)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		If c1 = ":" Then
			If c2 = ":" Then
				result = XPTTypes.GetTokenType("DOUBLE_COLON", intType)
				If result = FUNCTIONFAILURE Then
					Error USERERR, Error
				End If
				
				result = Me.pCreateTokenAndNextPos(intType, 2, aToken)
				If result = FUNCTIONFAILURE Then
					Error USERERR, Error
				End If
			Else
				result = XPTTypes.GetTokenType("COLON", intType)
				If result = FUNCTIONFAILURE Then
					Error USERERR, Error
				End If
				
				result = Me.pCreateTokenAndNextPos(intType, 1, aToken)
				If result = FUNCTIONFAILURE Then
					Error USERERR, Error
				End If
			End If
		End If
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		pColonOrDoubleColon = FUNCTIONFAILURE
		Exit Function
	End Function
	
	'@proc
	' create token "&lt;", "&lt;=", "&gt;", "&gt;="
	Private Function pRelationalOperator(aToken As CXPathToken) As Integer
		On Error GoTo ErrorHandle
		
		Dim XPTTypes As CXPathTokenTypes
		Dim intType As Integer
		Dim result As Integer
		
		result = GetXPathTokenTypes(XPTTypes)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		Dim c1 As String
		Dim c2 As String
		
		'get 1st char
		result = Me.pReadBuffer(1, c1)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		Select Case c1
			Case "&lt;"
				'get 2nd char
				result = Me.pReadBuffer(2, c2)
				If result = FUNCTIONFAILURE Then
					Error USERERR, Error
				End If
				
				Select Case c2
					Case "="
						result = XPTTypes.GetTokenType("SMALL_EQUALS", intType)
						If result = FUNCTIONFAILURE Then
							Error USERERR, Error
						End If
						
						result = Me.pCreateTokenAndNextPos(intType, 2, aToken)
						If result = FUNCTIONFAILURE Then
							Error USERERR, Error
						End If
					Case Else
						result = XPTTypes.GetTokenType("SMALL", intType)
						If result = FUNCTIONFAILURE Then
							Error USERERR, Error
						End If
						
						result = Me.pCreateTokenAndNextPos(intType, 1, aToken)
						If result = FUNCTIONFAILURE Then
							Error USERERR, Error
						End If
				End Select
				
			Case "&gt;"
				'get 2nd char
				result = Me.pReadBuffer(2, c2)
				If result = FUNCTIONFAILURE Then
					Error USERERR, Error
				End If
				
				Select Case c2
					Case "="
						result = XPTTypes.GetTokenType("BIG_EQUALS", intType)
						If result = FUNCTIONFAILURE Then
							Error USERERR, Error
						End If
						
						result = Me.pCreateTokenAndNextPos(intType, 2, aToken)
						If result = FUNCTIONFAILURE Then
							Error USERERR, Error
						End If
					Case Else
						result = XPTTypes.GetTokenType("BIG", intType)
						If result = FUNCTIONFAILURE Then
							Error USERERR, Error
						End If
						
						result = Me.pCreateTokenAndNextPos(intType, 1, aToken)
						If result = FUNCTIONFAILURE Then
							Error USERERR, Error
						End If
				End Select
		End Select
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		pRelationalOperator = FUNCTIONFAILURE
		Exit Function
	End Function
	
	'@proc
	' crate token of "/" or "//"
	Private Function pSlashOrDoubleSlash(aToken As CXPathToken) As Integer
		On Error GoTo ErrorHandle
		
		Dim XPTTypes As CXPathTokenTypes
		Dim intType As Integer
		Dim result As Integer
		
		result = GetXPathTokenTypes(XPTTypes)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		Dim c1 As String
		Dim c2 As String
		
		'get 1st char
		result = Me.pReadBuffer(1, c1)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		If c1 = "/" Then
			'get 1st char
			result = Me.pReadBuffer(2, c2)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
			If c2 = "/" Then 'double
				result = XPTTypes.GetTokenType("DOUBLE_SLASH", intType)
				If result = FUNCTIONFAILURE Then
					Error USERERR, Error
				End If
				
				result = Me.pCreateTokenAndNextPos(intType, 2, aToken)
				If result = FUNCTIONFAILURE Then
					Error USERERR, Error
				End If
			Else 'single
				result = XPTTypes.GetTokenType("SLASH", intType)
				If result = FUNCTIONFAILURE Then
					Error USERERR, Error
				End If
				
				result = Me.pCreateTokenAndNextPos(intType, 1, aToken)
				If result = FUNCTIONFAILURE Then
					Error USERERR, Error
				End If
			End If
			
		End If
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		pSlashOrDoubleSlash = FUNCTIONFAILURE
		Exit Function
	End Function
	
	'@proc
	' create token "[String(s)]"
	Private Function pLiteral(aToken As CXPathToken) As Integer
		On Error GoTo ErrorHandle
		
		Dim c1 As String
		Dim c2 As String
		Dim p As Integer
		Dim result As Integer
		
		result = Me.pReadBuffer(1, c1)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		p = 1
		
		Do
			p = p + 1
			
			result = Me.pReadBuffer(p, c2)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
			If c1 = c2 Then
				Exit Do
			End If
			
		Loop
		
		Dim XPTTypes As CXPathTokenTypes
		Dim intType As Integer
		
		result = GetXPathTokenTypes(XPTTypes)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		result = XPTTypes.GetTokenType("LITERAL", intType)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		result = Me.pCreateTokenAndNextPos(intType, p, aToken)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		pLiteral = FUNCTIONFAILURE
		Exit Function
	End Function
	
	'@proc
	' I make a token and move the pointer of the buffer to next
	Private Function pCreateTokenAndNextPos(intTokenType As Integer, intTokenLength As Integer, aToken As CXPathToken) As Integer
		On Error GoTo ErrorHandle
		
		Dim result As Integer
		
		result = Me.pCreateToken(intTokenType, intTokenLength, aToken)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		result = Me.pNextPos(intTokenLength)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		Exit Function
ErrorHandle:
		Call SetErrorObject(Err, Error)
		pCreateTokenAndNextPos = FUNCTIONFAILURE
		Exit Function
	End Function
	
	'@proc
	' create token
	'@param
	' intType : token type
	' intLength : token length
	' aToken (@return) : CXPathToken
	Private Function pCreateToken(intTokenType As Integer, intTokenLength As Integer, aToken As CXPathToken) As Integer
		On Error GoTo ErrorHandle
		
		Dim intBeginIdx As Integer
		Dim intEndIdx As Integer
		Dim result As Integer
		
		intBeginIdx = Me.pCurPos
		intEndIdx = (intBeginIdx+(intTokenLength-1))
		
		Set aToken = New CXPathToken
		
		result = aToken.Build(intTokenType, Me.pBuffer, intBeginIdx, intEndIdx)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		Exit Function
ErrorHandle:
		Call SetErrorObject(Err, Error)
		pCreateToken = FUNCTIONFAILURE
		Exit Function
	End Function
	
	'@proc
	' get String of the designated position
	'@param
	' pos : (Integer) String of the designated position (0 &lt; pos)
	' c (@return): (String)
	Private Function pReadBuffer(pos As Integer, c As String) As Integer
		On Error GoTo ErrorHandle
		
		Dim curPos As Integer
		Dim idx As Integer
		Dim objBuffer As CStringable
		Dim result As Integer
		
		curPos = Me.pCurPos
		idx = pos - 1
		
		If (curPos + idx) &lt;= Me.pEndPos Then
			Set objBuffer = Me.pBuffer
			result = objBuffer.CharAt(curPos + idx, c)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
		Else
			c = CStr(-1)
		End If
		
		Exit Function
ErrorHandle:
		Call SetErrorObject(Err, Error)
		pReadBuffer = FUNCTIONFAILURE
		Exit Function
	End Function
	
	'@param
	' nextPos : next position
	Private Function pNextPos(nextPos As Integer) As Integer
		On Error GoTo ErrorHandle
		
		Dim curPos As Integer
		
		curPos = Me.pCurPos
		Me.pCurPos = (curPos + nextPos)
		
		Exit Function
ErrorHandle:
		Call SetErrorObject(Err, Error)
		pNextPos = FUNCTIONFAILURE
		Exit Function
	End Function
	
	Private Sub pInit_CXPathLexer()
		Set Me.pBuffer = Nothing
		Me.pCurPos = 0
		Me.pEndPos = 0
	End Sub
	
	Private Property Get pHasNextChar As Boolean
		pHasNextChar = (Me.pCurPos &lt; Me.pEndPos)
	End Property
	
	Private Property Get pExpectOperator As Boolean
		pExpectOperator = Me.Members("pExpectOperator")
	End Property
	Private Property Set pExpectOperator As Boolean
		Me.Members("pExpectOperator") = pExpectOperator
	End Property
	
	Private Property Get pBuffer As CStringable
		Set pBuffer = Me.Members("pBuffer")
	End Property
	Private Property Set pBuffer As CStringable
		Set Me.Members("pBuffer") = pBuffer
	End Property
	
	Private Property Get pCurPos As Integer
		pCurPos = Me.Members("pCurPos")
	End Property
	Private Property Set pCurPos As Integer
		Me.Members("pCurPos") = pCurPos
	End Property
	
	Private Property Get pEndPos As Integer
		pEndPos = Me.Members("pEndPos")
	End Property
	Private Property Set pEndPos As Integer
		Me.Members("pEndPos") = pEndPos
	End Property
	
End Class
Class CXPathReader As CObjectable
	
	Sub New()
		Call Me.pInit_CXPathReader()
	End Sub
	
	Function Build(handler As CXPathHandler) As Integer
		On Error GoTo ErrorHandle
		
		Dim result As Integer
		
		Set Me.pXPathHandler = handler
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Build = FUNCTIONFAILURE
		Exit Function
	End Function
	
	Function Parse(xPath As String) As Integer
		On Error GoTo ErrorHandle
		
		Dim result As Integer
		
		result = Me.pSetUp(xPath)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		result = Me.pDoReadLexer()
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Parse = FUNCTIONFAILURE
		Exit Function
	End Function
	
	'--private
	Private Function pDoReadLexer() As Integer
		On Error GoTo ErrorHandle
		
		Dim result As Integer
		Dim XPTTypes_EOF As Integer
		Dim intTokenType As Integer
		Dim strTokenName As String
		Dim buffer As CCollectionable
		Dim aToken As CXPathToken
		Dim p As Integer
		
		result = GetXPathTokenType("EOF", XPTTypes_EOF)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		result = Me.pReadLexer(0, aToken)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		Do Until aToken.TokenType = XPTTypes_EOF
			result = GetXPathTokenName(aToken.TokenType, strTokenName)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
			Select Case strTokenName
			Case "OR"
			End Select
			
			result = Me.pReadLexer(0, aToken)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
		Loop
		
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		pDoReadLexer = FUNCTIONFAILURE
		Exit Function
	End Function
	
	Private Function pExprOr() As Integer
		On Error GoTo ErrorHandle
		
		Dim result As Integer
		Dim xpHandler As CXPathHandler
		
		Set xpHandler = Me.pXPathHandler
		
		result = xpHandler.ExprOrStart()
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		result = Me.pExprAnd()
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		Dim intTokenType_OR As Integer
		Dim bolCreate As Boolean
		Dim aToken As CXPathToken
		
		result = GetXPathTokenType("OR", intTokenType_OR)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		bolCreate = False
		
		result = Me.pReadLexer(0, aToken)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		If aToken.TokenType = intTokenType_OR Then
			bolCreate = True
			
			result = Me.pIsMatch(intTokenType_OR)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
			result = Me.pExprOr()
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
		End If
		
		result = xpHandler.ExprOrEnd(bolCreate)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		pExprOr = FUNCTIONFAILURE
		Exit Function
	End Function
	
	Private Function pExprAnd() As Integer
		On Error GoTo ErrorHandle
		
		Dim result As Integer
		Dim xpHandler As CXPathHandler
		
		Set xpHandler = Me.pXPathHandler
		
		result = xpHandler.ExprAndStart()
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		result = Me.pExprEquality()
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		Dim bolCreate As Boolean
		Dim aToken As CXPathToken
		Dim intTokenType_AND As Integer
		
		result = GetXPathTokenType("AND", intTokenType_AND)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		bolCreate = False
		
		result = Me.pReadLexer(0, aToken)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		If aToken.TokenType = intTokenType_AND Then
			bolCreate = True
			
			result = Me.pIsMatch(intTokenType_AND)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
			result = Me.pExprAnd()
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
		End If
		
		result = xpHandler.ExprAndEnd(bolCreate)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		pExprAnd = FUNCTIONFAILURE
		Exit Function
	End Function
	
	Private Function pExprEquality() As Integer
		On Error GoTo ErrorHandle
		
		Dim result As Integer
		
		result = Me.pExprRelational()
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		Dim xpHandler As CXPathHandler
		
		Set xpHandler = Me.pXPathHandler
		
		Dim intTokenType_EQUALS As Integer
		Dim intTokenType_NOT_EQUALS As Integer
		Dim aToken As CXPathToken
		Dim intOperator As Integer
		
		result = GetXPathTokenType("EQUALS", intTokenType_EQUALS)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		result = GetXPathTokenType("NOT_EQUALS", intTokenType_NOT_EQUALS)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		result = Me.pReadLexer(0, aToken)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		Do
			
			Select Case aToken.TokenType
				Case intTokenType_EQUALS
					result = Me.pIsMatch(intTokenType_EQUALS)
					If result = FUNCTIONFAILURE Then
						Error USERERR, Error
					End If
					
					result = xpHandler.ExprEqualityStart()
					If result = FUNCTIONFAILURE Then
						Error USERERR, Error
					End If
					
					result = Me.pExprRelational()
					If result = FUNCTIONFAILURE Then
						Error USERERR, Error
					End If
					
					result = GetXPathOperator("EQUALS", intOperator)
					If result = FUNCTIONFAILURE Then
						Error USERERR, Error
					End If
					
					result = xpHandler.ExprEqualityEnd(intOperator)
					If result = FUNCTIONFAILURE Then
						Error USERERR, Error
					End If
				Case intTokenType_NOT_EQUALS
					result = Me.pIsMatch(intTokenType_NOT_EQUALS)
					If result = FUNCTIONFAILURE Then
						Error USERERR, Error
					End If
					
					result = xpHandler.ExprEqualityStart()
					If result = FUNCTIONFAILURE Then
						Error USERERR, Error
					End If
					
					result = Me.pExprRelational()
					If result = FUNCTIONFAILURE Then
						Error USERERR, Error
					End If
					
					result = GetXPathOperator("NOT_EQUALS", intOperator)
					If result = FUNCTIONFAILURE Then
						Error USERERR, Error
					End If
					
					result = xpHandler.ExprEqualityEnd(intOperator)
					If result = FUNCTIONFAILURE Then
						Error USERERR, Error
					End If
					
				Case Else
					Exit Do
			End Select
			
			result = Me.pReadLexer(0, aToken)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
		Loop
		
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		pExprEquality = FUNCTIONFAILURE
		Exit Function
	End Function
	
	Private Function pExprRelational() As Integer
		On Error GoTo ErrorHandle
		
		Dim result As Integer
		
		result = Me.pExprAdditive()
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		Dim intTokenType_SMALL As Integer
		Dim intTokenType_SMALL_EQUALS As Integer
		Dim intTokenType_BIG As Integer
		Dim intTokenType_BIG_EQUALS As Integer
		
		result = GetXPathTokenType("SMALL", intTokenType_SMALL)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		result = GetXPathTokenType("SMALL_EQUALS", intTokenType_SMALL_EQUALS)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		result = GetXPathTokenType("BIG", intTokenType_BIG)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		result = GetXPathTokenType("BIG_EQUALS", intTokenType_BIG_EQUALS)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		Dim aToken As CXPathToken
		
		result = Me.pReadLexer(0, aToken)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		Do
			Select Case aToken.TokenType
			Case intTokenType_SMALL
			Case intTokenType_SMALL_EQUALS
			Case intTokenType_BIG
			Case intTokenType_BIG_EQUALS
			Case Else
				Exit Do
			End Select
			
			result = Me.pReadLexer(0, aToken)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
		Loop
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		pExprRelational = FUNCTIONFAILURE
		Exit Function
	End Function
	
	Private Function pExprAdditive() As Integer
		
	End Function
	
	Private Function pIsMatch(intTokenType As Integer) As Integer
		On Error GoTo ErrorHandle
		
		Dim result As Integer
		Dim aToken As CXPathToken
		Dim tokens As CCollectionable
		
		result = Me.pReadLexer(0, aToken)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		If aToken.TokenType = intTokenType Then
			result = tokens.DelNth(0)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
		End If
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		pIsMatch = FUNCTIONFAILURE
		Exit Function
	End Function
	
	'@param
	' pos : (Integer) position to readed token. if pos is 0, alwasy next Token
	' aToken (@return) : (CXPathToken) xpath token
	Private Function pReadLexer(pos As Integer, aToken As CXPathToken) As Integer
		On Error GoTo ErrorHandle
		
		Dim result As Integer
		Dim buffer As CCollectionable
		Dim xpLexer As CXPathLexer
		Dim p As Integer
		Dim idx As Long
		
		Set buffer = Me.pTokensBuffer
		
		If buffer.length &lt; pos Then
			Set xpLexer = Me.pXPathLexer
			
			For p = 0 To 1
				result = xpLexer.GetNextToken(aToken)
				If result = FUNCTIONFAILURE Then
					Error USERERR, Error
				End If
				
				result = buffer.Add(aToken)
				If result = FUNCTIONFAILURE Then
					Error USERERR, Error
				End If
			Next
		Else
			idx = (pos - 1)
			
			result = buffer.GetNth(idx, aToken)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
		End If
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		pReadLexer = FUNCTIONFAILURE
		Exit Function
	End Function
	
	'@param
	' xPath : (String) xPath 1.0 String
	Private Function pSetUp(xPath As String) As Integer
		On Error GoTo ErrorHandle
		
		Dim result As Integer
		Dim xpLexer As CXPathLexer
		
		Set xpLexer = New CXPathLexer
		
		result = xpLexer.Build(xPath)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		Set Me.pXPathLexer = xpLexer
		Set Me.pTokensBuffer = New CCollectionable
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		pSetUp = FUNCTIONFAILURE
		Exit Function
	End Function
	
	Private Sub pInit_CXPathReader()
		Set Me.pTokensBuffer = Nothing
		Set Me.pXPathLexer = Nothing
		Set Me.pXPathHandler = Nothing
	End Sub
	
	Private Property Get pTokensBuffer As CCollectionable
		Set pTokensBuffer = Me.Members("pTokensBuffer")
	End Property
	Private Property Set pTokensBuffer As CCollectionable
		Set Me.Members("pTokensBuffer") = pTokensBuffer
	End Property
	
	Private Property Get pXPathLexer As CXPathLexer
		Set pXPathLexer = Me.Members("pXPathLexer")
	End Property
	Private Property Set pXPathLexer As CXPathLexer
		Set Me.Members("pXPathLexer") = pXPathLexer
	End Property
	
	Private Property Get pXPathHandler As CXPathHandler
		Set pXPathHandler = Me.Members("pXPathHandler")
	End Property
	Private Property Set pXPathHandler As CXPathHandler
		Set Me.Members("pXPathHandler") = pXPathHandler
	End Property
	
End Class
Class CXPathHandler As CObjectable
	
	Sub New()
		Call Me.pInit_CXPathHandler()
	End Sub
	
	Function Build() As Integer
		On Error GoTo ErrorHandle
		
		Set Me.pLIFO = New CCollectionable
		Set Me.pXPathFactory = New CExprFactory
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Build = FUNCTIONFAILURE
		Exit Function
	End Function
	
	Function ExprRelationalStart() As Integer
		'non process
	End Function
	
	Function ExprRelationalEnd(intXPathOperator As Integer) As Integer
		On Error GoTo ErrorHandle
		
		Dim result As Integer
		Dim NO_OP As Integer
		
		result = GetXPathOperator("NO_OP", NO_OP)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		If intXPathOperator &lt;&gt; NO_OP Then
			
			Dim lhs As CExpr
			Dim rhs As CExpr
			Dim expr As CExpr
			
			result = Me.pXPathFactory.CreateExprEquality(lhs, rhs, intXPathOperator, expr)
			
		End If
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		ExprRelationalEnd = FUNCTIONFAILURE
		Exit Function
	End Function
	
	Function ExprEqualityStart() As Integer
		'non process
	End Function
	
	Function ExprEqualityEnd(intXPathOperator As Integer) As Integer
		On Error GoTo ErrorHandle
		
		Dim result As Integer
		Dim NO_OP As Integer
		
		result = GetXPathOperator("NO_OP", NO_OP)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		If intXPathOperator &lt;&gt; NO_OP Then
			
			Dim lhs As CExpr
			Dim rhs As CExpr
			Dim expr As CExpr
			
			result = Me.pXPathFactory.CreateExprEquality(lhs, rhs, intXPathOperator, expr)
			
		End If
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		ExprEqualityEnd = FUNCTIONFAILURE
		Exit Function
	End Function
	
	Function ExprAndStart() As Integer
		'non process
	End Function
	
	Function ExprAndEnd(bolCreate As Boolean) As Integer
		On Error GoTo ErrorHandle
		
		Dim result As Integer
		Dim rhs As CExpr
		Dim lhs As CExpr
		
		If bolCreate Then
			result = Me.pPop(rhs)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
			result = Me.pPop(lhs)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
			Dim expr As CExpr
			
			result = Me.pXPathFactory.CreateExprAnd(lhs, rhs, expr)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
			result = Me.pPush(expr)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
		End If
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		ExprAndEnd = FUNCTIONFAILURE
		Exit Function
	End Function
	
	Function ExprOrStart() As Integer
		'non process
	End Function
	
	Function ExprOrEnd(bolCreate As Boolean) As Integer
		On Error GoTo ErrorHandle
		
		Dim result As Integer
		Dim rhs As CExpr
		Dim lhs As CExpr
		
		If bolCreate Then
			result = Me.pPop(rhs)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
			result = Me.pPop(lhs)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
			Dim expr As CExpr
			
			result = Me.pXPathFactory.CreateExprOr(lhs, rhs, expr)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
			result = Me.pPush(expr)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
		End If
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		ExprOrEnd = FUNCTIONFAILURE
		Exit Function
	End Function
	
	'--private
	Private Function pStackLength(intLength As Integer)As Integer
		On Error GoTo ErrorHandle
		
		Dim result As Integer
		Dim stack As CCollectionable
		
		result = Me.pGetStack(stack)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		intLength = stack.Length
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		pStackLength = FUNCTIONFAILURE
		Exit Function
	End Function
	
	Private Function pPush(obj As CObjectable) As Integer
		On Error GoTo ErrorHandle
		
		Dim result As Integer
		Dim stack As CCollectionable
		
		result = Me.pGetStack(stack)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		result = stack.Push(obj)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		pPush = FUNCTIONFAILURE
		Exit Function
	End Function
	
	Private Function pPop(obj As CObjectable) As Integer
		On Error GoTo ErrorHandle
		
		Dim result As Integer
		Dim stack As CCollectionable
		
		result = Me.pGetStack(stack)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		result = stack.Pop(obj)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		pPop = FUNCTIONFAILURE
		Exit Function
	End Function
	
	Private Function pPushStack(stack As CCollectionable) As Integer
		On Error GoTo ErrorHandle
		
		Dim result As Integer
		Dim lifo As CCollectionable
		
		Set lifo = Me.pLIFO
		Set stack = New CCollectionable
		
		result = lifo.Push(stack)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		pPushStack = FUNCTIONFAILURE
		Exit Function
	End Function
	
	Private Function pPopStack(stack As CCollectionable) As Integer
		On Error GoTo ErrorHandle
		
		Dim result As Integer
		Dim lifo As CCollectionable
		
		Set lifo = Me.pLIFO
		
		result = lifo.Pop(stack)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		pPopStack = FUNCTIONFAILURE
		Exit Function
	End Function
	
	Private Function pGetStack(stack As CCollectionable) As Integer
		On Error GoTo ErrorHandle
		
		Dim result As Integer
		Dim lifo As CCollectionable
		
		Set lifo = Me.pLIFO
		
		result = lifo.GetLast(stack)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		pGetStack = FUNCTIONFAILURE
		Exit Function
	End Function
	
	Private Sub pInit_CXPathHandler()
		Set Me.pLIFO = Nothing
	End Sub
	
	Private Property Get pLIFO As CCollectionable
		Set pLIFO = Me.Members("pLIFO")
	End Property
	Private Property Set pLIFO As CCollectionable
		Set Me.Members("pLIFO") = pLIFO
	End Property
	
	Private Property Get pXPathFactory As CExprFactory
		Set pXPathFactory = Me.Members("pXPathFactory")
	End Property
	Private Property Set pXPathFactory As CExprFactory
		Set Me.Members("pXPathFactory") = pXPathFactory
	End Property
	
End Class
</lotusscript></code><code event='initialize'><lotusscript>Sub Initialize
	Call SetProcess("*SL - XPath.BaseLib")
End Sub

</lotusscript></code><code event='GetXMLVarifier'><lotusscript>Function GetXMLVarifier(xmlVarifier As CXMLVarifier) As Integer
	On Error GoTo ErrorHandle
	
	If p_xmlVarifier Is Nothing Then
		Set p_xmlVarifier = New CXMLVarifier
	End If
	
	Set xmlVarifier = p_xmlVarifier
	
	Exit Function
ErrorHandle:
	Call SetErrorObject(Err, Error)
	GetXMLVarifier = FUNCTIONFAILURE
	Exit Function
End Function

</lotusscript></code><code event='GetXPathTokenTypes'><lotusscript>Function GetXPathTokenTypes(xPathTokenTypes As CXPathTokenTypes) As Integer
	On Error GoTo ErrorHandle
	
	If p_xPathTokenTypes Is Nothing Then
		Set p_xPathTokenTypes = New CXPathTokenTypes
	End If
	
	Set xPathTokenTypes = p_xPathTokenTypes
	
	Exit Function
ErrorHandle:
	Call SetErrorObject(Err, Error)
	GetXPathTokenTypes = FUNCTIONFAILURE
	Exit Function
End Function










</lotusscript></code><code event='GetXPathTokenType'><lotusscript>Function GetXPathTokenType(strTokenName As String, intTokenType As Integer) As Integer
'****************************************
'@param strTokenName : (String)
'@param intTokenType (@return) : (Integer)
'****************************************
	On Error GoTo ErrorHandle
	
	Dim result As Integer
	Dim XPathTokenTypes As CXPathTokenTypes
	
	result = GetXPathTokenTypes(XPathTokenTypes)
	If result = FUNCTIONFAILURE Then
		Error USERERR, Error
	End If
	
	result = XPathTokenTypes.GetTokenType(strTokenName, intTokenType)
	If result = FUNCTIONFAILURE Then
		Error USERERR, Error
	End If
	
	Exit Function
ErrorHandle:
	Call SetErrorObject(Err, Error)
	GetXPathTokenType = FUNCTIONFAILURE
	Exit Function
End Function

</lotusscript></code><code event='GetXPathTokenName'><lotusscript>Function GetXPathTokenName(intTokenType As Integer, strTokenName As String) As Integer
'****************************************
'@param intTokenType : (Integer)
'@param strTokenName (@return): (String)
'****************************************
	On Error GoTo ErrorHandle
	
	Dim result As Integer
	Dim XPathTokenTypes As CXPathTokenTypes
	
	result = GetXPathTokenTypes(XPathTokenTypes)
	If result = FUNCTIONFAILURE Then
		Error USERERR, Error
	End If
	
	result = XPathTokenTypes.GetTokenName(intTokenType, strTokenName)
	If result = FUNCTIONFAILURE Then
		Error USERERR, Error
	End If
	
	Exit Function
ErrorHandle:
	Call SetErrorObject(Err, Error)
	GetXPathTokenName = FUNCTIONFAILURE
	Exit Function
End Function

</lotusscript></code></scriptlibrary>

<agentdata>
<noteinfo noteid='755a' unid='D597C55552295699492583230029988C' sequence='1'>
<created><datetime>20181011T163420,28+09</datetime></created>
<modified><datetime>20181011T163420,29+09</datetime></modified>
<revised><datetime>20181011T163420,28+09</datetime></revised>
<lastaccessed><datetime>20181011T163420,29+09</datetime></lastaccessed>
<addedtofile><datetime>20181011T163420,29+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='7562' unid='B1C0F2144E069D1049258323002AB234' sequence='1'>
<created><datetime>20181011T164621,32+09</datetime></created>
<modified><datetime>20181011T164621,33+09</datetime></modified>
<revised><datetime>20181011T164621,32+09</datetime></revised>
<lastaccessed><datetime>20181011T164621,33+09</datetime></lastaccessed>
<addedtofile><datetime>20181011T164621,33+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby></agentdata>

<scriptlibrary name='XPathExprLib' hide='v3 v4strict' designerversion='8.5.3'>
<noteinfo noteid='756a' unid='B94CA4BE3A378D364925832B000A0F4F' sequence='1271'>
<created><datetime>20181019T104952,79+09</datetime></created>
<modified><datetime>20181031T174118,43+09</datetime></modified>
<revised><datetime>20181031T174118,42+09</datetime></revised>
<lastaccessed><datetime>20181031T174118,43+09</datetime></lastaccessed>
<addedtofile><datetime>20181019T104952,89+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby>
<wassignedby><name>CN=Administrator/O=Comture</name></wassignedby><code event='options'><lotusscript
>Option Public
Option Declare
Use "XMLFunctionLib"
Use "XMLSaxpathLib"
Use "XPathUtilLib"

</lotusscript></code><code event='declarations'><lotusscript>'--private
Private g_XPathOperator As CXPathOperator


Class CExpr As CObjectable
	
	'@proc ???
	'@param
	' expr (@return) : (CExpr) me
	Function Simplify(expr As CExpr) As Integer
		Set expr = Me
	End Function
	
	'@abstract
	Function Calc(context As CXMLContext, doneResult As Variant) As Integer
	End Function
	
	'@abstract
	'@param
	' strText (@return): (String)
	Function GetText(strText As String) As Integer
	End Function
	
	Property Get ToString As String
		ToString = "[(" &amp; TypeName(Me) &amp; ")]"
	End Property
	
End Class
Class CExprDefault As CExpr
	
	'@proc ???
	'@param
	' expr (@return) : (CExpr) me
	Function Simplify(expr As CExpr) As Integer
		Set expr = Me
	End Function
	
	'@param elem : (Variant)
	'@param iter (@return): (CIterator)
	Function ConvertIterator(elem As Variant, iter As CIterator) As Integer
		On Error GoTo ErrorHandle
		
		Dim result As Integer
		Dim col As CCollectionable
		Dim soIterator As CUtilSingleObjectIterator
		
		If elem IsA "CIterator" Then
			Set iter = elem
		ElseIf elem IsA "CCollectionable" Then
			Set col = elem
			
			result = col.GetIterator(iter)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
		Else
			Set soIterator = New CUtilSingleObjectIterator
			
			result = soIterator.Build(elem)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
			Set iter = soIterator
		End If
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		ConvertIterator = FUNCTIONFAILURE
		Exit Function
	End Function
	
	Function ConvertCollection(elem As Variant, col As CCollectionable) As Integer
		On Error GoTo ErrorHandle
		
		Dim result As Integer
		Dim soCol As CUtilSingletonCollection
		
		If elem IsA "CCollectionable" Then
			Set col = elem
		Else
			Set soCol = New CUtilSingletonCollection
			
			result = soCol.Build(elem)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
			Set col = soCol
		End If
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		ConvertCollection = FUNCTIONFAILURE
		Exit Function
	End Function
	
End Class
Class CExprBinary As CExprDefault
	
	Sub New()
		Call Me.pInit_CExprBinary()
	End Sub
	
	'@param
	' lhs : left hand side
	' rhs : right hand side
	Function Build(lhs As CExpr, rhs As CExpr) As Integer
		On Error GoTo ErrorHandle
		
		Set Me.LeftHandSide = lhs
		Set Me.RightHandSide = rhs
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Build = FUNCTIONFAILURE
		Exit Function
	End Function
	
	'@proc ???
	'@param
	' expr (@return) : (CExpr) me
	Function Simplify(expr As CExpr) As Integer
		On Error GoTo ErrorHandle
		
		Dim result As Integer
		Dim e0 As CExpr
		Dim e1 As CExpr
		
		Set e0 = Me.LeftHandSide
		
		result = e0.Simplify(e1)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		Set Me.LeftHandSide = e1
		
		Set e0 = Me.RightHandSide
		
		result = e0.Simplify(e1)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		Set Me.RightHandSide = e1
		
		Set expr = Me
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Simplify = FUNCTIONFAILURE
		Exit Function
	End Function
	
	'@abstract
	'@param strOperator (@return) : operator string
	Function GetOperator(strOperator As String) As Integer
	End Function
	
	'@return (String)
	Property Get ToString As String
		ToString = "[(" &amp; TypeName(Me) &amp; ")]" &amp; ", lhs=" &amp; Me.LeftHandSide.ToString &amp; ", rhs=" &amp; Me.RightHandSide.ToString
	End Property
	
	'@return (CExpr) : left hand side
	Property Get LeftHandSide As CExpr
		Set LeftHandSide = Me.Members("LeftHandSide")
	End Property
	Property Set LeftHandSide As CExpr
		Set Me.Members("LeftHandSide") = LeftHandSide
	End Property
	
	'@return (CExpr) : left hand side
	Property Get RightHandSide As CExpr
		Set RightHandSide = Me.Members("RightHandSide")
	End Property
	Property Set RightHandSide As CExpr
		Set Me.Members("RightHandSide") = RightHandSide
	End Property
	
	'--private
	Private Sub pInit_CExprBinary()
		Set Me.LeftHandSide = Nothing
		Set Me.RightHandSide = Nothing
	End Sub
	
End Class
Class CExprLogical As CExprBinary
End Class
Class CExprTruth As CExprBinary
	
	'@param
	' lhs : left hand side
	' rhs : right hand side
	Function Build(lhs As CExpr, rhs As CExpr) As Integer
		On Error GoTo ErrorHandle
		
		Dim result As Integer
		
		result = CExprBinary..Build(lhs, rhs)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Build = FUNCTIONFAILURE
		Exit Function
	End Function
	
	Private Function pIsCol(elem As Variant) As Boolean
		pIsCol = elem IsA "CCollectionable"
	End Function
	
	Private Function pIsBool(elem As Variant) As Boolean
		pIsBool = (TypeName(elem) = "BOOLEAN")
	End Function
	
	Private Function pIsNum(elem As Variant) As Boolean
		pIsNum = IsNumeric(elem)
	End Function
	
	Private Function pIsEmpty(col As CCollectionable) As Boolean
		On Error GoTo ErrorHandle
		
		Dim b As Boolean
		
		If col Is Nothing Then
			b = True
		ElseIf col.Length = 0 Then
			b = True
		Else
			b = False
		End If
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Function
	End Function
	
	Private Function pBorthAreCol(lhs As Variant, rhs As Variant) As Boolean
		On Error GoTo ErrorHandle
		
		Dim b As Boolean
		
		If Me.pIsCol(lhs) Then
			b = False
		ElseIf Not Me.pIsCol(rhs) Then
			b = False
		Else
			b = True
		End If
		
		pBorthAreCol = b
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Function
	End Function
	
	Private Function pEitherIsCol(lhs As Variant, rhs As Variant) As Boolean
		On Error GoTo ErrorHandle
		
		Dim b As Boolean
		
		If Me.pIsCol(lhs) Then
			b = True
		ElseIf Not Me.pIsCol(rhs) Then
			b = True
		Else
			b = False
		End If
		
		pEitherIsCol = b
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Function
	End Function
	
	Private Function pBorthAreBool(lhs As Variant, rhs As Variant) As Boolean
		On Error GoTo ErrorHandle
		
		Dim b As Boolean
		
		If Me.pIsBool(lhs) Then
			b = False
		ElseIf Not Me.pIsBool(rhs) Then
			b = False
		Else
			b = True
		End If
		
		pBorthAreBool = b
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Function
	End Function
	
	Private Function pEitherIsBool(lhs As Variant, rhs As Variant) As Boolean
		On Error GoTo ErrorHandle
		
		Dim b As Boolean
		
		If Me.pIsBool(lhs) Then
			b = True
		ElseIf Not Me.pIsBool(rhs) Then
			b = True
		Else
			b = False
		End If
		
		pEitherIsBool = b
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Function
	End Function
	
	Private Function pEitherIsNum(lhs As Variant, rhs As Variant) As Boolean
		On Error GoTo ErrorHandle
		
		Dim b As Boolean
		
		If Me.pIsNum(lhs) Then
			b = True
		ElseIf Not Me.pIsNum(rhs) Then
			b = True
		Else
			b = False
		End If
		
		pEitherIsNum = b
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Function
	End Function
	
End Class
Class CExprEquality As CExprTruth
	
	'@param context : (CXMLContext)
	'@param doneResult (@return): (Boolean Variant)
	Function Calc(context As CXMLContext, doneResult As Variant) As Integer
		On Error GoTo ErrorHandle
		
		Dim result As Integer
		Dim lVal As Variant
		Dim rVal As Variant
		
		result = Me.LeftHandSide.Calc(context, lVal)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		result = Me.RightHandSide.Calc(context, rVal)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		If IsEmpty(lVal) Or IsEmpty(rVal) Then
			doneResult = False
			GoTo ExitTag
		End If
		
		Dim nav As CXMLNavigator
		Dim lhsCol As CCollectionable
		Dim rhsCol As CCollectionable
		Dim lhsBool As Boolean
		Dim rhsBool As Boolean
		Dim bolResult As Boolean
		
		Set nav = context.Navigator
		
		If Me.pBorthAreCol(lVal, rVal) Then
			Set lhsCol = lVal
			Set rhsCol = rVal
			
			result = Me.pCalcColColNav(lhsCol, rhsCol, nav, bolResult)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
			doneResult = bolResult
			
		ElseIf Me.pIsCol(lVal) And Me.pIsBool(rVal) Then
			Set lhsCol = lVal
			
			lhsBool = (lhsCol.Length = 0)
			rhsBool = CBool(rVal)
			
			result = Me.pCalcObjObj(lhsBool, rhsBool, bolResult)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
			doneResult = bolResult
			
		ElseIf Me.pIsBool(lVal) And Me.pIsCol(rVal) Then
			Set rhsCol = rVal
			
			lhsBool = CBool(lVal)
			rhsBool = (rhsCol.Length = 0)
			
			result = Me.pCalcObjObj(lhsBool, rhsBool, bolResult)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
			doneResult = bolResult
			
		ElseIf Me.pEitherIsCol(lVal, rVal) Then
			If Me.pIsCol(lVal) Then
				Set lhsCol = lVal
				
				result = Me.ConvertCollection(rVAl, rhsCol)
				If result = FUNCTIONFAILURE Then
					Error USERERR, Error
				End If
				
			Else
				
			End If
		Else
			
		End If
		
ExitTag:
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Calc = FUNCTIONFAILURE
		Exit Function
	End Function
	
	Private Function pCalcColColNav(lhsCol As CCollectionable, rhsCol As CCollectionable, nav As CXMLNavigator, bolResult As Boolean) As Integer
		On Error GoTo ErrorHandle
		
		If Me.pIsEmpty(lhsCol) Or Me.pIsEmpty(rhsCol) Then
			bolResult = False
			GoTo ExitTag
		End If
		
		Dim result As Integer
		Dim lhsIter As CIterator
		Dim rhsIter As CIterator
		Dim lhs As Variant
		Dim rhs As Variant
		
		result = lhsCol.GetIterator(lhsIter)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		Do Until lhsIter.HasNext = False
			result = lhsIter.GetNext(lhs)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
			result = rhsCol.GetIterator(rhsIter)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
			Do Until rhsIter.HasNext = false
				result = rhsIter.GetNext(rhs)
				If result = FUNCTIONFAILURE Then
					Error USERERR, Error
				End If
				
				result = Me.pCalcObjObjNav(lhs, rhs, nav, bolResult)
				If result = FUNCTIONFAILURE Then
					Error USERERR, Error
				End If
				
				If bolResult = True Then
					GoTo ExitTag
				End If
				
			Loop
			
		Loop
		
		bolResult = False
		GoTo ExitTag
		
ExitTag:
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		pCalcColColNav = FUNCTIONFAILURE
		Exit Function
	End Function
	
	Private Function pCalcObjObjNav(lhs As Variant, rhs As Variant, nav As CXMLNavigator, bolResult As Boolean) As Integer
		On Error GoTo ErrorHandle
		
		Dim result As Integer
		
		
		
		If Me.pEitherIsBool(lhs, rhs) Then
			Dim xmlFuncBool As New CXMLFunctionBoolean
			Dim bolLhs As Boolean
			Dim bolRhs As Boolean
			
			result = xmlFuncBool.Calc(lhs, bolLhs)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
			result = xmlFuncBool.Calc(rhs, bolRhs)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
			result = Me.pCalcObjObj(bolLhs, bolRhs, bolResult)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
		ElseIf Me.pEitherIsNum(lhs, rhs) Then
			Dim xmlFuncNum As New CXMLFunctionNumber
			Dim dblLhs As Double
			Dim dblRhs As Double
			
			result = xmlFuncNum.Calc(lhs, nav, dblLhs)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
			result = xmlFuncNum.Calc(rhs, nav, dblRhs)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
			result = Me.pCalcObjObj(dblLhs, dblRhs, bolResult)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
		Else
			Dim xmlFuncStr As New CXMLFunctionString
			Dim strLhs As String
			Dim strRhs As String
			
			result = xmlFuncStr.Calc(lhs, nav, strLhs)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
			result = xmlFuncStr.Calc(rhs, nav, strRhs)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
			result = Me.pCalcObjObj(strLhs, strRhs, bolResult)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
		End If
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		pCalcObjObjNav = FUNCTIONFAILURE
		Exit Function
	End Function
	
	'@abstract
	Private Function pCalcObjObj(lhs As Variant, rhs As Variant, bolResult As Boolean) As Integer
	End Function
	
End Class

Class CExprOr As CExprLogical
	
	'@override
	Function GetOperator(strOperator As String) As Integer
		strOperator = "or"
	End Function
	
	'@override
	'@proc
	' experiment [expr1 Or expr2]
	'@param
	' nodeSet : ???
	' doneResult : (Variant : Boolean) result
	Function Calc(context As CXMLContext, doneResult As Variant) As Integer
		On Error GoTo ErrorHandle
		
		Dim result As Integer
		Dim expr As CExpr
		Dim varResult As Variant
		Dim didResult As Boolean
		Dim xmlFuncFact As CXMLFunctionFactory
		Dim xmlFunc As CXMLFunctionBoolean
		
		result = GetXMLFunctionFactory(xmlFuncFact)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		result = xmlFuncFact.CreateBoolean(xmlFunc)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		Set expr = Me.LeftHandSide
		didResult = False
		
		result = expr.Calc(context, varResult)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		result = xmlFunc.Calc(varResult, didResult)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		If didResult = False Then
			Set expr = Me.RightHandSide
			didResult = False
			
			result = expr.Calc(context, varResult)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
			result = xmlFunc.Calc(varResult, didResult)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
		End If
		
		doneResult = didResult
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Calc = FUNCTIONFAILURE
		Exit Function
	End Function
	
End Class
Class CExprAnd As CExprLogical
	
	'@override
	Function GetOperator(strOperator As String) As Integer
		strOperator = "and"
	End Function
	
	'@override
	'@proc
	' experiment [expr1 And expr2]
	'@param context : (CXMLContext)
	'@param doneResult (@return): (Boolean) result
	Function Calc(context As CXMLContext, doneResult As Variant) As Integer
		On Error GoTo ErrorHandle
		
		Dim result As Integer
		Dim expr As CExpr
		Dim varResult As Variant
		Dim didResult As Boolean
		Dim xmlFuncFact As CXMLFunctionFactory
		Dim xmlFunc As CXMLFunctionBoolean
		
		result = GetXMLFunctionFactory(xmlFuncFact)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		result = xmlFuncFact.CreateBoolean(xmlFunc)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		Set expr = Me.LeftHandSide
		didResult = False
		
		result = expr.Calc(context, varResult)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		result = xmlFunc.Calc(varResult, didResult)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		If didResult = True Then
			Set expr = Me.RightHandSide
			didResult = False
			
			result = expr.Calc(context, varResult)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
			result = xmlFunc.Calc(varResult, didResult)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
		End If
		
		doneResult = didResult
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Calc = FUNCTIONFAILURE
		Exit Function
	End Function
End Class
Class CExprFunctionCall As CExpr
	
	Sub New()
		Call Me.pInit_CExprFunctionCall()
	End Sub
	
	Function Build(strPrefix As String, strFunctionName As String) As Integer
		On Error GoTo ErrorHandle
		
		Me.pPrefix = strPrefix
		Me.pFunctionName = strFunctionName
		Set Me.pParamators = New CCollectionable
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Build = FUNCTIONFAILURE
		Exit Function
	End Function
	
	'@override
	'@param
	' expr (@return) : (CExpr) me
	Function Simplify(expr As CExpr) As Integer
		On Error GoTo ErrorHandle
		
		Dim result As Integer
		Dim params As CCollectionable
		Dim iterator As CIterator
		Dim nCol As CCollectionable
		Dim expr1 As CExpr
		Dim expr2 As CExpr
		
		Set params = Me.pParamators
		
		result = params.GetIterator(iterator)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		Set nCol = New CCollectionable
		
		result = params.GetFirst(expr1)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		Do Until iterator.HasNext = False
			result = iterator.GetNext(expr1)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
			result = expr1.Simplify(expr2)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
			result = nCol.Add(expr2)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
		Loop
		
		Set Me.pParamators = nCol
		
		Set expr = Me
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Simplify = FUNCTIONFAILURE
		Exit Function
	End Function
	
	'@override
	'@param
	' strExprText (@return): (String)
	Function GetText(strExprText As String) As Integer
		On Error GoTo ErrorHandle
		
		Dim result As Integer
		Dim strBuffer As String
		Dim strPrefix As String
		Dim strFunctionName As String
		Dim params As CCollectionable
		Dim iterator As CIterator
		Dim expr As CExpr
		Dim strText As String
		
		strExprText = ""
		
		strPrefix = Me.Prefix
		
		If Len(strPrefix) &gt; 0 Then
			strBuffer = strPrefix &amp; ":"
		End If
		
		strFunctionName = Me.pFunctionName
		
		strBuffer = strBuffer &amp; strFunctionName &amp; "("
		
		Set params = Me.pParamators
		
		result = params.GetIterator(iterator)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		Do Until iterator.HasNext = False
			result = iterator.GetNext(expr)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
			result = expr.GetText(strText)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
			strBuffer = strBuffer &amp; strText
		Loop
		
		strBuffer = strBuffer &amp; ")"
		
		strExprText = strBuffer
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		GetText = FUNCTIONFAILURE
		Exit Function
	End Function
	
	'@override
	'@proc
	'@param
	' nodeSet : ???
	' doneResult : (Variant : Boolean) result
	Function Calc(context As CXMLContext, doneResult As Variant) As Integer
		On Error GoTo ErrorHandle
		
		Dim result As Integer
		Dim strPrefix As String
		Dim strNamespaceURI As String
		
		strPrefix = Me.pPrefix
		
		If Len(strPrefix) &gt; 0 Then
			result = context.TranslateNamespacePrefixToUri(Strprefix, strNamespaceURI)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
		End If
		
		Dim xmlFunc As CXMLFunction
		Dim strFunctionName As String
		Dim params As CCollectionable
		
		strFunctionName = Me.pFunctionName
		
		result = context.GetFunction(strNamespaceURI, strPrefix, strFunctionName, xmlFunc)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		result = Me.CalcParams(context, params)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		result = xmlFunc.Play(context, params, doneResult)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Calc = FUNCTIONFAILURE
		Exit Function
	End Function
	
	Function CalcParams(context As CXMLContext, newParams As CCollectionable) As Integer
		On Error GoTo ErrorHandle
		
		Dim result As Integer
		Dim params As CCollectionable
		Dim iterator As CIterator
		Dim expr As CExpr
		Dim doneResult As Variant
		
		Set params = Me.pParamators
		
		result = params.GetIterator(iterator)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		Set newParams = New CCollectionable
		
		Do Until iterator.HasNext = False
			result = iterator.GetNext(expr)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
			result = expr.Calc(context, doneResult)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
			result = newParams.Add(doneResult)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
		Loop
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		CalcParams = FUNCTIONFAILURE
		Exit Function
	End Function
	
	'@param
	' expr : (CExpr) expr
	Function AddParamator(expr As CExpr) As Integer
		On Error GoTo ErrorHandle
		
		Dim result As Integer
		Dim col As CCollectionable
		
		Set col = Me.pParamators
		
		result = col.Add(expr)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		AddParamator = FUNCTIONFAILURE
		Exit Function
	End Function
	
	Private Property Get Prefix As String
		Prefix = Me.pPrefix
	End Property
	
	Private Property Get FunctionName As String
		FunctionName = Me.pFunctionName
	End Property
	
	Private Property Get Paramators As CCollectionable
		Set Paramators = Me.pParamators
	End Property
	
	'--private
	
	Private Sub pInit_CExprFunctionCall()
		Me.pPrefix = ""
		Me.pFunctionName = ""
		Set Me.pParamators = Nothing
	End Sub
	
	Private Property Get pPrefix As String
		pPrefix = Me.Members("pPrefix")
	End Property
	Private Property Set pPrefix As String
		Me.Members("pPrefix") = pPrefix
	End Property
	
	Private Property Get pFunctionName As String
		pFunctionName = Me.Members("pFunctionName")
	End Property
	Private Property Set pFunctionName As String
		Me.Members("pFunctionName") = pFunctionName
	End Property
	
	Private Property Get pParamators As CCollectionable
		Set pParamators = Me.Members("pParamators")
	End Property
	Private Property Set pParamators As CCollectionable
		Set Me.Members("pParamators") = pParamators
	End Property
	
End Class
Class CExprAdditive As CExprBinary
End Class
Class CPredicated As CObjectable
	
	'@param predicate : (CExprPredicated)
	Function AddPredicate(predicate As CPredicate) As Integer
	End Function
	
	'@param predicates : (CCollectionable)
	Function GetPredicates(predicates As CCollectionable) As Integer
	End Function
	
	'@param predicates : (CCollectionable)
	Function GetPredicateSet(predicateSet As CPredicateSet) As Integer
	End Function
	
End Class
Class CPredicateSet As CObjectable
	
	Sub New()
		Call Me.pInit_CPredicateSet()
	End Sub
	
	'@param predicate : (CPredicate)
	Function AddPredicate(objPredicate As CPredicate) As Integer
		On Error GoTo ErrorHandle
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		AddPredicate = FUNCTIONFAILURE
		Exit Function
	End Function
	
	Function Simplify() As Integer
		On Error GoTo ErrorHandle
		
		Dim result As Integer
		Dim preds As CCollectionable
		Dim iterator As CIterator
		Dim pred As CPredicate
		
		Set preds = Me.Predicates
		
		result = preds.GetIterator(iterator)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		Do Until iterator.HasNext = False
			result = iterator.GetNext(pred)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
			result = pred.Simplify()
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
		Loop
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Simplify = FUNCTIONFAILURE
		Exit Function
	End Function
	
	Function GetText(strText As String) As Integer
		On Error GoTo ErrorHandle
		
		Dim result As Integer
		Dim preds As CCollectionable
		Dim iterator As CIterator
		Dim pred As CPredicate
		Dim buffer As String
		
		strText = ""
		
		Set preds = Me.Predicates
		
		result = preds.GetIterator(iterator)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		Do Until iterator.HasNext = False
			result = iterator.GetNext(pred)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
			result = pred.GetText(buffer)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
			strText = strText &amp; buffer
			buffer = ""
			
		Loop
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		GetText = FUNCTIONFAILURE
		Exit Function
	End Function
	
	Function CalcAsBoolean(nodes As CCollectionable, support As CXMLContextSupport, bolResult As Boolean) As Integer
		On Error GoTo ErrorHandle
		
		Dim result As Integer
		
		result = Me.pCalcAsBoolean(nodes, support, bolResult)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		CalcAsBoolean = FUNCTIONFAILURE
		Exit Function
	End Function
	
	Private Function pCalcAsBoolean(nodes As CCollectionable, support As CXMLContextSupport, bolResult As Boolean) As Integer
		On Error GoTo ErrorHandle
		
		Dim result As Integer
		Dim preds As CCollectionable
		
		Set preds = Me.pPredicates
		bolResult = False
		
		If preds.Length = 0 Then
			GoTo ExitTag
		End If
		
		Dim intNodeLength As Integer
		Dim predIter As CIterator
		Dim pred As CPredicate
		
		Dim predContext As CXMLContext
		Dim predNodes As CCollectionable
		Dim varResult As Variant
		Dim i As Long
		
		Dim node As Variant
		
		intNodeLength = nodes.Length
		
		result = preds.GetIterator(predIter)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		Do Until predIter.HasNext = False
			
			Set predContext = New CXMLContext
			result = predContext.Build(support)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
			Set predNodes = New CCollectionable
			
			result = predContext.SetNodeSet(predNodes)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
			For i = 0 To intNodeLength - 1
				result = preds.GetNth(i, node)
				If result = FUNCTIONFAILURE Then
					Error USERERR, Error
				End If
				
				result = predNodes.Clear()
				If result = FUNCTIONFAILURE Then
					Error USERERR, Error
				End If
				
				result = predNodes.Add(node)
				If result = FUNCTIONFAILURE Then
					Error USERERR, Error
				End If
				
				result = predContext.SetNodeSet(predNodes)
				If result = FUNCTIONFAILURE Then
					Error USERERR, Error
				End If
				
				predContext.Position = (i + 1)
				predContext.Length = intNodeLength
				
				result = predIter.GetNext(pred)
				If result = FUNCTIONFAILURE Then
					Error USERERR, Error
				End If
				
				result = pred.Calc(predContext, varResult)
				If result = FUNCTIONFAILURE Then
					Error USERERR, Error
				End If
				
				If IsNumeric(varResult) Then
					If CInt(varResult) = (i + 1) Then
						bolResult = True
						GoTo ExitTag
					End If
				Else
					Dim xmlFuncFact As CXMLFunctionFactory
					Dim xmlFunc As CXMLFunctionBoolean
					
					result = GetXMLFunctionFactory(xmlFuncFact)
					If result = FUNCTIONFAILURE Then
						Error USERERR, Error
					End If
					
					result = xmlFuncFact.CreateBoolean(xmlFunc)
					If result = FUNCTIONFAILURE Then
						Error USERERR, Error
					End If
					
					result = xmlFunc.Calc(varResult, bolResult)
					If result = FUNCTIONFAILURE Then
						Error USERERR, Error
					End If
					
					If bolResult = True Then
						GoTo ExitTag
					End If
					
				End If
				
			Next
			
		Loop
		
ExitTag:
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		pCalcAsBoolean = FUNCTIONFAILURE
		Exit Function
	End Function
	
	Function CalcAsPredicates(nodes As CCollectionable, support As CXMLContextSupport, filtered As CCollectionable) As Integer
		On Error GoTo ErrorHandle
		
		Dim result As Integer
		Dim preds As CCollectionable
		
		Set preds = Me.pPredicates
		
		If preds.Length = 0 Then
			Set filtered = nodes
			GoTo ExitTag
		End If
		
		Dim predIter As CIterator
		Dim pred As CPredicate
		
		result = nodes.GetIterator(predIter)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		Do Until predIter.HasNext = False
			result = predIter.GetNext(pred)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
			result = Me.pCalcAsPredicates(pred, nodes, support, filtered)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
		Loop
		
ExitTag:
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		CalcAsPredicates = FUNCTIONFAILURE
		Exit Function
	End Function
	
	Private Function pCalcAsPredicates(pred As CPredicate, nodes As CCollectionable, support As CXMLContextSupport, filtered As CCollectionable) As Integer
		On Error GoTo ErrorHandle
		
		Dim result As Integer
		Dim intNodeLength As Integer
		Dim predContext As CXMLContext
		Dim predNodes As CCollectionable
		Dim node As Variant
		Dim varResult As Variant
		Dim i As Long
		
		intNodeLength = nodes.Length
		
		Set filtered = New CCollectionable
		
		Set predContext = New CXMLContext
		
		result = predContext.Build(support)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		Set predNodes = New CCollectionable
		
		result = predContext.SetNodeSet(predNodes)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		For i = 0 To intNodeLength - 1
			result = nodes.GetNth(i, node)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
			result = predNodes.Clear()
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
			result = predNodes.Add(node)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
			result = predContext.SetNodeSet(predNodes)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
			predContext.Position = i + 1
			predContext.Length = intNodeLength
			
			result = pred.Calc(predContext, varResult)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
			If IsNumeric(varResult) Then
				If CInt(varResult) = (i + 1) Then
					result = filtered.Add(node)
					If result = FUNCTIONFAILURE Then
						Error USERERR, Error
					End If
				End If
			Else
				Dim xmlFuncFact As CXMLFunctionFactory
				Dim xmlFunc As CXMLFunctionBoolean
				Dim bolResult As Boolean
				
				result = GetXMLFunctionFactory(xmlFuncFact)
				If result = FUNCTIONFAILURE Then
					Error USERERR, Error
				End If
				
				result = xmlFuncFact.CreateBoolean(xmlFunc)
				If result = FUNCTIONFAILURE Then
					Error USERERR, Error
				End If
				
				result = xmlFunc.Calc(varResult, bolResult)
				If result = FUNCTIONFAILURE Then
					Error USERERR, Error
				End If
				
				If bolResult = True Then
					result = filtered.Add(node)
					If result = FUNCTIONFAILURE Then
						Error USERERR, Error
					End If
				End If
				
			End If
			
		Next
		
ExitTag:
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		pCalcAsPredicates = FUNCTIONFAILURE
		Exit Function
	End Function
	
	Property Get Predicates As CCollectionable
		Set Predicates = Me.pPredicates
	End Property
	
	'--private
	Private Sub pInit_CPredicateSet()
		Set Me.pPredicates = New CCollectionable
	End Sub
	
	Property Get pPredicates As CCollectionable
		Set pPredicates = Me.Members("pPredicates")
	End Property
	Property Set pPredicates As CCollectionable
		Set Me.Members("pPredicates") = pPredicates
	End Property
	
End Class
Class CPredicate As CObjectable
	
	Function GetExpr(expr As CExpr) As Integer
	End Function
	
	Function SetExpr(expr As CExpr) As Integer
	End Function
	
	Function Simplify() As Integer
	End Function
	
	Function GetText(strText As String) As Integer
	End Function
	
	Function Calc(context As CXMLContext, doneResult As Variant) As Integer
	End Function
	
End Class
Class CStep As CPredicated
	
	'@param node :(Variant) DomNode
	'@param support : (CXMLContextSupport)
	'@param bolResult (@return) : (Boolean) result
	Function Match(node As Variant, support As CXMLContextSupport, bolResult As Boolean) As Integer
	End Function
	
	'@param strText (@return) : (String) result
	Function GetText(strText As String) As Integer
	End Function
	
	Function Simplify() As Integer
	End Function
	
	'@param intAxis (@return) : (Integer) the axis identifier
	Function GetAxis(intAxis As Integer) As Integer
	End Function
	
	'@param iterator (@return) : (CIterator)
	Function GetAxisIterator(iterator As CIterator) As Integer
	End Function
	
	'@param context : (CXMLContext)
	'@param nodes (@return) : (CCollectionable)
	Function Calc(context As CXMLContext, nodes As CCollectionable) As Integer
	End Function
	
End Class
Class CStepAllNode As CStep
End Class
Class CStepCommentNode As CStep
End Class
Class CExprLocationPath As CExprDefault
	
	Function AddStep(s As CStep) As Integer
	End Function
	
	Function GetStep(steps As CCollectionable) As Integer
	End Function
	
	Property Get IsAbsolute As Boolean
		IsAbsolute = True
	End Property
	
End Class
Class CExprLocationPathDefault As CExprLocationPath
	
	Function Build() As Integer
		On Error GoTo ErrorHandle
		
		Set Me.pSteps = New CCollectionable
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Build = FUNCTIONFAILURE
		Exit Function
	End Function
	
	Function AddStep(s As CStep) As Integer
		On Error GoTo ErrorHandle
		
		Dim result As Integer
		Dim steps As CCollectionable
		
		Set steps = Me.pSteps
		
		result = steps.Add(s)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		AddStep = FUNCTIONFAILURE
		Exit Function
	End Function
	
	Function GetStep(steps As CCollectionable) As Integer
		On Error GoTo ErrorHandle
		
		Set steps = Me.pSteps
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		GetStep = FUNCTIONFAILURE
		Exit Function
	End Function
	
	Function Simplify(expr As CExpr) As Integer
		On Error GoTo ErrorHandle
		
		Dim result As Integer
		Dim steps As CCollectionable
		Dim iter As CIterator
		Dim st As CStep
		
		Set steps = Me.pSteps
		
		result = steps.GetIterator(iter)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		Do Until iter.HasNext = False
			result = iter.GetNext(st)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
			result = st.Simplify()
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
		Loop
		
		Set expr = Me
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Simplify = FUNCTIONFAILURE
		Exit Function
	End Function
	
	Function GetText(strText As String) As Integer
		On Error GoTo ErrorHandle
		
		Dim result As Integer
		Dim steps As CCollectionable
		Dim iter As CIterator
		Dim st As CStep
		Dim buffer As String
		
		strText = ""
		
		Set steps = Me.pSteps
		
		result = steps.GetIterator(iter)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		Do Until iter.HasNext = False
			result = iter.GetNext(st)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
			buffer = ""
			
			result = st.GetText(buffer)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
			If iter.HasNext = True Then
				buffer = buffer &amp; "/"
			End If
			
			strText = strText &amp; buffer
			
		Loop
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		GetText = FUNCTIONFAILURE
		Exit Function
	End Function
	
	Function Calc(context As CXMLContext, doneResult As Variant) As Integer
		On Error GoTo ErrorHandle
		
		Dim result As Integer
		Dim nodes As CCollectionable
		Dim support As CXMLContextSupport
		Dim steps As CCollectionable
		Dim iter As CIterator
		Dim stp As CStep
		Dim b As Boolean
		
		Dim newNodes As CCollectionable
		Dim newContext As CXMLContext
		Dim calcNodes As CCollectionable
		
		result = context.GetNodeSet(nodes)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		Set support = context.ContextSupport
		
		Set newNodes = New CCollectionable
		
		result = newNodes.AddAll(nodes)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		Set newContext = New CXMLContext
		
		result = newContext.Build(support)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		Set steps = Me.pSteps
		
		result = steps.GetIterator(iter)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		Do Until iter.HasNext = False
			result = iter.GetNext(stp)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
			result = newContext.SetNodeSet(newNodes)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
			result = stp.Calc(context, calcNodes)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
			result = Me.pIsReverseAxis(stp, b)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
			If b = True Then
				result = calcNodes.Reverse()
				If result = FUNCTIONFAILURE Then
					Error USERERR, Error
				End If
			End If
			
		Loop
		
		If steps.Length &gt; 1 Or nodes.Length &gt; 1 Then
			Dim comp As New CNodeComparator
			
			result = calcNodes.Sort(comp)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
		End If
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Calc = FUNCTIONFAILURE
		Exit Function
	End Function
	
	Property Get ToString As String
		On Error GoTo ErrorHandle
		
		Dim result As Integer
		Dim strText As String
		
		result = Me.GetText(strText)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		ToString = strText
		
		Exit Property
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Property
	End Property
	
	Property Get IsAblosute As Boolean
		IsAblosute = False
	End Property
	
	'--private
	Private Function pIsReverseAxis(stp As CStep, b As Boolean) As Integer
		On Error GoTo ErrorHandle
		
		Dim result As Integer
		Dim XMLAxisTypes As CXMLAxisTypes
		Dim intAxis As Integer
		Dim strAxisName As String
		
		result = GetXMLAxisTypes(XMLAxisTypes)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		result = stp.GetAxis(intAxis)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		result = XMLAxisTypes.GetAxisName(intAxis, strAxisName)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		Select Case strAxisName
			Case "preceding", "preceding-sibling", "ancestor", "ancestor-or-self"
				b = True
			Case Else
				b = False
		End Select
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		pIsReverseAxis = FUNCTIONFAILURE
		Exit Function
	End Function
	
	Private Property Get pSteps As CCollectionable
		Set pSteps = Me.Members("pSteps")
	End Property
	Private Property Set pSteps As CCollectionable
		Set Me.Members("pSteps") = pSteps
	End Property
	
End Class
Class CNodeComparator As CComparator
	
	Function Build(Navigator As CXMLNavigator) As Integer
		On Error GoTo ErrorHandle
		
		Set Me.pNavigator = Navigator
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Build = FUNCTIONFAILURE
		Exit Function
	End Function
	
	Function Comp(node0 As Variant, node1 As Variant, res As Integer) As Integer
		On Error GoTo ErrorHandle
		
		If node0 Is node1 Then
			res = 0
			GoTo ExitTag
		End If
		
		Dim result As Integer
		Dim nav As CXMLNavigator
		Dim bol As Boolean
		
		Set nav = Me.pNavigator
		
		If nav Is Nothing Then
			res = 0
			GoTo ExitTag
		End If
		
		If Me.pIsNonChild(nav, node0) And Me.pIsNonChild(nav, node1)  Then
			Dim pNode0 As Variant
			Dim pNode1 As Variant
			
			result = nav.GetParentNode(node0, pNode0)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
			result = nav.GetParentNode(node1, pNode1)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
			If pNode0 Is pNode1 Then
				'If nav.IsNamespaceNode(node0) And nav.IsAttributeNode(node1) Then
				'	res = -1
				'ElseIf nav.IsNamespaceNode(node1) And nav.IsAttributeNode(node2) Then
				'	res = 1
				'Elseif nav.IsNamespaceNode(node0) then
				If nav.IsAttributeNode(node0) Then
					Dim strName0 As String
					Dim strName1 As String
					
					result = nav.GetAttributeName(node0, strName0)
					If result = FUNCTIONFAILURE Then
						Error USERERR, Error
					End If
					
					result = nav.GetAttributeName(node1, strName1)
					If result = FUNCTIONFAILURE Then
						Error USERERR, Error
					End If
					
					res = StrCompare(strName0, strName1, 0)
				End If
				
			End If
			
			result = Me.Comp(pNode0, pNode1, res)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
		End If
		
		
		Dim intDepth0 As Integer
		Dim intDepth1 As Integer
		
		result = Me.pGetDepth(nav, node0, intDepth0)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		result = Me.pGetDepth(nav, node1, intDepth1)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		Dim a0 As Variant
		Dim a1 As Variant
		
		Set a0 = node0
		Set a1 = node1
		
		Do Until intDepth0 &lt;= intDepth1
			result = nav.GetParentNode(a0, a0)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
			intDepth0 = intDepth0 + 1
		Loop
		
		If a0 Is node1 Then
			res = 1
			GoTo ExitTag
		End If
		
		Do Until intDepth1 &lt;= intDepth0
			result = nav.GetParentNode(a1, a1)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
			intDepth1 = intDepth1 + 1
		Loop
		
		If a1 Is node0 Then
			res = -1
			GoTo ExitTag
		End If
		
		Dim p0 As Variant
		Dim p1 As Variant
		
		Do
			result = nav.GetParentNode(a0, p0)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
			result = nav.GetParentNode(a1, p1)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
			If p0 Is p1 Then
				
			End If
			
			Set a0 = p0
			Set a1 = p1
		Loop
		
ExitTag:
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Comp = FUNCTIONFAILURE
		Exit Function
	End Function
	
	Private Function pCompSiblings(nav As CXMLNavigator, node0 As Variant, node1 As Variant, res As Integer) As Integer
		On Error GoTo ErrorHandle
		
		Dim result As Integer
		Dim bol As Boolean
		
		If Me.pIsNonChild(nav, node0) Then
			res = 1
		ElseIf Me.pIsNonChild(nav, node1) Then
			res = -1
		Else
			Dim iter As CIterator
			
		
		End If
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		pCompSiblings = FUNCTIONFAILURE
		Exit Function
	End Function
	
	Private Function pGetDepth(nav As CXMLNavigator, node As Variant, intDepth As Integer) As Integer
		On Error GoTo ErrorHandle
		
		Dim result As Integer
		Dim pNode As Variant
		
		intDepth = 0
		
		Set pNode = node
		
		Do Until pNode Is Nothing
			result = nav.GetParentNode(pNode, pNode)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
			intDepth = intDepth + 1
			
		Loop
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		pGetDepth = FUNCTIONFAILURE
		Exit Function
	End Function
	
	Private Property Get pIsNonChild(nav As CXMLNavigator, node As Variant) As Boolean
		On Error GoTo ErrorHandle
		
		Dim b As Boolean
		
		b = nav.IsAttributeNode(node)
		If b = False Then
			'b = nav.IsNamespaceNode(node)
		End If
		
		pIsNonChild = b
		
	Exit Property
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Property
	End Property
	
	Private Property Get pNavigator As CXMLNavigator
		Set pNavigator = Me.Members("pNavigator")
	End Property
	Private Property Set pNavigator As CXMLNavigator
		Set Me.Members("pNavigator") = pNavigator
	End Property
	
End Class
Class CExprFactory As CObjectable
	
	Function CreateExprAnd(lhs As CExpr, rhs As CExpr, expr As CExprBinary) As Integer
		On Error GoTo ErrorHandle
		
		Dim result As Integer
		
		Set expr = New CExprAnd
		
		result = expr.Build(lhs, rhs)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		CreateExprAnd = FUNCTIONFAILURE
		Exit Function
	End Function
	
	Function CreateExprOr(lhs As CExpr, rhs As CExpr, expr As CExprBinary) As Integer
		On Error GoTo ErrorHandle
		
		Dim result As Integer
		
		Set expr = New CExprOr
		
		result = expr.Build(lhs, rhs)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		CreateExprOr = FUNCTIONFAILURE
		Exit Function
	End Function
	
	Function CreateExprEquality(lhs As CExpr, rhs As CExpr, intXPathOperator As Integer, expr As CExprBinary) As Integer
		On Error GoTo ErrorHandle
		
		Dim result As Integer
		Dim EQUALS As Integer
		Dim NOT_EQUALS As Integer
		
		result = GetXPathOperator("EQUALS", EQUALS)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		result = GetXPathOperator("NOT_EQUALS", NOT_EQUALS)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		Select Case intXPathOperator
			Case EQUALS
				Set expr = New CExprEquals
				result = expr.Build(lhs, rhs)
				If result = FUNCTIONFAILURE Then
					Error USERERR, Error
				End If
				
			Case NOT_EQUALS
				Set expr = New CExprNotEquals
				result = expr.Build(lhs, rhs)
				If result = FUNCTIONFAILURE Then
					Error USERERR, Error
				End If
			Case Else
				Error USERERR, "Unhandled operator in CreateExprEquality() : " &amp; intXPathOperator
		End Select
		
		
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		CreateExprEquality = FUNCTIONFAILURE
		Exit Function
	End Function
	
End Class
Class CXPathOperator As CObjectable
	
	Sub New()
		Call Me.pInit_CXPathOperator()
	End Sub
	
	Function GetOperator(strName As String, intOperator As Integer) As Integer
		On Error GoTo ErrorHandle
		
		intOperator = Me.Members(strName)
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		GetOperator = FUNCTIONFAILURE
		Exit Function
	End Function
	
	'--private
	Private Sub pInit_CXPathOperator()
		Dim c0 As String
		Dim ary As Variant
		Dim i As Integer
		
		c0 = Chr(0)
		
		ary = Split(_
		"NO_OP" &amp; c0 &amp;_
		"EQUALS" &amp; c0 &amp;_
		"NOT_EQUALS" &amp; c0 &amp;_
		"LESS_THAN" &amp; c0 &amp;_
		"LESS_THAN_EQUALS" &amp; c0 &amp;_
		"GREATER_THAN" &amp; c0 &amp;_
		"GREATER_THAN_EQUALS" &amp; c0 &amp;_
		"ADD" &amp; c0 &amp;_
		"SUBTRACT" &amp; c0 &amp;_
		"MULTIPLY" &amp; c0 &amp;_
		"MOD" &amp; c0 &amp;_
		"DIV" &amp; c0 &amp;_
		"NEGATIVE" &amp; c0 &amp;_
		"", c0)
		
		ForAll a In ary
			If a &lt;&gt; "" Then
				Me.Members(CStr(a)) = i
				i = i + 1
			End If
		End ForAll
		
	End Sub
	
End Class
Class CExprEquals As CExprEquality
	
	Function GetOperator(strOperator As String) As Integer
		strOperator = "="
	End Function
	
	Private Function pCalcObjObj(lhs As Variant, rhs As Variant, bolResult As Boolean) As Integer
		On Error GoTo ErrorHandle
		
		If Me.pEitherIsNum(lhs, rhs) Then
			bolResult = (lhs = rhs)
		Else
			bolResult = (lhs = rhs)
		End If
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		pCalcObjObj = FUNCTIONFAILURE
		Exit Function
	End Function
	
End Class
Class CExprNotEquals As CExprEquality
	
	Function GetOperator(strOperator As String) As Integer
		strOperator = "!="
	End Function
	
	Private Function pCalcObjObj(lhs As Variant, rhs As Variant, bolResult As Boolean) As Integer
		On Error GoTo ErrorHandle
		
		If Me.pEitherIsNum(lhs, rhs) Then
			bolResult = (lhs &lt;&gt; rhs)
		Else
			bolResult = (lhs &lt;&gt; rhs)
		End If
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		pCalcObjObj = FUNCTIONFAILURE
		Exit Function
	End Function
	
End Class
Class CExprRelational As CExprTruth
	
End Class
</lotusscript></code><code event='initialize'><lotusscript>Sub Initialize
	Call SetProcess("*SL - XPathExprLib")
End Sub

</lotusscript></code><code event='GetXPathOperator'><lotusscript>Function GetXPathOperator(strName As String, intOperator As Integer) As Integer
	On Error GoTo ErrorHandle
	
	Dim result As Integer
	
	If g_XPathOperator Is Nothing Then
		Set g_XPathOperator = New CXPathOperator
	End If
	
	result = g_XPathOperator.GetOperator(strName, intOperator)
	If result = FUNCTIONFAILURE Then
		Error USERERR, Error
	End If
	
	Exit Function
ErrorHandle:
	Call SetErrorObject(Err, Error)
	GetXPathOperator = FUNCTIONFAILURE
	Exit Function
End Function

</lotusscript></code></scriptlibrary>

<scriptlibrary name='XMLFunctionLib' hide='v3 v4strict' designerversion='8.5.3'>
<noteinfo noteid='756e' unid='519D05832F21D1EA4925832E0021847B' sequence='2270'>
<created><datetime>20181022T150606,03+09</datetime></created>
<modified><datetime>20181031T100051,70+09</datetime></modified>
<revised><datetime>20181031T100051,69+09</datetime></revised>
<lastaccessed><datetime>20181031T100051,70+09</datetime></lastaccessed>
<addedtofile><datetime>20181022T150606,05+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby>
<wassignedby><name>CN=Administrator/O=Comture</name></wassignedby><code event='options'><lotusscript
>Option Public
Option Declare
Use "XMLContextLib"

</lotusscript></code><code event='declarations'><lotusscript>Private g_xmlFuncFact As CXMLFunctionFactory
Class CXMLFunctionNumber As CXMLFunction
	
	'@param context : (CXMLContext)
	'@param args : (CCollectionable)
	'@param doneResult (@return): (Variant)
	Function Play(context As CXMLContext, args As CCollectionable, doneResult As Variant) As Integer
		On Error GoTo ErrorHandle
		
		Dim result As Integer
		Dim nav As CXMLNavigator
		Dim nodeSet As CCollectionable
		Dim elem As Variant
		Dim dblResult As Double
		
		If args.Length = 0 Then
			Set nav = context.Navigator
			
			result = context.GetNodeSet(nodeSet)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
			result = Me.Calc(nodeSet, nav, dblResult)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
			doneResult = dblResult
			
		ElseIf args.Length = 1 Then
			Set nav = context.Navigator
			
			result = args.GetNth(0, elem)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
			result = Me.Calc(elem, nav, dblResult)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
			doneResult = dblResult
			
		Else
			Error USERERR, "number() takes at most one argument."
			
		End If
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Play = FUNCTIONFAILURE
		Exit Function
	End Function
		
	Function Calc(elem As Variant, nav As CXMLNavigator, didResult As Double) As Integer
		On Error GoTo ErrorHandle
		
		Dim result As Integer
		Dim xmlFuncStr As CXMLFunctionString
		
		'init
		didResult = 0
		
		Select Case TypeName(elem)
			Case "DOUBLE"
				didResult = CDbl(elem)
				
			Case "STRING"
				Dim s As String
				
				s = CStr(elem)
				
				If Len(s) &gt; 0 Then
					didResult = CDbl(elem)
				End If
				
			Case "BOOLEAN"
				Dim b As Boolean
				
				b = CBool(elem)
				
				If b = True Then
					didResult = 1
				Else
					didResult = 0
				End If
				
			Case "CCollectionable"
				Set xmlFuncStr = New CXMLFunctionString
				
				result = xmlFuncStr.Calc(elem, nav, s)
				If result = FUNCTIONFAILURE Then
					Error USERERR, Error
				End If
				
				result = Me.Calc(s, nav, didResult)
				If result = FUNCTIONFAILURE Then
					Error USERERR, Error
				End If
				
			Case Else
				b = False
				
				If nav.IsElementNode(elem) Then
					b = True
				ElseIf nav.IsAttributeNode(elem) Then
					b = True
				ElseIf nav.IsTextNode(elem) Then
					b = True
				ElseIf nav.IsCdataSectionNode(elem) Then
					b = True
				ElseIf nav.IsProcessInginStructionNode(elem) Then
					b = True
				ElseIf nav.IsCommentNode(elem) Then
					b = True
				ElseIf nav.IsDocumentNode(elem) Then
					b = True
				End If
				
				If b = True Then
					Set xmlFuncStr = New CXMLFunctionString
					
					result = xmlFuncStr.Calc(elem, nav, s)
					If result = FUNCTIONFAILURE Then
						Error USERERR, Error
					End If
					
					result = Me.Calc(s, nav, didResult)
					If result = FUNCTIONFAILURE Then
						Error USERERR, Error
					End If
				End If
				
		End Select
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Calc = FUNCTIONFAILURE
		Exit Function
	End Function
	
End Class
Class CXMLFunctionBoolean As CXMLFunction
	
	'@param context : (CXMLContext)
	'@param args : (CCollectionable)
	'@param doneResult (@return): (Variant)
	Function Play(context As CXMLContext, args As CCollectionable, doneResult As Variant) As Integer
		On Error GoTo ErrorHandle
		
		Dim result As Integer
		Dim elem As Variant
		Dim bolResult As Boolean
		
		If args.Length = 1 Then
			
			result = args.GetNth(0, elem)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
			result = Me.Calc(elem, bolResult)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
			doneResult = bolResult
			
		Else
			Error USERERR, "boolean() requires one argument."
		End If
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Play = FUNCTIONFAILURE
		Exit Function
	End Function
	
	Function Calc(elem As Variant, didResult As Boolean) As Integer
		On Error GoTo ErrorHandle
		
		Dim result As Integer
		
		didResult = False
		
		Select Case TypeName(elem)
			Case "BOOLEAN"
				didResult = CBool(elem)
				
			Case "NUMBER"
				Dim d As Double
				
				d = CDbl(elem)
				
				didResult = Not(d = 0)
				
			Case "STRING"
				Dim s As String
				
				s = CStr(elem)
				
				didResult = (Len(s) &gt; 0)
				
			Case Else
				If IsObject(elem) Then
					didResult = Not(elem Is Nothing)
				Else
					didResult = Not IsEmpty(elem)
				End If
				
		End Select
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Calc = FUNCTIONFAILURE
		Exit Function
	End Function
	
End Class
Class CXMLFunctionCeiling As CXMLFunction
	
	'@param context : (CXMLContext)
	'@param args : (CCollectionable)
	'@param doneResult (@return): (Variant)
	Function Play(context As CXMLContext, args As CCollectionable, doneResult As Variant) As Integer
		On Error GoTo ErrorHandle
		
		Dim result As Integer
		Dim nav As CXMLNavigator
		Dim elem As Variant
		Dim dblResult As Double
		
		If args.Length = 1 Then
			Set nav = context.Navigator
			
			result = args.GetNth(0, elem)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
			result = Me.Calc(elem, nav, dblResult)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
			doneResult = dblResult
		Else
			Error USERERR, "ceiling() requires one argument."
			
		End If
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Play = FUNCTIONFAILURE
		Exit Function
	End Function
	
	Function Calc(elem As Variant, nav As CXMLNavigator, didResult As Double) As Integer
		On Error GoTo ErrorHandle
		
		Dim result As Integer
		Dim xmlFuncNum As New CXMLFunctionNumber
		Dim d As Double
		
		result = xmlFuncNum.Calc(elem, nav, d)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		'do ceil
		If d &gt; 0 Then
			didResult = Abs(Fix(1-d))
		Else
			didResult = Fix(d)
		End If
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Calc = FUNCTIONFAILURE
		Exit Function
	End Function
	
End Class
Class CXMLFunctionConcat As CXMLFunction
	
	'@param context : (CXMLContext)
	'@param args : (CCollectionable)
	'@param doneResult (@return): (Variant)
	Function Play(context As CXMLContext, args As CCollectionable, doneResult As Variant) As Integer
		On Error GoTo ErrorHandle
		
		Dim result As Integer
		Dim nav As CXMLNavigator
		Dim strResult As String
		
		If 2 &lt;= args.Length Then
			Set nav = context.Navigator
			
			result = Me.Calc(args, nav, strResult)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
			doneResult = strResult
		Else
			Error USERERR, "concat() requires at least two arguments"
		End If
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Play = FUNCTIONFAILURE
		Exit Function
	End Function
	
	Function Calc(varCol As Variant, nav As CXMLNavigator, didResult As String) As Integer
		On Error GoTo ErrorHandle
		
		Dim result As Integer
		Dim col As CCollectionable
		Dim xmlFuncStr As CXMLFunctionString
		Dim strResult As String
		Dim elem As Variant
		Dim i As Long
		
		Set col = varCol
		Set xmlFuncStr = New CXMLFunctionString
		
		For i = 0 To col.Length - 1
			result = col.GetNth(i, elem)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
			result = xmlFuncStr.Calc(elem, nav, strResult)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
			didResult = didResult &amp; strResult
		Next
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Calc = FUNCTIONFAILURE
		Exit Function
	End Function
	
End Class
Class CXMLFunctionString As CXMLFunction
	
	'@param context : (CXMLContext)
	'@param args : (CCollectionable)
	'@param doneResult (@return): (Variant)
	Function Play(context As CXMLContext, args As CCollectionable, doneResult As Variant) As Integer
		On Error GoTo ErrorHandle
		
		Dim result As Integer
		Dim nav As CXMLNavigator
		Dim nodeSet As CCollectionable
		Dim elem As Variant
		Dim strResult As String
		
		If args.Length = 0 Then
			Set nav = context.Navigator
			
			result = context.GetNodeSet(nodeSet)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
			result = Me.Calc(nodeSet, nav, strResult)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
			doneResult = strResult
			
		ElseIf args.Length = 1 Then
			Set nav = context.Navigator
			
			result = args.GetNth(0, elem)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
			result = Me.Calc(elem, nav, strResult)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
			doneResult = strResult
			
		Else
			Error USERERR, "string() requires one argument."
		End If
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Play = FUNCTIONFAILURE
		Exit Function
	End Function
	
	Function Calc(elem As Variant, nav As CXMLNavigator, didResult As String) As Integer
		On Error GoTo ErrorHandle
		
		Dim result As Integer
		Dim strValue As String
		
		If Not nav Is Nothing Then
			If nav.IsTextNode(elem) Then
				result = nav.GetTextStringValue(elem, didResult)
				If result = FUNCTIONFAILURE Then
					Error USERERR, Error
				End If
				
				GoTo ExitTag
				
			ElseIf nav.IsCdataSectionNode(elem) Then
				result = nav.GetTextStringValue(elem, didResult)
				If result = FUNCTIONFAILURE Then
					Error USERERR, Error
				End If
				
				GoTo ExitTag
				
			End If
			
		End If
		
		If elem IsA "CCollectionable" Then
			Dim col As CCollectionable
			
			Set col = elem
			
			If col.Length = 0 Then
				didResult = ""
				GoTo ExitTag
			End If
			
			result = col.GetNth(0, elem)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
		End If
		
		If Not nav Is Nothing Then
			If nav.IsElementNode(elem) Then
				result = nav.GetElementStringValue(elem, didResult)
				If result = FUNCTIONFAILURE Then
					Error USERERR, Error
				End If
				
				GoTo ExitTag
				
			ElseIf nav.IsAttributeNode(elem) Then
				result = nav.GetAttributeStringValue(elem, didResult)
				If result = FUNCTIONFAILURE Then
					Error USERERR, Error
				End If
				
				GoTo ExitTag
				
			ElseIf nav.IsProcessInginStructionNode(elem) Then
				result = nav.GetProcessInginStructionData(elem, didResult)
				If result = FUNCTIONFAILURE Then
					Error USERERR, Error
				End If
				
				GoTo ExitTag
				
			ElseIf nav.IsCommentNode(elem) Then
				result = nav.GetCommentStringValue(elem, didResult)
				If result = FUNCTIONFAILURE Then
					Error USERERR, Error
				End If
				
				GoTo ExitTag
				
			ElseIf nav.IsTextNode(elem) Then
				result = nav.GetTextStringValue(elem, didResult)
				If result = FUNCTIONFAILURE Then
					Error USERERR, Error
				End If
				
				GoTo ExitTag
				
			ElseIf nav.IsCdataSectionNode(elem) Then
				result = nav.GetTextStringValue(elem, didResult)
				If result = FUNCTIONFAILURE Then
					Error USERERR, Error
				End If
				
				GoTo ExitTag
				
				'ElseIf nav.IsNamespaceNode(elem) Then
				'	strValue = elem.NamespaceURI
				'	didResult = strValue
			End If
		End If
		
		If TypeName(elem) = "STRING" Then
			didResult = CStr(elem)
		ElseIf TypeName(elem) = "BOOLEAN" Then
			If CBool(elem) = True Then
				didResult = "true"
			Else
				didResult = "false"
			End If
		ElseIf IsNumeric(elem) Then
			didResult = CStr(elem)
		End If
		
ExitTag:
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Calc = FUNCTIONFAILURE
		Exit Function
	End Function
	
End Class
Class CXMLFunctionContains As CXMLFunction
	
	'@param context : (CXMLContext)
	'@param args : (CCollectionable)
	'@param doneResult (@return): (Variant)
	Function Play(context As CXMLContext, args As CCollectionable, doneResult As Variant) As Integer
		On Error GoTo ErrorHandle
		
		Dim result As Integer
		Dim nav As CXMLNavigator
		
		If 2 = args.Length Then
			Set nav = context.Navigator
			
			result = Me.Calc(args, nav, doneResult)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
		Else
			Error USERERR, "contains() requires two arguments."
		End If
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Play = FUNCTIONFAILURE
		Exit Function
	End Function
	
	Function Calc(varCol As Variant, nav As CXMLNavigator, didResult As Variant) As Integer
		On Error GoTo ErrorHandle
		
		Dim result As Integer
		Dim col As CCollectionable
		Dim xmlFuncStr As CXMLFunctionString
		Dim strResult As String
		Dim elem As Variant
		Dim strArg As String
		Dim strMatch As String
		
		Set col = varCol
		Set xmlFuncStr = New CXMLFunctionString
		
		result = col.GetNth(0, elem)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		result = xmlFuncStr.Calc(elem, nav, strArg)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		result = col.GetNth(1, elem)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		result = xmlFuncStr.Calc(elem, nav, strMatch)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		didResult = CBool(1 &lt;= InStr(strArg, strMatch))
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Calc = FUNCTIONFAILURE
		Exit Function
	End Function
End Class
Class CXMLFunctionCount As CXMLFunction
	
	'@param context : (CXMLContext)
	'@param args : (CCollectionable)
	'@param doneResult (@return): (Variant)
	Function Play(context As CXMLContext, args As CCollectionable, doneResult As Variant) As Integer
		On Error GoTo ErrorHandle
		
		Dim result As Integer
		Dim elem As Variant
		Dim dblResult As Double
		
		If args.Length = 1 Then
			result = args.GetNth(0, elem)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
			result = Me.Calc(elem, Nothing, dblResult)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
			doneResult = dblResult
			
		Else
			Error USERERR, "count() requires one argument."
		End If
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Play = FUNCTIONFAILURE
		Exit Function
	End Function
	
	Function Calc(elem As Variant, nav As CXMLNavigator, didResult As Double) As Integer
		On Error GoTo ErrorHandle
		
		Dim col As CCollectionable
		
		If elem IsA "CCollectionable" Then
			Set col = elem
			
			didResult = CDbl(col.Length)
		Else
			Error USERERR, "count() function can only be used for node-sets"
		End If
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Calc = FUNCTIONFAILURE
		Exit Function
	End Function
	
End Class
Class CXMLFunctionFalse As CXMLFunction
	
	'@param context : (CXMLContext)
	'@param args : (CCollectionable)
	'@param doneResult (@return): (Variant)
	Function Play(context As CXMLContext, args As CCollectionable, doneResult As Variant) As Integer
		On Error GoTo ErrorHandle
		
		Dim result As Integer
		Dim elem As Variant
		Dim bolResult As Boolean
		
		If args.Length = 0 Then
			result = Me.Calc(bolResult)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
			doneResult = bolResult
			
		Else
			Error USERERR, "false() requires no arguments."
		End If
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Play = FUNCTIONFAILURE
		Exit Function
	End Function
	
	Function Calc(didResult As Boolean) As Integer
		On Error GoTo ErrorHandle
		
		didResult = False
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Calc = FUNCTIONFAILURE
		Exit Function
	End Function
	
End Class
Class CXMLFunctionFooler As CXMLFunction
	
	'@param context : (CXMLContext)
	'@param args : (CCollectionable)
	'@param doneResult (@return): (Variant)
	Function Play(context As CXMLContext, args As CCollectionable, doneResult As Variant) As Integer
		On Error GoTo ErrorHandle
		
		Dim result As Integer
		Dim nav As CXMLNavigator
		Dim elem As Variant
		Dim dblResult As Double
		
		If args.length = 0 Then
			Set nav = context.Navigator
			
			result = args.GetNth(0, elem)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
			result = Me.Calc(elem, nav, dblResult)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
			doneResult = dblResult
			
		Else
			Error USERERR, "floor() requires one argument."
		End If
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Play = FUNCTIONFAILURE
		Exit Function
	End Function
	
	Function Calc(elem As Variant, nav As CXMLNavigator, didResult As Double) As Integer
		On Error GoTo ErrorHandle
		
		Dim result As Integer
		Dim xmlFuncNum As New CXMLFunctionNumber
		Dim d As Double
		
		result = xmlFuncNum.Calc(elem, nav, d)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		'do fooler
		If d &gt; 0 Then
			didResult = Fix(d)
		Else
			didResult = Abs(Fix(1-d))
		End If
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Calc = FUNCTIONFAILURE
		Exit Function
	End Function
	
End Class
Class CXMLFunctionId As CXMLFunction
	
	'@param context : (CXMLContext)
	'@param args : (CCollectionable)
	'@param doneResult (@return): (Variant)
	Function Play(context As CXMLContext, args As CCollectionable, doneResult As Variant) As Integer
		On Error GoTo ErrorHandle
		
		Dim result As Integer
		Dim nav As CXMLNavigator
		Dim nodeSet As CCollectionable
		Dim elem As Variant
		
		If args.Length = 1 Then
			Set nav = context.Navigator
			
			result = context.GetNodeSet(nodeSet)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
			result = args.GetNth(0, elem)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
			result = Me.Calc(nodeSet, elem, nav, doneResult)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
		Else
			Error USERERR, "id() requires one argument"
		End If
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Play = FUNCTIONFAILURE
		Exit Function
	End Function
	
	Function Calc(nodeSet As CCollectionable, arg As Variant, nav As CXMLNavigator, didResult As Variant) As Integer
		On Error GoTo ErrorHandle
		
		Dim result As Integer
		Dim nodes As CCollectionable
		
		Dim elem As Variant
		Dim i As Long
		Dim xmlFuncStr As CXMLFunctionString
		
		Set xmlFuncStr = New CXMLFunctionString
		
		If arg IsA "CCollectionable" Then
			Set nodes = New CCollectionable
			
			Dim args As CCollectionable
			Dim id As String
			
			Set args = arg
			
			For i = 0 To args.Length -1
				result = args.GetNth(i, elem)
				If result = FUNCTIONFAILURE Then
					Error USERERR, Error
				End If
				
				result = xmlFuncStr.Calc(elem, nav, id)
				If result = FUNCTIONFAILURE Then
					Error USERERR, Error
				End If
				
				result = Me.Calc(nodeSet, id, Nav, didResult)
				If result = FUNCTIONFAILURE Then
					Error USERERR, Error
				End If
				
				result = nodes.AddAll(didResult)
				If result = FUNCTIONFAILURE Then
					Error USERERR, Error
				End If
				
			Next
			
			Set didResult = nodes
		Else
			Set nodes = New CCollectionable
			
			Dim contextNode As Variant
			Dim ids As String
			Dim aryIds As Variant
			Dim domNode As Variant
			
			result = nodeSet.GetNth(0, contextNode)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
			result = xmlFuncStr.Calc(arg, nav, ids)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
			aryIds = Split(ids, " \t\n\r")
			ForAll v In aryIds
				id = v
				
				result = nav.GetElementById(contextNode, id, domNode)
				If result = FUNCTIONFAILURE Then
					Error USERERR, Error
				End If
				
				result = nodes.Add(domNode)
				If result = FUNCTIONFAILURE Then
					Error USERERR, Error
				End If
				
			End ForAll
			
			Set didResult = nodes
		End If
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Calc = FUNCTIONFAILURE
		Exit Function
	End Function
	
End Class
Class CXMLFunctionLang As CXMLFunction
	
	Sub New()
		Call Me.pInit_CXMLFunctionLang()
	End Sub
	
	'@param context : (CXMLContext)
	'@param args : (CCollectionable)
	'@param doneResult (@return): (Variant)
	Function Play(context As CXMLContext, args As CCollectionable, doneResult As Variant) As Integer
		On Error GoTo ErrorHandle
		
		Dim result As Integer
		Dim nav As CXMLNavigator
		Dim nodeSet As CCollectionable
		Dim elem As Variant
		Dim bolResult As Boolean
		
		If args.Length = 1 Then
			Set nav = context.Navigator
			
			result = context.GetNodeSet(nodeSet)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
			result = args.GetNth(0, elem)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
			result = Me.Calc1(nodeSet, elem, nav, bolResult)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
			doneResult = bolResult
			
		End If
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Play = FUNCTIONFAILURE
		Exit Function
	End Function
	
	Function Calc1(nodeSet As CCollectionable, varLang As Variant, nav As CXMLNavigator, didResult As Boolean) As Integer
		On Error GoTo ErrorHandle
		
		Dim result As Integer
		Dim xmlFuncStr As CXMLFunctionString
		Dim strLang As String
		Dim node As Variant
		
		Set xmlFuncStr = New CXMLFunctionString
		
		result = xmlFuncStr.Calc(varLang, nav, strLang)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		result = nodeSet.GetNth(0, node)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		result = Me.Calc2(node, strLang, nav, didResult)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Calc1 = FUNCTIONFAILURE
		Exit Function
	End Function
	
	Function Calc2(node As Variant, strLang As String, nav As CXMLNavigator, didResult As Boolean) As Integer
		On Error GoTo ErrorHandle
		
		Dim result As Integer
		Dim elemNode As Variant
		
		Dim LANG_LOCALNAME As String
		Dim XMLNS_URI As String
		
		'init
		didResult = False
		LANG_LOCALNAME = Me.LANG_LOCALNAME
		XMLNS_URI = Me.XMLNS_URI
		
		Set elemNode = node
		
		If nav.IsElementNode(elemNode) = False Then
			result = nav.GetParentNode(node, elemNode)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
		End If
		
		Do
			If elemNode Is Nothing Then
				Exit Do
			ElseIf nav.IsElementNode(elemNode) = False Then
				Exit Do
			End If
			
			Dim attrs As CIterator
			Dim attr As Variant
			Dim strAttrName As String
			Dim strAttrURI As String
			Dim strAttrValue As String
			
			result = nav.GetAttributeAxisIterator(elemNode, attrs)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
			Do Until attrs.HasNext = False
				
				result = attrs.GetNext(attr)
				If result = FUNCTIONFAILURE Then
					Error USERERR, Error
				End If
				
				result = nav.GetAttributeName(attr, strAttrName)
				If result = FUNCTIONFAILURE Then
					Error USERERR, Error
				End If
				
				result = nav.GetAttributeNamespaceURI(attr, strAttrURI)
				If result = FUNCTIONFAILURE Then
					Error USERERR, Error
				End If
				
				If LANG_LOCALNAME = strAttrName And XMLNS_URI = strAttrURI Then
					result = nav.GetAttributeStringValue(attr, strAttrValue)
					If result = FUNCTIONFAILURE Then
						Error USERERR, Error
					End If
					
					result = Me.IsSubLang(strAttrValue, strLang, didResult)
					If result = FUNCTIONFAILURE Then
						Error USERERR, Error
					End If
					
					GoTo ExitTag
					
				End If
				
			Loop
			
			result = nav.GetParentNode(elemNode, elemNode)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
		Loop
		
ExitTag:
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Calc2 = FUNCTIONFAILURE
		Exit Function
	End Function
	
	Private Function IsSubLang(strSubLang As String, strLang As String, didResult As Boolean) As Integer
		On Error GoTo ErrorHandle
		
		didResult = False
		
		If StrCompare(strSubLang, strLang, 1) = 0 Then
			didResult = True
		Else
			Dim result As Integer
			Dim intLen As Integer
			Dim objSubLangStr As CStringable
			Dim strSub As String
			
			Set objSubLangStr = New CStringable
			
			result = objSubLangStr.Build(strSubLang)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
			intLen = Len(strLang)
			
			didResult = objSubLangStr.StringLength &gt; intLen
			
			If didResult = True Then
				result = objSubLangStr.CharAt(intLen, strSub)
				If result = FUNCTIONFAILURE Then
					Error USERERR, Error
				End If
				
				didResult = (strSub = "-")
				
				If didResult = True Then
					result = objSubLangStr.SubString(0, intLen, strSub)
					If result = FUNCTIONFAILURE Then
						Error USERERR, Error
					End If
					
					didResult = (strSub = strLang)
					
				End If
			End If
		End If
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		IsSubLang = FUNCTIONFAILURE
		Exit Function
	End Function
	
	Private Sub pInit_CXMLFunctionLang()
		Me.LANG_LOCALNAME = "lang"
		Me.XMLNS_URI = "http://www.w3.org/XML/1998/namespace"
	End Sub
	
	Private Property Get LANG_LOCALNAME As String
		LANG_LOCALNAME = Me.Members("LANG_LOCALNAME")
	End Property
	Private Property Set LANG_LOCALNAME As String
		Me.Members("LANG_LOCALNAME") = LANG_LOCALNAME
	End Property
	
	Private Property Get XMLNS_URI As String
		XMLNS_URI = Me.Members("XMLNS_URI")
	End Property
	Private Property Set XMLNS_URI As String
		Me.Members("XMLNS_URI") = XMLNS_URI
	End Property
	
End Class
Class CXMLFunctionLast As CXMLFunction
	
	'@param context : (CXMLContext)
	'@param args : (CCollectionable)
	'@param doneResult (@return): (Variant)
	Function Play(context As CXMLContext, args As CCollectionable, doneResult As Variant) As Integer
		On Error GoTo ErrorHandle
		
		Dim result As Integer
		Dim dblResult As Double
		
		If args.Length = 0 Then
			result = Me.Calc(context, dblResult)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
			doneResult = dblResult
			
		Else
			Error USERERR, "last() requires no arguments."
		End If
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Play = FUNCTIONFAILURE
		Exit Function
	End Function
	
	Function Calc(context As CXMLContext, didResult As Double) As Integer
		On Error GoTo ErrorHandle
		
		didResult = context.Length
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Calc = FUNCTIONFAILURE
		Exit Function
	End Function
	
End Class
Class CXMLFunctionLocalName As CXMLFunction
	
	'@param context : (CXMLContext)
	'@param args : (CCollectionable)
	'@param doneResult (@return): (Variant)
	Function Play(context As CXMLContext, args As CCollectionable, doneResult As Variant) As Integer
		On Error GoTo ErrorHandle
		
		Dim result As Integer
		Dim nav As CXMLNavigator
		Dim nodeSet As CCollectionable
		Dim strResult As String
		
		If args.Length = 0 Then
			Set nav = context.Navigator
			
			result = context.GetNodeSet(nodeSet)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
			result = Me.Calc(nodeSet, nav, strResult)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
			doneResult = strResult
			
		ElseIf args.Length = 1 Then
			Set nav = context.Navigator
			
			result = Me.Calc(args, nav, strResult)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
			doneResult = strResult
			
		Else
			Error USERERR, "local-name() requires zero or one argument."
		End If
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Play = FUNCTIONFAILURE
		Exit Function
	End Function
	
	Function Calc(nodes As CCollectionable, nav As CXMLNavigator, didResult As String) As Integer
		On Error GoTo ErrorHandle
		
		didResult = ""
		
		If nodes.Length &gt; 0 Then
			
			Dim result As Integer
			Dim node As Variant
			
			result = nodes.GetNth(0, node)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
			If node IsA "CCollectionable" Then
				Dim tmpCol As CCollectionable
				
				Set tmpCol = node
				
				result = Me.Calc(tmpCol, nav, didResult)
				If result = FUNCTIONFAILURE Then
					Error USERERR, Error
				End If
				
			ElseIf nav.IsElementNode(node) Then
				result = nav.GetElementName(node, didResult)
				If result = FUNCTIONFAILURE Then
					Error USERERR, Error
				End If
				
			ElseIf nav.IsAttributeNode(node) Then
				result = nav.GetAttributeName(node, didResult)
				If result = FUNCTIONFAILURE Then
					Error USERERR, Error
				End If
				
			ElseIf nav.IsProcessInginStructionNode(node) Then
				result = nav.GetProcessInginStructionTarget(node, didResult)
				If result = FUNCTIONFAILURE Then
					Error USERERR, Error
				End If
				
			'ElseIf nav.IsNamespace(node) Then
			
			ElseIf nav.IsDocumentNode(node) Then
				didResult = ""
			ElseIf nav.IsCommentNode(node) Then
				didResult = ""
			ElseIf nav.IsTextNode(node) Then
				didResult = ""
			ElseIf nav.IsCdataSectionNode(node) Then
				didResult = ""
			Else
				Error USERERR, "The argument to the local-name function must be a node-set"
			End If
			
		End If
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Calc = FUNCTIONFAILURE
		Exit Function
	End Function
	
End Class
Class CXMLFunctionName As CXMLFunction
	
	'@param context : (CXMLContext)
	'@param args : (CCollectionable)
	'@param doneResult (@return): (Variant)
	Function Play(context As CXMLContext, args As CCollectionable, doneResult As Variant) As Integer
		On Error GoTo ErrorHandle
		
		Dim result As Integer
		Dim nav As CXMLNavigator
		Dim nodeSet As CCollectionable
		Dim strResult As String
		
		
		If args.Length = 0 Then
			Set nav = context.Navigator
			
			result = context.GetNodeSet(nodeSet)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
			result = Me.Calc(nodeSet, nav, strResult)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
			doneResult = strResult
			
		ElseIf args.Length = 1 Then
			Set nav = context.Navigator
			
			result = Me.Calc(args, nav, strResult)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
			doneResult = strResult
		Else
			Error USERERR, "name() requires zero or one argument."
		End If
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Play = FUNCTIONFAILURE
		Exit Function
	End Function
	
	Function Calc(nodes As CCollectionable, nav As CXMLNavigator, didResult As String) As Integer
		On Error GoTo ErrorHandle
		
		Dim result As Integer
		Dim node As Variant
		
		didResult = ""
		
		If nodes.Length &gt; 0 Then
			
			result = nodes.GetNth(0, node)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
			If node IsA "CCollectionable" Then
				Dim tmpCol As CCollectionable
				
				Set tmpCol = node
				
				result = Me.Calc(tmpCol, nav, didResult)
				If result = FUNCTIONFAILURE Then
					Error USERERR, Error
				End If
			
			ElseIf nav.IsElementNode(node) Then
				result = nav.GetElementQName(node, didResult)
				If result = FUNCTIONFAILURE Then
					Error USERERR, Error
				End If
				
			ElseIf nav.IsAttributeNode(node) Then
				result = nav.GetAttributeQName(node, didResult)
				If result = FUNCTIONFAILURE Then
					Error USERERR, Error
				End If
				
			ElseIf nav.IsProcessInginStructionNode(node) Then
				result = nav.GetProcessingInstructionTarget(node, didResult)
				If result = FUNCTIONFAILURE Then
					Error USERERR, Error
				End If
				
			'ElseIf nav.IsNamespace(node) then
				
			ElseIf nav.IsDocumentNode(node) Then
				didResult = ""
			ElseIf nav.IsCommentNode(node) Then
				didResult = ""
			ElseIf nav.IsTextNode(node) Then
				didResult = ""
			ElseIf nav.IsCdataSectionNode(node) Then
				didResult = ""
				
			Else
				Error USERERR, "The argument to the name function must be a node-set"
			End If
			
		End If
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Calc = FUNCTIONFAILURE
		Exit Function
	End Function
	
End Class
Class CXMLFunctionNamespaceURI As CXMLFunction
	
	'@param context : (CXMLContext)
	'@param args : (CCollectionable)
	'@param doneResult (@return): (Variant)
	Function Play(context As CXMLContext, args As CCollectionable, doneResult As Variant) As Integer
		On Error GoTo ErrorHandle
		
		Dim result As Integer
		Dim nav As CXMLNavigator
		Dim nodeSet As CCollectionable
		Dim strResult As String
		
		
		If args.Length = 0 Then
			Set nav = context.Navigator
			
			result = context.GetNodeSet(nodeSet)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
			result = Me.Calc(nodeSet, nav, strResult)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
			doneResult = strResult
			
		ElseIf args.Length = 1 Then
			Set nav = context.Navigator
			
			result = Me.Calc(args, nav, strResult)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
			doneResult = strResult
		Else
			Error USERERR, "namespace-uri() requires zero or one argument."
		End If
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Play = FUNCTIONFAILURE
		Exit Function
	End Function
	
	Function Calc(nodes As CCollectionable, nav As CXMLNavigator, didResult As String) As Integer
		On Error GoTo ErrorHandle
		
		Dim result As Integer
		Dim node As Variant
		
		didResult = ""
		
		If nodes.Length &gt; 0 Then
			
			result = nodes.GetNth(0, node)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
			If node IsA "CCollectionable" Then
				Dim tmpCol As CCollectionable
				
				Set tmpCol = node
				
				result = Me.Calc(tmpCol, nav, didResult)
				If result = FUNCTIONFAILURE Then
					Error USERERR, Error
				End If
				
			ElseIf nav.IsElementNode(node) Then
				result = nav.GetElementNamespaceURI(node, didResult)
				If result = FUNCTIONFAILURE Then
					Error USERERR, Error
				End If
				
			ElseIf nav.IsAttributeNode(node) Then
				result = nav.GetAttributeNamespaceURI(node, didResult)
				If result = FUNCTIONFAILURE Then
					Error USERERR, Error
				End If
				
			ElseIf nav.IsProcessInginStructionNode(node) Then
				didResult = ""
				
				'ElseIf nav.IsNamespace(node) then
				
			ElseIf nav.IsDocumentNode(node) Then
				didResult = ""
			ElseIf nav.IsCommentNode(node) Then
				didResult = ""
			ElseIf nav.IsTextNode(node) Then
				didResult = ""
			ElseIf nav.IsCdataSectionNode(node) Then
				didResult = ""
				
			Else
				Error USERERR, "The argument to the namespace-uri function must be a node-set"
			End If
			
		End If
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Calc = FUNCTIONFAILURE
		Exit Function
	End Function
	
End Class
Class CXMLFunctionNormalizeSpace As CXMLFunction
	
	'@param context : (CXMLContext)
	'@param args : (CCollectionable)
	'@param doneResult (@return) : (Variant)
	Function Play(context As CXMLContext, args As CCollectionable, doneResult As Variant) As Integer
		On Error GoTo ErrorHandle
		
		Dim result As Integer
		Dim nav As CXMLNavigator
		Dim nodeSet As CCollectionable
		Dim strResult As String
		
		
		If args.Length = 0 Then
			Set nav = context.Navigator
			
			result = context.GetNodeSet(nodeSet)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
			result = Me.Calc(nodeSet, nav, strResult)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
			doneResult = strResult
			
		ElseIf args.Length = 1 Then
			Set nav = context.Navigator
			
			result = Me.Calc(args, nav, strResult)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
			doneResult = strResult
		Else
			Error USERERR, "namespace-uri() requires zero or one argument."
		End If
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Play = FUNCTIONFAILURE
		Exit Function
	End Function
	
	'@param strArg : (String)
	'@param nav : (CXMLNavigator)
	'@param didResult (@return) : (String)
	Function Calc(strArg As Variant, nav As CXMLNavigator, didResult As String) As Integer
		On Error GoTo ErrorHandle
		
		Dim result As Integer
		Dim xmlFuncStr As New CXMLFunctionString
		Dim objBuffer As CStringable
		
		result = xmlFuncStr.Calc(strArg, nav, didResult)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		Set objBuffer = New CStringable
		
		result = objBuffer.Build(didResult)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		didResult = Replace(didResult, "\n", " ")
		didResult = Replace(didResult, "\r", " ")
		didResult = Replace(didResult, "\t", " ")
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Calc = FUNCTIONFAILURE
		Exit Function
	End Function
	
End Class
Class CXMLFunctionNo As CXMLFunction
	
	'@param context : (CXMLContext)
	'@param args : (CCollectionable)
	'@param doneResult (@return): (Variant)
	Function Play(context As CXMLContext, args As CCollectionable, doneResult As Variant) As Integer
		On Error GoTo ErrorHandle
		
		Dim result As Integer
		Dim elem As Variant
		Dim bolResult As Boolean
		
		If args.Length = 1 Then
			
			result = args.GetNth(0, elem)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
			result = Me.Calc(elem, bolResult)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
			doneResult = bolResult
			
		Else
			Error USERERR, "not() requires one argument."
		End If
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Play = FUNCTIONFAILURE
		Exit Function
	End Function
	
	Function Calc(elem As Variant, didResult As Boolean) As Integer
		On Error GoTo ErrorHandle
		
		Dim result As Integer
		Dim xmlFuncBool As New CXMLFunctionBoolean
		
		result = xmlFuncBool.Calc(elem, didResult)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Calc = FUNCTIONFAILURE
		Exit Function
	End Function
	
End Class
Class CXMLFunctionPosition As CXMLFunction
	
	'@param context : (CXMLContext)
	'@param args : (CCollectionable)
	'@param doneResult (@return): (Variant)
	Function Play(context As CXMLContext, args As CCollectionable, doneResult As Variant) As Integer
		On Error GoTo ErrorHandle
		
		Dim result As Integer
		Dim dblResult As Double
		
		If args.Length = 0 Then
			result = Me.Calc(context, dblResult)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
			doneResult = dblResult
			
		Else
			Error USERERR, "position() does not take any arguments."
		End If
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Play = FUNCTIONFAILURE
		Exit Function
	End Function
	
	Function Calc(context As CXMLContext, didResult As Double) As Integer
		On Error GoTo ErrorHandle
		
		Dim result As Integer
		
		didResult = context.Position
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Calc = FUNCTIONFAILURE
		Exit Function
	End Function
	
End Class
Class CXMLFunctionRound As CXMLFunction
	
	'@param context : (CXMLContext)
	'@param args : (CCollectionable) Double | number() function
	'@param doneResult (@return): (Variant) Double
	Function Play(context As CXMLContext, args As CCollectionable, doneResult As Variant) As Integer
		On Error GoTo ErrorHandle
		
		Dim result As Integer
		Dim nav As CXMLNavigator
		Dim elem As Variant
		Dim dblResult As Double
		
		If args.Length = 1 Then
			Set nav = context.Navigator
			
			result = args.GetNth(0, elem)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
			result = Me.Calc(elem, nav, dblResult)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
			doneResult = dblResult
			
		Else
			Error USERERR, "round() requires one argument."
		End If
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Play = FUNCTIONFAILURE
		Exit Function
	End Function
	
	Function Calc(elem As Variant, nav As CXMLNavigator, didResult As Double) As Integer
		On Error GoTo ErrorHandle
		
		Dim result As Integer
		Dim xmlFuncNum As New CXMLFunctionNumber
		
		result = xmlFuncNum.Calc(elem, nav, didResult)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		didResult = Fix(didResult)
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Calc = FUNCTIONFAILURE
		Exit Function
	End Function
	
End Class
Class CXMLFunctionStartsWith As CXMLFunction
	
	'@param context : (CXMLContext)
	'@param args : (CCollectionable)
	'@param doneResult (@return): (Variant)
	Function Play(context As CXMLContext, args As CCollectionable, doneResult As Variant) As Integer
		On Error GoTo ErrorHandle
		
		Dim result As Integer
		Dim nav As CXMLNavigator
		Dim elem0 As Variant
		Dim elem1 As Variant
		Dim bolResult As Boolean
		
		If args.Length = 2 Then
			Set nav = context.Navigator
			
			result = args.GetNth(0, elem0)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
			result = args.GetNth(1, elem1)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
			result = Me.Calc(elem0, elem1, nav, bolResult)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
			doneResult = bolResult
			
		Else
			Error USERERR, "starts-with() requires two arguments."
		End If
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Play = FUNCTIONFAILURE
		Exit Function
	End Function
	
	Function Calc(varArg As Variant, varMatch As Variant, nav As CXMLNavigator, didResult As Boolean) As Integer
		On Error GoTo ErrorHandle
		
		Dim result As Integer
		Dim xmlFuncStr As New CXMLFunctionString
		Dim strArg As String
		Dim strMatch As String
		
		result = xmlFuncStr.Calc(varArg, nav, strArg)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		result = xmlFuncStr.Calc(varMatch, nav, strMatch)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		didResult = (Left(strArg, Len(strMatch)) = strMatch)
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Calc = FUNCTIONFAILURE
		Exit Function
	End Function
	
End Class
Class CXMLFunctionStringLength As CXMLFunction
	
	'@param context : (CXMLContext)
	'@param args : (CCollectionable)
	'@param doneResult (@return): (Variant)
	Function Play(context As CXMLContext, args As CCollectionable, doneResult As Variant) As Integer
		On Error GoTo ErrorHandle
		
		Dim result As Integer
		Dim nav As CXMLNavigator
		Dim nodeSet As CCollectionable
		Dim elem As Variant
		Dim dblResult As Double
		
		If args.Length = 0 Then
			
			Set nav = context.Navigator
			
			result = context.GetNodeSet(nodeSet)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
			result = Me.Calc(nodeSet, nav, dblResult)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
			doneResult = dblResult
			
		ElseIf args.Length = 1 Then
			Set nav = context.Navigator
			
			result = args.GetNth(0, elem)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
			result = Me.Calc(elem, nav, dblResult)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
			doneResult = dblResult
			
		Else
			Error USERERR, "string-length() requires one argument."
		End If
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Play = FUNCTIONFAILURE
		Exit Function
	End Function
	
	Function Calc(elem As Variant, nav As CXMLNavigator, didResult As Double) As Integer
		On Error GoTo ErrorHandle
		
		Dim result As Integer
		Dim xmlFuncStr As New CXMLFunctionString
		Dim strValue As String
		
		result = xmlFuncStr.Calc(elem, nav, strValue)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		didResult = Len(strValue)
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Calc = FUNCTIONFAILURE
		Exit Function
	End Function
	
End Class
Class CXMLFunctionSubStringAfter As CXMLFunction
	
	'@param context : (CXMLContext)
	'@param args : (CCollectionable)
	'@param doneResult (@return): (Variant)
	Function Play(context As CXMLContext, args As CCollectionable, doneResult As Variant) As Integer
		On Error GoTo ErrorHandle
		
		Dim result As Integer
		Dim nav As CXMLNavigator
		Dim elem0 As Variant
		Dim elem1 As Variant
		Dim strResult As String
		
		If args.Length = 2 Then
			Set nav = context.Navigator
			
			result = args.GetNth(0, elem0)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
			result = args.GetNth(1, elem1)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
			result = Me.Calc(elem0, elem1, nav, strResult)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
		Else
			Error USERERR, "substring-after() requires two arguments."
		End If
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Play = FUNCTIONFAILURE
		Exit Function
	End Function
	
	Function Calc(varArg As Variant, varMatch As Variant, nav As CXMLNavigator, didResult As String) As Integer
		On Error GoTo ErrorHandle
		
		Dim result As Integer
		Dim xmlFuncStr As New CXMLFunctionString
		Dim strArg As String
		Dim strMatch As String
		Dim objBuffer As CStringable
		Dim idx As Integer
		
		result = xmlFuncStr.Calc(varArg, nav, strArg)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		result = xmlFuncStr.Calc(varMatch, nav, strMatch)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		Set objBuffer = New CStringable
		
		result = objBuffer.Build(strArg)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		result = objBuffer.IndexOf(strMatch, idx)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		If idx &lt; 0 Then
			didResult = ""
		Else
			result = objBuffer.SubString(idx, -1, didResult)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
		End If
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Calc = FUNCTIONFAILURE
		Exit Function
	End Function
	
End Class
Class CXMLFunctionSubStringBefore As CXMLFunction
	
	
	'@param context : (CXMLContext)
	'@param args : (CCollectionable)
	'@param doneResult (@return): (Variant)
	Function Play(context As CXMLContext, args As CCollectionable, doneResult As Variant) As Integer
		On Error GoTo ErrorHandle
		
		Dim result As Integer
		Dim nav As CXMLNavigator
		Dim elem0 As Variant
		Dim elem1 As Variant
		Dim strResult As String
		
		If args.Length = 2 Then
			Set nav = context.Navigator
			
			result = args.GetNth(0, elem0)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
			result = args.GetNth(1, elem1)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
			result = Me.Calc(elem0, elem1, nav, strResult)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
		Else
			Error USERERR, "substring-before() requires two arguments."
		End If
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Play = FUNCTIONFAILURE
		Exit Function
	End Function
	
	Function Calc(varArg As Variant, varMatch As Variant, nav As CXMLNavigator, didResult As String) As Integer
		On Error GoTo ErrorHandle
		
		Dim result As Integer
		Dim xmlFuncStr As New CXMLFunctionString
		Dim strArg As String
		Dim strMatch As String
		Dim objBuffer As CStringable
		Dim idx As Integer
		
		result = xmlFuncStr.Calc(varArg, nav, strArg)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		result = xmlFuncStr.Calc(varMatch, nav, strMatch)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		Set objBuffer = New CStringable
		
		result = objBuffer.Build(strArg)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		result = objBuffer.IndexOf(strMatch, idx)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		If idx &lt; 0 Then
			didResult = ""
		Else
			result = objBuffer.SubString(0, idx, didResult)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
		End If
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Calc = FUNCTIONFAILURE
		Exit Function
	End Function
	
	
End Class
Class CXMLFunctionSubString As CXMLFunction
	
	'@param context : (CXMLContext)
	'@param args : (CCollectionable)
	'@param doneResult (@return): (Variant)
	Function Play(context As CXMLContext, args As CCollectionable, doneResult As Variant) As Integer
		On Error GoTo ErrorHandle
		
		Dim intArgsLen As Integer
		
		intArgsLen = args.Length
		
		If intArgsLen &lt; 2 Or intArgsLen &gt; 3 Then
			Error USERERR, "substring() requires two or three arguments."
		End If
		
		Dim result As Integer
		Dim nav As CXMLNavigator
		
		Set nav = context.Navigator
		
		Dim xmlFuncStr As New CXMLFunctionString
		Dim elem0 As Variant
		Dim stringData As String
		Dim dblStringLen As Double
		
		result = args.GetNth(0, elem0)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		result = xmlFuncStr.Calc(elem0, nav, stringData)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		Dim xmlFuncStrLen As New CXMLFunctionStringLength
		
		result = xmlFuncStrLen.Calc(elem0, nav, dblStringLen)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		If dblStringLen = 0 Then
			GoTo ExitTag
		End If
		
		Dim xmlFuncNum As New CXMLFunctionNumber
		Dim elem1 As Variant
		Dim dblElem As Double
		
		result = args.GetNth(1, elem1)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		result = xmlFuncNum.Calc(elem1, nav, dblElem)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		Dim xmlFuncRound As New CXMLFunctionRound
		Dim dblStartPos As Double
		
		result = xmlFuncRound.Calc(dblElem, nav, dblStartPos)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		Dim elem2 As Variant
		Dim dblSubStringLen As Double
		
		If intArgsLen = 3 Then
			result = args.GetNth(2, elem2)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
			dblElem = 0
			
			result = xmlFuncNum.Calc(elem2, nav, dblElem)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
			result = xmlFuncRound.Calc(dblElem, nav, dblSubStringLen)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
		Else
			dblSubStringLen = dblStringLen
		End If
		
		If dblSubStringLen &lt;= 0 Then
			doneResult = ""
			GoTo ExitTag
		End If
		
		Dim intEndPos As Integer
		
		intEndPos = CInt(dblStartPos)+CInt(dblSubStringLen)
		If intArgsLen = 2 Then
			intEndPos = dblStringLen
		End If
		
		If intEndPos &gt; dblStringLen Then
			intEndPos = dblStringLen
		ElseIf intEndPos &lt; dblStartPos Then
			doneResult = ""
			GoTo ExitTag
		End If
		
		Dim objBuffer As CStringable
		
		Set objBuffer = New CStringable
		
		result = objBuffer.Build(stringData)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		If dblStringLen = objBuffer.StringLength Then
			result = objBuffer.SubString(CInt(dblStartPos-1)-1, intEndPos-1, stringData)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
			doneResult = stringData
			
		End If
		
ExitTag:
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Play = FUNCTIONFAILURE
		Exit Function
	End Function
	
End Class
Class CXMLFunctionSum As CXMLFunction
	
	'@param context : (CXMLContext)
	'@param args : (CCollectionable)
	'@param doneResult (@return): (Variant)
	Function Play(context As CXMLContext, args As CCollectionable, doneResult As Variant) As Integer
		On Error GoTo ErrorHandle
		
		Dim result As Integer
		Dim nav As CXMLNavigator
		Dim elem As Variant
		Dim dblResult As Double
		
		If args.Length = 1 Then
			Set nav = context.Navigator
			
			result = args.GetNth(0, elem)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
			result = Me.Calc(elem, nav, dblResult)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
			doneResult = dblResult
			
		Else
			Error USERERR, "sum() requires one argument."
		End If
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Play = FUNCTIONFAILURE
		Exit Function
	End Function
	
	Function Calc(nodes As Variant, nav As CXMLNavigator, didResult As Double) As Integer
		On Error GoTo ErrorHandle
		
		Dim result As Integer
		Dim col As CCollectionable
		Dim iterator As CIterator
		Dim node As Variant
		Dim dblSum As Double
		
		didResult = 0
		
		If nodes IsA "CCollectionable" Then
			Set col = nodes
			
			result = col.GetIterator(iterator)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
			result = Me.Calc(iterator, nav, didResult)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
		ElseIf nodes IsA "CIterator" Then
			Dim xmlFuncNum As New CXMLFunctionNumber
			
			Set iterator = nodes
			
			Do Until iterator.HasNext = False
				result = iterator.GetNext(node)
				If result = FUNCTIONFAILURE Then
					Error USERERR, Error
				End If
				
				result = xmlFuncNum.Calc(node, nav, dblSum)
				If result = FUNCTIONFAILURE Then
					Error USERERR, Error
				End If
				
				didResult = didResult + dblSum
				
			Loop
		Else
			Error USERERR, "The argument to the sum function must be a node-set"
		End If
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Calc = FUNCTIONFAILURE
		Exit Function
	End Function
	
End Class
Class CXMLFunctionTranslate As CXMLFunction
	
	'@param context : (CXMLContext)
	'@param args : (CCollectionable)
	'@param doneResult (@return): (Variant)
	Function Play(context As CXMLContext, args As CCollectionable, doneResult As Variant) As Integer
		On Error GoTo ErrorHandle
		
		Dim result As Integer
		Dim nav As CXMLNavigator
		Dim elem0 As Variant
		Dim elem1 As Variant
		Dim elem2 As Variant
		Dim strResult As String
		
		If args.Length = 3 Then
			Set nav = context.Navigator
			
			result = args.GetNth(0, elem0)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
			result = args.GetNth(1, elem1)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
			result = args.GetNth(2, elem2)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
			result = Me.Calc(elem0, elem1, elem2, nav, strResult)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
			doneResult = strResult
			
		Else
			Error USERERR, "translate() requires three arguments."
		End If
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Play = FUNCTIONFAILURE
		Exit Function
	End Function
	
	Function Calc(varSource As Variant, varFrom As Variant, varTo As Variant, nav As CXMLNavigator, didResult As String) As Integer
		On Error GoTo ErrorHandle
		
		Dim result As Integer
		Dim xmlFuncStr As New CXMLFunctionString
		Dim strSource As String
		Dim strFrom As String
		Dim strTo As String
		
		result = xmlFuncStr.Calc(varSource, nav, strSource)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		result = xmlFuncStr.Calc(varFrom, nav, strFrom)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		result = xmlFuncStr.Calc(varTo, nav, strTo)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		Dim chars As New CListCollection
		Dim objFrom As New CStringable
		Dim objTo As New CStringable
		
		result = objFrom.Build(strFrom)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		result = objTo.Build(strTo)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		Dim aryFrom As Variant
		Dim aryTo As Variant
		
		result = objFrom.ToCharArray(aryFrom)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		result = objTo.ToCharArray(aryTo)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		Dim i As Integer
		Dim maxF As Integer
		Dim maxT As Integer
		Dim idx As Long
		
		maxF = UBound(aryFrom)
		maxT = UBound(aryTo)
		
		For i = 0 To maxF
			
			result = chars.GetNameIdx(aryFrom(i), idx)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
			If idx &lt; 0 Then
			Else
				If i &lt;= maxT Then
					
					result = chars.SetBy(aryFrom(i), aryTo(i))
					If result = FUNCTIONFAILURE Then
						Error USERERR, Error
					End If
					
				End If
				
			End If
			
		Next
		
		Dim objSource As CStringable
		Dim arySource As Variant
		Dim maxS As Integer
		Dim buffer As String
		Dim c As String
		
		Set objSource = New CStringable
		
		result = objSource.Build(strSource)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		result = objSource.ToCharArray(arySource)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		maxS = UBound(arySource)
		
		For i = 0 To maxS
			
			result = chars.GetNameIdx(arySource(i), idx)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
			If idx &lt; 0 Then
				buffer = buffer &amp; arySource(i)
			Else
				result = chars.GetNth(idx, c)
				If result = FUNCTIONFAILURE Then
					Error USERERR, Error
				End If
				
				buffer = buffer &amp; c
			End If
			
		Next
		
		didResult = buffer
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Calc = FUNCTIONFAILURE
		Exit Function
	End Function
	
End Class
Class CXMLFunctionTrue As CXMLFunction
	
	'@param context : (CXMLContext)
	'@param args : (CCollectionable)
	'@param doneResult (@return): (Variant)
	Function Play(context As CXMLContext, args As CCollectionable, doneResult As Variant) As Integer
		On Error GoTo ErrorHandle
		
		Dim result As Integer
		Dim bolResult As Boolean
		
		If args.Length = 0 Then
			result = Me.Calc(bolResult)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
		Else
			Error USERERR, "true() requires no arguments."
		End If
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Play = FUNCTIONFAILURE
		Exit Function
	End Function
	
	Function Calc(didResult As Boolean) As Integer
		On Error GoTo ErrorHandle
		
		didResult = True
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Calc = FUNCTIONFAILURE
		Exit Function
	End Function
	
End Class
Class CXMLFunctionFactory As CObjectable
	
	Function Create(strClassName As String, xmlFunc As CXMLFunction) As Integer
		On Error GoTo ErrorHandle
		
		Select Case UCase$(strClassName)
			Case UCase$("Boolean"):Set xmlFunc = New CXMLFunctionBoolean
			Case UCase$("Ceiling"):Set xmlFunc = New CXMLFunctionCeiling
			Case UCase$("Concat"):Set xmlFunc = New CXMLFunctionConcat
			Case UCase$("Contains"):Set xmlFunc = New CXMLFunctionContains
			Case UCase$("Count"):Set xmlFunc = New CXMLFunctionCount
			Case UCase$("False"):Set xmlFunc = New CXMLFunctionFalse
			Case UCase$("Fooler"):Set xmlFunc = New CXMLFunctionFooler
			Case UCase$("Id"):Set xmlFunc = New CXMLFunctionId
			Case UCase$("Lang"):Set xmlFunc = New CXMLFunctionLang
			Case UCase$("Last"):Set xmlFunc = New CXMLFunctionLast
			Case UCase$("LocalName"):Set xmlFunc = New CXMLFunctionLocalName
			Case UCase$("Name"):Set xmlFunc = New CXMLFunctionName
			Case UCase$("NamespaceURI"):Set xmlFunc = New CXMLFunctionNamespaceURI
			Case UCase$("No"):Set xmlFunc = New CXMLFunctionNo
			Case UCase$("NormalizeSpace"):Set xmlFunc = New CXMLFunctionNormalizeSpace
			Case UCase$("Number"):Set xmlFunc = New CXMLFunctionNumber
			Case UCase$("Position"):Set xmlFunc = New CXMLFunctionPosition
			Case UCase$("Round"):Set xmlFunc = New CXMLFunctionRound
			Case UCase$("StartsWith"):Set xmlFunc = New CXMLFunctionStartsWith
			Case UCase$("String"):Set xmlFunc = New CXMLFunctionString
			Case UCase$("StringLength"):Set xmlFunc = New CXMLFunctionStringLength
			Case UCase$("SubStringAfter"):Set xmlFunc = New CXMLFunctionSubStringAfter
			Case UCase$("SubStringBefore"):Set xmlFunc = New CXMLFunctionSubStringBefore
			Case UCase$("Sum"):Set xmlFunc = New CXMLFunctionSum
			Case UCase$("Translate"):Set xmlFunc = New CXMLFunctionTranslate
			Case UCase$("True"):Set xmlFunc = New CXMLFunctionTrue
		End Select
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Create = FUNCTIONFAILURE
		Exit Function
	End Function
	
	Function CreateBoolean(xmlFunc As CXMLFunction) As Integer
		CreateBoolean = Me.Create("Boolean", xmlFunc)
	End Function
	
	Function CreateCeiling(xmlFunc As CXMLFunction) As Integer
		CreateCeiling = Me.Create("Ceiling", xmlFunc)
	End Function
	
	Function CreateConcat(xmlFunc As CXMLFunction) As Integer
		CreateConcat = Me.Create("Concat", xmlFunc)
	End Function
	
	Function CreateCount(xmlFunc As CXMLFunction) As Integer
		CreateCount = Me.Create("Count", xmlFunc)
	End Function
	
	Function CreateFalse(xmlFunc As CXMLFunction) As Integer
		CreateFalse = Me.Create("False", xmlFunc)
	End Function
	
	Function CreateFooler(xmlFunc As CXMLFunction) As Integer
		CreateFooler = Me.Create("Fooler", xmlFunc)
	End Function
	
	Function CreateId(xmlFunc As CXMLFunction) As Integer
		CreateId = Me.Create("Id", xmlFunc)
	End Function
	
	Function CreateLang(xmlFunc As CXMLFunction) As Integer
		CreateLang = Me.Create("Lang", xmlFunc)
	End Function
	
	Function CreateLast(xmlFunc As CXMLFunction) As Integer
		CreateLast = Me.Create("Last", xmlFunc)
	End Function
	
	Function CreateLocalName(xmlFunc As CXMLFunction) As Integer
		CreateLocalName = Me.Create("LocalName", xmlFunc)
	End Function
	
	Function CreateName(xmlFunc As CXMLFunction) As Integer
		CreateName = Me.Create("Name", xmlFunc)
	End Function
	
	Function CreateNamespaceURI(xmlFunc As CXMLFunction) As Integer
		CreateNamespaceURI = Me.Create("NamespaceURI", xmlFunc)
	End Function
	
	Function CreateNo(xmlFunc As CXMLFunction) As Integer
		CreateNo = Me.Create("No", xmlFunc)
	End Function
	
	Function CreateNormalizeSpace(xmlFunc As CXMLFunction) As Integer
		CreateNormalizeSpace = Me.Create("NormalizeSpace", xmlFunc)
	End Function
	
	Function CreateNumber(xmlFunc As CXMLFunction) As Integer
		CreateNumber = Me.Create("Number", xmlFunc)
	End Function
	
	Function CreatePosition(xmlFunc As CXMLFunction) As Integer
		CreatePosition = Me.Create("Position", xmlFunc)
	End Function
	
	Function CreateRound(xmlFunc As CXMLFunction) As Integer
		CreateRound = Me.Create("Round", xmlFunc)
	End Function
	
	Function CreateStartsWith(xmlFunc As CXMLFunction) As Integer
		CreateStartsWith = Me.Create("StartsWith", xmlFunc)
	End Function
	
	Function CreateString(xmlFunc As CXMLFunction) As Integer
		CreateString = Me.Create("String", xmlFunc)
	End Function
	
	Function CreateSubStringAfter(xmlFunc As CXMLFunction) As Integer
		CreateSubStringAfter = Me.Create("SubStringAfter", xmlFunc)
	End Function
	
	Function CreateSubStringBefore(xmlFunc As CXMLFunction) As Integer
		CreateSubStringBefore = Me.Create("SubStringBefore", xmlFunc)
	End Function
	
	Function CreateSum(xmlFunc As CXMLFunction) As Integer
		CreateSum = Me.Create("Sum", xmlFunc)
	End Function
	
	Function CreateTranslate(xmlFunc As CXMLFunction) As Integer
		CreateTranslate = Me.Create("Translate", xmlFunc)
	End Function
	
	Function CreateTrue(xmlFunc As CXMLFunction) As Integer
		CreateTrue = Me.Create("True", xmlFunc)
	End Function
	
End Class
</lotusscript></code><code event='initialize'><lotusscript>Sub Initialize
	Call SetProcess("*SL - XML.ContextLib")
End Sub



</lotusscript></code><code event='GetXMLFunctionFactory'><lotusscript>Function GetXMLFunctionFactory(xmlFuncFact As CXMLFunctionFactory) As Integer
	On Error GoTo ErrorHandle
	
	If g_xmlFuncFact Is Nothing Then
		Set g_xmlFuncFact = New CXMLFunctionFactory
	End If
	
	Set xmlFuncFact = g_xmlFuncFact
	
	Exit Function
ErrorHandle:
	Call SetErrorObject(Err, Error)
	GetXMLFunctionFactory = FUNCTIONFAILURE
	Exit Function
End Function







</lotusscript></code></scriptlibrary>

<scriptlibrary name='XPathUtilLib' hide='v3 v4strict' designerversion='8.5.3'>
<noteinfo noteid='7576' unid='5F678C4BA6A9E3A349258335002DA28A' sequence='25'>
<created><datetime>20181029T171827,30+09</datetime></created>
<modified><datetime>20181031T100051,77+09</datetime></modified>
<revised><datetime>20181031T100051,76+09</datetime></revised>
<lastaccessed><datetime>20181031T100051,77+09</datetime></lastaccessed>
<addedtofile><datetime>20181029T171827,44+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby>
<wassignedby><name>CN=Administrator/O=Comture</name></wassignedby><code event='options'><lotusscript
>Option Public
Option Declare
Use "ObjectLib"

</lotusscript></code><code event='declarations'><lotusscript>Class CUtilSingleObjectIterator As CIteratorable
End Class
Class CUtilSingletonCollection As CCollectionable
	
	Function Build(elem As Variant) As Integer
		On Error GoTo ErrorHandle
		
		Dim result As Integer
		
		result = Me.Add(elem)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Build = FUNCTIONFAILURE
		Exit Function
	End Function
	
End Class</lotusscript></code></scriptlibrary>

<scriptlibrary name='XMLSaxpathLib' hide='v3 v4strict' designerversion='8.5.3'>
<noteinfo noteid='757a' unid='25A3BB446AC42A08492583360004E298' sequence='77'>
<created><datetime>20181030T095321,52+09</datetime></created>
<modified><datetime>20181031T100051,73+09</datetime></modified>
<revised><datetime>20181031T100051,72+09</datetime></revised>
<lastaccessed><datetime>20181031T100051,73+09</datetime></lastaccessed>
<addedtofile><datetime>20181030T095321,61+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby>
<wassignedby><name>CN=Administrator/O=Comture</name></wassignedby><code event='options'><lotusscript
>Option Public
Option Declare
Use "ObjectLib"

</lotusscript></code><code event='declarations'><lotusscript>Private g_XMLAxisTypes As CXMLAxisTypes

Class CXMLAxisTypes As CObjectable
	
	Sub New()
		Call Me.pInit_CXMLAxis()
	End Sub
	
	Function GetAxis(strAxisName As String, intAxis As Integer) As Integer
		On Error GoTo ErrorHandle
		
		Dim result As Integer
		Dim col As CListCollection
		
		Set col = Me.pAxis
		
		result = col.GetBy(strAxisName, intAxis)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		GetAxis = FUNCTIONFAILURE
		Exit Function
	End Function
	
	Function GetAxisName(intAxis As Integer, strAxisName As String) As Integer
		On Error GoTo ErrorHandle
		
		Dim result As Integer
		Dim col As CListCollection
		Dim idx As Long
		
		Set col = Me.pAxis
		
		result = col.GetIdx(intAxis, idx)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		result = col.GetIdxName(Idx, strAxisName)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		GetAxisName = FUNCTIONFAILURE
		Exit Function
	End Function
	
	'--private
	Private Sub pInit_CXMLAxis()
		
		Dim result As Integer
		Dim ary As Variant
		
		ary = Split(_
		"invalid-axis" &amp;_
		"child" &amp;_
		"descendant" &amp;_
		"parent" &amp;_
		"ancestor" &amp;_
		"following-sibling" &amp;_
		"preceding-sibling" &amp;_
		"following" &amp;_
		"preceding" &amp;_
		"attribute" &amp;_
		"namespace" &amp;_
		"self" &amp;_
		"descendant-or-self" &amp;_
		"ancestor-or-self" &amp;_
		"", ",")
		
		Dim i As Integer
		Dim col As New CListCollection
		
		i = 0
		
		Forall v In ary
			result = col.SetBy(CStr(v), i)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
		End ForAll
		
		Set Me.pAxis = col
		
	End Sub
	
	Private Property Get pAxis As CListCollection
		Set pAxis = Me.Members("pAxis")
	End Property
	Private Property Set pAxis As CListCollection
		Set Me.Members("pAxis") = pAxis
	End Property
	
End Class
</lotusscript></code><code event='GetXMLAxisTypes'><lotusscript>Function GetXMLAxisTypes(XMLAxisTypes As CXMLAxisTypes) As Integer
	On Error GoTo ErrorHandle
	
	If g_XMLAxisTypes Is Nothing Then
		Set g_XMLAxisTypes = New CXMLAxisTypes
	End If
	
	Set XMLAxisTypes = g_XMLAxisTypes
	
	Exit Function
ErrorHandle:
	Call SetErrorObject(Err, Error)
	GetXMLAxisTypes = FUNCTIONFAILURE
	Exit Function
End Function

</lotusscript></code></scriptlibrary>

<scriptlibrary name='XMLContextLib' hide='v3 v4strict' designerversion='8.5.3'>
<noteinfo noteid='7582' unid='F7C1684FDDBDFE37492583360023C134' sequence='46'>
<created><datetime>20181030T153032,20+09</datetime></created>
<modified><datetime>20181031T113205,34+09</datetime></modified>
<revised><datetime>20181031T113205,33+09</datetime></revised>
<lastaccessed><datetime>20181031T113205,34+09</datetime></lastaccessed>
<addedtofile><datetime>20181030T153032,25+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby>
<wassignedby><name>CN=Administrator/O=Comture</name></wassignedby><code event='options'><lotusscript
>Option Public
Option Declare
Use "ObjectLib"


</lotusscript></code><code event='declarations'><lotusscript>Class CXMLNavigator As CObjectable
	
	'@param
	' domNode : (DomNode) context
	' iterator : (CIterator) iterator
	Function GetAttributeAxisIterator(domNode As Variant, iterator As CIterator) As Integer
	End Function
	
	'@param
	' domNode : (DomNode) context
	' iterator : (CIterator) iterator
	Function GetFollowingSiblingAxisIterator(domNode As Variant, iterator As CIterator) As Integer
	End Function
	
	'@param
	' domNode : (DomNode) context
	' col : (CCollectionable) col
	Function GetChildAxisIterator(domNode As Variant, iterator As CIterator) As Integer
	End Function
	
	'@param
	' domNode : (DomNode) context
	' col : (CCollectionable) col
	Function GetDescendantAxisIterator(domNode As Variant, iterator As CIterator) As Integer
	End Function
	
	
	'@param
	' domNode : (DomNode) TextNode | CDATASectionNode
	' strValue : (String) node text value
	Function GetTextStringValue(domNode As Variant, strValue As String) As Integer
	End Function
	
	'@param
	' domNode : (DomNode) AttributeNode
	' strValue : (String) node value
	Function GetAttributeStringValue(domNode As Variant, strValue As String) As Integer
	End Function
	
	'@param
	' domNode : (DomNode) ElementNode
	' strValue : (String) node value
	Function GetElementStringValue(domNode As Variant, strValue As String) As Integer
	End Function
	
	'@param
	' domNode : (DomNode) ProcessingInstructionNode
	' strTarget : (String) target
	Function GetProcessingInstructionTarget(domNode As Variant, strTarget As String) As Integer
	End Function
	
	'@param
	' domNode : (DomNode) ProcessingInstructionNode
	' strData : (String) data
	Function GetProcessingInstructionData(domNode As Variant, strData As String) As Integer
	End Function
	
	'@param
	' domNode : (DomNode) ProcessingInstructionNode
	' strData : (String) data
	Function GetCommentStringValue(domNode As Variant, strValue As String) As Integer
	End Function
	
	'@param
	' strPrefix : (String) prefix
	' context : (Variant) DomNode
	Function TranslateNamespacePrefixToUri(strPrefix As String, context As Variant, strURI As String) As Integer
	End Function
	
	'@param
	' contextNode : (DomNode)
	' elementId : (String)
	' domNode (@return): (DomNode)
	Function GetElementById(contextNode As Variant, elementId As String, domNode As Variant) As Integer
	End Function
	
	'@param
	' domNode : (DomNode)
	' parentNode (@return): (DomNode)
	Function GetParentNode(domNode As Variant, parentNode As Variant) As Integer
	End Function
	
	'@param
	' domNode : (Variant) ElementNode
	' strName (@return): (String) element name
	Function GetElementName(domNode As Variant, strName As String) As Integer
	End Function
	
	'@param
	' domNode : (Variant) ElementNode
	' strURI (@return): (String) element URI
	Function GetElementNamespaceURI(domNode As Variant, strURI As String) As Integer
	End Function
	
	'@param
	' domNode : (Variant) ElementNode
	' strQName (@return): (String) element QName
	Function GetElementQName(domNode As Variant, strQName As String) As Integer
	End Function
	
	'@param
	' attrNode : (DomNode)
	' strAttrName (@return): (String)
	Function GetAttributeName(attrNode As Variant, strAttrName As String) As Integer
	End Function
	
	'@param
	' domNode : (Variant) AttributeNode
	' strURI : (String) Attribute URI
	Function GetAttributeNamespaceURI(domNode As Variant, strURI As String) As Integer
	End Function
	
	'@param
	' attrNode : (DomNode)
	' strAttrQName (@return): (String) attribute QName
	Function GetAttributeQName(attrNode As Variant, strAttrQName As String) As Integer
	End Function
	
	'@param
	' domNode : (DomNode)
	' b (@return) : Boolean
	Function IsElementNode(domNode As Variant) As Boolean
	End Function
	
	'@param
	' domNode : (DomNode)
	'@return : Boolean
	Function IsAttributeNode(domNode As Variant) As Boolean
	End Function 
	
	'@param
	' domNode : (DomNode)
	'@return : Boolean
	Function IsTextNode(domNode As Variant) As Boolean
	End Function
	
	'@param
	' domNode : (DomNode)
	'@return : Boolean
	Function IsCdataSectionNode(domNode As Variant) As Boolean
	End Function
	
	'@param
	' domNode : (DomNode)
	'@return : Boolean
	Function IsEntityReferenceNode(domNode As Variant) As Boolean
	End Function
	
	'@param
	' domNode : (DomNode)
	'@return : Boolean
	Function IsEntityNode(domNode As Variant) As Boolean
	End Function
	
	'@param
	' domNode : (DomNode)
	'@return : Boolean
	Function IsProcessInginStructionNode(domNode As Variant) As Boolean
	End Function
	
	'@param
	' domNode : (DomNode)
	'@return : Boolean
	Function IsCommentNode(domNode As Variant) As Boolean
	End Function
	
	'@param
	' domNode : (DomNode)
	'@return : Boolean
	Function IsDocumentNode(domNode As Variant) As Boolean
	End Function
	
	'@param
	' domNode : (DomNode)
	'@return : Boolean
	Function IsDocumentTypeNode(domNode As Variant) As Boolean
	End Function
	
	'@param
	' domNode : (DomNode)
	'@return : Boolean
	Function IsDocumentFragmentNode(domNode As Variant) As Boolean
	End Function
	
	'@param
	' domNode : (DomNode)
	'@return : Boolean
	Function IsNotationNode(domNode As Variant) As Boolean
	End Function
	
	'@param
	' domNode : (DomNode)
	'@return : Boolean
	Function IsXmlDeclNode(domNode As Variant) As Boolean
	End Function
	
End Class
Class CXMLNamespaceContext As CObjectable
	
	Sub New()
		Call Me.pInit_CXMLNamespaceContext()
	End Sub
	
	Function Build() As Integer
		On Error GoTo ErrorHandle
		
		Set Me.pNamespace = New CListCollection
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Build = FUNCTIONFAILURE
		Exit Function
	End Function
	
	'@param
	' strPrefix : (String) prefix
	' strURI : (String) URI
	Function AddNamespace(strPrefix As String, strURI As String) As Integer
		On Error GoTo ErrorHandle
		
		Dim result As Integer
		Dim ns As CListCollection
		
		Set ns = Me.pNamespace
		
		result = ns.SetBy(strPrefix, strURI)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		AddNamespace = FUNCTIONFAILURE
		Exit Function
	End Function
	
	'@param
	' strPrefix : (String) prefix
	' strURI (@return): (String) URI
	Function TranslateNamespacePrefixToUri(strPrefix As String, strURI As String) As Integer
		On Error GoTo ErrorHandle
		
		Dim result As Integer
		Dim ns As CListCollection
		
		Set ns = Me.pNamespace
		
		result = ns.GetBy(strPrefix, strURI)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		TranslateNamespacePrefixToUri = FUNCTIONFAILURE
		Exit Function
	End Function
	
	'--private
	Private Sub pInit_CXMLNamespaceContext()
		Set Me.pNamespace = Nothing
	End Sub
	
	Private Property Get pNamespace As CListCollection
		Set pNamespace = Me.Members("pNamespace")
	End Property
	Private Property Set pNamespace As CListCollection
		Set Me.Members("pNamespace") = pNamespace
	End Property
	
End Class
Class CXMLVariableContext As CObjectable
	
	Function Build() As Integer
		On Error GoTo ErrorHandle
		
		Set Me.pVariables = New CListCollection
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Build = FUNCTIONFAILURE
		Exit Function
	End Function
	
	'@param
	' strNamespaceURI : (String)
	' strLocalName : (String)
	' objValue : (CObjectable)
	Function SetVariableValue(strNamespaceURI As String, strLocalName As String, objValue As CObjectable) As Integer
		On Error GoTo ErrorHandle
		
		Dim result As Integer
		Dim xmlQN As CXMLQualifiedName
		Dim col As CListCollection
		
		Set xmlQN = New CXMLQualifiedName
		
		result = xmlQN.Build(strNamespaceURI, strLocalName)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		Set col = Me.pVariables
		
		result = col.SetBy(xmlQN, objValue)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		SetVariableValue = FUNCTIONFAILURE
		Exit Function
	End Function
	
	'@param
	' strNamespaceURI : (String)
	' strPrefix : (String)
	' strLocalName : (String)
	' objValue (@return): (CObjectable)
	Function GetVariableValue(strNamespaceURI As String, strPrefix As String, strLocalName As String, objValue As CObjectable) As Integer
		On Error GoTo ErrorHandle
		
		Dim result As Integer
		Dim xmlQN As CXMLQualifiedName
		Dim col As CListCollection
		
		Set xmlQN = New CXMLQualifiedName
		
		result = xmlQN.Build(strNamespaceURI, strLocalName)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		Set col = Me.pVariables
		
		result = col.GetBy(xmlQN, objValue)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		GetVariableValue = FUNCTIONFAILURE
		Exit Function
	End Function
	
	'--private
	Private Property Get pVariables As CListCollection
		Set pVariables = Me.Members("pVariables")
	End Property
	Private Property Set pVariables As CListCollection
		Set Me.Members("pVariables") = pVariables
	End Property
	
End Class
Class CXMLQualifiedName As CObjectable
	
	Sub New()
		Call Me.pInit_CXMLQualifiedName()
	End Sub
	
	'@param
	' strNamespaceURI : (String)
	' strLocalName : (String)
	Function Build(strNamespaceURI As String, strLocalName As String) As String
		On Error GoTo ErrorHandle
		
		Dim result As Integer
		Dim objNamespaceURI As CStringable
		Dim objLocalName As CStringable
		
		Set objNamespaceURI = New CStringable
		result = objNamespaceURI.Build(strNamespaceURI)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		Set Me.pNamespaceURI = objNamespaceURI
		
		Set objLocalName = New CStringable
		result = objLocalName.Build(strLocalName)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		Set Me.pLocalName = objLocalName
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Build = FUNCTIONFAILURE
		Exit Function
	End Function
	
	'@param
	'lngHashCode (@return) : hash code
	Function HashCode(lngHashCode As Long) As Integer
		On Error GoTo ErrorHandle
		
		Dim result As Integer
		Dim objNamespaceURI As CStringable
		Dim objLocalName As CStringable
		
		Dim lngHash1 As Long
		Dim lngHash2 As Long
		
		Set objNamespaceURI = Me.pNamespaceURI
		Set objLocalName = Me.pLocalName
		
		result = objNamespaceURI.HashCode(lngHash1)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		result = objLocalName.HashCode(lngHash2)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		lngHashCode = (lngHash1 Xor lngHash2)
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		HashCode = FUNCTIONFAILURE
		Exit Function
	End Function
	
	'@param
	' obj : (CObjectable) CXMLQualifiedName
	' bolResult (@return): result
	Function Equals(obj As CObjectable, bolResult As Boolean) As Integer
		On Error GoTo ErrorHandle
		
		Dim result As Integer
		Dim xmlQN As CXMLQualifiedName
		Dim objStr1 As CStringable
		Dim objStr2 As CStringable
		
		Set xmlQN = obj
		
		Set objStr1 = Me.NamespaceURI
		Set objStr2 = xmlQN.NamespaceURI
		
		result = objStr1.Equals(objStr2, bolResult)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		If bolResult = True Then
			Set objStr1 = Me.LocalName
			Set objStr2 = xmlQN.LocalName
			
			result = objStr1.Equals(objStr2, bolResult)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
		End If
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Equals = FUNCTIONFAILURE
		Exit Function
	End Function
	
	Property Get NamespaceURI As CStringable
		Set NamespaceURI = Me.pNamespaceURI
	End Property
	
	Property Get LocalName As CStringable
		Set LocalName = Me.pLocalName
	End Property
	
	'--private
	Sub pInit_CXMLQualifiedName()
		Set Me.pNamespaceURI = Nothing
		Set Me.pLocalName = Nothing
	End Sub
	
	Private Property Get pNamespaceURI As CStringable
		Set pNamespaceURI = Me.Members("pNamespaceURI")
	End Property
	Private Property Set pNamespaceURI As CStringable
		Set Me.Members("pNamespaceURI") = pNamespaceURI
	End Property
	
	Private Property Get pLocalName As CStringable
		Set pLocalName = Me.Members("pLocalName")
	End Property
	Private Property Set pLocalName As CStringable
		Set Me.Members("pLocalName") = pLocalName
	End Property
	
End Class
Class CXMLFunction As CObjectable
	
	'@param context : (CXMLContext)
	'@param args : (CCollectionable)
	'@param doneResult (@return): (Variant)
	Function Play(context As CXMLContext, args As CCollectionable, doneResult As Variant) As Integer
		On Error GoTo ErrorHandle
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Play = FUNCTIONFAILURE
		Exit Function
	End Function
	
End Class
Class CXMLContextSupport As CObjectable
	
	Sub New()
		Call Me.pInit_CXMLContextSupport()
	End Sub
	
	'@param objNamespaceContext : (CXMLNamespaceContext)
	'@param objFunctionContext : (CXMLFunctionContext)
	'@param objVariableContext : (CXMLVariableContext)
	'@param objNV : (CDXLNavigator)
	Function Build(_
		objNamespaceContext As CXMLNamespaceContext,_
		objFunctionContext As CXMLFunctionContext,_
		objVariableContext As CXMLVariableContext,_
		objNavigator As CXMLNavigator) As Integer
		
		On Error GoTo ErrorHandle
		
		Set Me.NamespaceContext = objNamespaceContext
		Set Me.FunctionContext = objFunctionContext
		Set Me.VariableContext = objVariableContext
		Set Me.pNavigator = objNavigator
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Build = FUNCTIONFAILURE
		Exit Function
	End Function
	
	'@param strPrefix : (String)
	'@param strURI (@return) : (String)
	Function TranslateNamespacePrefixToUri(strPrefix As String, strURI As String) As Integer
		On Error GoTo ErrorHandle
		
		Dim result As Integer
		Dim objStr1 As CStringable
		Dim objStr2 As CStringable
		Dim bolResult As Boolean
		
		Set objStr1 = New CStringable
		Set objStr2 = New CStringable
		
		result = objStr1.Build("xml")
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		result = objStr2.Build(strPrefix)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		result = objStr1.Equals(objStr2, bolResult)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		If bolResult = True Then
			strURI = "http://www.w3.org/XML/1998/namespace"
		Else
			Dim context As CXMLNamespaceContext
			
			Set context = Me.NamespaceContext
			
			If context Is Nothing Then
				strURI = ""
			Else
				result = context.TranslateNamespacePrefixToUri(strPrefix, strURI)
				If result = FUNCTIONFAILURE Then
					Error USERERR, Error
				End If
			End If
			
		End If
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		TranslateNamespacePrefixToUri = FUNCTIONFAILURE
		Exit Function
	End Function
	
	'@param strNamespaceURI : (String)
	'@param strPrefix : (String)
	'@param strLocalName: (String)
	'@param objValue (@return) : (CObjectable)
	Function GetVariableValue(strNamespaceURI As String, strPrefix As String, strLocalName As String, objValue As CObjectable) As Integer
		On Error GoTo ErrorHandle
		
		Dim result As Integer
		Dim context As CXMLVariableContext
		
		Set context = Me.VariableContext
		
		If context Is Nothing Then
			Error USERERR, "No variable context installed"
		Else
			result = context.GetVariableValue(strNamespaceURI, strPrefix, strLocalName, objValue)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
		End If
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		GetVariableValue = FUNCTIONFAILURE
		Exit Function
	End Function
	
	'@param strNamespaceURI : (String)
	'@param strPrefix : (String)
	'@param strLocalName: (String)
	'@param objFunction (@return) : (CXMLFunction)
	Function GetFunction(strNamespaceURI As String, strPrefix As String, strLocalName As String, objFunction As CXMLFunction) As Integer
		On Error GoTo ErrorHandle
		
		Dim result As Integer
		Dim context As CXMLFunctionContext
		
		Set context = Me.FunctionContext
		
		If context Is Nothing Then
			Error USERERR, "No function context installed"
		Else
			result = context.GetFunction(strNamespaceURI, strPrefix, strLocalName, objFunction)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
		End If
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		GetFunction = FUNCTIONFAILURE
		Exit Function
	End Function
	
	Property Get NamespaceContext As CXMLNamespaceContext
		Set NamespaceContext = Me.Members("NamespaceContext")
	End Property
	Property Set NamespaceContext As CXMLNamespaceContext
		Set Me.Members("NamespaceContext") = NamespaceContext
	End Property
	
	Property Get FunctionContext As CXMLFunctionContext
		Set FunctionContext = Me.Members("FunctionContext")
	End Property
	Property Set FunctionContext As CXMLFunctionContext
		Set Me.Members("FunctionContext") = FunctionContext
	End Property
	
	Property Get VariableContext As CXMLVariableContext
		Set VariableContext = Me.Members("VariableContext")
	End Property
	Property Set VariableContext As CXMLVariableContext
		Set Me.Members("VariableContext") = VariableContext
	End Property
	
	Property Get Navigator As CXMLNavigator
		Set Navigator = Me.pNavigator
	End Property
	
	'--private
	Private Sub pInit_CXMLContextSupport()
		Set Me.NamespaceContext = Nothing
		Set Me.FunctionContext = Nothing
		Set Me.VariableContext = Nothing
		Set Me.pNavigator = Nothing
	End Sub
	
	Private Property Get pNavigator As CXMLNavigator
		Set pNavigator = Me.Members("pNavigator")
	End Property
	Private Property Set pNavigator As CXMLNavigator
		Set Me.Members("pNavigator") = pNavigator
	End Property
	
End Class
Class CXMLContext As CObjectable
	
	Sub New()
		Call Me.pInit_CXMLContext()
	End Sub
	
	'@param objContextSupport : (CXMLContextSupport)
	Function Build(support As CXMLContextSupport) As Integer
		On Error GoTo ErrorHandle
		
		Set Me.ContextSupport = support
		Set Me.pNodeSet = Nothing
		Me.Length = 0
		Me.Position = 0
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Build = FUNCTIONFAILURE
		Exit Function
	End Function
	
	Property Get Length As Integer
		Length = Me.Members("Length")
	End Property
	Property Set Length As Integer
		Me.Members("Length") = Length
	End Property
	
	Property Get Position As Integer
		Position = Me.Members("Position")
	End Property
	Property Set Position As Integer
		Me.Members("Position") = Position
	End Property
	
	Property Get ContextSupport As CXMLContextSupport
		Set ContextSupport = Me.Members("ContextSupport")
	End Property
	Property Set ContextSupport As CXMLContextSupport
		Set Me.Members("ContextSupport") = ContextSupport
	End Property
	
	Property Get Navigator As CXMLNavigator
		Set Navigator = Me.ContextSupport.Navigator
	End Property
	
	'@param nodeSet : (CCollectionable)
	Function SetNodeSet(nodeSet As CCollectionable) As Integer
		On Error GoTo ErrorHandle
		
		Set Me.pNodeSet = nodeSet
		Me.Length = nodeSet.Length
		
		If Me.Length &lt;= Me.Position Then
			Me.Position = 0
		End If
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		SetNodeSet = FUNCTIONFAILURE
		Exit Function
	End Function
	
	'@param nodeSet (@return): (CCollectionable)
	Function GetNodeSet(nodeSet As CCollectionable) As Integer
		On Error GoTo ErrorHandle
		
		Set nodeSet = Me.pNodeSet
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		GetNodeSet = FUNCTIONFAILURE
		Exit Function
	End Function
	
	'@param strPrefix : (String)
	'@param strURI (@return) : (String)
	Function TranslateNamespacePrefixToUri(strPrefix As String, strURI As String) As Integer
		On Error GoTo ErrorHandle
		
		Dim result As Integer
		Dim support As CXMLContextSupport
		
		Set support = Me.ContextSupport
		
		result = support.TranslateNamespacePrefixToUri(strPrefix, strURI)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		TranslateNamespacePrefixToUri = FUNCTIONFAILURE
		Exit Function
	End Function
	
	'@param strNamespaceURI : (String)
	'@param strPrefix : (String)
	'@param strLocalName: (String)
	'@param objValue (@return) : (CObjectable)
	Function GetVariableValue(strNamespaceURI As String, strPrefix As String, strLocalName As String, objValue As CObjectable) As Integer
		On Error GoTo ErrorHandle
		
		Dim result As Integer
		Dim support As CXMLContextSupport
		
		Set support = Me.ContextSupport
		
		result = support.GetVariableValue(strNamespaceURI, strPrefix, strLocalName, objValue)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		GetVariableValue = FUNCTIONFAILURE
		Exit Function
	End Function
	
	'@param strNamespaceURI : (String)
	'@param strPrefix : (String)
	'@param strLocalName: (String)
	'@param objFunction (@return) : (CXMLFunction)
	Function GetFunction(strNamespaceURI As String, strPrefix As String, strLocalName As String, objFunction As CXMLFunction) As Integer
		On Error GoTo ErrorHandle
		
		Dim result As Integer
		Dim support As CXMLContextSupport
		
		Set support = Me.ContextSupport
		
		result = support.GetFunction(strNamespaceURI, strPrefix, strLocalName, objFunction)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		GetFunction = FUNCTIONFAILURE
		Exit Function
	End Function
	
	'@param newContext (@return) : CXMLContext
	Function Duplicate(newContext As CXMLContext) As Integer
		On Error GoTo ErrorHandle
		
		Dim result As Integer
		Dim support As CXMLContextSupport
		
		Set support = Me.ContextSupport
		
		Set newContext = New CXMLContext
		
		result = newContext.Build(support)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		Dim newNodes As New CCollectionable
		
		result = newNodes.AddAll(Me.pNodeSet)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		result = newContext.SetNodeSet(newNodes)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		newContext.Position = Me.Position
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Duplicate = FUNCTIONFAILURE
		Exit Function
	End Function
	
	'--private
	Private Sub pInit_CXMLContext()
		Set Me.ContextSupport = Nothing
		Set Me.pNodeSet = Nothing
		Me.Length = 0
		Me.Position = 0
	End Sub
	
	Private Property Get pNodeSet As CCollectionable
		Set pNodeSet = Me.Members("pNodeSet")
	End Property
	Private Property Set pNodeSet As CCollectionable
		Set Me.Members("pNodeSet") = pNodeSet
	End Property
	
End Class
Class CXMLFunctionContext As CObjectable
	
	Function Build() As Integer
		On Error GoTo ErrorHandle
		
		Set Me.pFunctions = New CListCollection
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Build = FUNCTIONFAILURE
		Exit Function
	End Function
	
	'@param
	' strNamespaceURI : (String)
	' strLocalName : (String)
	' objFunction : (CXMLFunction)
	Function RegisterFunction(strNamespaceURI As String, strLocalName As String, objFunction As CXMLFunction) As Integer
		On Error GoTo ErrorHandle
		
		Dim result As Integer
		Dim xmlQN As CXMLQualifiedName
		Dim col As CListCollection
		
		Set xmlQN = New CXMLQualifiedName
		
		result = xmlQN.Build(strNamespaceURI, strLocalName)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		Set col = Me.pFunctions
		
		result = col.SetBy(xmlQN, objFunction)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		RegisterFunction = FUNCTIONFAILURE
		Exit Function
	End Function
	
	'@param
	' strNamespaceURI : (String)
	' strPrefix : (String)
	' strLocalName : (String)
	' objFunction (@return): (CXMLFunction)
	Function GetFunction(strNamespaceURI As String, strPrefix As String, strLocalName As String, objFunction As CXMLFunction) As Integer
		On Error GoTo ErrorHandle
		
		Dim result As Integer
		Dim xmlQN As CXMLQualifiedName
		Dim col As CListCollection
		
		Set xmlQN = New CXMLQualifiedName
		
		result = xmlQN.Build(strNamespaceURI, strLocalName)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		Set col = Me.pFunctions
		
		result = col.GetBy(xmlQN, objFunction)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		GetFunction = FUNCTIONFAILURE
		Exit Function
	End Function
	
	'--private
	
	Private Property Get pFunctions As CListCollection
		Set pFunctions = Me.Members("pFunctions")
	End Property
	Private Property Set pFunctions As CListCollection
		Set Me.Members("pFunctions") = pFunctions
	End Property
	
End Class</lotusscript></code></scriptlibrary>

<scriptlibrary name='DXLContextLib' hide='v3 v4strict' designerversion='8.5.3'>
<noteinfo noteid='758a' unid='63C1FBEFA9ED9699492583360026DFBB' sequence='113'>
<created><datetime>20181030T160436,43+09</datetime></created>
<modified><datetime>20181031T103854,77+09</datetime></modified>
<revised><datetime>20181031T103854,76+09</datetime></revised>
<lastaccessed><datetime>20181031T103854,77+09</datetime></lastaccessed>
<addedtofile><datetime>20181030T160436,45+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby>
<wassignedby><name>CN=Administrator/O=Comture</name></wassignedby><code event='options'><lotusscript
>Option Public
Option Declare
Use "XMLContextLib"

</lotusscript></code><code event='declarations'><lotusscript>Class CDXLAttributesIterator As CIterator
	
	'@param map : (NotesDOMNamedNodeMap)
	Function Build(map As NotesDOMNamedNodeMap) As Integer
		On Error GoTo ErrorHandle
		
		Set Me.pMap = map
		Me.pIdx = -1
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Build = FUNCTIONFAILURE
		Exit Function
	End Function
	
	'@return (Boolean) if True, has next element
	Property Get HasNext As Boolean
		HasNext = (Me.pIdx &lt; Me.pMap.NumberOfEntries)
	End Property
	
	'@param elem (@return) : (NotesDomNode)
	Function GetNext(elem As Variant) As Integer
		On Error GoTo ErrorHandle
		
		Dim map As NotesDOMNamedNodeMap
		Dim idx As Integer
		
		Set map = Me.pMap
		
		idx = Me.pIdx
		idx = idx + 1
		Me.pIdx = idx
		
		Set elem = map.GetItem(idx)
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		GetNext = FUNCTIONFAILURE
		Exit Function
	End Function
	
	'--private
	Private Property Get pMap As NotesDOMNamedNodeMap
		Set pMap = Me.Members("pMap")
	End Property
	Private Property Set pMap As NotesDOMNamedNodeMap
		Set Me.Members("pMap") = pMap
	End Property
	
	Private Property Get pIdx As Integer
		pIdx = Me.Members("pIdx")
	End Property
	Private Property Set pIdx As Integer
		Me.Members("pIdx") = pIdx
	End Property
	
End Class
Class CDXLFollowingSiblingAxisIterator As CIterator
	
	Function Build(node As Variant, nav As CXMLNavigator) As Integer
		On Error GoTo ErrorHandle
		
		Dim result As Integer
		Dim parent As Variant
		Dim childIter As CIterator
		Dim child As Variant
		
		Set Me.pNode = node
		Set Me.pNavigator = nav
		
		result = nav.GetParentNode(node, parent)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		If Not parent Is Nothing Then
			result = nav.GetChildAxisIterator(parent, childIter)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
			
			'Move to the current node
			Do Until childIter.HasNext = False
				result = childIter.GetNext(child)
				If result = FUNCTIONFAILURE Then
					Error USERERR, Error
				End If
				
				If child Is node Then
					Exit Do
				End If
			Loop
		Else
			result = nav.GetChildAxisIterator(node, childIter)
			If result = FUNCTIONFAILURE Then
				Error USERERR, Error
			End If
		End If
		
		Set Me.pIterator = childIter
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Build = FUNCTIONFAILURE
		Exit Function
	End Function
	
	Property Get HasNext As Boolean
		HasNext = Me.pIterator.HasNext
	End Property
	
	Function GetNext(elem As Variant) As Integer
		On Error GoTo ErrorHandle
		
		Dim result As Integer
		Dim iter As CIterator
		
		Set iter = Me.pIterator
		
		result = iter.GetNext(elem)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		GetNext = FUNCTIONFAILURE
		Exit Function
	End Function
	
	'--private
	Private Property Get pNode As Variant
		Set pNode = Me.Members("pNode")
	End Property
	Private Property Set pNode As Variant
		Set Me.Members("pNode") = pNode
	End Property
	
	Private Property Get pNavigator As CXMLNavigator
		Set pNavigator = Me.Members("pNavigator")
	End Property
	Private Property Set pNavigator As CXMLNavigator
		Set Me.Members("pNavigator") = pNavigator
	End Property
	
	Private Property Get pIterator As CIterator
		Set pIterator = Me.Members("pIterator")
	End Property
	Private Property Set pIterator As CIterator
		Set Me.Members("pIterator") = pIterator
	End Property
	
End Class
Class CDLXNavigator As CXMLNavigator
	
	'@param
	' domNode : (DomNode) context
	' iterator : (CIterator) iterator
	Function GetFollowingSiblingAxisIterator(domNode As Variant, iterator As CIterator) As Integer
		On Error GoTo ErrorHandle
		
		Dim result As Integer
		Dim node As NotesDOMNode
		Dim siblingIter As New CDXLFollowingSiblingAxisIterator
		
		Set node = domNode
		
		result = siblingIter.Build(node, Me)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		Set iterator = siblingIter
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		GetFollowingSiblingAxisIterator = FUNCTIONFAILURE
		Exit Function
	End Function
	
	'@param
	' domNode : (DomNode) context
	' col : (CCollectionable) col
	Function GetChildAxisIterator(domNode As Variant, iterator As CIterator) As Integer
		On Error GoTo ErrorHandle
		
		Dim result As Integer
		Dim node As NotesDOMNode
		Dim childIter As New CDXLChildNodeSiblingIterator
		
		Set node = domNode
		
		result = childIter.Build(node)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		Set iterator = childIter
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		GetChildAxisIterator = FUNCTIONFAILURE
		Exit Function
	End Function
	
	'@param
	' domNode : (DomNode) context
	' iterator : (CIterator) iterator
	Function GetAttributeAxisIterator(domNode As Variant, iterator As CIterator) As Integer
		On Error GoTo ErrorHandle
		
		Dim result As Integer
		Dim elemNode As NotesDOMElementNode
		Dim attrIter As New CDXLAttributesIterator
		
		Set elemNode = domNode
		
		result = attrIter.Build(elemNode.Attributes)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		Set iterator = attrIter
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		GetAttributeAxisIterator = FUNCTIONFAILURE
		Exit Function
	End Function
	
	'@param
	' contextNode : (DomNode)
	' id : (String)
	Function GetElementById(context As Variant, elementId As String, domNode As Variant) As Integer
		On Error GoTo ErrorHandle
		
		Dim contextNode As NotesDOMNode
		Dim childNode As NotesDOMNode
		Dim elemNode As NotesDOMElementNode
		
		Set contextNode = context
		Set childNode = contextNode.FirstChild
		
		Do Until childNode.IsNull = True
			If childNode.Nodetype = DOMNODETYPE_ELEMENT_NODE Then
				Set elemNode = childNode
				
				If elemNode.GetAttribute("id") = elementId Then
					Set domNode = elemNode
					Exit Do
				End If
			End If
			
			Set childNode = childNode.NextSibling
		Loop
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		GetElementById = FUNCTIONFAILURE
		Exit Function
	End Function
	
	Function GetParentNode(node As Variant, parent As Variant) As Integer
		On Error GoTo ErrorHandle
		
		Dim domNode As NotesDOMNode
		Dim parentNode As NotesDOMNode
		
		Set domNode = node
		
		Set parentNode = domNode.ParentNode
		
		If parentNode.IsNull = True Then
			Set parentNode = Nothing
		End If
		
		Set parent = parentNode
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		GetParentNode = FUNCTIONFAILURE
		Exit Function
	End Function
	
	'@param
	' domNode : (DomNode) TextNode | CDATASectionNode
	' strValue : (String) node text value
	Function GetTextStringValue(domNode As Variant, strValue As String) As Integer
		On Error GoTo ErrorHandle
		
		If Me.IsTextNode(domNode) Then
			Dim textNode As NotesDOMTextNode
			
			Set textNode = domNode
			
			strValue = textNode.NodeValue
			
		ElseIf Me.IsCdataSectionNode(domNode) Then
			Dim cdataNode As NotesDOMCDATASectionNode
			
			Set cdataNode = domNode
			
			strValue = cdataNode.NodeValue
			
		Else
			strValue = ""
		End If
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		GetTextStringValue = FUNCTIONFAILURE
		Exit Function
	End Function
	
	'@param
	' domNode : (DomNode) AttributeNode
	' strValue : (String) node value
	Function GetAttributeStringValue(domNode As Variant, strValue As String) As Integer
		On Error GoTo ErrorHandle
		
		Dim attrNode As NotesDOMAttributeNode
		
		Set attrNode = domNode
		
		strValue = attrNode.AttributeValue
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		GetAttributeStringValue = FUNCTIONFAILURE
		Exit Function
	End Function
	
	'@param
	' domNode : (DomNode) ElementNode
	' strValue : (String) node value
	Function GetElementStringValue(domNode As Variant, strValue As String) As Integer
		On Error GoTo ErrorHandle
		
		Dim elemNode As NotesDOMElementNode
		
		Set elemNode = domNode
		
		strValue = elemNode.NodeValue
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		GetElementStringValue = FUNCTIONFAILURE
		Exit Function
	End Function
	
	'@param
	' domNode : (DomNode) ProcessingInstructionNode
	' strTarget : (String) target
	Function GetProcessingInstructionTarget(domNode As Variant, strTarget As String) As Integer
		On Error GoTo ErrorHandle
		
		Dim piNode As NotesDOMProcessingInstructionNode
		
		Set piNode = domNode
		
		strTarget = piNode.Target
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		GetProcessingInstructionTarget = FUNCTIONFAILURE
		Exit Function
	End Function
	
	'@param
	' domNode : (DomNode) ProcessingInstructionNode
	' strData : (String) data
	Function GetProcessingInstructionData(domNode As Variant, strData As String) As Integer
		On Error GoTo ErrorHandle
		
		Dim piNode As NotesDOMProcessingInstructionNode
		
		Set piNode = domNode
		
		strData = piNode.Data
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		GetProcessingInstructionData = FUNCTIONFAILURE
		Exit Function
	End Function
	
	'@param
	' domNode : (DomNode) ProcessingInstructionNode
	' strData : (String) data
	Function GetCommentStringValue(domNode As Variant, strValue As String) As Integer
		On Error GoTo ErrorHandle
		
		Dim comNode As NotesDOMCommentNode
		
		Set comNode = domNode
		
		strValue = comNode.NodeValue
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		GetCommentStringValue = FUNCTIONFAILURE
		Exit Function
	End Function
	
	'@param
	' strPrefix : (String) prefix
	' context : (Variant) DomNode
	Function TranslateNamespacePrefixToUri(strPrefix As String, context As Variant, strURI As String) As Integer
		On Error GoTo ErrorHandle
		
		Dim domNode As NotesDOMNode
		Dim elemNode As NotesDOMElementNode
		
		If context IsA "NotesDomElementNode" Then
			Set elemNode = context
		ElseIf context IsA "NotesDomTextNode" Then
			Set domNode = context
			Set elemNode = domNode.ParentNode
		ElseIf context IsA "NotesDomAttributeNode" Then
			Set domNode = context
			Set elemNode = domNode.ParentNode
			'ElseIf context IsA "XPathNamespace" Then
			'	Set domNode = context
			'	Set elemNode = domNode.ParentNode
		ElseIf context IsA "NotesDomCommentNode" Then
			Set domNode = context
			Set elemNode = domNode.ParentNode
		ElseIf context IsA "NotesDOMProcessingInstructionNode" Then
			Set domNode = context
			Set elemNode = domNode.ParentNode
		End If
		
		If Not elemNode Is Nothing Then
			strURI = elemNode.NamespaceURI
		End If
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		TranslateNamespacePrefixToUri = FUNCTIONFAILURE
		Exit Function
	End Function
	
	'@param
	' domNode : (Variant) ElementNode
	' strName : (String) element name
	Function GetElementName(domNode As Variant, strName As String) As Integer
		On Error GoTo ErrorHandle
		
		Dim elemNode As NotesDOMElementNode
		
		Set elemNode = domNode
		
		strName = elemNode.NodeName
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		GetElementName = FUNCTIONFAILURE
		Exit Function
	End Function
	
	'@param
	' domNode : (Variant) ElementNode
	' strURI : (String) element NamespaceURI
	Function GetElementNamespaceURI(domNode As Variant, strURI As String) As Integer
		On Error GoTo ErrorHandle
		
		Dim elemNode As NotesDOMElementNode
		
		Set elemNode = domNode
		
		strURI = elemNode.NamespaceUri
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		GetElementNamespaceURI = FUNCTIONFAILURE
		Exit Function
	End Function
	
	'@param
	' domNode : (Variant) ElementNode
	' strQName : (String) element name
	Function GetElementQName(domNode As Variant, strQName As String) As Integer
		On Error GoTo ErrorHandle
		
		Dim elemNode As NotesDOMElementNode
		Dim strPrefix As String
		
		Set elemNode = domNode
		
		strPrefix = elemNode.Prefix
		strQName = elemNode.NodeName
		
		If Len(strPrefix) &gt; 0 Then
			strQName = strPrefix &amp; ":" &amp; strQName
		End If
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		GetElementQName = FUNCTIONFAILURE
		Exit Function
	End Function
	
	'@param
	' domNode : (Variant) AttributeNode
	' strName : (String) Attribute name
	Function GetAttributeName(domNode As Variant, strName As String) As Integer
		On Error GoTo ErrorHandle
		
		Dim attrNode As NotesDOMAttributeNode
		
		Set attrNode = domNode
		
		strName = attrNode.Attributename
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		GetAttributeName = FUNCTIONFAILURE
		Exit Function
	End Function
	
	'@param
	' domNode : (Variant) AttributeNode
	' strURI : (String) Attribute URI
	Function GetAttributeNamespaceURI(domNode As Variant, strURI As String) As Integer
		On Error GoTo ErrorHandle
		
		Dim attrNode As NotesDOMAttributeNode
		
		Set attrNode = domNode
		
		strURI = attrNode.Namespaceuri
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		GetAttributeNamespaceURI = FUNCTIONFAILURE
		Exit Function
	End Function
	
	'@param
	' attrNode : (DomNode)
	' strAttrQName (@return): (String) attribute QName
	Function GetAttributeQName(domNode As Variant, strAttrQName As String) As Integer
		On Error GoTo ErrorHandle
		
		Dim attrNode As NotesDOMAttributeNode
		Dim strPrefix As String
		
		Set attrNode = domNode
		
		strPrefix = attrNode.Prefix
		strAttrQName = attrNode.NamespaceUri
		
		If Len(strPrefix) &gt; 0 Then
			strAttrQName = strPrefix &amp; strAttrQName
		End If
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		GetAttributeQName = FUNCTIONFAILURE
		Exit Function
	End Function
	
	'@param
	' domNode : (DomNode)
	'@return : Boolean
	Public Property Get pIsElementNode(domNode As Variant) As Boolean
		On Error GoTo ErrorHandle
		
		pIsElementNode = (domNode.NodeType = DOMNODETYPE_ELEMENT_NODE)
		
		Exit Property
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Property
	End Property
	
	'@param
	' domNode : (NotesDomNode)
	'@return : Boolean
	Function IsAttributeNode(domNode As Variant) As Boolean
		On Error GoTo ErrorHandle
		
		IsAttributeNode = (domNode.NodeType = DOMNODETYPE_ATTRIBUTE_NODE)
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Function
	End Function
	
	'@param
	' domNode : (NotesDomNode)
	'@return : Boolean
	Function IsTextNode(domNode As Variant) As Boolean
		On Error GoTo ErrorHandle
		
		IsTextNode = (domNode.NodeType = DOMNODETYPE_TEXT_NODE)
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Function
	End Function
	
	'@param
	' domNode : (NotesDomNode)
	'@return : Boolean
	Function IsCdataSectionNode(domNode As Variant) As Boolean
		On Error GoTo ErrorHandle
		
		IsCdataSectionNode = (domNode.NodeType = DOMNODETYPE_CDATASECTION_NODE)
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Function
	End Function
	
	'@param
	' domNode : (NotesDomNode)
	'@return : Boolean
	Function IsEntityReferenceNode(domNode As Variant) As Boolean
		On Error GoTo ErrorHandle
		
		IsEntityReferenceNode = (domNode.NodeType = DOMNODETYPE_ENTITYREFERENCE_NODE)
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Function
	End Function
	
	'@param
	' domNode : (NotesDomNode)
	'@return : Boolean
	Function IsEntityNode(domNode As Variant) As Boolean
		On Error GoTo ErrorHandle
		
		IsEntityNode = (domNode.NodeType = DOMNODETYPE_ENTITY_NODE)
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Function
	End Function
	
	'@param
	' domNode : (NotesDomNode)
	'@return : Boolean
	Function IsProcessInginStructionNode(domNode As Variant) As Boolean
		On Error GoTo ErrorHandle
		
		IsProcessInginStructionNode = (domNode.NodeType = DOMNODETYPE_PROCESSINGINSTRUCTION_NODE)
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Function
	End Function
	
	'@param
	' domNode : (NotesDomNode)
	'@return : Boolean
	Function IsCommentNode(domNode As Variant) As Boolean
		On Error GoTo ErrorHandle
		
		IsCommentNode = (domNode.NodeType = DOMNODETYPE_COMMENT_NODE)
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Function
	End Function
	
	'@param
	' domNode : (NotesDomNode)
	'@return : Boolean
	Function IsDocumentNode(domNode As Variant) As Boolean
		On Error GoTo ErrorHandle
		
		IsDocumentNode = (domNode.NodeType = DOMNODETYPE_DOCUMENT_NODE)
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Function
	End Function
	
	'@param
	' domNode : (NotesDomNode)
	'@return : Boolean
	Function IsDocumentTypeNode(domNode As Variant) As Boolean
		On Error GoTo ErrorHandle
		
		IsDocumentTypeNode = (domNode.NodeType = DOMNODETYPE_DOCUMENTTYPE_NODE)
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Function
	End Function
	
	'@param
	' domNode : (NotesDomNode)
	'@return : Boolean
	Function IsDocumentFragmentNode(domNode As Variant) As Boolean
		On Error GoTo ErrorHandle
		
		IsDocumentFragmentNode = (domNode.NodeType = DOMNODETYPE_DOCUMENTFRAGMENT_NODE)
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Function
	End Function
	
	'@param
	' domNode : (NotesDomNode)
	'@return : Boolean
	Function IsNotationNode(domNode As Variant) As Boolean
		On Error GoTo ErrorHandle
		
		IsNotationNode = (domNode.NodeType = DOMNODETYPE_NOTATION_NODE)
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Function
	End Function
	
	'@param
	' domNode : (NotesDomNode)
	'@return : Boolean
	Function IsXmlDeclNode(domNode As Variant) As Boolean
		On Error GoTo ErrorHandle
		
		IsXmlDeclNode = (domNode.NodeType = DOMNODETYPE_XMLDECL_NODE)
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Error Err, Error
		Exit Function
	End Function
	
End Class
Class CDXLChildNodeSiblingIterator As CIterator
	
	Function Build(node As NotesDOMNode) As Integer
		On Error GoTo ErrorHandle
		
		Dim childNode As NotesDOMNode
		
		Set Me.pNode = node
		
		Set childNode = node.FirstChild
		
		If childNode.IsNull = True Then
			Set Me.pChildNode = Nothing
		Else
			Set Me.pChildNode = childNode
		End If
		
		Me.pPos = 0
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		Build = FUNCTIONFAILURE
		Exit Function
	End Function
	
	Property Get HasNext As Boolean
		HasNext = (Me.pPos &lt; Me.pNode.NumberOfChildNodes)
	End Property
	
	Function GetNext(elem As Variant) As Integer
		On Error GoTo ErrorHandle
		
		Dim childNode As NotesDOMNode
		Dim pos As Long
		
		Set childNode = Me.pChildNode
		Set childNode = childNode.NextSibling
		
		If childNode.IsNull = True Then
			Set childNode = Nothing
		End If
		
		Set Me.pChildNode = childNode
		
		pos = Me.pPos
		pos = pos + 1
		Me.pPos = pos
		
		Set elem = childNode
		
		Exit Function
ErrorHandle:
		Call SetErrorObjectOnClass(Err, Error, Me)
		GetNext = FUNCTIONFAILURE
		Exit Function
	End Function
	
	'--private
	Private Property Get pPos As Long
		pPos = Me.Members("pPos")
	End Property
	Private Property Set pPos As Long
		Me.Members("pIdx") = pPos
	End Property
	
	Private Property Get pNode As NotesDOMNode
		Set pNode = Me.Members("pNode")
	End Property
	Private Property Set pNode As NotesDOMNode
		Set Me.Members("pNode") = pNode
	End Property
	
	Private Property Get pChildNode As NotesDOMNode
		Set pChildNode = Me.Members("pChildNode")
	End Property
	Private Property Set pChildNode As NotesDOMNode
		Set Me.Members("pChildNode") = pChildNode
	End Property
	
End Class</lotusscript></code></scriptlibrary>

<agent name='(イベント)\(DBプロパティ更新)' alias='UpdateDBProperty' hide='v3' publicaccess='false'
 designerversion='8.5.3'>
<noteinfo noteid='7592' unid='6CE19464F05508524925833800025CB2' sequence='49'>
<created><datetime>20181101T092548,02+09</datetime></created>
<modified><datetime>20181211T164448,93+09</datetime></modified>
<revised><datetime>20181211T164448,92+09</datetime></revised>
<lastaccessed><datetime>20181211T164448,93+09</datetime></lastaccessed>
<addedtofile><datetime>20181101T092548,09+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby>
<wassignedby><name>CN=Administrator/O=Comture</name></wassignedby>
<designchange><datetime>20181211T164448,90+09</datetime></designchange>
<trigger type='actionsmenu'/>
<documentset type='selected'/><code event='options'><lotusscript>Option Public
Option Declare
Use "DbToolLib"
Use "ToolsLib"
Use "NotesUICommonLib"

</lotusscript></code><code event='initialize'><lotusscript>Sub Initialize
	Call SetProcess("*AG - UpdateDbProperty")
	Call Main()
End Sub

</lotusscript></code><code event='Main'><lotusscript>Sub Main()
	On Error GoTo ErrorHandle
	
	Dim session As New NotesSession
	Dim curDB As NotesDatabase
	
	Dim unpro As NotesDocumentCollection
	Dim doc As NotesDocument
	
	Set curDB = session.Currentdatabase
	Set unpro = curDB.Unprocesseddocuments
	Set doc = unpro.Getfirstdocument()
	
	If StrCompare(doc.Form(0), FN_DbInfoDoc, 1) = 0 Then
		
		Dim result As Integer
		Dim dbInfo As CDbInfo
		Dim db As NotesDatabase
		Dim filePath As String
		Dim aryFilePath As Variant
		Dim fileName As String
		
		result = GetDbInfo(curDB, doc, dbInfo)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		result = dbInfo.GetDatabase(db)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		If StrCompare(db.Title, doc.DbTitle(0), 0) &lt;&gt; 0 Then
			db.Title = doc.DbTitle(0)
		End If
		
		'必ず最後にやる
		filePath = doc.DbFilePath(0)
		
		If GetDrive(filePath) = "" Then
		Else
			aryFilePath = Split(filePath, "\")
			fileName = aryFilePath(UBound(aryFilePath))
			
			If fileName Like "*.n?f" Then
				If StrCompare(db.FileName, fileName, 1) &lt;&gt; 0 Then
					aryFilePath(UBound(aryFilePath)) = db.FileName
					filePath = Join(aryFilePath, "\")
					
					aryFilePath(UBound(aryFilePath)) = fileName
					fileName = Join(aryFilePath, "\")
					
					Set dbInfo = Nothing
					Set db = Nothing
					
					If ReNameFile(filePath, fileName) = False Then
						Error USERERR, Error
					End If
				End If
			End If
		End If
		
	End If
	
	Exit Sub
ErrorHandle:
	Call SetErrorObject(Err, Error)
	Call Messagebox_Error(GetErrorMessage(), "")
	Exit Sub
End Sub</lotusscript></code>
<rundata processeddocs='0' exitcode='0' agentdata='297E580E515EA1C749258360002A917E'>
<agentmodified><datetime>20181211T164448,93+09</datetime></agentmodified>
<agentrun><datetime>20190513T112401,56+09</datetime></agentrun>
<runlog>エージェント (イベント)\(DBプロパティ更新)|UpdateDBProperty の 2019/05/13 11:24:01 での実行が開始しました。
選択文書で実行します。 合計 1
1 文書が検索条件に一致しました。
LotusScript を実行しました
エージェント (イベント)\(DBプロパティ更新)|UpdateDBProperty の実行が終了しました。(2019/05/13 11:24:01)
</runlog></rundata></agent>

<agentdata>
<noteinfo noteid='75be' unid='780E687E8D2E3E13492583380002FF04' sequence='1'>
<created><datetime>20181101T093243,56+09</datetime></created>
<modified><datetime>20181101T093243,57+09</datetime></modified>
<revised><datetime>20181101T093243,56+09</datetime></revised>
<lastaccessed><datetime>20181101T093243,57+09</datetime></lastaccessed>
<addedtofile><datetime>20181101T093243,57+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='75ea' unid='5264BB0FA021AA1B492583600029584B' sequence='1'>
<created><datetime>20181211T163135,79+09</datetime></created>
<modified><datetime>20181211T163135,80+09</datetime></modified>
<revised><datetime>20181211T163135,79+09</datetime></revised>
<lastaccessed><datetime>20181211T163135,80+09</datetime></lastaccessed>
<addedtofile><datetime>20181211T163135,80+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='75fa' unid='DFC12267B8A28885492583600029A54F' sequence='1'>
<created><datetime>20181211T163452,95+09</datetime></created>
<modified><datetime>20181211T163452,96+09</datetime></modified>
<revised><datetime>20181211T163452,95+09</datetime></revised>
<lastaccessed><datetime>20181211T163452,96+09</datetime></lastaccessed>
<addedtofile><datetime>20181211T163452,96+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='7602' unid='97D7002ACB50BBE9492583600029D326' sequence='1'>
<created><datetime>20181211T163650,30+09</datetime></created>
<modified><datetime>20181211T163650,31+09</datetime></modified>
<revised><datetime>20181211T163650,30+09</datetime></revised>
<lastaccessed><datetime>20181211T163650,31+09</datetime></lastaccessed>
<addedtofile><datetime>20181211T163650,31+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='7612' unid='03D429BE7D75A008492583600029F666' sequence='1'>
<created><datetime>20181211T163820,54+09</datetime></created>
<modified><datetime>20181211T163820,57+09</datetime></modified>
<revised><datetime>20181211T163820,56+09</datetime></revised>
<lastaccessed><datetime>20181211T163820,57+09</datetime></lastaccessed>
<addedtofile><datetime>20181211T163820,57+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='761a' unid='65BCF1DBF972990649258360002A1D0D' sequence='1'>
<created><datetime>20181211T163959,49+09</datetime></created>
<modified><datetime>20181211T163959,50+09</datetime></modified>
<revised><datetime>20181211T163959,49+09</datetime></revised>
<lastaccessed><datetime>20181211T163959,50+09</datetime></lastaccessed>
<addedtofile><datetime>20181211T163959,50+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='7626' unid='297E580E515EA1C749258360002A917E' sequence='1'>
<created><datetime>20181211T164457,58+09</datetime></created>
<modified><datetime>20181211T164457,59+09</datetime></modified>
<revised><datetime>20181211T164457,58+09</datetime></revised>
<lastaccessed><datetime>20181211T164457,59+09</datetime></lastaccessed>
<addedtofile><datetime>20181211T164457,59+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby></agentdata>

<agent name='(ツール)\(データベースをデザイナーで開く)' alias='OpenDesigner' hide='v3' publicaccess='false'
 designerversion='8.5.3' restrictions='unrestricted'>
<noteinfo noteid='7656' unid='576D8832D40598A74925837D0028A6F9' sequence='11'>
<created><datetime>20190109T162401,85+09</datetime></created>
<modified><datetime>20190110T153939,84+09</datetime></modified>
<revised><datetime>20190110T153939,83+09</datetime></revised>
<lastaccessed><datetime>20190110T153939,84+09</datetime></lastaccessed>
<addedtofile><datetime>20190109T162402,11+09</datetime></addedtofile></noteinfo>
<updatedby><name>CNAP PRODUCTS</name></updatedby>
<designchange><datetime>20190110T153939,82+09</datetime></designchange>
<trigger type='agentlist'/>
<documentset type='selected'/><code event='options'><lotusscript>Option Public
Option Declare
Use "NotesUICommonLib"
Use "DBToolLib"

</lotusscript></code><code event='initialize'><lotusscript>Sub Initialize
	Call SetProcess("*AG - OpenDesigner")
	Call Main()
End Sub

</lotusscript></code><code event='Main'><lotusscript>Sub Main()
	On Error GoTo ErrorHandle
	
	Dim workSpace As New NotesUIWorkspace
	Dim curUiView As NotesUIView
	Dim curDB As NotesDatabase
	Dim unpro As NotesDocumentCollection
	Dim doc As NotesDocument
	
	Set curUIView = workSpace.CurrentView
	
	If curUIView Is Nothing Then
		Set curDB = workSpace.CurrentDatabase.Database
		Set unpro = curDB.UnprocessedDocuments
	Else
		Set curDB = curUIView.View.Parent
		'Set unpro = curUIView.Documents
		Set unpro = curDB.UnprocessedDocuments
	End If
	
	If unpro.Count = 0 Then
		Exit Sub
	End If
	Set doc = unpro.GetFirstDocument()
	
	Dim result As Integer
	Dim dbInfo As CDbInfo
	Dim db As NotesDatabase
	
	result = GetDbInfo(curDB, doc, dbInfo)
	If result = FUNCTIONFAILURE Then
		Error USERERR, Error
	End If
	
	result = dbInfo.GetDatabase(db)
	If result = FUNCTIONFAILURE Then
		Error USERERR, Error
	End If
	
	Dim objName As NotesName
	Dim url As String
	Dim pid As Variant
	
	Set objName = New NotesName(db.Server)
	
	url = "notes://" &amp; objName.Common &amp; "/__" &amp; db.ReplicaID &amp; ".nsf/"
	
	pid = Shell(|designer.exe | &amp; url)
	
ExitTag:
	On Error Resume Next
	If Not curUIView Is Nothing Then Call curUIView.DeselectAll()
	Call workSpace.ViewRefresh()
	
	Exit Sub
ErrorHandle:
	Call SetErrorObject(Err, Error)
	Call Messagebox_Error(GetErrorMessage(), "")
	GoTo ExitTag
End Sub</lotusscript></code>
<rundata processeddocs='0' exitcode='0' agentdata='3B5D66CAD49574FC4925837D00295C21'>
<agentmodified><datetime>20190110T153939,84+09</datetime></agentmodified>
<agentrun><datetime>20190605T091550,45+09</datetime></agentrun>
<runlog>エージェント (ツール)\(データベースをデザイナーで開く)|OpenDesigner の 2019/06/05 09:15:50 での実行が開始しました。
選択文書で実行します。 合計 1
1 文書が検索条件に一致しました。
LotusScript を実行しました
エージェント (ツール)\(データベースをデザイナーで開く)|OpenDesigner の実行が終了しました。(2019/06/05 09:15:50)
</runlog></rundata></agent>

<agent name='(ツール)\(データベースの署名の更新)' alias='UpdateSign' hide='v3' publicaccess='false'
 designerversion='8.5.3' restrictions='unrestricted'>
<noteinfo noteid='767a' unid='77878877008D13A84925837D00297DCF' sequence='79'>
<created><datetime>20190109T163311,83+09</datetime></created>
<modified><datetime>20190110T153949,47+09</datetime></modified>
<revised><datetime>20190110T153949,46+09</datetime></revised>
<lastaccessed><datetime>20190110T153949,47+09</datetime></lastaccessed>
<addedtofile><datetime>20190109T163311,94+09</datetime></addedtofile></noteinfo>
<updatedby><name>CNAP PRODUCTS</name></updatedby>
<designchange><datetime>20190110T153949,44+09</datetime></designchange>
<trigger type='agentlist'/>
<documentset type='selected'/><code event='options'><lotusscript>Option Public
Option Declare
Use "NotesUICommonLib"
Use "DBToolLib"

</lotusscript></code><code event='initialize'><lotusscript>Sub Initialize
	Call SetProcess("*AG - OpenDesigner")
	Call Main()
End Sub

</lotusscript></code><code event='Main'><lotusscript>Sub Main()
	On Error GoTo ErrorHandle
	
	Dim result As Integer
	Dim workSpace As New NotesUIWorkspace
	Dim curUiView As NotesUIView
	Dim curDB As NotesDatabase
	Dim unpro As NotesDocumentCollection
	Dim doc As NotesDocument
	
	Set curUIView = workSpace.CurrentView
	
	If curUIView Is Nothing Then
		Set curDB = workSpace.CurrentDatabase.Database
		Set unpro = curDB.UnprocessedDocuments
	Else
		Set curDB = curUIView.View.Parent
		'Set unpro = curUIView.Documents
		Set unpro = curDB.UnprocessedDocuments
	End If
	
	If unpro.Count = 0 Then
		Exit Sub
	End If
	Set doc = unpro.GetFirstDocument()
	
	Dim dlgDoc As NotesDocument
	
	Set dlgDoc = curDB.Createdocument()
	
	If False = workSpace.Dialogbox("SubSign", True, True, False, False, False, False, "データベースの署名", dlgDoc, True, False, False) Then
		Exit Sub
	End If
	
	If dlgDoc.Getitemvalue("IsOnServer")(0) = "1" Then
		result = SignOnServer(curDB, unpro, dlgDoc)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
	Else
		result = SignOnLocal(curDB, unpro, dlgDoc)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
	End If
	
ExitTag:
	On Error Resume Next
	If Not curUIView Is Nothing Then Call curUIView.DeselectAll()
	Call workSpace.ViewRefresh()
	
	Exit Sub
ErrorHandle:
	Call SetErrorObject(Err, Error)
	Call Messagebox_Error(GetErrorMessage(), "")
	GoTo ExitTag
End Sub

</lotusscript></code><code event='SignOnLocal'><lotusscript>Function SignOnLocal(curDB As NotesDatabase, unpro As NotesDocumentCollection, dlgDoc As NotesDocument) As Integer
	On Error GoTo ErrorHandle
	
	Dim result As Integer
	Dim doc As NotesDocument
	
	Set doc = unpro.Getfirstdocument()
	
	Dim dbInfo As CDbInfo
	Dim db As NotesDatabase
	Dim dbServer As String
	Dim dbFilePath As String
	Dim dbTitle As String
	
	Dim intType As Integer
	Dim bolSignFlg As Boolean
	Dim noteID As String
	Dim bolNoteIDFlg As Boolean
	
	Dim max As Integer
	Dim count As Integer
	
	Select Case dlgDoc.Getitemvalue("DocumentType")(0)
		Case "1" 'すべての設計文書|1
			intType = DBSIGN_DOC_ALL
			
		Case "2" 'すべてのデータ文書|2
			intType = DBSIGN_DOC_DATA
			
		Case "3" '指定したすべての文書|3
			Select Case dlgDoc.Getitemvalue("DesignType")(0)
			Case "1" 'フォーム|1
				intType = DBSIGN_DOC_FORM
			Case "2" 'ビュー|2
				intType = DBSIGN_DOC_VIEW
			Case "3" 'アイコン|3
				intType = DBSIGN_DOC_ICON
			Case "4" 'ACL|4
				intType = DBSIGN_DOC_ACL
			Case "5" 'ヘルプ|5
				intType = DBSIGN_DOC_HELP
			Case "6" 'エージェント|6
				intType = DBSIGN_DOC_AGENT
			Case "7" '複製式|7
				intType = DBSIGN_DOC_REPLFORMULA
			Case "8" '共有フィールド
				intType = DBSIGN_DOC_SHAREDFIELD
		End Select
			
		Case  "4" '特定のNoteID|4
			intType = -1
			noteID = dlgDoc.Getitemvalue("NoteID")(0)
			bolNoteIDFlg = True
	End Select
	
	If dlgDoc.Getitemvalue("IsExistingSigsOnly")(0) = "" Then
		bolSignFlg = False
	Else
		bolSignFlg = True
	End If
	
	max = unpro.Count
	count = 1
	
	Do Until doc Is Nothing
		result = GetDbInfo(curDB, doc, dbInfo)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		result = dbInfo.GetDatabase(db)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		dbServer = db.Server
		dbFilePath = db.Filepath
		dbTitle = db.Title
		
		Print "[" &amp; dbTitle &amp; "(" &amp; dbServer &amp; "!!" &amp; dbFilePath &amp; ")] 署名を更新中・・・" &amp; count &amp; "/" &amp; max
		
		If intType = -1 Then
			Call db.Sign(DBSIGN_DOC_ALL, bolSignFlg, noteID, bolNoteIDFlg)
			Call db.Sign(DBSIGN_DOC_DATA, bolSignFlg, noteID, bolNoteIDFlg)
		Else
			Call db.Sign(intType, bolSignFlg)
		End If
		
		Set doc = unpro.Getnextdocument(doc)
		count = count + 1
	Loop
	
	Exit Function
ErrorHandle:
	Call SetErrorObject(Err, Error)
	SignOnLocal = FUNCTIONFAILURE
	Exit Function
End Function

</lotusscript></code><code event='SignOnServer'><lotusscript>Function SignOnServer(curDB As NotesDatabase, unpro As NotesDocumentCollection, dlgDoc As NotesDocument) As Integer
	On Error GoTo ErrorHandle
	
	Dim result As Integer
	Dim session As NotesSession
	Dim adminp As NotesAdministrationProcess
	Dim doc As NotesDocument
	
	Set session = curDB.Parent
	Set adminp = session.Createadministrationprocess(curDB.Server)
	Set doc = unpro.Getfirstdocument()
	
	Dim dbInfo As CDbInfo
	Dim db As NotesDatabase
	Dim dbServer As String
	Dim dbFilePath As String
	Dim dbTitle As String
	
	Dim intType As Integer
	Dim bolSignFlg As Boolean
	
	Dim noteID As String
	
	Dim max As Integer
	Dim count As Integer
	
	intType = DBSIGN_DOC_ALL
	
	If dlgDoc.Getitemvalue("IsExistingSigsOnly")(0) = "" Then
		bolSignFlg = False
	Else
		bolSignFlg = True
	End If
	
	max = unpro.Count
	count = 1
	
	Do Until doc Is Nothing
		
		result = GetDbInfo(curDB, doc, dbInfo)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		result = dbInfo.GetDatabase(db)
		If result = FUNCTIONFAILURE Then
			Error USERERR, Error
		End If
		
		dbServer = db.Server
		dbFilePath = db.Filepath
		dbTitle = db.Title
		
		Print "[" &amp; dbTitle &amp; "(" &amp; dbServer &amp; "!!" &amp; dbFilePath &amp; ")] 署名の更新をリクエスト中・・・" &amp; count &amp; "/" &amp; max
		noteID = adminp.Signdatabasewithserverid(dbServer, dbFilePath, bolSignFlg)
		
		Set doc = unpro.Getnextdocument(doc)
		count = count + 1
	Loop
	
	Exit Function
ErrorHandle:
	Call SetErrorObject(Err, Error)
	SignOnServer = FUNCTIONFAILURE
	Exit Function
End Function</lotusscript></code>
<rundata processeddocs='0' exitcode='0' agentdata='5D1A48F841BBEC1E4925837E002445A5'>
<agentmodified><datetime>20190110T113623,19+09</datetime></agentmodified>
<agentrun><datetime>20190110T153808,89+09</datetime></agentrun>
<runlog>エージェント (ツール)\(署名の更新)|UpdateSign の 2019/01/10 15:37:10 での実行が開始しました。
選択文書で実行します。 合計 17
17 文書が検索条件に一致しました。
LotusScript を実行しました
エージェント (ツール)\(署名の更新)|UpdateSign の実行が終了しました。(2019/01/10 15:38:08)
</runlog></rundata></agent>

<subform name='(署名)' alias='SubSign' designerversion='8.5.3' renderpassthrough='true'>
<noteinfo noteid='7682' unid='76C27DA24B9693044925837D0029ACD1' sequence='80'>
<created><datetime>20190109T163512,17+09</datetime></created>
<modified><datetime>20190110T101704,21+09</datetime></modified>
<revised><datetime>20190110T101704,19+09</datetime></revised>
<lastaccessed><datetime>20190110T101704,21+09</datetime></lastaccessed>
<addedtofile><datetime>20190109T163512,32+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=comture</name></updatedby><code event='queryrecalc'><lotusscript
>Sub Queryrecalc(Source As Notesuidocument, Continue As Variant)
	
	Dim curDoc As NotesDocument
	Dim curField As String
	
	Set curDoc = Source.Document
	curField = Source.CurrentField
	
	Select Case curField
	Case "IsOnServer_1"
		Call curDoc.ReplaceItemValue("IsOnServer_2", "")
		
		Call curDoc.ReplaceItemValue("DocumentType_1", "1")
		Call curDoc.ReplaceItemValue("DocumentType_2", "")
		Call curDoc.ReplaceItemValue("DocumentType_3", "")
		Call curDoc.ReplaceItemValue("DocumentType_4", "")
		
		Call curDoc.ReplaceItemValue("DesignType", "")
		Call curDoc.ReplaceItemValue("NoteID", "")
		
		Call curDoc.ReplaceItemValue("IsOnServer", curDoc.GetItemValue("IsOnServer_1"))
		Call curDoc.ReplaceItemValue("DocumentType", curDoc.GetItemValue("DocumentType_1"))
		
	Case "IsOnServer_2"
		Call curDoc.ReplaceItemValue("IsOnServer_1", "")
		
		Call curDoc.ReplaceItemValue("DocumentType_1", "1")
		Call curDoc.ReplaceItemValue("DocumentType_2", "")
		Call curDoc.ReplaceItemValue("DocumentType_3", "")
		Call curDoc.ReplaceItemValue("DocumentType_4", "")
		
		Call curDoc.ReplaceItemValue("DesignType", "")
		Call curDoc.ReplaceItemValue("NoteID", "")
		
		Call curDoc.ReplaceItemValue("IsExistingSigsOnly", "")
		
		Call curDoc.ReplaceItemValue("IsOnServer", curDoc.GetItemValue("IsOnServer_2"))
		Call curDoc.ReplaceItemValue("DocumentType", curDoc.GetItemValue("DocumentType_1"))
		
	Case "DocumentType_1"
		Call curDoc.ReplaceItemValue("DocumentType_2", "")
		Call curDoc.ReplaceItemValue("DocumentType_3", "")
		Call curDoc.ReplaceItemValue("DocumentType_4", "")
		
		Call curDoc.ReplaceItemValue("DesignType", "")
		Call curDoc.ReplaceItemValue("NoteID", "")
		
		Call curDoc.ReplaceItemValue("DocumentType", curDoc.GetItemValue(curField))
		
	Case "DocumentType_2"
		Call curDoc.ReplaceItemValue("DocumentType_1", "")
		Call curDoc.ReplaceItemValue("DocumentType_3", "")
		Call curDoc.ReplaceItemValue("DocumentType_4", "")
		
		Call curDoc.ReplaceItemValue("DesignType", "")
		Call curDoc.ReplaceItemValue("NoteID", "")
		
		Call curDoc.ReplaceItemValue("DocumentType", curDoc.GetItemValue(curField))
		
	Case "DocumentType_3"
		Call curDoc.ReplaceItemValue("DocumentType_1", "")
		Call curDoc.ReplaceItemValue("DocumentType_2", "")
		Call curDoc.ReplaceItemValue("DocumentType_4", "")
		
		Call curDoc.ReplaceItemValue("NoteID", "")
		
		Call curDoc.ReplaceItemValue("DocumentType", curDoc.GetItemValue(curField))
		
	Case "DocumentType_4"
		Call curDoc.ReplaceItemValue("DocumentType_1", "")
		Call curDoc.ReplaceItemValue("DocumentType_2", "")
		Call curDoc.ReplaceItemValue("DocumentType_3", "")
		
		Call curDoc.ReplaceItemValue("DesignType", "")
		
		Call curDoc.ReplaceItemValue("DocumentType", curDoc.GetItemValue(curField))
		
	End Select
	
End Sub</lotusscript></code>
<body><richtext>
<pardef id='1' hide='notes web mobile'/>
<par def='1'><run><font color='gray'/></run><run><font color='gray'/><field
 type='text' kind='computedfordisplay' name='Dsp_ServerName'><code event='defaultvalue'><formula
>@Subset(@DbName;1)</formula></code></field></run><compositedata type='98'
 prevtype='65418' nexttype='222' afterparcount='10' containertype='65418'
 aftercontainercount='1' afterbegincount='3'>
Yg4BAIQAAAAAAAAAAAA=
</compositedata><run><font color='gray'/></run></par>
<table widthtype='fixedleft' columnspacing='0.3542in' refwidth='3.8576in'><tablecolumn
 width='3.1493in'/>
<tablerow>
<tablecell borderwidth='0px' bgcolor='system'>
<pardef id='3' keepwithnext='true' keeptogether='true'/>
<par def='3'/>
<par def='3'>現在のIDで署名します</par>
<par def='3'/>
<table widthtype='fitmargins' leftmargin='0' rowspacing='0.0396in' columnspacing='0.0396in'
 refwidth='3.1389in'><border dropshadow='true' dropshadowwidth='1px'/><tablecolumn
 width='100%'/>
<tablerow>
<tablecell borderwidth='0px' bgcolor='#e1e1e1'>
<pardef id='4' keepwithnext='true' keeptogether='true'/>
<par def='4'>どちらのIDを使用しますか？</par></tablecell></tablerow></table>
<pardef id='5' hide='notes web mobile' keepwithnext='true' keeptogether='true'/>
<par def='5'><run><font color='gray'/></run><run><font color='gray'/><field
 borderstyle='none' type='text' kind='computedwhencomposed' name='IsOnServer'><keywords
 helperbutton='false' recalconchange='true' columns='1' ui='radiobutton'><textlist
><text>現在のユーザーID|0</text><text>現在のサーバーID|1</text></textlist></keywords><code
 event='defaultvalue'><formula>"0"</formula></code></field></run><compositedata
 type='98' prevtype='65418' nexttype='222' afterparcount='11' containertype='65418'
 aftercontainercount='1' afterbegincount='4'>
Yg4BAIQAAAAAAAAAAAA=
</compositedata><run><font color='gray'/></run></par>
<table widthtype='fitmargins' leftmargin='0' rowspacing='0.0396in' refwidth='3.1493in'><tablecolumn
 width='100%'/>
<tablerow>
<tablecell valign='center' borderwidth='0px'>
<par def='3'><field borderstyle='none' lookupeachchar='false' lookupaddressonrefresh='false'
 type='keyword' kind='editable' name='IsOnServer_1'><keywords helperbutton='false'
 recalconchange='true' columns='1' ui='radiobutton'><textlist><text>現在のユーザーID|0</text></textlist></keywords><code
 event='defaultvalue'><formula>"0"</formula></code></field></par>
<par def='3'><field borderstyle='none' lookupeachchar='false' lookupaddressonrefresh='false'
 type='keyword' kind='editable' name='IsOnServer_2'><keywords helperbutton='false'
 recalconchange='true' columns='1' ui='radiobutton'><textlist><text>現在のサーバーID|1</text></textlist></keywords><code
 event='inputenabled'><formula>Dsp_ServerName != ""</formula></code><code
 event='defaultvalue'><formula>""</formula></code></field><run><font color='red'/><computedtext
><code event='value'><formula>@If(Dsp_ServerName=""; "※サーバー名で署名できません"; "")</formula></code></computedtext></run></par></tablecell></tablerow></table>
<par def='3'/>
<table widthtype='fitmargins' leftmargin='0' rowspacing='0.0396in' columnspacing='0.0396in'
 refwidth='3.1389in'><border dropshadow='true' dropshadowwidth='1px'/><tablecolumn
 width='100%'/>
<tablerow>
<tablecell borderwidth='0px' bgcolor='#e1e1e1'>
<par def='4'>署名する設計要素はどれですか？</par></tablecell></tablerow></table>
<par def='5'><run><font color='gray'/></run><run><font color='gray'/><field
 borderstyle='none' type='text' kind='computedwhencomposed' name='DocumentType'><keywords
 helperbutton='false' columns='1' ui='radiobutton'><textlist><text>すべての設計文書|1</text><text
>すべてのデータ文書|2</text><text>指定したすべての文書|3</text><text>特定のNoteID|4</text></textlist></keywords><code
 event='defaultvalue'><formula>"1"</formula></code></field></run><compositedata
 type='98' prevtype='65418' nexttype='222' afterparcount='10' containertype='65418'
 aftercontainercount='1' afterbegincount='4'>
Yg4BAIQAAAAAAAAAAAA=
</compositedata><run><font color='gray'/></run></par>
<table widthtype='fitmargins' leftmargin='0' rowspacing='0.0396in' refwidth='3.1500in'><tablecolumn
 width='50%'/><tablecolumn width='50%'/>
<tablerow>
<tablecell valign='center' borderwidth='0px'>
<pardef id='6' keepwithnext='true' keeptogether='true'/>
<par def='6'><field borderstyle='none' lookupeachchar='false' lookupaddressonrefresh='false'
 type='keyword' kind='editable' name='DocumentType_1'><keywords helperbutton='false'
 recalconchange='true' columns='1' ui='radiobutton'><textlist><text>すべての設計文書|1</text></textlist></keywords><code
 event='defaultvalue'><formula>"1"</formula></code></field></par></tablecell>
<tablecell valign='center' borderwidth='0px'>
<pardef id='7' keepwithnext='true' keeptogether='true'/>
<par def='7'/></tablecell></tablerow>
<tablerow>
<tablecell valign='center' borderwidth='0px'>
<par def='6'><field borderstyle='none' lookupeachchar='false' lookupaddressonrefresh='false'
 type='keyword' kind='editable' name='DocumentType_2'><keywords helperbutton='false'
 recalconchange='true' columns='1' ui='radiobutton'><textlist><text>すべてのデータ文書|2</text></textlist></keywords><code
 event='inputenabled'><formula>IsOnServer="0"</formula></code><code event='defaultvalue'><formula
>""</formula></code></field></par></tablecell>
<tablecell valign='center' borderwidth='0px'>
<par def='7'/></tablecell></tablerow>
<tablerow>
<tablecell valign='center' borderwidth='0px'>
<par def='6'><field borderstyle='none' lookupeachchar='false' lookupaddressonrefresh='false'
 type='keyword' kind='editable' name='DocumentType_3'><keywords helperbutton='false'
 recalconchange='true' columns='1' ui='radiobutton'><textlist><text>指定したすべての文書|3</text></textlist></keywords><code
 event='inputenabled'><formula>IsOnServer="0"</formula></code><code event='defaultvalue'><formula
>""</formula></code></field></par></tablecell>
<tablecell valign='center' borderwidth='0px'>
<par def='7'><field usenotesstyle='false' height='0.1722in' width='1in' heighttype='proportional'
 multiline='true' borderstyle='none' lookupeachchar='false' lookupaddressonrefresh='false'
 type='keyword' kind='editable' name='DesignType'><keywords helperbutton='false'
 columns='1' ui='combobox'><textlist><text>フォーム|1</text><text>ビュー|2</text><text
>アイコン|3</text><text>ACL|4</text><text>ヘルプ|5</text><text>エージェント|6</text><text
>複製式|7</text><text>共有フィールド|8</text></textlist></keywords><code event='inputenabled'><formula
>DocumentType="3"</formula></code></field></par></tablecell></tablerow>
<tablerow>
<tablecell valign='center' borderwidth='0px'>
<par def='6'><field borderstyle='none' lookupeachchar='false' lookupaddressonrefresh='false'
 type='keyword' kind='editable' name='DocumentType_4'><keywords helperbutton='false'
 recalconchange='true' columns='1' ui='radiobutton'><textlist><text>特定のNoteID|4</text></textlist></keywords><code
 event='inputenabled'><formula>IsOnServer="0"</formula></code><code event='defaultvalue'><formula
>""</formula></code></field></par></tablecell>
<tablecell valign='center' borderwidth='0px'>
<par def='7'><field usenotesstyle='false' height='0.1722in' width='1in' heighttype='proportional'
 multiline='true' borderstyle='single' type='text' kind='editable' name='NoteID'><code
 event='inputenabled'><formula>DocumentType="4"</formula></code></field></par></tablecell></tablerow></table>
<par def='3'><field borderstyle='none' lookupeachchar='false' lookupaddressonrefresh='false'
 type='keyword' allowmultivalues='true' kind='editable' name='IsExistingSigsOnly'
 listinputseparators='comma' listdisplayseparator='comma'><keywords helperbutton='false'
 columns='1' ui='checkbox'><textlist><text>既存の署名のみ更新する|1</text></textlist></keywords><code
 event='defaultvalue'><formula>"1"</formula></code></field></par>
<par def='3'/>
<table widthtype='fitmargins' leftmargin='0' rowspacing='0.0396in' columnspacing='0.0396in'
 refwidth='3.1493in'><tablecolumn width='100%'/>
<tablerow>
<tablecell borderwidth='0px' bgcolor='#f7f7ff'>
<pardef id='8' keepwithnext='true' keeptogether='true'/>
<par def='8'><computedtext><code event='value'><formula>@If(IsOnServer="1";
"データベースは現在選択しているサーバーのバックグラウンドで署名されます。";
"データベースは現在使用している ID で署名されます。")</formula></code></computedtext></par></tablecell></tablerow></table></tablecell></tablerow></table>
<pardef id='2'/>
<par def='2'/></richtext></body>
<item name='$$ScriptName' summary='false' sign='true'><text>SubSign</text></item></subform>

<agentdata>
<noteinfo noteid='768e' unid='C686EEF5F68330B04925837D002BA759' sequence='1'>
<created><datetime>20190109T165648,89+09</datetime></created>
<modified><datetime>20190109T165648,90+09</datetime></modified>
<revised><datetime>20190109T165648,89+09</datetime></revised>
<lastaccessed><datetime>20190109T165648,90+09</datetime></lastaccessed>
<addedtofile><datetime>20190109T165648,90+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='7696' unid='34F6C55B23A115B74925837D002BB0A2' sequence='1'>
<created><datetime>20190109T165712,66+09</datetime></created>
<modified><datetime>20190109T165712,68+09</datetime></modified>
<revised><datetime>20190109T165712,67+09</datetime></revised>
<lastaccessed><datetime>20190109T165712,68+09</datetime></lastaccessed>
<addedtofile><datetime>20190109T165712,68+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='769e' unid='A928372329E32EDC4925837D002F534A' sequence='1'>
<created><datetime>20190109T173655,14+09</datetime></created>
<modified><datetime>20190109T173655,15+09</datetime></modified>
<revised><datetime>20190109T173655,14+09</datetime></revised>
<lastaccessed><datetime>20190109T173655,15+09</datetime></lastaccessed>
<addedtofile><datetime>20190109T173655,15+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='76a6' unid='9D35BA1C7FDDAB2C4925837D002FA64A' sequence='1'>
<created><datetime>20190109T174027,62+09</datetime></created>
<modified><datetime>20190109T174027,63+09</datetime></modified>
<revised><datetime>20190109T174027,62+09</datetime></revised>
<lastaccessed><datetime>20190109T174027,63+09</datetime></lastaccessed>
<addedtofile><datetime>20190109T174027,63+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='76e2' unid='FB1AC9DC2A42C2724925837E0006ACAA' sequence='1'>
<created><datetime>20190110T101254,18+09</datetime></created>
<modified><datetime>20190110T101254,19+09</datetime></modified>
<revised><datetime>20190110T101254,18+09</datetime></revised>
<lastaccessed><datetime>20190110T101254,19+09</datetime></lastaccessed>
<addedtofile><datetime>20190110T101254,19+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='76ea' unid='816AE9AEDF9F3B0D4925837E000811F2' sequence='1'>
<created><datetime>20190110T102808,82+09</datetime></created>
<modified><datetime>20190110T102808,83+09</datetime></modified>
<revised><datetime>20190110T102808,82+09</datetime></revised>
<lastaccessed><datetime>20190110T102808,83+09</datetime></lastaccessed>
<addedtofile><datetime>20190110T102808,83+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='772a' unid='25E4DE80A03F2B494925837E000E3E4E' sequence='1'>
<created><datetime>20190110T113534,54+09</datetime></created>
<modified><datetime>20190110T113534,55+09</datetime></modified>
<revised><datetime>20190110T113534,54+09</datetime></revised>
<lastaccessed><datetime>20190110T113534,55+09</datetime></lastaccessed>
<addedtofile><datetime>20190110T113534,55+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='773a' unid='0CEB35A53CBA566B4925837E001CDC83' sequence='1'>
<created><datetime>20190110T141514,59+09</datetime></created>
<modified><datetime>20190110T141514,60+09</datetime></modified>
<revised><datetime>20190110T141514,59+09</datetime></revised>
<lastaccessed><datetime>20190110T141514,60+09</datetime></lastaccessed>
<addedtofile><datetime>20190110T141514,60+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='774e' unid='5D1A48F841BBEC1E4925837E002445A5' sequence='1'>
<created><datetime>20190110T153611,25+09</datetime></created>
<modified><datetime>20190110T153611,26+09</datetime></modified>
<revised><datetime>20190110T153611,25+09</datetime></revised>
<lastaccessed><datetime>20190110T153611,26+09</datetime></lastaccessed>
<addedtofile><datetime>20190110T153611,26+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='7756' unid='AA0BDE6E795E53C6492583A700083A9D' sequence='1'>
<created><datetime>20190220T102952,93+09</datetime></created>
<modified><datetime>20190220T102952,94+09</datetime></modified>
<revised><datetime>20190220T102952,93+09</datetime></revised>
<lastaccessed><datetime>20190220T102952,94+09</datetime></lastaccessed>
<addedtofile><datetime>20190220T102952,94+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='775e' unid='3DA2A0ED6BB0CA9A492583A70008A551' sequence='1'>
<created><datetime>20190220T103426,09+09</datetime></created>
<modified><datetime>20190220T103426,10+09</datetime></modified>
<revised><datetime>20190220T103426,09+09</datetime></revised>
<lastaccessed><datetime>20190220T103426,10+09</datetime></lastaccessed>
<addedtofile><datetime>20190220T103426,10+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby></agentdata>

<note class='form'>
<noteinfo noteid='777a' unid='0813B7DA161A5EAD4925840F0022506C' sequence='2'>
<created><datetime>20190604T151448,12+09</datetime></created>
<modified><datetime>20190604T151448,16+09</datetime></modified>
<revised><datetime>20190604T151448,15+09</datetime></revised>
<lastaccessed><datetime>20190604T151448,16+09</datetime></lastaccessed>
<addedtofile><datetime>20190604T151448,14+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby>
<wassignedby><name>CN=Administrator/O=Comture</name></wassignedby>
<item name='$Flags'><text>~C4g</text></item>
<item name='$TITLE'><text>dbtool.product</text></item>
<item name='$DesignerVersion'><text>8.5.3</text></item>
<item name='$FileSize' sign='true'><number>327</number></item>
<item name='$FileData' sign='true'>
<rawitemdata type='1'>
YQAYAAAAAABHAQAAAQAAAAAAAAAAAAAAYABZAQAARwFIAQAAAAAAAAAAPD94bWwgdmVyc2lvbj0i
MS4wIiBlbmNvZGluZz0iVVRGLTgiPz4NCjw/cGRlIHZlcnNpb249IjMuNCI/Pg0KDQo8cHJvZHVj
dCB1c2VGZWF0dXJlcz0iZmFsc2UiPg0KDQogICA8Y29uZmlnSW5pIHVzZT0iZGVmYXVsdCI+DQog
ICA8L2NvbmZpZ0luaT4NCg0KICAgPGxhdW5jaGVyQXJncz4NCiAgICAgIDx2bUFyZ3NNYWM+LVhz
dGFydE9uRmlyc3RUaHJlYWQgLURvcmcuZWNsaXBzZS5zd3QuaW50ZXJuYWwuY2FyYm9uLnNtYWxs
Rm9udHM8L3ZtQXJnc01hYz4NCiAgIDwvbGF1bmNoZXJBcmdzPg0KDQogICA8cGx1Z2lucz4NCiAg
IDwvcGx1Z2lucz4NCg0KPC9wcm9kdWN0Pg0KAA==
</rawitemdata></item>
<item name='$FileNames' sign='true'><text>dbtool.product</text></item></note>

<agentdata>
<noteinfo noteid='777e' unid='8AC3E670DFEF9BC74925840F002259DA' sequence='1'>
<created><datetime>20190604T151512,26+09</datetime></created>
<modified><datetime>20190604T151512,27+09</datetime></modified>
<revised><datetime>20190604T151512,26+09</datetime></revised>
<lastaccessed><datetime>20190604T151512,27+09</datetime></lastaccessed>
<addedtofile><datetime>20190604T151512,27+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby></agentdata>

<agent name='ノーツ 設計出力2' hide='v3' publicaccess='false' designerversion='8.5.3'
 comment='ロータスｽｸﾘﾌﾟﾄのみ対応' restrictions='unrestricted'>
<noteinfo noteid='77b2' unid='B76FDAE2297BEC6B4925840F002914FC' sequence='13'>
<created><datetime>20190604T162843,48+09</datetime></created>
<modified><datetime>20190605T092627,96+09</datetime></modified>
<revised><datetime>20190605T092627,95+09</datetime></revised>
<lastaccessed><datetime>20190605T092627,96+09</datetime></lastaccessed>
<addedtofile><datetime>20190604T162843,53+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby>
<wassignedby><name>CN=Administrator/O=Comture</name></wassignedby>
<designchange><datetime>20190605T092627,93+09</datetime></designchange>
<trigger type='actionsmenu'/>
<documentset type='selected'/><code event='options'><lotusscript>Option Explicit
Option Public
Option Base 0
Use "NotesUICommonLib"

</lotusscript></code><code event='declarations'><lotusscript>Const DESIGN_FORM$ = "DbDesignDoc"

</lotusscript></code><code event='initialize'><lotusscript>Sub Initialize
	Call SetProcess("*AG - ノーツ 設計出力")
	Call Main()
End Sub

</lotusscript></code><code event='Main_Script'><lotusscript>Sub Main_Script(db As NotesDatabase)
	On Error Goto ErrorHandle
	
	'スクリプトライブラリのみ
	Dim noteCol As NotesNoteCollection
	Dim note As NotesDocument
	Dim noteID As String
	
	Dim scriptLibItem As NotesItem
	Dim scriptCodeItem As NotesRichTextItem
	
	Dim session As New NotesSession
	Dim curDB As NotesDatabase
	Dim designDoc As NotesDocument
	
	Set curDB = session.CurrentDatabase
	
	Set noteCol =db.CreateNoteCollection(False)
	
	'スクリプトライブラリ
	noteCol.SelectScriptLibraries = True
	
	Call noteCol.BuildCollection()
	
	'出力
	noteID = noteCol.GetFirstNoteId()
	
	Do Until noteID = ""
		Set note = db.GetDocumentByID(noteID)
		
		'出力用の文書を作成
		Set designDoc = curDB.CreateDocument
		
		'値を設定
		Call designDoc.ReplaceItemValue("Form", DESIGN_FORM)
		
		Call designDoc.ReplaceItemValue("DbServer", db.Server)
		Call designDoc.ReplaceItemValue("DbTitle", db.Title)
		Call designDoc.ReplaceItemValue("DbFilePath", db.FilePath)
		
		Call designDoc.ReplaceItemValue("DesignType", "スクリプトライブラリ")
		Call designDoc.ReplaceItemValue("DesignName", note.GetItemValue("$TITLE"))
		
		Do
			'スクリプトコードアイテムを取得
			Set scriptLibItem = note.GetFirstItem("$ScriptLib")
			If scriptLibItem Is Nothing Then
				Exit Do
			End If
			
			Set scriptCodeItem = designDoc.GetFirstItem("ScriptCode")
			If scriptCodeItem Is Nothing Then
				Set scriptCodeItem = designDoc.CreateRichTextItem("ScriptCode")
			End If
			
			Call scriptCodeItem.AppendText(scriptLibItem.values(0))
			
			'アイテムを削除（※削除後保存しないこと）
			Call scriptLibItem.Remove()
		Loop
		
		Call designDoc.Save(True, True)
		
		noteID = noteCol.GetNextNoteId(noteID)
	Loop
	
	Exit Sub
ErrorHandle:
	Call SetErrorObject(Err, Error)
	Error Err, Error
	Exit Sub
End Sub

</lotusscript></code><code event='Main'><lotusscript>Sub Main()
	
	On Error Goto ErrorHandle
	
	Dim workSpace As New NotesUIWorkspace
	Dim session As New NotesSession
	Dim curDB As NotesDatabase
	Dim unpro As NotesDocumentCollection
	Dim doc As NotesDocument
	
	Set curDB = session.CurrentDatabase
	Set unpro = curDB.UnprocessedDocuments
	If unpro.Count = 0 Then
		Call Messagebox_Error("文書を選択してください。", "")
		Exit Sub
	End If
	
	Dim designTypes As Variant
	Dim selectVal As Variant
	
	designTypes = Split("" &amp; _
	"ﾌﾚｰﾑｾｯﾄ,ﾍﾟｰｼﾞ,ﾌｫｰﾑ,ﾋﾞｭｰ,ﾌｫﾙﾀﾞ," &amp;_
	"ｴｰｼﾞｪﾝﾄ,Webｻｰﾋﾞｽ,ｱｳﾄﾗｲﾝ,ｻﾌﾞﾌｫｰﾑ,共有ﾌｨｰﾙﾄﾞ,共有列,共有ｱｸｼｮﾝ,ｽｸﾘﾌﾟﾄﾗｲﾌﾞﾗﾘ," &amp;_
	"ｲﾒｰｼﾞ,ｱﾌﾟﾚｯﾄ,ｽﾀｲﾙｼｰﾄ,ﾃﾞｰﾀｺﾈｸｼｮﾝ," &amp;_
	"ｱｲｺﾝ,ﾃﾞｰﾀﾍﾞｰｽについて,ﾃﾞｰﾀﾍﾞｰｽの使い方,ﾃﾞｰﾀﾍﾞｰｽｽｸﾘﾌﾟﾄ,ﾅﾋﾞｹﾞｰﾀ,その他の設計", ",")
	
	selectVal = workSpace.Prompt(PROMPT_OKCANCELLISTMULT, "出力する設計を選択", "出力する設計を選択", designTypes, designTypes)
	If Isempty(selectVal) Then
		Exit Sub
	End If
	
	Dim db As NotesDatabase
	Dim server As String
	Dim filePath As String
	
	Dim docCol As NotesDocumentCollection
	Dim designDoc As NotesDocument
	Dim nextDoc As NotesDocument
	
	Set doc = unpro.GetFirstDocument()
	
	Do Until doc Is Nothing
		
		server = doc.GetItemValue("DbServer")(0)
		filePath = doc.GetItemValue("DbFilePath")(0)
		
		Set db = New NotesDatabase(server, filePath)
		
		If db.IsOpen = True Then
			Set docCol = doc.Responses
			If docCol Is Nothing Then
			Elseif docCol.Count = 0 Then
			Else
				
				Set designDoc = docCol.GetFirstDocument()
				
				Do Until designDoc Is Nothing
					
					Set nextDoc = docCol.GetNextDocument(designDoc)
					
					If designDoc.GetItemValue("Form")(0) = "DbDesignDoc" Then
						Call designDoc.Remove(True)
					End If
					Set designDoc = nextDoc
				Loop
			End If
			
			
			Forall dt In selectVal
				Call Main_Sub(doc, db, Cstr(dt), formula)
			End Forall
		End If
		
		Set doc = unpro.GetNextDocument(doc)
	Loop
	
	
	Exit Sub
ErrorHandle:
	Call SetErrorObject(Err, Error)
	Call Messagebox_Error(GetErrorMessage(), "")
	Call ClearErrorObject()
	Exit Sub
End Sub

</lotusscript></code><code event='Main_Sub'><lotusscript>Sub Main_Sub(dbInfo As NotesDocument, db As NotesDatabase, dType As String, formula As String)
	On Error Goto ErrorHandle
	
	'スクリプトライブラリのみ
	Dim noteCol As NotesNoteCollection
	Dim note As NotesDocument
	Dim noteID As String
	
	Dim scriptLibItem As NotesItem
	Dim scriptCodeItem As NotesRichTextItem
	
	Dim session As New NotesSession
	Dim curDB As NotesDatabase
	Dim designDoc As NotesDocument
	
	Set curDB = session.CurrentDatabase
	
	Set noteCol =db.CreateNoteCollection(False)
	Call noteCol.SelectAllNotes(False)
%REM
designTypes = Split("" &amp; _
	"ﾌﾚｰﾑｾｯﾄ,ﾍﾟｰｼﾞ,ﾌｫｰﾑ,ﾋﾞｭｰ,ﾌｫﾙﾀﾞ," &amp;_
	"ｴｰｼﾞｪﾝﾄ,Webｻｰﾋﾞｽ,ｱｳﾄﾗｲﾝ,ｻﾌﾞﾌｫｰﾑ,共有ﾌｨｰﾙﾄﾞ,共有列,共有ｱｸｼｮﾝ,ｽｸﾘﾌﾟﾄﾗｲﾌﾞﾗﾘ," &amp;_
	"ｲﾒｰｼﾞ,ｱﾌﾟﾚｯﾄ,ｽﾀｲﾙｼｰﾄ,ﾃﾞｰﾀｺﾈｸｼｮﾝ," &amp;_
	"ｱｲｺﾝ,ﾃﾞｰﾀﾍﾞｰｽについて,ﾃﾞｰﾀﾍﾞｰｽの使い方,ﾃﾞｰﾀﾍﾞｰｽｽｸﾘﾌﾟﾄ", ",")
%END REM
	
	Select Case Lcase$(dtype)
	Case "acl"
		noteCol.SelectACL = True
	Case "frameset", "ﾌﾚｰﾑｾｯﾄ"
		noteCol.SelectFramesets = True
	Case "page", "ﾍﾟｰｼﾞ"
		noteCol.SelectPages = True
	Case "form", "ﾌｫｰﾑ"
		noteCol.SelectForms = True
	Case "view", "ﾋﾞｭｰ"
		noteCol.SelectViews = True
	Case "folder", "ﾌｫﾙﾀﾞｰ", "ﾌｫﾙﾀﾞ"
		noteCol.SelectFolders = True
	Case "agent", "ｴｰｼﾞｪﾝﾄ"
		noteCol.SelectAgents = True
	Case "webservice", "Webｻｰﾋﾞｽ"
		
	Case "outline", "ｱｳﾄﾗｲﾝ"
		noteCol.SelectOutlines = True
	Case "subform", "ｻﾌﾞﾌｫｰﾑ"
		noteCol.SelectSubforms = True
	Case "field", "共有ﾌｨｰﾙﾄﾞ"
		noteCol.SelectSharedFields = True
	Case "column", "共有列"
		'noteCol.SelectMiscFormatElements = True
		'noteCol.SelectMiscCodeElements = True
		noteCol.SelectMiscIndexElements = True
	Case "action", "共有ｱｸｼｮﾝ"
		noteCol.SelectActions = True
	Case "scriptlibrary", "ｽｸﾘﾌﾟﾄﾗｲﾌﾞﾗﾘ"
		noteCol.SelectScriptLibraries = True
	Case "image", "ｲﾒｰｼﾞﾘｿｰｽ", "ｲﾒｰｼﾞ"
		noteCol.SelectImageResources = True
'	Case "file"
	Case "applet", "ｱﾌﾟﾚｯﾄ"
		noteCol.SelectJavaResources = True
	Case "stylesheet", "ｽﾀｲﾙｼｰﾄ"
		noteCol.SelectStyleSheetResources = True
	Case "dataconnection", "ﾃﾞｰﾀｺﾈｸｼｮﾝ"
		noteCol.SelectDataConnections = True
	Case "icon", "ｱｲｺﾝ"
		noteCol.SelectIcon = True
	Case "helpabout", "ﾃﾞｰﾀﾍﾞｰｽについて"
		noteCol.SelectHelpAbout = True
	Case "helpusing", "ﾃﾞｰﾀﾍﾞｰｽの使い方"
		noteCol.SelectHelpUsing = True
	Case "databasescript", "ﾃﾞｰﾀﾍﾞｰｽｽｸﾘﾌﾟﾄ"
		noteCol.SelectDatabaseScript = True
	Case "navigator", "ﾅﾋﾞｹﾞｰﾀ"
		noteCol.SelectNavigators = True
	Case Else
		Call noteCol.SelectAllDesignElements(True)
		noteCol.SelectACL = False
		noteCol.SelectFramesets = False
		noteCol.SelectPages = False
		noteCol.SelectForms = False
		noteCol.SelectViews = False
		noteCol.SelectFolders = False
		noteCol.SelectAgents = False
		noteCol.SelectOutlines = False
		noteCol.SelectSubforms = False
		noteCol.SelectSharedFields = False
		noteCol.SelectMiscIndexElements = False
		noteCol.SelectActions = False
		noteCol.SelectScriptLibraries = False
		noteCol.SelectImageResources = False
		noteCol.SelectJavaResources = False
		noteCol.SelectStyleSheetResources = False
		noteCol.SelectDataConnections = False
		noteCol.SelectIcon = False
		noteCol.SelectHelpAbout = False
		noteCol.SelectHelpUsing = False
		noteCol.SelectDatabaseScript = False
		noteCol.SelectNavigators = False
	End Select
	
	If formula &lt;&gt; "" Then
		noteCol.SelectionFormula = formula
	End If
	
	Call noteCol.BuildCollection()
	
	'出力
	noteID = noteCol.GetFirstNoteId()
	
	Do Until noteID = ""
		Set note = db.GetDocumentByID(noteID)
		
		'出力用の文書を作成
		Set designDoc = curDB.CreateDocument
		
		'値を設定
		Call designDoc.ReplaceItemValue("Form", DESIGN_FORM)
		Call designDoc.ReplaceItemValue("DbTitle", dbinfo.GetItemValue("DbTitle"))
		Call designDoc.ReplaceItemValue("DbServer", dbinfo.GetItemValue("DbServer"))
		Call designDoc.ReplaceItemValue("DbFilePath", dbinfo.GetItemValue("DbFilePath"))
		Call designDoc.ReplaceItemValue("DesignType", dtype)
		
		Call note.CopyAllItems(designDoc)
		
		Call designDoc.MakeResponse(dbinfo)
		Call designDoc.Save(False, False, False)
		
		noteID = noteCol.GetNextNoteId(noteID)
	Loop
	
	Exit Sub
ErrorHandle:
	Call SetErrorObject(Err, Error)
	Error Err, Error
	Exit Sub
End Sub

</lotusscript></code><code event='Main_Form'><lotusscript>Sub Main_Form(db As NotesDatabase)
	On Error Goto ErrorHandle
	
	'スクリプトライブラリのみ
	Dim noteCol As NotesNoteCollection
	Dim note As NotesDocument
	Dim noteID As String
	
	Dim scriptLibItem As NotesItem
	Dim scriptCodeItem As NotesRichTextItem
	
	Dim session As New NotesSession
	Dim curDB As NotesDatabase
	Dim designDoc As NotesDocument
	
	Set curDB = session.CurrentDatabase
	
	Set noteCol =db.CreateNoteCollection(False)
	
	'スクリプトライブラリ
	'noteCol.SelectScriptLibraries = True
	noteCol.SelectForms = True
	
	Call noteCol.BuildCollection()
	
	'出力
	noteID = noteCol.GetFirstNoteId()
	
	Do Until noteID = ""
		Set note = db.GetDocumentByID(noteID)
		
		'出力用の文書を作成
		Set designDoc = curDB.CreateDocument
		
		'値を設定
		Call designDoc.ReplaceItemValue("Form", DESIGN_FORM)
		
		Call designDoc.ReplaceItemValue("DbServer", db.Server)
		Call designDoc.ReplaceItemValue("DbTitle", db.Title)
		Call designDoc.ReplaceItemValue("DbFilePath", db.FilePath)
		
		Call designDoc.ReplaceItemValue("DesignType", "フォーム")
		Call designDoc.ReplaceItemValue("DesignName", note.GetItemValue("$TITLE"))
		
		Do
			'スクリプトコードアイテムを取得
			Set scriptLibItem = note.GetFirstItem("$ScriptLib")
			If scriptLibItem Is Nothing Then
				Exit Do
			End If
			
			Set scriptCodeItem = designDoc.GetFirstItem("ScriptCode")
			If scriptCodeItem Is Nothing Then
				Set scriptCodeItem = designDoc.CreateRichTextItem("ScriptCode")
			End If
			
			Call scriptCodeItem.AppendText(scriptLibItem.values(0))
			
			'アイテムを削除（※削除後保存しないこと）
			Call scriptLibItem.Remove()
		Loop
		
		Call designDoc.Save(True, True)
		
		noteID = noteCol.GetNextNoteId(noteID)
	Loop
	
	Exit Sub
ErrorHandle:
	Call SetErrorObject(Err, Error)
	Error Err, Error
	Exit Sub
End Sub

</lotusscript></code><code event='Main_Agent'><lotusscript>Sub Main_Agent(db As NotesDatabase)
	On Error Goto ErrorHandle
	
	'エージェントのみ
	Dim noteCol As NotesNoteCollection
	Dim note As NotesDocument
	Dim noteID As String
	
	Dim scriptLibItem As NotesItem
	Dim scriptCodeItem As NotesRichTextItem
	
	Dim session As New NotesSession
	Dim curDB As NotesDatabase
	Dim designDoc As NotesDocument
	
	Set curDB = session.CurrentDatabase
	
	Set noteCol =db.CreateNoteCollection(False)
	
	'エージェント
	noteCol.SelectAgents = True
	
	Call noteCol.BuildCollection()
	
	'出力
	noteID = noteCol.GetFirstNoteId()
	
	Dim exporter As NotesDXLExporter
	Dim perser As NotesDOMParser
	
	Do Until noteID = ""
		Set note = db.GetDocumentByID(noteID)
		
		'出力用の文書を作成
		Set designDoc = curDB.CreateDocument
		
		'値を設定
		Call designDoc.ReplaceItemValue("Form", DESIGN_FORM)
		
		Call designDoc.ReplaceItemValue("DbServer", db.Server)
		Call designDoc.ReplaceItemValue("DbTitle", db.Title)
		Call designDoc.ReplaceItemValue("DbFilePath", db.FilePath)
		
		Call designDoc.ReplaceItemValue("DesignType", "エージェント")
		Call designDoc.ReplaceItemValue("DesignName", note.GetItemValue("$TITLE"))
		
		Do
			Dim rtItem As NotesRichTextItem
			'スクリプトコードアイテムを取得
			'Set scriptLibItem = note.GetFirstItem("$ScriptLib")
			Set scriptLibItem = note.GetFirstItem("$AssistAction_Ex")
			If scriptLibItem Is Nothing Then
				Exit Do
			End If
			
			
			Set scriptCodeItem = designDoc.GetFirstItem("ScriptCode")
			If scriptCodeItem Is Nothing Then
				Set scriptCodeItem = designDoc.CreateRichTextItem("ScriptCode")
			End If
			
			Set exporter = session.Createdxlexporter(note,scriptCodeItem)
			Call exporter.Process()
			'Set perser = session.Createdomparser(exporter)
			'Call perser.Process()
			
			'Call scriptCodeItem.AppendText(scriptLibItem.Values)
			'Call scriptLibItem.Copyitemtodocument(designDoc, "ScriptCode")
			'Set rtItem = scriptLibItem
			'Call scriptCodeItem.Appendtext(rtItem.Getunformattedtext())
			
			'アイテムを削除（※削除後保存しないこと）
			Call scriptLibItem.Remove()
		Loop
		
		Call designDoc.Save(True, True)
		
		noteID = noteCol.GetNextNoteId(noteID)
	Loop
	
	Exit Sub
ErrorHandle:
	Call SetErrorObject(Err, Error)
	Error Err, Error
	Exit Sub
End Sub</lotusscript></code>
<rundata processeddocs='0' exitcode='0' agentdata='CFB021EF3B951EAA4925841000026F86'>
<agentmodified><datetime>20190605T092627,96+09</datetime></agentmodified>
<agentrun><datetime>20190605T092639,23+09</datetime></agentrun>
<runlog>エージェント ノーツ 設計出力2 の 2019/06/05 09:26:36 での実行が開始しました。
選択文書で実行します。 合計 1
1 文書が検索条件に一致しました。
LotusScript を実行しました
エージェント ノーツ 設計出力2 の実行が終了しました。(2019/06/05 09:26:39)
</runlog></rundata>
<item name='$POID'><datetime>20140930T200606,52+09</datetime></item></agent>

<agentdata>
<noteinfo noteid='77e6' unid='F1426A8600421484492584100001AB16' sequence='1'>
<created><datetime>20190605T091813,34+09</datetime></created>
<modified><datetime>20190605T091816,32+09</datetime></modified>
<revised><datetime>20190605T091816,31+09</datetime></revised>
<lastaccessed><datetime>20190605T091816,32+09</datetime></lastaccessed>
<addedtofile><datetime>20190605T091816,32+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='77f2' unid='30BB8959B60E5281492584100001E6C4' sequence='1'>
<created><datetime>20190605T092046,12+09</datetime></created>
<modified><datetime>20190605T092046,13+09</datetime></modified>
<revised><datetime>20190605T092046,12+09</datetime></revised>
<lastaccessed><datetime>20190605T092046,13+09</datetime></lastaccessed>
<addedtofile><datetime>20190605T092046,13+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='77fa' unid='ACFFE64A5E0FC9164925841000023C7A' sequence='1'>
<created><datetime>20190605T092425,54+09</datetime></created>
<modified><datetime>20190605T092425,55+09</datetime></modified>
<revised><datetime>20190605T092425,54+09</datetime></revised>
<lastaccessed><datetime>20190605T092425,55+09</datetime></lastaccessed>
<addedtofile><datetime>20190605T092425,55+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby></agentdata>

<agentdata>
<noteinfo noteid='7802' unid='CFB021EF3B951EAA4925841000026F86' sequence='1'>
<created><datetime>20190605T092636,22+09</datetime></created>
<modified><datetime>20190605T092636,23+09</datetime></modified>
<revised><datetime>20190605T092636,22+09</datetime></revised>
<lastaccessed><datetime>20190605T092636,23+09</datetime></lastaccessed>
<addedtofile><datetime>20190605T092636,23+09</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Administrator/O=Comture</name></updatedby></agentdata>
</database>